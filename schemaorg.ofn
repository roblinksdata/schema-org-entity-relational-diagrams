Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(schema:=<https://schema.org/>)


Ontology(
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/105590001>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/116154003>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/277132007>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/387713003>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/410942007>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/50731006>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/51114001>))
Declaration(Class(<http://purl.bioontology.org/ontology/SNOMEDCT/63653004>))
Declaration(Class(<http://purl.org/dc/dcmitype/Dataset>))
Declaration(Class(<http://purl.org/dc/dcmitype/Event>))
Declaration(Class(<http://purl.org/dc/dcmitype/Image>))
Declaration(Class(<http://purl.org/dc/dcmitype/Text>))
Declaration(Class(<http://purl.org/ontology/bibo/Issue>))
Declaration(Class(<http://purl.org/ontology/bibo/Periodical>))
Declaration(Class(<http://rdfs.org/ns/void#Dataset>))
Declaration(Class(rdfs:Property))
Declaration(Class(rdfs:Class))
Declaration(Class(<http://www.w3.org/ns/dcat#Catalog>))
Declaration(Class(<http://www.w3.org/ns/dcat#Dataset>))
Declaration(Class(<http://www.w3.org/ns/dcat#Distribution>))
Declaration(Class(<http://xmlns.com/foaf/0.1/Person>))
Declaration(Class(schema:AMRadioChannel))
Declaration(Class(schema:APIReference))
Declaration(Class(schema:AboutPage))
Declaration(Class(schema:AcceptAction))
Declaration(Class(schema:Accommodation))
Declaration(Class(schema:AccountingService))
Declaration(Class(schema:AchieveAction))
Declaration(Class(schema:Action))
Declaration(Class(schema:ActionAccessSpecification))
Declaration(Class(schema:ActionStatusType))
Declaration(Class(schema:ActivateAction))
Declaration(Class(schema:AddAction))
Declaration(Class(schema:AdministrativeArea))
Declaration(Class(schema:AdultEntertainment))
Declaration(Class(schema:AdultOrientedEnumeration))
Declaration(Class(schema:AdvertiserContentArticle))
Declaration(Class(schema:AggregateOffer))
Declaration(Class(schema:AggregateRating))
Declaration(Class(schema:AgreeAction))
Declaration(Class(schema:Airline))
Declaration(Class(schema:Airport))
Declaration(Class(schema:AlignmentObject))
Declaration(Class(schema:AllocateAction))
Declaration(Class(schema:AmpStory))
Declaration(Class(schema:AmusementPark))
Declaration(Class(schema:AnalysisNewsArticle))
Declaration(Class(schema:AnatomicalStructure))
Declaration(Class(schema:AnatomicalSystem))
Declaration(Class(schema:AnimalShelter))
Declaration(Class(schema:Answer))
Declaration(Class(schema:Apartment))
Declaration(Class(schema:ApartmentComplex))
Declaration(Class(schema:AppendAction))
Declaration(Class(schema:ApplyAction))
Declaration(Class(schema:ApprovedIndication))
Declaration(Class(schema:Aquarium))
Declaration(Class(schema:ArchiveComponent))
Declaration(Class(schema:ArchiveOrganization))
Declaration(Class(schema:ArriveAction))
Declaration(Class(schema:ArtGallery))
Declaration(Class(schema:Artery))
Declaration(Class(schema:Article))
Declaration(Class(schema:AskAction))
Declaration(Class(schema:AskPublicNewsArticle))
Declaration(Class(schema:AssessAction))
Declaration(Class(schema:AssignAction))
Declaration(Class(schema:Atlas))
Declaration(Class(schema:Attorney))
Declaration(Class(schema:Audience))
Declaration(Class(schema:AudioObject))
Declaration(Class(schema:AudioObjectSnapshot))
Declaration(Class(schema:Audiobook))
Declaration(Class(schema:AuthorizeAction))
Declaration(Class(schema:AutoBodyShop))
Declaration(Class(schema:AutoDealer))
Declaration(Class(schema:AutoPartsStore))
Declaration(Class(schema:AutoRental))
Declaration(Class(schema:AutoRepair))
Declaration(Class(schema:AutoWash))
Declaration(Class(schema:AutomatedTeller))
Declaration(Class(schema:AutomotiveBusiness))
Declaration(Class(schema:BackgroundNewsArticle))
Declaration(Class(schema:Bakery))
Declaration(Class(schema:BankAccount))
Declaration(Class(schema:BankOrCreditUnion))
Declaration(Class(schema:BarOrPub))
Declaration(Class(schema:Barcode))
Declaration(Class(schema:Beach))
Declaration(Class(schema:BeautySalon))
Declaration(Class(schema:BedAndBreakfast))
Declaration(Class(schema:BedDetails))
Declaration(Class(schema:BedType))
Declaration(Class(schema:BefriendAction))
Declaration(Class(schema:BikeStore))
Declaration(Class(schema:BioChemEntity))
Declaration(Class(schema:Blog))
Declaration(Class(schema:BlogPosting))
Declaration(Class(schema:BloodTest))
Declaration(Class(schema:BoardingPolicyType))
Declaration(Class(schema:BoatReservation))
Declaration(Class(schema:BoatTerminal))
Declaration(Class(schema:BoatTrip))
Declaration(Class(schema:BodyMeasurementTypeEnumeration))
Declaration(Class(schema:BodyOfWater))
Declaration(Class(schema:Bone))
Declaration(Class(schema:Book))
Declaration(Class(schema:BookFormatType))
Declaration(Class(schema:BookSeries))
Declaration(Class(schema:BookStore))
Declaration(Class(schema:BookmarkAction))
Declaration(Class(schema:Boolean))
Declaration(Class(schema:BorrowAction))
Declaration(Class(schema:BowlingAlley))
Declaration(Class(schema:BrainStructure))
Declaration(Class(schema:Brand))
Declaration(Class(schema:BreadcrumbList))
Declaration(Class(schema:Brewery))
Declaration(Class(schema:Bridge))
Declaration(Class(schema:BroadcastChannel))
Declaration(Class(schema:BroadcastEvent))
Declaration(Class(schema:BroadcastFrequencySpecification))
Declaration(Class(schema:BroadcastService))
Declaration(Class(schema:BrokerageAccount))
Declaration(Class(schema:BuddhistTemple))
Declaration(Class(schema:BusOrCoach))
Declaration(Class(schema:BusReservation))
Declaration(Class(schema:BusStation))
Declaration(Class(schema:BusStop))
Declaration(Class(schema:BusTrip))
Declaration(Class(schema:BusinessAudience))
Declaration(Class(schema:BusinessEntityType))
Declaration(Class(schema:BusinessEvent))
Declaration(Class(schema:BusinessFunction))
Declaration(Class(schema:BuyAction))
Declaration(Class(schema:CDCPMDRecord))
Declaration(Class(schema:CableOrSatelliteService))
Declaration(Class(schema:CafeOrCoffeeShop))
Declaration(Class(schema:Campground))
Declaration(Class(schema:CampingPitch))
Declaration(Class(schema:Canal))
Declaration(Class(schema:CancelAction))
Declaration(Class(schema:Car))
Declaration(Class(schema:CarUsageType))
Declaration(Class(schema:Casino))
Declaration(Class(schema:CategoryCode))
Declaration(Class(schema:CategoryCodeSet))
Declaration(Class(schema:CatholicChurch))
Declaration(Class(schema:Cemetery))
Declaration(Class(schema:Certification))
Declaration(Class(schema:CertificationStatusEnumeration))
Declaration(Class(schema:Chapter))
Declaration(Class(schema:CheckAction))
Declaration(Class(schema:CheckInAction))
Declaration(Class(schema:CheckOutAction))
Declaration(Class(schema:CheckoutPage))
Declaration(Class(schema:ChemicalSubstance))
Declaration(Class(schema:ChildCare))
Declaration(Class(schema:ChildrensEvent))
Declaration(Class(schema:ChooseAction))
Declaration(Class(schema:Church))
Declaration(Class(schema:City))
Declaration(Class(schema:CityHall))
Declaration(Class(schema:CivicStructure))
Declaration(Class(schema:Claim))
Declaration(Class(schema:ClaimReview))
Declaration(Class(schema:Class))
Declaration(Class(schema:Clip))
Declaration(Class(schema:ClothingStore))
Declaration(Class(schema:Code))
Declaration(Class(schema:Collection))
Declaration(Class(schema:CollectionPage))
Declaration(Class(schema:CollegeOrUniversity))
Declaration(Class(schema:ComedyClub))
Declaration(Class(schema:ComedyEvent))
Declaration(Class(schema:ComicCoverArt))
Declaration(Class(schema:ComicIssue))
Declaration(Class(schema:ComicSeries))
Declaration(Class(schema:ComicStory))
Declaration(Class(schema:Comment))
Declaration(Class(schema:CommentAction))
Declaration(Class(schema:CommunicateAction))
Declaration(Class(schema:CommunityHealth))
Declaration(Class(schema:CompleteDataFeed))
Declaration(Class(schema:CompoundPriceSpecification))
Declaration(Class(schema:ComputerLanguage))
Declaration(Class(schema:ComputerStore))
Declaration(Class(schema:ConfirmAction))
Declaration(Class(schema:Consortium))
Declaration(Class(schema:ConstraintNode))
Declaration(Class(schema:ConsumeAction))
Declaration(Class(schema:ContactPage))
Declaration(Class(schema:ContactPoint))
Declaration(Class(schema:ContactPointOption))
Declaration(Class(schema:Continent))
Declaration(Class(schema:ControlAction))
Declaration(Class(schema:ConvenienceStore))
Declaration(Class(schema:Conversation))
Declaration(Class(schema:CookAction))
Declaration(Class(schema:Corporation))
Declaration(Class(schema:CorrectionComment))
Declaration(Class(schema:Country))
Declaration(Class(schema:Course))
Declaration(Class(schema:CourseInstance))
Declaration(Class(schema:Courthouse))
Declaration(Class(schema:CoverArt))
Declaration(Class(schema:CovidTestingFacility))
Declaration(Class(schema:CreateAction))
Declaration(Class(schema:CreativeWork))
Declaration(Class(schema:CreativeWorkSeason))
Declaration(Class(schema:CreativeWorkSeries))
Declaration(Class(schema:CreditCard))
Declaration(Class(schema:Crematorium))
Declaration(Class(schema:CriticReview))
Declaration(Class(schema:CssSelectorType))
Declaration(Class(schema:CurrencyConversionService))
Declaration(Class(schema:DDxElement))
Declaration(Class(schema:DanceEvent))
Declaration(Class(schema:DanceGroup))
Declaration(Class(schema:DataCatalog))
Declaration(Class(schema:DataDownload))
Declaration(Class(schema:DataFeed))
Declaration(Class(schema:DataFeedItem))
Declaration(Class(schema:DataType))
Declaration(Class(schema:Dataset))
Declaration(Class(schema:Date))
Declaration(Class(schema:DateTime))
Declaration(Class(schema:DatedMoneySpecification))
Declaration(Class(schema:DayOfWeek))
Declaration(Class(schema:DaySpa))
Declaration(Class(schema:DeactivateAction))
Declaration(Class(schema:DefenceEstablishment))
Declaration(Class(schema:DefinedRegion))
Declaration(Class(schema:DefinedTerm))
Declaration(Class(schema:DefinedTermSet))
Declaration(Class(schema:DeleteAction))
Declaration(Class(schema:DeliveryChargeSpecification))
Declaration(Class(schema:DeliveryEvent))
Declaration(Class(schema:DeliveryMethod))
Declaration(Class(schema:DeliveryTimeSettings))
Declaration(Class(schema:Demand))
Declaration(Class(schema:Dentist))
Declaration(Class(schema:DepartAction))
Declaration(Class(schema:DepartmentStore))
Declaration(Class(schema:DepositAccount))
Declaration(Class(schema:Dermatology))
Declaration(Class(schema:DiagnosticLab))
Declaration(Class(schema:DiagnosticProcedure))
Declaration(Class(schema:Diet))
Declaration(Class(schema:DietNutrition))
Declaration(Class(schema:DietarySupplement))
Declaration(Class(schema:DigitalDocument))
Declaration(Class(schema:DigitalDocumentPermission))
Declaration(Class(schema:DigitalDocumentPermissionType))
Declaration(Class(schema:DigitalPlatformEnumeration))
Declaration(Class(schema:DisagreeAction))
Declaration(Class(schema:DiscoverAction))
Declaration(Class(schema:DiscussionForumPosting))
Declaration(Class(schema:DislikeAction))
Declaration(Class(schema:Distance))
Declaration(Class(schema:Distillery))
Declaration(Class(schema:DonateAction))
Declaration(Class(schema:DoseSchedule))
Declaration(Class(schema:DownloadAction))
Declaration(Class(schema:DrawAction))
Declaration(Class(schema:Drawing))
Declaration(Class(schema:DrinkAction))
Declaration(Class(schema:DriveWheelConfigurationValue))
Declaration(Class(schema:Drug))
Declaration(Class(schema:DrugClass))
Declaration(Class(schema:DrugCost))
Declaration(Class(schema:DrugCostCategory))
Declaration(Class(schema:DrugLegalStatus))
Declaration(Class(schema:DrugPregnancyCategory))
Declaration(Class(schema:DrugPrescriptionStatus))
Declaration(Class(schema:DrugStrength))
Declaration(Class(schema:DryCleaningOrLaundry))
Declaration(Class(schema:Duration))
Declaration(Class(schema:EUEnergyEfficiencyEnumeration))
Declaration(Class(schema:EatAction))
Declaration(Class(schema:EducationEvent))
Declaration(Class(schema:EducationalAudience))
Declaration(Class(schema:EducationalOccupationalCredential))
Declaration(Class(schema:EducationalOccupationalProgram))
Declaration(Class(schema:EducationalOrganization))
Declaration(Class(schema:Electrician))
Declaration(Class(schema:ElectronicsStore))
Declaration(Class(schema:ElementarySchool))
Declaration(Class(schema:EmailMessage))
Declaration(Class(schema:Embassy))
Declaration(Class(schema:Emergency))
Declaration(Class(schema:EmergencyService))
Declaration(Class(schema:EmployeeRole))
Declaration(Class(schema:EmployerAggregateRating))
Declaration(Class(schema:EmployerReview))
Declaration(Class(schema:EmploymentAgency))
Declaration(Class(schema:EndorseAction))
Declaration(Class(schema:EndorsementRating))
Declaration(Class(schema:Energy))
Declaration(Class(schema:EnergyConsumptionDetails))
Declaration(Class(schema:EnergyEfficiencyEnumeration))
Declaration(Class(schema:EnergyStarEnergyEfficiencyEnumeration))
Declaration(Class(schema:EngineSpecification))
Declaration(Class(schema:EntertainmentBusiness))
Declaration(Class(schema:EntryPoint))
Declaration(Class(schema:Enumeration))
Declaration(Class(schema:Episode))
Declaration(Class(schema:Event))
Declaration(Class(schema:EventAttendanceModeEnumeration))
Declaration(Class(schema:EventReservation))
Declaration(Class(schema:EventSeries))
Declaration(Class(schema:EventStatusType))
Declaration(Class(schema:EventVenue))
Declaration(Class(schema:ExchangeRateSpecification))
Declaration(Class(schema:ExerciseAction))
Declaration(Class(schema:ExerciseGym))
Declaration(Class(schema:ExercisePlan))
Declaration(Class(schema:ExhibitionEvent))
Declaration(Class(schema:FAQPage))
Declaration(Class(schema:FMRadioChannel))
Declaration(Class(schema:FastFoodRestaurant))
Declaration(Class(schema:Festival))
Declaration(Class(schema:FilmAction))
Declaration(Class(schema:FinancialProduct))
Declaration(Class(schema:FinancialService))
Declaration(Class(schema:FindAction))
Declaration(Class(schema:FireStation))
Declaration(Class(schema:Flight))
Declaration(Class(schema:FlightReservation))
Declaration(Class(schema:Float))
Declaration(Class(schema:FloorPlan))
Declaration(Class(schema:Florist))
Declaration(Class(schema:FollowAction))
Declaration(Class(schema:FoodEstablishment))
Declaration(Class(schema:FoodEstablishmentReservation))
Declaration(Class(schema:FoodEvent))
Declaration(Class(schema:FoodService))
Declaration(Class(schema:FundingAgency))
Declaration(Class(schema:FundingScheme))
Declaration(Class(schema:FurnitureStore))
Declaration(Class(schema:Game))
Declaration(Class(schema:GameAvailabilityEnumeration))
Declaration(Class(schema:GamePlayMode))
Declaration(Class(schema:GameServer))
Declaration(Class(schema:GameServerStatus))
Declaration(Class(schema:GardenStore))
Declaration(Class(schema:GasStation))
Declaration(Class(schema:GatedResidenceCommunity))
Declaration(Class(schema:GenderType))
Declaration(Class(schema:Gene))
Declaration(Class(schema:GeneralContractor))
Declaration(Class(schema:GeoCircle))
Declaration(Class(schema:GeoCoordinates))
Declaration(Class(schema:GeoShape))
Declaration(Class(schema:GeospatialGeometry))
Declaration(Class(schema:Geriatric))
Declaration(Class(schema:GiveAction))
Declaration(Class(schema:GolfCourse))
Declaration(Class(schema:GovernmentBenefitsType))
Declaration(Class(schema:GovernmentBuilding))
Declaration(Class(schema:GovernmentOffice))
Declaration(Class(schema:GovernmentOrganization))
Declaration(Class(schema:GovernmentPermit))
Declaration(Class(schema:GovernmentService))
Declaration(Class(schema:Grant))
Declaration(Class(schema:GroceryStore))
Declaration(Class(schema:Guide))
Declaration(Class(schema:Gynecologic))
Declaration(Class(schema:HVACBusiness))
Declaration(Class(schema:Hackathon))
Declaration(Class(schema:HairSalon))
Declaration(Class(schema:HardwareStore))
Declaration(Class(schema:HealthAndBeautyBusiness))
Declaration(Class(schema:HealthAspectEnumeration))
Declaration(Class(schema:HealthClub))
Declaration(Class(schema:HealthInsurancePlan))
Declaration(Class(schema:HealthPlanCostSharingSpecification))
Declaration(Class(schema:HealthPlanFormulary))
Declaration(Class(schema:HealthPlanNetwork))
Declaration(Class(schema:HealthTopicContent))
Declaration(Class(schema:HighSchool))
Declaration(Class(schema:HinduTemple))
Declaration(Class(schema:HobbyShop))
Declaration(Class(schema:HomeAndConstructionBusiness))
Declaration(Class(schema:HomeGoodsStore))
Declaration(Class(schema:Hospital))
Declaration(Class(schema:Hostel))
Declaration(Class(schema:Hotel))
Declaration(Class(schema:HotelRoom))
Declaration(Class(schema:House))
Declaration(Class(schema:HousePainter))
Declaration(Class(schema:HowTo))
Declaration(Class(schema:HowToDirection))
Declaration(Class(schema:HowToItem))
Declaration(Class(schema:HowToSection))
Declaration(Class(schema:HowToStep))
Declaration(Class(schema:HowToSupply))
Declaration(Class(schema:HowToTip))
Declaration(Class(schema:HowToTool))
Declaration(Class(schema:HyperToc))
Declaration(Class(schema:HyperTocEntry))
Declaration(Class(schema:IPTCDigitalSourceEnumeration))
Declaration(Class(schema:IceCreamShop))
Declaration(Class(schema:IgnoreAction))
Declaration(Class(schema:ImageGallery))
Declaration(Class(schema:ImageObject))
Declaration(Class(schema:ImageObjectSnapshot))
Declaration(Class(schema:ImagingTest))
Declaration(Class(schema:IndividualPhysician))
Declaration(Class(schema:IndividualProduct))
Declaration(Class(schema:InfectiousAgentClass))
Declaration(Class(schema:InfectiousDisease))
Declaration(Class(schema:InformAction))
Declaration(Class(schema:InsertAction))
Declaration(Class(schema:InstallAction))
Declaration(Class(schema:InsuranceAgency))
Declaration(Class(schema:Intangible))
Declaration(Class(schema:Integer))
Declaration(Class(schema:InteractAction))
Declaration(Class(schema:InteractionCounter))
Declaration(Class(schema:InternetCafe))
Declaration(Class(schema:InvestmentFund))
Declaration(Class(schema:InvestmentOrDeposit))
Declaration(Class(schema:InviteAction))
Declaration(Class(schema:Invoice))
Declaration(Class(schema:ItemAvailability))
Declaration(Class(schema:ItemList))
Declaration(Class(schema:ItemListOrderType))
Declaration(Class(schema:ItemPage))
Declaration(Class(schema:JewelryStore))
Declaration(Class(schema:JobPosting))
Declaration(Class(schema:JoinAction))
Declaration(Class(schema:Joint))
Declaration(Class(schema:LakeBodyOfWater))
Declaration(Class(schema:Landform))
Declaration(Class(schema:LandmarksOrHistoricalBuildings))
Declaration(Class(schema:Language))
Declaration(Class(schema:LearningResource))
Declaration(Class(schema:LeaveAction))
Declaration(Class(schema:LegalForceStatus))
Declaration(Class(schema:LegalService))
Declaration(Class(schema:LegalValueLevel))
Declaration(Class(schema:Legislation))
Declaration(Class(schema:LegislationObject))
Declaration(Class(schema:LegislativeBuilding))
Declaration(Class(schema:LendAction))
Declaration(Class(schema:Library))
Declaration(Class(schema:LibrarySystem))
Declaration(Class(schema:LifestyleModification))
Declaration(Class(schema:Ligament))
Declaration(Class(schema:LikeAction))
Declaration(Class(schema:LinkRole))
Declaration(Class(schema:LiquorStore))
Declaration(Class(schema:ListItem))
Declaration(Class(schema:ListenAction))
Declaration(Class(schema:LiteraryEvent))
Declaration(Class(schema:LiveBlogPosting))
Declaration(Class(schema:LoanOrCredit))
Declaration(Class(schema:LocalBusiness))
Declaration(Class(schema:LocationFeatureSpecification))
Declaration(Class(schema:Locksmith))
Declaration(Class(schema:LodgingBusiness))
Declaration(Class(schema:LodgingReservation))
Declaration(Class(schema:LoseAction))
Declaration(Class(schema:LymphaticVessel))
Declaration(Class(schema:Manuscript))
Declaration(Class(schema:Map))
Declaration(Class(schema:MapCategoryType))
Declaration(Class(schema:MarryAction))
Declaration(Class(schema:Mass))
Declaration(Class(schema:MathSolver))
Declaration(Class(schema:MaximumDoseSchedule))
Declaration(Class(schema:MeasurementMethodEnum))
Declaration(Class(schema:MeasurementTypeEnumeration))
Declaration(Class(schema:MediaEnumeration))
Declaration(Class(schema:MediaGallery))
Declaration(Class(schema:MediaManipulationRatingEnumeration))
Declaration(Class(schema:MediaObject))
Declaration(Class(schema:MediaReview))
Declaration(Class(schema:MediaReviewItem))
Declaration(Class(schema:MediaSubscription))
Declaration(Class(schema:MedicalAudience))
Declaration(Class(schema:MedicalAudienceType))
Declaration(Class(schema:MedicalBusiness))
Declaration(Class(schema:MedicalCause))
Declaration(Class(schema:MedicalClinic))
Declaration(Class(schema:MedicalCode))
Declaration(Class(schema:MedicalCondition))
Declaration(Class(schema:MedicalConditionStage))
Declaration(Class(schema:MedicalContraindication))
Declaration(Class(schema:MedicalDevice))
Declaration(Class(schema:MedicalDevicePurpose))
Declaration(Class(schema:MedicalEntity))
Declaration(Class(schema:MedicalEnumeration))
Declaration(Class(schema:MedicalEvidenceLevel))
Declaration(Class(schema:MedicalGuideline))
Declaration(Class(schema:MedicalGuidelineContraindication))
Declaration(Class(schema:MedicalGuidelineRecommendation))
Declaration(Class(schema:MedicalImagingTechnique))
Declaration(Class(schema:MedicalIndication))
Declaration(Class(schema:MedicalIntangible))
Declaration(Class(schema:MedicalObservationalStudy))
Declaration(Class(schema:MedicalObservationalStudyDesign))
Declaration(Class(schema:MedicalOrganization))
Declaration(Class(schema:MedicalProcedure))
Declaration(Class(schema:MedicalProcedureType))
Declaration(Class(schema:MedicalRiskCalculator))
Declaration(Class(schema:MedicalRiskEstimator))
Declaration(Class(schema:MedicalRiskFactor))
Declaration(Class(schema:MedicalRiskScore))
Declaration(Class(schema:MedicalScholarlyArticle))
Declaration(Class(schema:MedicalSign))
Declaration(Class(schema:MedicalSignOrSymptom))
Declaration(Class(schema:MedicalSpecialty))
Declaration(Class(schema:MedicalStudy))
Declaration(Class(schema:MedicalStudyStatus))
Declaration(Class(schema:MedicalSymptom))
Declaration(Class(schema:MedicalTest))
Declaration(Class(schema:MedicalTestPanel))
Declaration(Class(schema:MedicalTherapy))
Declaration(Class(schema:MedicalTrial))
Declaration(Class(schema:MedicalTrialDesign))
Declaration(Class(schema:MedicalWebPage))
Declaration(Class(schema:MedicineSystem))
Declaration(Class(schema:MeetingRoom))
Declaration(Class(schema:MemberProgram))
Declaration(Class(schema:MemberProgramTier))
Declaration(Class(schema:MensClothingStore))
Declaration(Class(schema:Menu))
Declaration(Class(schema:MenuItem))
Declaration(Class(schema:MenuSection))
Declaration(Class(schema:MerchantReturnEnumeration))
Declaration(Class(schema:MerchantReturnPolicy))
Declaration(Class(schema:MerchantReturnPolicySeasonalOverride))
Declaration(Class(schema:Message))
Declaration(Class(schema:MiddleSchool))
Declaration(Class(schema:Midwifery))
Declaration(Class(schema:MobileApplication))
Declaration(Class(schema:MobilePhoneStore))
Declaration(Class(schema:MolecularEntity))
Declaration(Class(schema:MonetaryAmount))
Declaration(Class(schema:MonetaryAmountDistribution))
Declaration(Class(schema:MonetaryGrant))
Declaration(Class(schema:MoneyTransfer))
Declaration(Class(schema:MortgageLoan))
Declaration(Class(schema:Mosque))
Declaration(Class(schema:Motel))
Declaration(Class(schema:Motorcycle))
Declaration(Class(schema:MotorcycleDealer))
Declaration(Class(schema:MotorcycleRepair))
Declaration(Class(schema:MotorizedBicycle))
Declaration(Class(schema:Mountain))
Declaration(Class(schema:MoveAction))
Declaration(Class(schema:Movie))
Declaration(Class(schema:MovieClip))
Declaration(Class(schema:MovieRentalStore))
Declaration(Class(schema:MovieSeries))
Declaration(Class(schema:MovieTheater))
Declaration(Class(schema:MovingCompany))
Declaration(Class(schema:Muscle))
Declaration(Class(schema:Museum))
Declaration(Class(schema:MusicAlbum))
Declaration(Class(schema:MusicAlbumProductionType))
Declaration(Class(schema:MusicAlbumReleaseType))
Declaration(Class(schema:MusicComposition))
Declaration(Class(schema:MusicEvent))
Declaration(Class(schema:MusicGroup))
Declaration(Class(schema:MusicPlaylist))
Declaration(Class(schema:MusicRecording))
Declaration(Class(schema:MusicRelease))
Declaration(Class(schema:MusicReleaseFormatType))
Declaration(Class(schema:MusicStore))
Declaration(Class(schema:MusicVenue))
Declaration(Class(schema:MusicVideoObject))
Declaration(Class(schema:NGO))
Declaration(Class(schema:NLNonprofitType))
Declaration(Class(schema:NailSalon))
Declaration(Class(schema:Nerve))
Declaration(Class(schema:NewsArticle))
Declaration(Class(schema:NewsMediaOrganization))
Declaration(Class(schema:Newspaper))
Declaration(Class(schema:NightClub))
Declaration(Class(schema:NonprofitType))
Declaration(Class(schema:Notary))
Declaration(Class(schema:NoteDigitalDocument))
Declaration(Class(schema:Number))
Declaration(Class(schema:Nursing))
Declaration(Class(schema:NutritionInformation))
Declaration(Class(schema:Observation))
Declaration(Class(schema:Obstetric))
Declaration(Class(schema:Occupation))
Declaration(Class(schema:OccupationalExperienceRequirements))
Declaration(Class(schema:OccupationalTherapy))
Declaration(Class(schema:OceanBodyOfWater))
Declaration(Class(schema:Offer))
Declaration(Class(schema:OfferCatalog))
Declaration(Class(schema:OfferForLease))
Declaration(Class(schema:OfferForPurchase))
Declaration(Class(schema:OfferItemCondition))
Declaration(Class(schema:OfferShippingDetails))
Declaration(Class(schema:OfficeEquipmentStore))
Declaration(Class(schema:OnDemandEvent))
Declaration(Class(schema:Oncologic))
Declaration(Class(schema:OnlineBusiness))
Declaration(Class(schema:OnlineStore))
Declaration(Class(schema:OpeningHoursSpecification))
Declaration(Class(schema:OpinionNewsArticle))
Declaration(Class(schema:Optician))
Declaration(Class(schema:Optometric))
Declaration(Class(schema:Order))
Declaration(Class(schema:OrderAction))
Declaration(Class(schema:OrderItem))
Declaration(Class(schema:OrderStatus))
Declaration(Class(schema:Organization))
Declaration(Class(schema:OrganizationRole))
Declaration(Class(schema:OrganizeAction))
Declaration(Class(schema:Otolaryngologic))
Declaration(Class(schema:OutletStore))
Declaration(Class(schema:OwnershipInfo))
Declaration(Class(schema:PaintAction))
Declaration(Class(schema:Painting))
Declaration(Class(schema:PalliativeProcedure))
Declaration(Class(schema:ParcelDelivery))
Declaration(Class(schema:ParentAudience))
Declaration(Class(schema:Park))
Declaration(Class(schema:ParkingFacility))
Declaration(Class(schema:PathologyTest))
Declaration(Class(schema:Patient))
Declaration(Class(schema:PawnShop))
Declaration(Class(schema:PayAction))
Declaration(Class(schema:PaymentCard))
Declaration(Class(schema:PaymentChargeSpecification))
Declaration(Class(schema:PaymentMethod))
Declaration(Class(schema:PaymentMethodType))
Declaration(Class(schema:PaymentService))
Declaration(Class(schema:PaymentStatusType))
Declaration(Class(schema:Pediatric))
Declaration(Class(schema:PeopleAudience))
Declaration(Class(schema:PerformAction))
Declaration(Class(schema:PerformanceRole))
Declaration(Class(schema:PerformingArtsTheater))
Declaration(Class(schema:PerformingGroup))
Declaration(Class(schema:Periodical))
Declaration(Class(schema:Permit))
Declaration(Class(schema:Person))
Declaration(Class(schema:PetStore))
Declaration(Class(schema:Pharmacy))
Declaration(Class(schema:Photograph))
Declaration(Class(schema:PhotographAction))
Declaration(Class(schema:PhysicalActivity))
Declaration(Class(schema:PhysicalActivityCategory))
Declaration(Class(schema:PhysicalExam))
Declaration(Class(schema:PhysicalTherapy))
Declaration(Class(schema:Physician))
Declaration(Class(schema:PhysiciansOffice))
Declaration(Class(schema:Physiotherapy))
Declaration(Class(schema:Place))
Declaration(Class(schema:PlaceOfWorship))
Declaration(Class(schema:PlanAction))
Declaration(Class(schema:PlasticSurgery))
Declaration(Class(schema:Play))
Declaration(Class(schema:PlayAction))
Declaration(Class(schema:PlayGameAction))
Declaration(Class(schema:Playground))
Declaration(Class(schema:Plumber))
Declaration(Class(schema:PodcastEpisode))
Declaration(Class(schema:PodcastSeason))
Declaration(Class(schema:PodcastSeries))
Declaration(Class(schema:Podiatric))
Declaration(Class(schema:PoliceStation))
Declaration(Class(schema:PoliticalParty))
Declaration(Class(schema:Pond))
Declaration(Class(schema:PostOffice))
Declaration(Class(schema:PostalAddress))
Declaration(Class(schema:PostalCodeRangeSpecification))
Declaration(Class(schema:Poster))
Declaration(Class(schema:PreOrderAction))
Declaration(Class(schema:PrependAction))
Declaration(Class(schema:Preschool))
Declaration(Class(schema:PresentationDigitalDocument))
Declaration(Class(schema:PreventionIndication))
Declaration(Class(schema:PriceComponentTypeEnumeration))
Declaration(Class(schema:PriceSpecification))
Declaration(Class(schema:PriceTypeEnumeration))
Declaration(Class(schema:PrimaryCare))
Declaration(Class(schema:Product))
Declaration(Class(schema:ProductCollection))
Declaration(Class(schema:ProductGroup))
Declaration(Class(schema:ProductModel))
Declaration(Class(schema:ProfessionalService))
Declaration(Class(schema:ProfilePage))
Declaration(Class(schema:ProgramMembership))
Declaration(Class(schema:Project))
Declaration(Class(schema:PronounceableText))
Declaration(Class(schema:Property))
Declaration(Class(schema:PropertyValue))
Declaration(Class(schema:PropertyValueSpecification))
Declaration(Class(schema:Protein))
Declaration(Class(schema:Psychiatric))
Declaration(Class(schema:PsychologicalTreatment))
Declaration(Class(schema:PublicHealth))
Declaration(Class(schema:PublicSwimmingPool))
Declaration(Class(schema:PublicToilet))
Declaration(Class(schema:PublicationEvent))
Declaration(Class(schema:PublicationIssue))
Declaration(Class(schema:PublicationVolume))
Declaration(Class(schema:QAPage))
Declaration(Class(schema:QualitativeValue))
Declaration(Class(schema:QuantitativeValue))
Declaration(Class(schema:QuantitativeValueDistribution))
Declaration(Class(schema:Quantity))
Declaration(Class(schema:Question))
Declaration(Class(schema:Quiz))
Declaration(Class(schema:Quotation))
Declaration(Class(schema:QuoteAction))
Declaration(Class(schema:RVPark))
Declaration(Class(schema:RadiationTherapy))
Declaration(Class(schema:RadioBroadcastService))
Declaration(Class(schema:RadioChannel))
Declaration(Class(schema:RadioClip))
Declaration(Class(schema:RadioEpisode))
Declaration(Class(schema:RadioSeason))
Declaration(Class(schema:RadioSeries))
Declaration(Class(schema:RadioStation))
Declaration(Class(schema:Rating))
Declaration(Class(schema:ReactAction))
Declaration(Class(schema:ReadAction))
Declaration(Class(schema:RealEstateAgent))
Declaration(Class(schema:RealEstateListing))
Declaration(Class(schema:ReceiveAction))
Declaration(Class(schema:Recipe))
Declaration(Class(schema:Recommendation))
Declaration(Class(schema:RecommendedDoseSchedule))
Declaration(Class(schema:RecyclingCenter))
Declaration(Class(schema:RefundTypeEnumeration))
Declaration(Class(schema:RegisterAction))
Declaration(Class(schema:RejectAction))
Declaration(Class(schema:RentAction))
Declaration(Class(schema:RentalCarReservation))
Declaration(Class(schema:RepaymentSpecification))
Declaration(Class(schema:ReplaceAction))
Declaration(Class(schema:ReplyAction))
Declaration(Class(schema:Report))
Declaration(Class(schema:ReportageNewsArticle))
Declaration(Class(schema:ReportedDoseSchedule))
Declaration(Class(schema:ResearchOrganization))
Declaration(Class(schema:ResearchProject))
Declaration(Class(schema:Researcher))
Declaration(Class(schema:Reservation))
Declaration(Class(schema:ReservationPackage))
Declaration(Class(schema:ReservationStatusType))
Declaration(Class(schema:ReserveAction))
Declaration(Class(schema:Reservoir))
Declaration(Class(schema:Residence))
Declaration(Class(schema:Resort))
Declaration(Class(schema:RespiratoryTherapy))
Declaration(Class(schema:Restaurant))
Declaration(Class(schema:RestrictedDiet))
Declaration(Class(schema:ResumeAction))
Declaration(Class(schema:ReturnAction))
Declaration(Class(schema:ReturnFeesEnumeration))
Declaration(Class(schema:ReturnLabelSourceEnumeration))
Declaration(Class(schema:ReturnMethodEnumeration))
Declaration(Class(schema:Review))
Declaration(Class(schema:ReviewAction))
Declaration(Class(schema:ReviewNewsArticle))
Declaration(Class(schema:RiverBodyOfWater))
Declaration(Class(schema:Role))
Declaration(Class(schema:RoofingContractor))
Declaration(Class(schema:Room))
Declaration(Class(schema:RsvpAction))
Declaration(Class(schema:RsvpResponseType))
Declaration(Class(schema:SaleEvent))
Declaration(Class(schema:SatiricalArticle))
Declaration(Class(schema:Schedule))
Declaration(Class(schema:ScheduleAction))
Declaration(Class(schema:ScholarlyArticle))
Declaration(Class(schema:School))
Declaration(Class(schema:SchoolDistrict))
Declaration(Class(schema:ScreeningEvent))
Declaration(Class(schema:Sculpture))
Declaration(Class(schema:SeaBodyOfWater))
Declaration(Class(schema:SearchAction))
Declaration(Class(schema:SearchRescueOrganization))
Declaration(Class(schema:SearchResultsPage))
Declaration(Class(schema:Season))
Declaration(Class(schema:Seat))
Declaration(Class(schema:SeekToAction))
Declaration(Class(schema:SelfStorage))
Declaration(Class(schema:SellAction))
Declaration(Class(schema:SendAction))
Declaration(Class(schema:Series))
Declaration(Class(schema:Service))
Declaration(Class(schema:ServiceChannel))
Declaration(Class(schema:ShareAction))
Declaration(Class(schema:SheetMusic))
Declaration(Class(schema:ShippingDeliveryTime))
Declaration(Class(schema:ShippingRateSettings))
Declaration(Class(schema:ShoeStore))
Declaration(Class(schema:ShoppingCenter))
Declaration(Class(schema:ShortStory))
Declaration(Class(schema:SingleFamilyResidence))
Declaration(Class(schema:SiteNavigationElement))
Declaration(Class(schema:SizeGroupEnumeration))
Declaration(Class(schema:SizeSpecification))
Declaration(Class(schema:SizeSystemEnumeration))
Declaration(Class(schema:SkiResort))
Declaration(Class(schema:SocialEvent))
Declaration(Class(schema:SocialMediaPosting))
Declaration(Class(schema:SoftwareApplication))
Declaration(Class(schema:SoftwareSourceCode))
Declaration(Class(schema:SolveMathAction))
Declaration(Class(schema:SomeProducts))
Declaration(Class(schema:SpeakableSpecification))
Declaration(Class(schema:SpecialAnnouncement))
Declaration(Class(schema:Specialty))
Declaration(Class(schema:SportingGoodsStore))
Declaration(Class(schema:SportsActivityLocation))
Declaration(Class(schema:SportsClub))
Declaration(Class(schema:SportsEvent))
Declaration(Class(schema:SportsOrganization))
Declaration(Class(schema:SportsTeam))
Declaration(Class(schema:SpreadsheetDigitalDocument))
Declaration(Class(schema:StadiumOrArena))
Declaration(Class(schema:State))
Declaration(Class(schema:Statement))
Declaration(Class(schema:StatisticalPopulation))
Declaration(Class(schema:StatisticalVariable))
Declaration(Class(schema:StatusEnumeration))
Declaration(Class(schema:SteeringPositionValue))
Declaration(Class(schema:Store))
Declaration(Class(schema:StructuredValue))
Declaration(Class(schema:SubscribeAction))
Declaration(Class(schema:Substance))
Declaration(Class(schema:SubwayStation))
Declaration(Class(schema:Suite))
Declaration(Class(schema:SuperficialAnatomy))
Declaration(Class(schema:SurgicalProcedure))
Declaration(Class(schema:SuspendAction))
Declaration(Class(schema:Syllabus))
Declaration(Class(schema:Synagogue))
Declaration(Class(schema:TVClip))
Declaration(Class(schema:TVEpisode))
Declaration(Class(schema:TVSeason))
Declaration(Class(schema:TVSeries))
Declaration(Class(schema:Table))
Declaration(Class(schema:TakeAction))
Declaration(Class(schema:TattooParlor))
Declaration(Class(schema:Taxi))
Declaration(Class(schema:TaxiReservation))
Declaration(Class(schema:TaxiService))
Declaration(Class(schema:TaxiStand))
Declaration(Class(schema:Taxon))
Declaration(Class(schema:TechArticle))
Declaration(Class(schema:TelevisionChannel))
Declaration(Class(schema:TelevisionStation))
Declaration(Class(schema:TennisComplex))
Declaration(Class(schema:Text))
Declaration(Class(schema:TextDigitalDocument))
Declaration(Class(schema:TextObject))
Declaration(Class(schema:TheaterEvent))
Declaration(Class(schema:TheaterGroup))
Declaration(Class(schema:TherapeuticProcedure))
Declaration(Class(schema:Thesis))
Declaration(Class(schema:Thing))
Declaration(Class(schema:Ticket))
Declaration(Class(schema:TieAction))
Declaration(Class(schema:TierBenefitEnumeration))
Declaration(Class(schema:Time))
Declaration(Class(schema:TipAction))
Declaration(Class(schema:TireShop))
Declaration(Class(schema:TouristAttraction))
Declaration(Class(schema:TouristDestination))
Declaration(Class(schema:TouristInformationCenter))
Declaration(Class(schema:TouristTrip))
Declaration(Class(schema:ToyStore))
Declaration(Class(schema:TrackAction))
Declaration(Class(schema:TradeAction))
Declaration(Class(schema:TrainReservation))
Declaration(Class(schema:TrainStation))
Declaration(Class(schema:TrainTrip))
Declaration(Class(schema:TransferAction))
Declaration(Class(schema:TravelAction))
Declaration(Class(schema:TravelAgency))
Declaration(Class(schema:TreatmentIndication))
Declaration(Class(schema:Trip))
Declaration(Class(schema:TypeAndQuantityNode))
Declaration(Class(schema:UKNonprofitType))
Declaration(Class(schema:URL))
Declaration(Class(schema:USNonprofitType))
Declaration(Class(schema:UnRegisterAction))
Declaration(Class(schema:UnitPriceSpecification))
Declaration(Class(schema:UpdateAction))
Declaration(Class(schema:UseAction))
Declaration(Class(schema:UserBlocks))
Declaration(Class(schema:UserCheckins))
Declaration(Class(schema:UserComments))
Declaration(Class(schema:UserDownloads))
Declaration(Class(schema:UserInteraction))
Declaration(Class(schema:UserLikes))
Declaration(Class(schema:UserPageVisits))
Declaration(Class(schema:UserPlays))
Declaration(Class(schema:UserPlusOnes))
Declaration(Class(schema:UserReview))
Declaration(Class(schema:UserTweets))
Declaration(Class(schema:VacationRental))
Declaration(Class(schema:Vehicle))
Declaration(Class(schema:Vein))
Declaration(Class(schema:Vessel))
Declaration(Class(schema:VeterinaryCare))
Declaration(Class(schema:VideoGallery))
Declaration(Class(schema:VideoGame))
Declaration(Class(schema:VideoGameClip))
Declaration(Class(schema:VideoGameSeries))
Declaration(Class(schema:VideoObject))
Declaration(Class(schema:VideoObjectSnapshot))
Declaration(Class(schema:ViewAction))
Declaration(Class(schema:VirtualLocation))
Declaration(Class(schema:VisualArtsEvent))
Declaration(Class(schema:VisualArtwork))
Declaration(Class(schema:VitalSign))
Declaration(Class(schema:Volcano))
Declaration(Class(schema:VoteAction))
Declaration(Class(schema:WPAdBlock))
Declaration(Class(schema:WPFooter))
Declaration(Class(schema:WPHeader))
Declaration(Class(schema:WPSideBar))
Declaration(Class(schema:WantAction))
Declaration(Class(schema:WarrantyPromise))
Declaration(Class(schema:WarrantyScope))
Declaration(Class(schema:WatchAction))
Declaration(Class(schema:Waterfall))
Declaration(Class(schema:WearAction))
Declaration(Class(schema:WearableMeasurementTypeEnumeration))
Declaration(Class(schema:WearableSizeGroupEnumeration))
Declaration(Class(schema:WearableSizeSystemEnumeration))
Declaration(Class(schema:WebAPI))
Declaration(Class(schema:WebApplication))
Declaration(Class(schema:WebContent))
Declaration(Class(schema:WebPage))
Declaration(Class(schema:WebPageElement))
Declaration(Class(schema:WebSite))
Declaration(Class(schema:WholesaleStore))
Declaration(Class(schema:WinAction))
Declaration(Class(schema:Winery))
Declaration(Class(schema:WorkBasedProgram))
Declaration(Class(schema:WorkersUnion))
Declaration(Class(schema:WriteAction))
Declaration(Class(schema:XPathType))
Declaration(Class(schema:Zoo))
Declaration(Class(<https://schema.org/3DModel>))
Declaration(NamedIndividual(schema:Abdomen))
Declaration(NamedIndividual(schema:ActivationFee))
Declaration(NamedIndividual(schema:ActiveActionStatus))
Declaration(NamedIndividual(schema:ActiveNotRecruiting))
Declaration(NamedIndividual(schema:AerobicActivity))
Declaration(NamedIndividual(schema:AlbumRelease))
Declaration(NamedIndividual(schema:AlcoholConsideration))
Declaration(NamedIndividual(schema:AlgorithmicMediaDigitalSource))
Declaration(NamedIndividual(schema:AlgorithmicallyEnhancedDigitalSource))
Declaration(NamedIndividual(schema:AllWheelDriveConfiguration))
Declaration(NamedIndividual(schema:AllergiesHealthAspect))
Declaration(NamedIndividual(schema:AnaerobicActivity))
Declaration(NamedIndividual(schema:AndroidPlatform))
Declaration(NamedIndividual(schema:Anesthesia))
Declaration(NamedIndividual(schema:Appearance))
Declaration(NamedIndividual(schema:AudiobookFormat))
Declaration(NamedIndividual(schema:AuthoritativeLegalValue))
Declaration(NamedIndividual(schema:Ayurvedic))
Declaration(NamedIndividual(schema:BackOrder))
Declaration(NamedIndividual(schema:Bacteria))
Declaration(NamedIndividual(schema:Balance))
Declaration(NamedIndividual(schema:BasicIncome))
Declaration(NamedIndividual(schema:BenefitsHealthAspect))
Declaration(NamedIndividual(schema:BodyMeasurementArm))
Declaration(NamedIndividual(schema:BodyMeasurementBust))
Declaration(NamedIndividual(schema:BodyMeasurementChest))
Declaration(NamedIndividual(schema:BodyMeasurementFoot))
Declaration(NamedIndividual(schema:BodyMeasurementHand))
Declaration(NamedIndividual(schema:BodyMeasurementHead))
Declaration(NamedIndividual(schema:BodyMeasurementHeight))
Declaration(NamedIndividual(schema:BodyMeasurementHips))
Declaration(NamedIndividual(schema:BodyMeasurementInsideLeg))
Declaration(NamedIndividual(schema:BodyMeasurementNeck))
Declaration(NamedIndividual(schema:BodyMeasurementUnderbust))
Declaration(NamedIndividual(schema:BodyMeasurementWaist))
Declaration(NamedIndividual(schema:BodyMeasurementWeight))
Declaration(NamedIndividual(schema:Boolean))
Declaration(NamedIndividual(schema:BroadcastRelease))
Declaration(NamedIndividual(schema:BusinessSupport))
Declaration(NamedIndividual(schema:ByBankTransferInAdvance))
Declaration(NamedIndividual(schema:ByInvoice))
Declaration(NamedIndividual(schema:CDFormat))
Declaration(NamedIndividual(schema:COD))
Declaration(NamedIndividual(schema:CT))
Declaration(NamedIndividual(schema:Cardiovascular))
Declaration(NamedIndividual(schema:CardiovascularExam))
Declaration(NamedIndividual(schema:CaseSeries))
Declaration(NamedIndividual(schema:Cash))
Declaration(NamedIndividual(schema:CassetteFormat))
Declaration(NamedIndividual(schema:CausesHealthAspect))
Declaration(NamedIndividual(schema:CertificationActive))
Declaration(NamedIndividual(schema:CertificationInactive))
Declaration(NamedIndividual(schema:CharitableIncorporatedOrganization))
Declaration(NamedIndividual(schema:CheckInAdvance))
Declaration(NamedIndividual(schema:Chiropractic))
Declaration(NamedIndividual(schema:CleaningFee))
Declaration(NamedIndividual(schema:Clinician))
Declaration(NamedIndividual(schema:CoOp))
Declaration(NamedIndividual(schema:CohortStudy))
Declaration(NamedIndividual(schema:CommentPermission))
Declaration(NamedIndividual(schema:CommunityHealth))
Declaration(NamedIndividual(schema:CompilationAlbum))
Declaration(NamedIndividual(schema:Completed))
Declaration(NamedIndividual(schema:CompletedActionStatus))
Declaration(NamedIndividual(schema:CompositeCaptureDigitalSource))
Declaration(NamedIndividual(schema:CompositeDigitalSource))
Declaration(NamedIndividual(schema:CompositeSyntheticDigitalSource))
Declaration(NamedIndividual(schema:CompositeWithTrainedAlgorithmicMediaDigitalSource))
Declaration(NamedIndividual(schema:ContagiousnessHealthAspect))
Declaration(NamedIndividual(schema:CrossSectional))
Declaration(NamedIndividual(schema:DJMixAlbum))
Declaration(NamedIndividual(schema:DVDFormat))
Declaration(NamedIndividual(schema:DamagedCondition))
Declaration(NamedIndividual(schema:DangerousGoodConsideration))
Declaration(NamedIndividual(schema:DataDrivenMediaDigitalSource))
Declaration(NamedIndividual(schema:Date))
Declaration(NamedIndividual(schema:DateTime))
Declaration(NamedIndividual(schema:DecontextualizedContent))
Declaration(NamedIndividual(schema:DefinitiveLegalValue))
Declaration(NamedIndividual(schema:DemoAlbum))
Declaration(NamedIndividual(schema:DemoGameAvailability))
Declaration(NamedIndividual(schema:Dentistry))
Declaration(NamedIndividual(schema:Dermatologic))
Declaration(NamedIndividual(schema:Dermatology))
Declaration(NamedIndividual(schema:DesktopWebPlatform))
Declaration(NamedIndividual(schema:DiabeticDiet))
Declaration(NamedIndividual(schema:Diagnostic))
Declaration(NamedIndividual(schema:DietNutrition))
Declaration(NamedIndividual(schema:DigitalArtDigitalSource))
Declaration(NamedIndividual(schema:DigitalAudioTapeFormat))
Declaration(NamedIndividual(schema:DigitalCaptureDigitalSource))
Declaration(NamedIndividual(schema:DigitalFormat))
Declaration(NamedIndividual(schema:DirectDebit))
Declaration(NamedIndividual(schema:DisabilitySupport))
Declaration(NamedIndividual(schema:Discontinued))
Declaration(NamedIndividual(schema:DistanceFee))
Declaration(NamedIndividual(schema:DoubleBlindedTrial))
Declaration(NamedIndividual(schema:Downpayment))
Declaration(NamedIndividual(schema:DrivingSchoolVehicleUsage))
Declaration(NamedIndividual(schema:EBook))
Declaration(NamedIndividual(schema:EPRelease))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryA))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryA1Plus))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryA2Plus))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryA3Plus))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryB))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryC))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryD))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryE))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryF))
Declaration(NamedIndividual(schema:EUEnergyEfficiencyCategoryG))
Declaration(NamedIndividual(schema:Ear))
Declaration(NamedIndividual(schema:EditedOrCroppedContent))
Declaration(NamedIndividual(schema:EffectivenessHealthAspect))
Declaration(NamedIndividual(schema:Emergency))
Declaration(NamedIndividual(schema:Endocrine))
Declaration(NamedIndividual(schema:EnergyStarCertified))
Declaration(NamedIndividual(schema:EnrollingByInvitation))
Declaration(NamedIndividual(schema:EventCancelled))
Declaration(NamedIndividual(schema:EventMovedOnline))
Declaration(NamedIndividual(schema:EventPostponed))
Declaration(NamedIndividual(schema:EventRescheduled))
Declaration(NamedIndividual(schema:EventScheduled))
Declaration(NamedIndividual(schema:EvidenceLevelA))
Declaration(NamedIndividual(schema:EvidenceLevelB))
Declaration(NamedIndividual(schema:EvidenceLevelC))
Declaration(NamedIndividual(schema:ExampleMeasurementMethodEnum))
Declaration(NamedIndividual(schema:ExchangeRefund))
Declaration(NamedIndividual(schema:Eye))
Declaration(NamedIndividual(schema:FDAcategoryA))
Declaration(NamedIndividual(schema:FDAcategoryB))
Declaration(NamedIndividual(schema:FDAcategoryC))
Declaration(NamedIndividual(schema:FDAcategoryD))
Declaration(NamedIndividual(schema:FDAcategoryX))
Declaration(NamedIndividual(schema:FDAnotEvaluated))
Declaration(NamedIndividual(schema:FailedActionStatus))
Declaration(NamedIndividual(schema:False))
Declaration(NamedIndividual(schema:Female))
Declaration(NamedIndividual(schema:Flexibility))
Declaration(NamedIndividual(schema:FourWheelDriveConfiguration))
Declaration(NamedIndividual(schema:FreeReturn))
Declaration(NamedIndividual(schema:Friday))
Declaration(NamedIndividual(schema:FrontWheelDriveConfiguration))
Declaration(NamedIndividual(schema:FullGameAvailability))
Declaration(NamedIndividual(schema:FullRefund))
Declaration(NamedIndividual(schema:Fungus))
Declaration(NamedIndividual(schema:Gastroenterologic))
Declaration(NamedIndividual(schema:GenericWebPlatform))
Declaration(NamedIndividual(schema:Genetic))
Declaration(NamedIndividual(schema:Genitourinary))
Declaration(NamedIndividual(schema:Geriatric))
Declaration(NamedIndividual(schema:GettingAccessHealthAspect))
Declaration(NamedIndividual(schema:GlutenFreeDiet))
Declaration(NamedIndividual(schema:GraphicNovel))
Declaration(NamedIndividual(schema:GroupBoardingPolicy))
Declaration(NamedIndividual(schema:Gynecologic))
Declaration(NamedIndividual(schema:HalalDiet))
Declaration(NamedIndividual(schema:Hardcover))
Declaration(NamedIndividual(schema:Head))
Declaration(NamedIndividual(schema:HealthCare))
Declaration(NamedIndividual(schema:HealthcareConsideration))
Declaration(NamedIndividual(schema:HearingImpairedSupported))
Declaration(NamedIndividual(schema:Hematologic))
Declaration(NamedIndividual(schema:HinduDiet))
Declaration(NamedIndividual(schema:Homeopathic))
Declaration(NamedIndividual(schema:HowItWorksHealthAspect))
Declaration(NamedIndividual(schema:HowOrWhereHealthAspect))
Declaration(NamedIndividual(schema:IOSPlatform))
Declaration(NamedIndividual(schema:InForce))
Declaration(NamedIndividual(schema:InStock))
Declaration(NamedIndividual(schema:InStoreOnly))
Declaration(NamedIndividual(schema:InStorePrepay))
Declaration(NamedIndividual(schema:Infectious))
Declaration(NamedIndividual(schema:IngredientsHealthAspect))
Declaration(NamedIndividual(schema:Installment))
Declaration(NamedIndividual(schema:InternationalTrial))
Declaration(NamedIndividual(schema:InvoicePrice))
Declaration(NamedIndividual(schema:ItemListOrderAscending))
Declaration(NamedIndividual(schema:ItemListOrderDescending))
Declaration(NamedIndividual(schema:ItemListUnordered))
Declaration(NamedIndividual(schema:KeepProduct))
Declaration(NamedIndividual(schema:KosherDiet))
Declaration(NamedIndividual(schema:LaboratoryScience))
Declaration(NamedIndividual(schema:LaserDiscFormat))
Declaration(NamedIndividual(schema:LeftHandDriving))
Declaration(NamedIndividual(schema:LeisureTimeActivity))
Declaration(NamedIndividual(schema:LimitedAvailability))
Declaration(NamedIndividual(schema:LimitedByGuaranteeCharity))
Declaration(NamedIndividual(schema:ListPrice))
Declaration(NamedIndividual(schema:LiveAlbum))
Declaration(NamedIndividual(schema:LivingWithHealthAspect))
Declaration(NamedIndividual(schema:LockerDelivery))
Declaration(NamedIndividual(schema:Longitudinal))
Declaration(NamedIndividual(schema:LowCalorieDiet))
Declaration(NamedIndividual(schema:LowFatDiet))
Declaration(NamedIndividual(schema:LowLactoseDiet))
Declaration(NamedIndividual(schema:LowSaltDiet))
Declaration(NamedIndividual(schema:Lung))
Declaration(NamedIndividual(schema:MRI))
Declaration(NamedIndividual(schema:MSRP))
Declaration(NamedIndividual(schema:MadeToOrder))
Declaration(NamedIndividual(schema:Male))
Declaration(NamedIndividual(schema:MayTreatHealthAspect))
Declaration(NamedIndividual(schema:MedicalResearcher))
Declaration(NamedIndividual(schema:MerchantReturnFiniteReturnWindow))
Declaration(NamedIndividual(schema:MerchantReturnNotPermitted))
Declaration(NamedIndividual(schema:MerchantReturnUnlimitedWindow))
Declaration(NamedIndividual(schema:MerchantReturnUnspecified))
Declaration(NamedIndividual(schema:Midwifery))
Declaration(NamedIndividual(schema:MinimumAdvertisedPrice))
Declaration(NamedIndividual(schema:MinorHumanEditsDigitalSource))
Declaration(NamedIndividual(schema:MisconceptionsHealthAspect))
Declaration(NamedIndividual(schema:MixedEventAttendanceMode))
Declaration(NamedIndividual(schema:MixtapeAlbum))
Declaration(NamedIndividual(schema:MobileWebPlatform))
Declaration(NamedIndividual(schema:Monday))
Declaration(NamedIndividual(schema:MultiCenterTrial))
Declaration(NamedIndividual(schema:MultiFrameComputationalCaptureDigitalSource))
Declaration(NamedIndividual(schema:MultiPlayer))
Declaration(NamedIndividual(schema:MulticellularParasite))
Declaration(NamedIndividual(schema:Musculoskeletal))
Declaration(NamedIndividual(schema:MusculoskeletalExam))
Declaration(NamedIndividual(schema:NarcoticConsideration))
Declaration(NamedIndividual(schema:Neck))
Declaration(NamedIndividual(schema:NegativeFilmDigitalSource))
Declaration(NamedIndividual(schema:Neuro))
Declaration(NamedIndividual(schema:Neurologic))
Declaration(NamedIndividual(schema:NewCondition))
Declaration(NamedIndividual(schema:NoninvasiveProcedure))
Declaration(NamedIndividual(schema:Nonprofit501a))
Declaration(NamedIndividual(schema:Nonprofit501c1))
Declaration(NamedIndividual(schema:Nonprofit501c10))
Declaration(NamedIndividual(schema:Nonprofit501c11))
Declaration(NamedIndividual(schema:Nonprofit501c12))
Declaration(NamedIndividual(schema:Nonprofit501c13))
Declaration(NamedIndividual(schema:Nonprofit501c14))
Declaration(NamedIndividual(schema:Nonprofit501c15))
Declaration(NamedIndividual(schema:Nonprofit501c16))
Declaration(NamedIndividual(schema:Nonprofit501c17))
Declaration(NamedIndividual(schema:Nonprofit501c18))
Declaration(NamedIndividual(schema:Nonprofit501c19))
Declaration(NamedIndividual(schema:Nonprofit501c2))
Declaration(NamedIndividual(schema:Nonprofit501c20))
Declaration(NamedIndividual(schema:Nonprofit501c21))
Declaration(NamedIndividual(schema:Nonprofit501c22))
Declaration(NamedIndividual(schema:Nonprofit501c23))
Declaration(NamedIndividual(schema:Nonprofit501c24))
Declaration(NamedIndividual(schema:Nonprofit501c25))
Declaration(NamedIndividual(schema:Nonprofit501c26))
Declaration(NamedIndividual(schema:Nonprofit501c27))
Declaration(NamedIndividual(schema:Nonprofit501c28))
Declaration(NamedIndividual(schema:Nonprofit501c3))
Declaration(NamedIndividual(schema:Nonprofit501c4))
Declaration(NamedIndividual(schema:Nonprofit501c5))
Declaration(NamedIndividual(schema:Nonprofit501c6))
Declaration(NamedIndividual(schema:Nonprofit501c7))
Declaration(NamedIndividual(schema:Nonprofit501c8))
Declaration(NamedIndividual(schema:Nonprofit501c9))
Declaration(NamedIndividual(schema:Nonprofit501d))
Declaration(NamedIndividual(schema:Nonprofit501e))
Declaration(NamedIndividual(schema:Nonprofit501f))
Declaration(NamedIndividual(schema:Nonprofit501k))
Declaration(NamedIndividual(schema:Nonprofit501n))
Declaration(NamedIndividual(schema:Nonprofit501q))
Declaration(NamedIndividual(schema:Nonprofit527))
Declaration(NamedIndividual(schema:NonprofitANBI))
Declaration(NamedIndividual(schema:NonprofitSBBI))
Declaration(NamedIndividual(schema:Nose))
Declaration(NamedIndividual(schema:NotInForce))
Declaration(NamedIndividual(schema:NotYetRecruiting))
Declaration(NamedIndividual(schema:Number))
Declaration(NamedIndividual(schema:Nursing))
Declaration(NamedIndividual(schema:OTC))
Declaration(NamedIndividual(schema:Observational))
Declaration(NamedIndividual(schema:Obstetric))
Declaration(NamedIndividual(schema:OccupationalActivity))
Declaration(NamedIndividual(schema:OfficialLegalValue))
Declaration(NamedIndividual(schema:OfflineEventAttendanceMode))
Declaration(NamedIndividual(schema:OfflinePermanently))
Declaration(NamedIndividual(schema:OfflineTemporarily))
Declaration(NamedIndividual(schema:OnSitePickup))
Declaration(NamedIndividual(schema:Oncologic))
Declaration(NamedIndividual(schema:OneTimePayments))
Declaration(NamedIndividual(schema:Online))
Declaration(NamedIndividual(schema:OnlineEventAttendanceMode))
Declaration(NamedIndividual(schema:OnlineFull))
Declaration(NamedIndividual(schema:OnlineOnly))
Declaration(NamedIndividual(schema:OpenTrial))
Declaration(NamedIndividual(schema:Optometric))
Declaration(NamedIndividual(schema:OrderCancelled))
Declaration(NamedIndividual(schema:OrderDelivered))
Declaration(NamedIndividual(schema:OrderInTransit))
Declaration(NamedIndividual(schema:OrderPaymentDue))
Declaration(NamedIndividual(schema:OrderPickupAvailable))
Declaration(NamedIndividual(schema:OrderProblem))
Declaration(NamedIndividual(schema:OrderProcessing))
Declaration(NamedIndividual(schema:OrderReturned))
Declaration(NamedIndividual(schema:OriginalMediaContent))
Declaration(NamedIndividual(schema:OriginalShippingFees))
Declaration(NamedIndividual(schema:Osteopathic))
Declaration(NamedIndividual(schema:Otolaryngologic))
Declaration(NamedIndividual(schema:OutOfStock))
Declaration(NamedIndividual(schema:OverviewHealthAspect))
Declaration(NamedIndividual(schema:PET))
Declaration(NamedIndividual(schema:PaidLeave))
Declaration(NamedIndividual(schema:Paperback))
Declaration(NamedIndividual(schema:ParcelService))
Declaration(NamedIndividual(schema:ParentalSupport))
Declaration(NamedIndividual(schema:ParkingMap))
Declaration(NamedIndividual(schema:PartiallyInForce))
Declaration(NamedIndividual(schema:Pathology))
Declaration(NamedIndividual(schema:PatientExperienceHealthAspect))
Declaration(NamedIndividual(schema:PaymentAutomaticallyApplied))
Declaration(NamedIndividual(schema:PaymentComplete))
Declaration(NamedIndividual(schema:PaymentDeclined))
Declaration(NamedIndividual(schema:PaymentDue))
Declaration(NamedIndividual(schema:PaymentPastDue))
Declaration(NamedIndividual(schema:Pediatric))
Declaration(NamedIndividual(schema:PercutaneousProcedure))
Declaration(NamedIndividual(schema:PharmacySpecialty))
Declaration(NamedIndividual(schema:PhoneCarrierPayment))
Declaration(NamedIndividual(schema:Physiotherapy))
Declaration(NamedIndividual(schema:PlaceboControlledTrial))
Declaration(NamedIndividual(schema:PlasticSurgery))
Declaration(NamedIndividual(schema:Podiatric))
Declaration(NamedIndividual(schema:PositiveFilmDigitalSource))
Declaration(NamedIndividual(schema:PotentialActionStatus))
Declaration(NamedIndividual(schema:PreOrder))
Declaration(NamedIndividual(schema:PreSale))
Declaration(NamedIndividual(schema:PregnancyHealthAspect))
Declaration(NamedIndividual(schema:PrescriptionOnly))
Declaration(NamedIndividual(schema:PreventionHealthAspect))
Declaration(NamedIndividual(schema:PrimaryCare))
Declaration(NamedIndividual(schema:PrintDigitalSource))
Declaration(NamedIndividual(schema:Prion))
Declaration(NamedIndividual(schema:PrognosisHealthAspect))
Declaration(NamedIndividual(schema:Protozoa))
Declaration(NamedIndividual(schema:Psychiatric))
Declaration(NamedIndividual(schema:PublicHealth))
Declaration(NamedIndividual(schema:PublicHolidays))
Declaration(NamedIndividual(schema:Pulmonary))
Declaration(NamedIndividual(schema:Radiography))
Declaration(NamedIndividual(schema:RandomizedTrial))
Declaration(NamedIndividual(schema:ReadPermission))
Declaration(NamedIndividual(schema:RearWheelDriveConfiguration))
Declaration(NamedIndividual(schema:Recruiting))
Declaration(NamedIndividual(schema:ReducedRelevanceForChildrenConsideration))
Declaration(NamedIndividual(schema:RefurbishedCondition))
Declaration(NamedIndividual(schema:Registry))
Declaration(NamedIndividual(schema:RegularPrice))
Declaration(NamedIndividual(schema:ReimbursementCap))
Declaration(NamedIndividual(schema:RelatedTopicsHealthAspect))
Declaration(NamedIndividual(schema:RemixAlbum))
Declaration(NamedIndividual(schema:Renal))
Declaration(NamedIndividual(schema:RentalVehicleUsage))
Declaration(NamedIndividual(schema:ReservationCancelled))
Declaration(NamedIndividual(schema:ReservationConfirmed))
Declaration(NamedIndividual(schema:ReservationHold))
Declaration(NamedIndividual(schema:ReservationPending))
Declaration(NamedIndividual(schema:Reserved))
Declaration(NamedIndividual(schema:RespiratoryTherapy))
Declaration(NamedIndividual(schema:RestockingFees))
Declaration(NamedIndividual(schema:ResultsAvailable))
Declaration(NamedIndividual(schema:ResultsNotAvailable))
Declaration(NamedIndividual(schema:Retail))
Declaration(NamedIndividual(schema:ReturnAtKiosk))
Declaration(NamedIndividual(schema:ReturnByMail))
Declaration(NamedIndividual(schema:ReturnFeesCustomerResponsibility))
Declaration(NamedIndividual(schema:ReturnInStore))
Declaration(NamedIndividual(schema:ReturnLabelCustomerResponsibility))
Declaration(NamedIndividual(schema:ReturnLabelDownloadAndPrint))
Declaration(NamedIndividual(schema:ReturnLabelInBox))
Declaration(NamedIndividual(schema:ReturnShippingFees))
Declaration(NamedIndividual(schema:Rheumatologic))
Declaration(NamedIndividual(schema:RightHandDriving))
Declaration(NamedIndividual(schema:RisksOrComplicationsHealthAspect))
Declaration(NamedIndividual(schema:RsvpResponseMaybe))
Declaration(NamedIndividual(schema:RsvpResponseNo))
Declaration(NamedIndividual(schema:RsvpResponseYes))
Declaration(NamedIndividual(schema:SRP))
Declaration(NamedIndividual(schema:SafetyHealthAspect))
Declaration(NamedIndividual(schema:SalePrice))
Declaration(NamedIndividual(schema:SatireOrParodyContent))
Declaration(NamedIndividual(schema:Saturday))
Declaration(NamedIndividual(schema:ScreenCaptureDigitalSource))
Declaration(NamedIndividual(schema:ScreeningHealthAspect))
Declaration(NamedIndividual(schema:SeatingMap))
Declaration(NamedIndividual(schema:SeeDoctorHealthAspect))
Declaration(NamedIndividual(schema:SelfCareHealthAspect))
Declaration(NamedIndividual(schema:SexualContentConsideration))
Declaration(NamedIndividual(schema:SideEffectsHealthAspect))
Declaration(NamedIndividual(schema:SingleBlindedTrial))
Declaration(NamedIndividual(schema:SingleCenterTrial))
Declaration(NamedIndividual(schema:SinglePlayer))
Declaration(NamedIndividual(schema:SingleRelease))
Declaration(NamedIndividual(schema:SizeSystemImperial))
Declaration(NamedIndividual(schema:SizeSystemMetric))
Declaration(NamedIndividual(schema:Skin))
Declaration(NamedIndividual(schema:SoldOut))
Declaration(NamedIndividual(schema:SoundtrackAlbum))
Declaration(NamedIndividual(schema:SpeechPathology))
Declaration(NamedIndividual(schema:SpokenWordAlbum))
Declaration(NamedIndividual(schema:StagedContent))
Declaration(NamedIndividual(schema:StagesHealthAspect))
Declaration(NamedIndividual(schema:StoreCreditRefund))
Declaration(NamedIndividual(schema:StrengthTraining))
Declaration(NamedIndividual(schema:StrikethroughPrice))
Declaration(NamedIndividual(schema:StudioAlbum))
Declaration(NamedIndividual(schema:Subscription))
Declaration(NamedIndividual(schema:Sunday))
Declaration(NamedIndividual(schema:Surgical))
Declaration(NamedIndividual(schema:Suspended))
Declaration(NamedIndividual(schema:SymptomsHealthAspect))
Declaration(NamedIndividual(schema:TaxiVehicleUsage))
Declaration(NamedIndividual(schema:Terminated))
Declaration(NamedIndividual(schema:Text))
Declaration(NamedIndividual(schema:Therapeutic))
Declaration(NamedIndividual(schema:Throat))
Declaration(NamedIndividual(schema:Thursday))
Declaration(NamedIndividual(schema:TierBenefitLoyaltyPoints))
Declaration(NamedIndividual(schema:TierBenefitLoyaltyPrice))
Declaration(NamedIndividual(schema:TierBenefitLoyaltyReturns))
Declaration(NamedIndividual(schema:TierBenefitLoyaltyShipping))
Declaration(NamedIndividual(schema:Time))
Declaration(NamedIndividual(schema:TobaccoNicotineConsideration))
Declaration(NamedIndividual(schema:TollFree))
Declaration(NamedIndividual(schema:Toxicologic))
Declaration(NamedIndividual(schema:TraditionalChinese))
Declaration(NamedIndividual(schema:TrainedAlgorithmicMediaDigitalSource))
Declaration(NamedIndividual(schema:TransformedContent))
Declaration(NamedIndividual(schema:TransitMap))
Declaration(NamedIndividual(schema:TreatmentsHealthAspect))
Declaration(NamedIndividual(schema:TripleBlindedTrial))
Declaration(NamedIndividual(schema:True))
Declaration(NamedIndividual(schema:Tuesday))
Declaration(NamedIndividual(schema:TypesHealthAspect))
Declaration(NamedIndividual(schema:UKTrust))
Declaration(NamedIndividual(schema:Ultrasound))
Declaration(NamedIndividual(schema:UnclassifiedAdultConsideration))
Declaration(NamedIndividual(schema:UnemploymentSupport))
Declaration(NamedIndividual(schema:UnincorporatedAssociationCharity))
Declaration(NamedIndividual(schema:UnofficialLegalValue))
Declaration(NamedIndividual(schema:Urologic))
Declaration(NamedIndividual(schema:UsageOrScheduleHealthAspect))
Declaration(NamedIndividual(schema:UsedCondition))
Declaration(NamedIndividual(schema:VeganDiet))
Declaration(NamedIndividual(schema:VegetarianDiet))
Declaration(NamedIndividual(schema:VenueMap))
Declaration(NamedIndividual(schema:VinylFormat))
Declaration(NamedIndividual(schema:ViolenceConsideration))
Declaration(NamedIndividual(schema:VirtualRecordingDigitalSource))
Declaration(NamedIndividual(schema:Virus))
Declaration(NamedIndividual(schema:WeaponConsideration))
Declaration(NamedIndividual(schema:WearableMeasurementBack))
Declaration(NamedIndividual(schema:WearableMeasurementChestOrBust))
Declaration(NamedIndividual(schema:WearableMeasurementCollar))
Declaration(NamedIndividual(schema:WearableMeasurementCup))
Declaration(NamedIndividual(schema:WearableMeasurementHeight))
Declaration(NamedIndividual(schema:WearableMeasurementHips))
Declaration(NamedIndividual(schema:WearableMeasurementInseam))
Declaration(NamedIndividual(schema:WearableMeasurementLength))
Declaration(NamedIndividual(schema:WearableMeasurementOutsideLeg))
Declaration(NamedIndividual(schema:WearableMeasurementSleeve))
Declaration(NamedIndividual(schema:WearableMeasurementWaist))
Declaration(NamedIndividual(schema:WearableMeasurementWidth))
Declaration(NamedIndividual(schema:WearableSizeGroupBig))
Declaration(NamedIndividual(schema:WearableSizeGroupBoys))
Declaration(NamedIndividual(schema:WearableSizeGroupExtraShort))
Declaration(NamedIndividual(schema:WearableSizeGroupExtraTall))
Declaration(NamedIndividual(schema:WearableSizeGroupGirls))
Declaration(NamedIndividual(schema:WearableSizeGroupHusky))
Declaration(NamedIndividual(schema:WearableSizeGroupInfants))
Declaration(NamedIndividual(schema:WearableSizeGroupJuniors))
Declaration(NamedIndividual(schema:WearableSizeGroupMaternity))
Declaration(NamedIndividual(schema:WearableSizeGroupMens))
Declaration(NamedIndividual(schema:WearableSizeGroupMisses))
Declaration(NamedIndividual(schema:WearableSizeGroupPetite))
Declaration(NamedIndividual(schema:WearableSizeGroupPlus))
Declaration(NamedIndividual(schema:WearableSizeGroupRegular))
Declaration(NamedIndividual(schema:WearableSizeGroupShort))
Declaration(NamedIndividual(schema:WearableSizeGroupTall))
Declaration(NamedIndividual(schema:WearableSizeGroupWomens))
Declaration(NamedIndividual(schema:WearableSizeSystemAU))
Declaration(NamedIndividual(schema:WearableSizeSystemBR))
Declaration(NamedIndividual(schema:WearableSizeSystemCN))
Declaration(NamedIndividual(schema:WearableSizeSystemContinental))
Declaration(NamedIndividual(schema:WearableSizeSystemDE))
Declaration(NamedIndividual(schema:WearableSizeSystemEN13402))
Declaration(NamedIndividual(schema:WearableSizeSystemEurope))
Declaration(NamedIndividual(schema:WearableSizeSystemFR))
Declaration(NamedIndividual(schema:WearableSizeSystemGS1))
Declaration(NamedIndividual(schema:WearableSizeSystemIT))
Declaration(NamedIndividual(schema:WearableSizeSystemJP))
Declaration(NamedIndividual(schema:WearableSizeSystemMX))
Declaration(NamedIndividual(schema:WearableSizeSystemUK))
Declaration(NamedIndividual(schema:WearableSizeSystemUS))
Declaration(NamedIndividual(schema:Wednesday))
Declaration(NamedIndividual(schema:WesternConventional))
Declaration(NamedIndividual(schema:Wholesale))
Declaration(NamedIndividual(schema:Withdrawn))
Declaration(NamedIndividual(schema:WritePermission))
Declaration(NamedIndividual(schema:XRay))
Declaration(NamedIndividual(schema:ZoneBoardingPolicy))
Declaration(AnnotationProperty(rdfs:type))
Declaration(AnnotationProperty(<http://www.w3.org/2004/02/skos/core#closeMatch>))
Declaration(AnnotationProperty(<http://www.w3.org/2004/02/skos/core#exactMatch>))
Declaration(AnnotationProperty(schema:about))
Declaration(AnnotationProperty(schema:acceptedAnswer))
Declaration(AnnotationProperty(schema:accommodationCategory))
Declaration(AnnotationProperty(schema:accountId))
Declaration(AnnotationProperty(schema:acquireLicensePage))
Declaration(AnnotationProperty(schema:actionOption))
Declaration(AnnotationProperty(schema:actionableFeedbackPolicy))
Declaration(AnnotationProperty(schema:actor))
Declaration(AnnotationProperty(schema:additionalName))
Declaration(AnnotationProperty(schema:additionalType))
Declaration(AnnotationProperty(schema:affiliation))
Declaration(AnnotationProperty(schema:alternateName))
Declaration(AnnotationProperty(schema:announcementLocation))
Declaration(AnnotationProperty(schema:appearance))
Declaration(AnnotationProperty(schema:areaServed))
Declaration(AnnotationProperty(schema:artMedium))
Declaration(AnnotationProperty(schema:asin))
Declaration(AnnotationProperty(schema:associatedClaimReview))
Declaration(AnnotationProperty(schema:associatedMediaReview))
Declaration(AnnotationProperty(schema:associatedReview))
Declaration(AnnotationProperty(schema:availableAtOrFrom))
Declaration(AnnotationProperty(schema:awayTeam))
Declaration(AnnotationProperty(schema:bccRecipient))
Declaration(AnnotationProperty(schema:borrower))
Declaration(AnnotationProperty(schema:buyer))
Declaration(AnnotationProperty(schema:callSign))
Declaration(AnnotationProperty(schema:candidate))
Declaration(AnnotationProperty(schema:caption))
Declaration(AnnotationProperty(schema:category))
Declaration(AnnotationProperty(schema:ccRecipient))
Declaration(AnnotationProperty(schema:clipNumber))
Declaration(AnnotationProperty(schema:codeValue))
Declaration(AnnotationProperty(schema:collection))
Declaration(AnnotationProperty(schema:colorSwatch))
Declaration(AnnotationProperty(schema:competitor))
Declaration(AnnotationProperty(schema:confirmationNumber))
Declaration(AnnotationProperty(schema:containsSeason))
Declaration(AnnotationProperty(schema:contentLocation))
Declaration(AnnotationProperty(schema:contributor))
Declaration(AnnotationProperty(schema:cookTime))
Declaration(AnnotationProperty(schema:correctionsPolicy))
Declaration(AnnotationProperty(schema:course))
Declaration(AnnotationProperty(schema:creator))
Declaration(AnnotationProperty(schema:dateCreated))
Declaration(AnnotationProperty(schema:deliveryMethod))
Declaration(AnnotationProperty(schema:description))
Declaration(AnnotationProperty(schema:diet))
Declaration(AnnotationProperty(schema:disambiguatingDescription))
Declaration(AnnotationProperty(schema:diversityStaffingReport))
Declaration(AnnotationProperty(schema:domainIncludes))
Declaration(AnnotationProperty(schema:duns))
Declaration(AnnotationProperty(schema:duration))
Declaration(AnnotationProperty(schema:editEIDR))
Declaration(AnnotationProperty(schema:eligibleRegion))
Declaration(AnnotationProperty(schema:embeddedTextCaption))
Declaration(AnnotationProperty(schema:endorsee))
Declaration(AnnotationProperty(schema:entertainmentBusiness))
Declaration(AnnotationProperty(schema:episode))
Declaration(AnnotationProperty(schema:episodeNumber))
Declaration(AnnotationProperty(schema:exerciseCourse))
Declaration(AnnotationProperty(schema:exercisePlan))
Declaration(AnnotationProperty(schema:exerciseRelatedDiet))
Declaration(AnnotationProperty(schema:firstAppearance))
Declaration(AnnotationProperty(schema:flightNumber))
Declaration(AnnotationProperty(schema:followee))
Declaration(AnnotationProperty(schema:foodEstablishment))
Declaration(AnnotationProperty(schema:foodEvent))
Declaration(AnnotationProperty(schema:frequency))
Declaration(AnnotationProperty(schema:fromLocation))
Declaration(AnnotationProperty(schema:funder))
Declaration(AnnotationProperty(schema:genre))
Declaration(AnnotationProperty(schema:globalLocationNumber))
Declaration(AnnotationProperty(schema:gtin))
Declaration(AnnotationProperty(schema:gtin12))
Declaration(AnnotationProperty(schema:gtin13))
Declaration(AnnotationProperty(schema:gtin14))
Declaration(AnnotationProperty(schema:gtin8))
Declaration(AnnotationProperty(schema:hasBioPolymerSequence))
Declaration(AnnotationProperty(schema:hasCategoryCode))
Declaration(AnnotationProperty(schema:hasDefinedTerm))
Declaration(AnnotationProperty(schema:hasGS1DigitalLink))
Declaration(AnnotationProperty(schema:hasPart))
Declaration(AnnotationProperty(schema:hasRepresentation))
Declaration(AnnotationProperty(schema:homeLocation))
Declaration(AnnotationProperty(schema:homeTeam))
Declaration(AnnotationProperty(schema:identifier))
Declaration(AnnotationProperty(schema:image))
Declaration(AnnotationProperty(schema:inChI))
Declaration(AnnotationProperty(schema:inChIKey))
Declaration(AnnotationProperty(schema:inCodeSet))
Declaration(AnnotationProperty(schema:inDefinedTermSet))
Declaration(AnnotationProperty(schema:ingredients))
Declaration(AnnotationProperty(schema:instrument))
Declaration(AnnotationProperty(schema:interpretedAsClaim))
Declaration(AnnotationProperty(schema:inverseOf))
Declaration(AnnotationProperty(schema:isPartOf))
Declaration(AnnotationProperty(schema:isbn))
Declaration(AnnotationProperty(schema:issn))
Declaration(AnnotationProperty(schema:issueNumber))
Declaration(AnnotationProperty(schema:itemLocation))
Declaration(AnnotationProperty(schema:jurisdiction))
Declaration(AnnotationProperty(schema:landlord))
Declaration(AnnotationProperty(schema:language))
Declaration(AnnotationProperty(schema:layoutImage))
Declaration(AnnotationProperty(schema:legislationApplies))
Declaration(AnnotationProperty(schema:legislationDate))
Declaration(AnnotationProperty(schema:legislationIdentifier))
Declaration(AnnotationProperty(schema:legislationJurisdiction))
Declaration(AnnotationProperty(schema:legislationPassedBy))
Declaration(AnnotationProperty(schema:legislationTransposes))
Declaration(AnnotationProperty(schema:legislationType))
Declaration(AnnotationProperty(schema:leiCode))
Declaration(AnnotationProperty(schema:lender))
Declaration(AnnotationProperty(schema:loanTerm))
Declaration(AnnotationProperty(schema:location))
Declaration(AnnotationProperty(schema:logo))
Declaration(AnnotationProperty(schema:loser))
Declaration(AnnotationProperty(schema:mainEntity))
Declaration(AnnotationProperty(schema:masthead))
Declaration(AnnotationProperty(schema:material))
Declaration(AnnotationProperty(schema:measurementMethod))
Declaration(AnnotationProperty(schema:measurementTechnique))
Declaration(AnnotationProperty(schema:memberOf))
Declaration(AnnotationProperty(schema:missionCoveragePrioritiesPolicy))
Declaration(AnnotationProperty(schema:name))
Declaration(AnnotationProperty(schema:noBylinesPolicy))
Declaration(AnnotationProperty(schema:nsn))
Declaration(AnnotationProperty(schema:object))
Declaration(AnnotationProperty(schema:opponent))
Declaration(AnnotationProperty(schema:option))
Declaration(AnnotationProperty(schema:orderNumber))
Declaration(AnnotationProperty(schema:originalMediaContextDescription))
Declaration(AnnotationProperty(schema:ownershipFundingInfo))
Declaration(AnnotationProperty(schema:partOfEpisode))
Declaration(AnnotationProperty(schema:partOfSeason))
Declaration(AnnotationProperty(schema:partOfSeries))
Declaration(AnnotationProperty(schema:partOfTVSeries))
Declaration(AnnotationProperty(schema:participant))
Declaration(AnnotationProperty(schema:performTime))
Declaration(AnnotationProperty(schema:photo))
Declaration(AnnotationProperty(schema:position))
Declaration(AnnotationProperty(schema:productID))
Declaration(AnnotationProperty(schema:publishingPrinciples))
Declaration(AnnotationProperty(schema:query))
Declaration(AnnotationProperty(schema:question))
Declaration(AnnotationProperty(schema:rangeIncludes))
Declaration(AnnotationProperty(schema:readBy))
Declaration(AnnotationProperty(schema:realEstateAgent))
Declaration(AnnotationProperty(schema:recipe))
Declaration(AnnotationProperty(schema:recipeIngredient))
Declaration(AnnotationProperty(schema:recipeInstructions))
Declaration(AnnotationProperty(schema:recipeYield))
Declaration(AnnotationProperty(schema:recipient))
Declaration(AnnotationProperty(schema:repeatFrequency))
Declaration(AnnotationProperty(schema:replacee))
Declaration(AnnotationProperty(schema:replacer))
Declaration(AnnotationProperty(schema:result))
Declaration(AnnotationProperty(schema:resultComment))
Declaration(AnnotationProperty(schema:resultReview))
Declaration(AnnotationProperty(schema:sameAs))
Declaration(AnnotationProperty(schema:season))
Declaration(AnnotationProperty(schema:seasonNumber))
Declaration(AnnotationProperty(schema:seller))
Declaration(AnnotationProperty(schema:sender))
Declaration(AnnotationProperty(schema:serialNumber))
Declaration(AnnotationProperty(schema:sha256))
Declaration(AnnotationProperty(schema:sku))
Declaration(AnnotationProperty(schema:smiles))
Declaration(AnnotationProperty(schema:source))
Declaration(AnnotationProperty(schema:spatialCoverage))
Declaration(AnnotationProperty(schema:sponsor))
Declaration(AnnotationProperty(schema:sportsActivityLocation))
Declaration(AnnotationProperty(schema:sportsEvent))
Declaration(AnnotationProperty(schema:sportsTeam))
Declaration(AnnotationProperty(schema:step))
Declaration(AnnotationProperty(schema:suggestedAnswer))
Declaration(AnnotationProperty(schema:supersededBy))
Declaration(AnnotationProperty(schema:supply))
Declaration(AnnotationProperty(schema:surface))
Declaration(AnnotationProperty(schema:targetCollection))
Declaration(AnnotationProperty(schema:taxID))
Declaration(AnnotationProperty(schema:termCode))
Declaration(AnnotationProperty(schema:titleEIDR))
Declaration(AnnotationProperty(schema:toLocation))
Declaration(AnnotationProperty(schema:toRecipient))
Declaration(AnnotationProperty(schema:tocEntry))
Declaration(AnnotationProperty(schema:tool))
Declaration(AnnotationProperty(schema:unnamedSourcesPolicy))
Declaration(AnnotationProperty(schema:usNPI))
Declaration(AnnotationProperty(schema:usageInfo))
Declaration(AnnotationProperty(schema:vehicleIdentificationNumber))
Declaration(AnnotationProperty(schema:vendor))
Declaration(AnnotationProperty(schema:verificationFactCheckingPolicy))
Declaration(AnnotationProperty(schema:volumeNumber))
Declaration(AnnotationProperty(schema:winner))
Declaration(AnnotationProperty(schema:workExample))
Declaration(AnnotationProperty(schema:workFeatured))
Declaration(AnnotationProperty(schema:workLocation))
Declaration(AnnotationProperty(schema:workPerformed))
Declaration(AnnotationProperty(schema:workPresented))
Declaration(AnnotationProperty(schema:yield))
############################
#   Annotation Properties
############################

# Annotation Property: schema:about (about)

AnnotationAssertion(rdfs:comment schema:about "The subject matter of the content.")
AnnotationAssertion(rdfs:label schema:about "about")
AnnotationAssertion(schema:domainIncludes schema:about schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:about schema:CommunicateAction)
AnnotationAssertion(schema:domainIncludes schema:about schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:about schema:Event)
AnnotationAssertion(schema:inverseOf schema:about schema:subjectOf)
AnnotationAssertion(schema:rangeIncludes schema:about schema:Thing)
AnnotationAssertion(schema:source schema:about <https://github.com/schemaorg/schemaorg/issues/1670>)

# Annotation Property: schema:acceptedAnswer (acceptedAnswer)

AnnotationAssertion(rdfs:comment schema:acceptedAnswer "The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.")
AnnotationAssertion(rdfs:label schema:acceptedAnswer "acceptedAnswer")
AnnotationAssertion(schema:domainIncludes schema:acceptedAnswer schema:Question)
AnnotationAssertion(schema:rangeIncludes schema:acceptedAnswer schema:Answer)
AnnotationAssertion(schema:rangeIncludes schema:acceptedAnswer schema:ItemList)
SubAnnotationPropertyOf(schema:acceptedAnswer schema:suggestedAnswer)

# Annotation Property: schema:accommodationCategory (accommodationCategory)

AnnotationAssertion(rdfs:comment schema:accommodationCategory "Category of an [[Accommodation]], following real estate conventions, e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).")
AnnotationAssertion(rdfs:label schema:accommodationCategory "accommodationCategory")
AnnotationAssertion(schema:domainIncludes schema:accommodationCategory schema:Accommodation)
AnnotationAssertion(schema:isPartOf schema:accommodationCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:accommodationCategory schema:Text)
AnnotationAssertion(schema:source schema:accommodationCategory <https://github.com/schemaorg/schemaorg/issues/2373>)
SubAnnotationPropertyOf(schema:accommodationCategory schema:category)

# Annotation Property: schema:accountId (accountId)

AnnotationAssertion(rdfs:comment schema:accountId "The identifier for the account the payment will be applied to.")
AnnotationAssertion(rdfs:label schema:accountId "accountId")
AnnotationAssertion(schema:domainIncludes schema:accountId schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:accountId schema:Text)
SubAnnotationPropertyOf(schema:accountId schema:identifier)

# Annotation Property: schema:acquireLicensePage (acquireLicensePage)

AnnotationAssertion(rdfs:comment schema:acquireLicensePage "Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.")
AnnotationAssertion(rdfs:label schema:acquireLicensePage "acquireLicensePage")
AnnotationAssertion(schema:domainIncludes schema:acquireLicensePage schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:acquireLicensePage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:acquireLicensePage schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:acquireLicensePage schema:URL)
AnnotationAssertion(schema:source schema:acquireLicensePage <https://github.com/schemaorg/schemaorg/issues/2454>)
SubAnnotationPropertyOf(schema:acquireLicensePage schema:usageInfo)

# Annotation Property: schema:actionOption (actionOption)

AnnotationAssertion(rdfs:comment schema:actionOption "A sub property of object. The options subject to this action.")
AnnotationAssertion(rdfs:label schema:actionOption "actionOption")
AnnotationAssertion(schema:domainIncludes schema:actionOption schema:ChooseAction)
AnnotationAssertion(schema:rangeIncludes schema:actionOption schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:actionOption schema:Thing)
SubAnnotationPropertyOf(schema:actionOption schema:object)

# Annotation Property: schema:actionableFeedbackPolicy (actionableFeedbackPolicy)

AnnotationAssertion(rdfs:comment schema:actionableFeedbackPolicy "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.")
AnnotationAssertion(rdfs:label schema:actionableFeedbackPolicy "actionableFeedbackPolicy")
AnnotationAssertion(schema:contributor schema:actionableFeedbackPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:actionableFeedbackPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:actionableFeedbackPolicy schema:Organization)
AnnotationAssertion(schema:isPartOf schema:actionableFeedbackPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:actionableFeedbackPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:actionableFeedbackPolicy schema:URL)
AnnotationAssertion(schema:source schema:actionableFeedbackPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:actionableFeedbackPolicy schema:publishingPrinciples)

# Annotation Property: schema:actor (actor)

AnnotationAssertion(rdfs:comment schema:actor "An actor (individual or a group), e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.")
AnnotationAssertion(rdfs:label schema:actor "actor")
AnnotationAssertion(schema:domainIncludes schema:actor schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:actor schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:actor schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:actor schema:Event)
AnnotationAssertion(schema:domainIncludes schema:actor schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:actor schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:actor schema:PodcastSeries)
AnnotationAssertion(schema:domainIncludes schema:actor schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:actor schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:actor schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:actor schema:VideoGameSeries)
AnnotationAssertion(schema:domainIncludes schema:actor schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:actor schema:PerformingGroup)
AnnotationAssertion(schema:rangeIncludes schema:actor schema:Person)

# Annotation Property: schema:additionalName (additionalName)

AnnotationAssertion(rdfs:comment schema:additionalName "An additional name for a Person, can be used for a middle name.")
AnnotationAssertion(rdfs:label schema:additionalName "additionalName")
AnnotationAssertion(schema:domainIncludes schema:additionalName schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:additionalName schema:Text)
SubAnnotationPropertyOf(schema:additionalName schema:alternateName)

# Annotation Property: schema:additionalType (additionalType)

AnnotationAssertion(rdfs:comment schema:additionalType "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
    use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href=\"https://schema.org/docs/styleguide.html\">style guide</a>.")
AnnotationAssertion(rdfs:label schema:additionalType "additionalType")
AnnotationAssertion(schema:domainIncludes schema:additionalType schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:additionalType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:additionalType schema:URL)
SubAnnotationPropertyOf(schema:additionalType rdfs:type)

# Annotation Property: schema:affiliation (affiliation)

AnnotationAssertion(rdfs:comment schema:affiliation "An organization that this person is affiliated with. For example, a school/university, a club, or a team.")
AnnotationAssertion(rdfs:label schema:affiliation "affiliation")
AnnotationAssertion(schema:domainIncludes schema:affiliation schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:affiliation schema:Organization)
SubAnnotationPropertyOf(schema:affiliation schema:memberOf)

# Annotation Property: schema:alternateName (alternateName)

AnnotationAssertion(rdfs:comment schema:alternateName "An alias for the item.")
AnnotationAssertion(rdfs:label schema:alternateName "alternateName")
AnnotationAssertion(schema:domainIncludes schema:alternateName schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:alternateName schema:Text)

# Annotation Property: schema:announcementLocation (announcementLocation)

AnnotationAssertion(rdfs:comment schema:announcementLocation "Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use [[spatialCoverage]].")
AnnotationAssertion(rdfs:label schema:announcementLocation "announcementLocation")
AnnotationAssertion(schema:domainIncludes schema:announcementLocation schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:announcementLocation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:announcementLocation schema:CivicStructure)
AnnotationAssertion(schema:rangeIncludes schema:announcementLocation schema:LocalBusiness)
AnnotationAssertion(schema:source schema:announcementLocation <https://github.com/schemaorg/schemaorg/issues/2514>)
SubAnnotationPropertyOf(schema:announcementLocation schema:spatialCoverage)

# Annotation Property: schema:appearance (appearance)

AnnotationAssertion(rdfs:comment schema:appearance "Indicates an occurrence of a [[Claim]] in some [[CreativeWork]].")
AnnotationAssertion(rdfs:label schema:appearance "appearance")
AnnotationAssertion(schema:domainIncludes schema:appearance schema:Claim)
AnnotationAssertion(schema:isPartOf schema:appearance <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:appearance schema:CreativeWork)
AnnotationAssertion(schema:source schema:appearance <https://github.com/schemaorg/schemaorg/issues/1828>)
SubAnnotationPropertyOf(schema:appearance schema:workExample)

# Annotation Property: schema:areaServed (areaServed)

AnnotationAssertion(rdfs:comment schema:areaServed "The geographic area where a service or offered item is provided.")
AnnotationAssertion(rdfs:label schema:areaServed "areaServed")
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:DeliveryChargeSpecification)
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:areaServed schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:areaServed schema:AdministrativeArea)
AnnotationAssertion(schema:rangeIncludes schema:areaServed schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:areaServed schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:areaServed schema:Text)

# Annotation Property: schema:artMedium (artMedium)

AnnotationAssertion(rdfs:comment schema:artMedium "The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)")
AnnotationAssertion(rdfs:label schema:artMedium "artMedium")
AnnotationAssertion(schema:domainIncludes schema:artMedium schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:artMedium schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:artMedium schema:URL)
SubAnnotationPropertyOf(schema:artMedium schema:material)

# Annotation Property: schema:asin (asin)

AnnotationAssertion(rdfs:comment schema:asin "An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).

Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.")
AnnotationAssertion(rdfs:label schema:asin "asin")
AnnotationAssertion(schema:domainIncludes schema:asin schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:asin schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:asin schema:Product)
AnnotationAssertion(schema:isPartOf schema:asin <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:asin schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:asin schema:URL)
AnnotationAssertion(schema:source schema:asin <https://github.com/schemaorg/schemaorg/issues/2288>)
SubAnnotationPropertyOf(schema:asin schema:identifier)

# Annotation Property: schema:associatedClaimReview (associatedClaimReview)

AnnotationAssertion(rdfs:comment schema:associatedClaimReview "An associated [[ClaimReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].")
AnnotationAssertion(rdfs:label schema:associatedClaimReview "associatedClaimReview")
AnnotationAssertion(schema:domainIncludes schema:associatedClaimReview schema:Review)
AnnotationAssertion(schema:isPartOf schema:associatedClaimReview <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedClaimReview schema:Review)
AnnotationAssertion(schema:source schema:associatedClaimReview <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:associatedClaimReview schema:associatedReview)

# Annotation Property: schema:associatedMediaReview (associatedMediaReview)

AnnotationAssertion(rdfs:comment schema:associatedMediaReview "An associated [[MediaReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].")
AnnotationAssertion(rdfs:label schema:associatedMediaReview "associatedMediaReview")
AnnotationAssertion(schema:domainIncludes schema:associatedMediaReview schema:Review)
AnnotationAssertion(schema:isPartOf schema:associatedMediaReview <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedMediaReview schema:Review)
AnnotationAssertion(schema:source schema:associatedMediaReview <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:associatedMediaReview schema:associatedReview)

# Annotation Property: schema:associatedReview (associatedReview)

AnnotationAssertion(rdfs:comment schema:associatedReview "An associated [[Review]].")
AnnotationAssertion(rdfs:label schema:associatedReview "associatedReview")
AnnotationAssertion(schema:domainIncludes schema:associatedReview schema:Review)
AnnotationAssertion(schema:isPartOf schema:associatedReview <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedReview schema:Review)
AnnotationAssertion(schema:source schema:associatedReview <https://github.com/schemaorg/schemaorg/issues/2450>)

# Annotation Property: schema:availableAtOrFrom (availableAtOrFrom)

AnnotationAssertion(rdfs:comment schema:availableAtOrFrom "The place(s) from which the offer can be obtained (e.g. store locations).")
AnnotationAssertion(rdfs:label schema:availableAtOrFrom "availableAtOrFrom")
AnnotationAssertion(schema:contributor schema:availableAtOrFrom <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:availableAtOrFrom schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:availableAtOrFrom schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:availableAtOrFrom schema:Place)
SubAnnotationPropertyOf(schema:availableAtOrFrom schema:areaServed)

# Annotation Property: schema:awayTeam (awayTeam)

AnnotationAssertion(rdfs:comment schema:awayTeam "The away team in a sports event.")
AnnotationAssertion(rdfs:label schema:awayTeam "awayTeam")
AnnotationAssertion(schema:domainIncludes schema:awayTeam schema:SportsEvent)
AnnotationAssertion(schema:rangeIncludes schema:awayTeam schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:awayTeam schema:SportsTeam)
SubAnnotationPropertyOf(schema:awayTeam schema:competitor)

# Annotation Property: schema:bccRecipient (bccRecipient)

AnnotationAssertion(rdfs:comment schema:bccRecipient "A sub property of recipient. The recipient blind copied on a message.")
AnnotationAssertion(rdfs:label schema:bccRecipient "bccRecipient")
AnnotationAssertion(schema:domainIncludes schema:bccRecipient schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:bccRecipient schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:bccRecipient schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:bccRecipient schema:Person)
SubAnnotationPropertyOf(schema:bccRecipient schema:recipient)

# Annotation Property: schema:borrower (borrower)

AnnotationAssertion(rdfs:comment schema:borrower "A sub property of participant. The person that borrows the object being lent.")
AnnotationAssertion(rdfs:label schema:borrower "borrower")
AnnotationAssertion(schema:domainIncludes schema:borrower schema:LendAction)
AnnotationAssertion(schema:rangeIncludes schema:borrower schema:Person)
SubAnnotationPropertyOf(schema:borrower schema:participant)

# Annotation Property: schema:buyer (buyer)

AnnotationAssertion(rdfs:comment schema:buyer "A sub property of participant. The participant/person/organization that bought the object.")
AnnotationAssertion(rdfs:label schema:buyer "buyer")
AnnotationAssertion(schema:domainIncludes schema:buyer schema:SellAction)
AnnotationAssertion(schema:rangeIncludes schema:buyer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:buyer schema:Person)
SubAnnotationPropertyOf(schema:buyer schema:participant)

# Annotation Property: schema:callSign (callSign)

AnnotationAssertion(rdfs:comment schema:callSign "A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.")
AnnotationAssertion(rdfs:label schema:callSign "callSign")
AnnotationAssertion(schema:domainIncludes schema:callSign schema:BroadcastService)
AnnotationAssertion(schema:domainIncludes schema:callSign schema:Person)
AnnotationAssertion(schema:domainIncludes schema:callSign schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:callSign <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:callSign schema:Text)
AnnotationAssertion(schema:source schema:callSign <https://github.com/schemaorg/schemaorg/issues/2109>)
SubAnnotationPropertyOf(schema:callSign schema:identifier)

# Annotation Property: schema:candidate (candidate)

AnnotationAssertion(rdfs:comment schema:candidate "A sub property of object. The candidate subject of this action.")
AnnotationAssertion(rdfs:label schema:candidate "candidate")
AnnotationAssertion(schema:domainIncludes schema:candidate schema:VoteAction)
AnnotationAssertion(schema:rangeIncludes schema:candidate schema:Person)
SubAnnotationPropertyOf(schema:candidate schema:object)

# Annotation Property: schema:caption (caption)

AnnotationAssertion(rdfs:comment schema:caption "The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the [[encodingFormat]].")
AnnotationAssertion(rdfs:label schema:caption "caption")
AnnotationAssertion(schema:domainIncludes schema:caption schema:AudioObject)
AnnotationAssertion(schema:domainIncludes schema:caption schema:ImageObject)
AnnotationAssertion(schema:domainIncludes schema:caption schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:caption schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:caption schema:Text)

# Annotation Property: schema:category (category)

AnnotationAssertion(rdfs:comment schema:category "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.")
AnnotationAssertion(rdfs:label schema:category "category")
AnnotationAssertion(schema:domainIncludes schema:category schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:category schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:category schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:category schema:PhysicalActivity)
AnnotationAssertion(schema:domainIncludes schema:category schema:Product)
AnnotationAssertion(schema:domainIncludes schema:category schema:Recommendation)
AnnotationAssertion(schema:domainIncludes schema:category schema:Service)
AnnotationAssertion(schema:domainIncludes schema:category schema:SpecialAnnouncement)
AnnotationAssertion(schema:rangeIncludes schema:category schema:CategoryCode)
AnnotationAssertion(schema:rangeIncludes schema:category schema:PhysicalActivityCategory)
AnnotationAssertion(schema:rangeIncludes schema:category schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:category schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:category schema:URL)
AnnotationAssertion(schema:source schema:category <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(schema:source schema:category <https://github.com/schemaorg/schemaorg/issues/2490>)

# Annotation Property: schema:ccRecipient (ccRecipient)

AnnotationAssertion(rdfs:comment schema:ccRecipient "A sub property of recipient. The recipient copied on a message.")
AnnotationAssertion(rdfs:label schema:ccRecipient "ccRecipient")
AnnotationAssertion(schema:domainIncludes schema:ccRecipient schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:ccRecipient schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:ccRecipient schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:ccRecipient schema:Person)
SubAnnotationPropertyOf(schema:ccRecipient schema:recipient)

# Annotation Property: schema:clipNumber (clipNumber)

AnnotationAssertion(rdfs:comment schema:clipNumber "Position of the clip within an ordered group of clips.")
AnnotationAssertion(rdfs:label schema:clipNumber "clipNumber")
AnnotationAssertion(schema:domainIncludes schema:clipNumber schema:Clip)
AnnotationAssertion(schema:rangeIncludes schema:clipNumber schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:clipNumber schema:Text)
SubAnnotationPropertyOf(schema:clipNumber schema:position)

# Annotation Property: schema:codeValue (codeValue)

AnnotationAssertion(rdfs:comment schema:codeValue "A short textual code that uniquely identifies the value.")
AnnotationAssertion(rdfs:label schema:codeValue "codeValue")
AnnotationAssertion(schema:domainIncludes schema:codeValue schema:CategoryCode)
AnnotationAssertion(schema:domainIncludes schema:codeValue schema:MedicalCode)
AnnotationAssertion(schema:isPartOf schema:codeValue <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:codeValue schema:Text)
AnnotationAssertion(schema:source schema:codeValue <https://github.com/schemaorg/schemaorg/issues/894>)
SubAnnotationPropertyOf(schema:codeValue schema:termCode)

# Annotation Property: schema:collection (collection)

AnnotationAssertion(rdfs:comment schema:collection "A sub property of object. The collection target of the action.")
AnnotationAssertion(rdfs:label schema:collection "collection")
AnnotationAssertion(schema:domainIncludes schema:collection schema:UpdateAction)
AnnotationAssertion(schema:rangeIncludes schema:collection schema:Thing)
AnnotationAssertion(schema:supersededBy schema:collection schema:targetCollection)
SubAnnotationPropertyOf(schema:collection schema:object)

# Annotation Property: schema:colorSwatch (colorSwatch)

AnnotationAssertion(rdfs:comment schema:colorSwatch "A color swatch image, visualizing the color of a [[Product]]. Should match the textual description specified in the [[color]] property. This can be a URL or a fully described ImageObject.")
AnnotationAssertion(rdfs:label schema:colorSwatch "colorSwatch")
AnnotationAssertion(schema:domainIncludes schema:colorSwatch schema:Product)
AnnotationAssertion(schema:isPartOf schema:colorSwatch <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:colorSwatch schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:colorSwatch schema:URL)
AnnotationAssertion(schema:source schema:colorSwatch <https://github.com/schemaorg/schemaorg/issues/3423>)
SubAnnotationPropertyOf(schema:colorSwatch schema:image)

# Annotation Property: schema:competitor (competitor)

AnnotationAssertion(rdfs:comment schema:competitor "A competitor in a sports event.")
AnnotationAssertion(rdfs:label schema:competitor "competitor")
AnnotationAssertion(schema:domainIncludes schema:competitor schema:SportsEvent)
AnnotationAssertion(schema:rangeIncludes schema:competitor schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:competitor schema:SportsTeam)

# Annotation Property: schema:confirmationNumber (confirmationNumber)

AnnotationAssertion(rdfs:comment schema:confirmationNumber "A number that confirms the given order or payment has been received.")
AnnotationAssertion(rdfs:label schema:confirmationNumber "confirmationNumber")
AnnotationAssertion(schema:domainIncludes schema:confirmationNumber schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:confirmationNumber schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:confirmationNumber schema:Text)
SubAnnotationPropertyOf(schema:confirmationNumber schema:identifier)

# Annotation Property: schema:containsSeason (containsSeason)

AnnotationAssertion(rdfs:comment schema:containsSeason "A season that is part of the media series.")
AnnotationAssertion(rdfs:label schema:containsSeason "containsSeason")
AnnotationAssertion(schema:domainIncludes schema:containsSeason schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:containsSeason schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:containsSeason schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:containsSeason schema:CreativeWorkSeason)
SubAnnotationPropertyOf(schema:containsSeason schema:hasPart)

# Annotation Property: schema:contentLocation (contentLocation)

AnnotationAssertion(rdfs:comment schema:contentLocation "The location depicted or described in the content. For example, the location in a photograph or painting.")
AnnotationAssertion(rdfs:label schema:contentLocation "contentLocation")
AnnotationAssertion(schema:domainIncludes schema:contentLocation schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:contentLocation schema:Place)

# Annotation Property: schema:contributor (contributor)

AnnotationAssertion(rdfs:comment schema:contributor "A secondary contributor to the CreativeWork or Event.")
AnnotationAssertion(rdfs:label schema:contributor "contributor")
AnnotationAssertion(schema:domainIncludes schema:contributor schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:contributor schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:contributor schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:contributor schema:Person)

# Annotation Property: schema:cookTime (cookTime)

AnnotationAssertion(rdfs:comment schema:cookTime "The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:cookTime "cookTime")
AnnotationAssertion(schema:domainIncludes schema:cookTime schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:cookTime schema:Duration)
SubAnnotationPropertyOf(schema:cookTime schema:performTime)

# Annotation Property: schema:correctionsPolicy (correctionsPolicy)

AnnotationAssertion(rdfs:comment schema:correctionsPolicy "For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.")
AnnotationAssertion(rdfs:label schema:correctionsPolicy "correctionsPolicy")
AnnotationAssertion(schema:contributor schema:correctionsPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:correctionsPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:correctionsPolicy schema:Organization)
AnnotationAssertion(schema:isPartOf schema:correctionsPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:correctionsPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:correctionsPolicy schema:URL)
AnnotationAssertion(schema:source schema:correctionsPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:correctionsPolicy schema:publishingPrinciples)

# Annotation Property: schema:course (course)

AnnotationAssertion(rdfs:comment schema:course "A sub property of location. The course where this action was taken.")
AnnotationAssertion(rdfs:label schema:course "course")
AnnotationAssertion(schema:domainIncludes schema:course schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:course schema:Place)
AnnotationAssertion(schema:supersededBy schema:course schema:exerciseCourse)
SubAnnotationPropertyOf(schema:course schema:location)

# Annotation Property: schema:creator (creator)

AnnotationAssertion(rdfs:comment schema:creator "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.")
AnnotationAssertion(rdfs:label schema:creator "creator")
AnnotationAssertion(schema:domainIncludes schema:creator schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:creator schema:UserComments)
AnnotationAssertion(schema:rangeIncludes schema:creator schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:creator schema:Person)

# Annotation Property: schema:dateCreated (dateCreated)

AnnotationAssertion(rdfs:comment schema:dateCreated "The date on which the CreativeWork was created or the item was added to a DataFeed.")
AnnotationAssertion(rdfs:label schema:dateCreated "dateCreated")
AnnotationAssertion(schema:domainIncludes schema:dateCreated schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:dateCreated schema:DataFeedItem)
AnnotationAssertion(schema:rangeIncludes schema:dateCreated schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:dateCreated schema:DateTime)

# Annotation Property: schema:deliveryMethod (deliveryMethod)

AnnotationAssertion(rdfs:comment schema:deliveryMethod "A sub property of instrument. The method of delivery.")
AnnotationAssertion(rdfs:label schema:deliveryMethod "deliveryMethod")
AnnotationAssertion(schema:domainIncludes schema:deliveryMethod schema:OrderAction)
AnnotationAssertion(schema:domainIncludes schema:deliveryMethod schema:ReceiveAction)
AnnotationAssertion(schema:domainIncludes schema:deliveryMethod schema:SendAction)
AnnotationAssertion(schema:domainIncludes schema:deliveryMethod schema:TrackAction)
AnnotationAssertion(schema:rangeIncludes schema:deliveryMethod schema:DeliveryMethod)
SubAnnotationPropertyOf(schema:deliveryMethod schema:instrument)

# Annotation Property: schema:description (description)

AnnotationAssertion(rdfs:comment schema:description "A description of the item.")
AnnotationAssertion(rdfs:label schema:description "description")
AnnotationAssertion(schema:domainIncludes schema:description schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:description schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:description schema:TextObject)

# Annotation Property: schema:diet (diet)

AnnotationAssertion(rdfs:comment schema:diet "A sub property of instrument. The diet used in this action.")
AnnotationAssertion(rdfs:label schema:diet "diet")
AnnotationAssertion(schema:domainIncludes schema:diet schema:ExerciseAction)
AnnotationAssertion(schema:isPartOf schema:diet <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diet schema:Diet)
SubAnnotationPropertyOf(schema:diet schema:instrument)

# Annotation Property: schema:disambiguatingDescription (disambiguatingDescription)

AnnotationAssertion(rdfs:comment schema:disambiguatingDescription "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.")
AnnotationAssertion(rdfs:label schema:disambiguatingDescription "disambiguatingDescription")
AnnotationAssertion(schema:domainIncludes schema:disambiguatingDescription schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:disambiguatingDescription schema:Text)
SubAnnotationPropertyOf(schema:disambiguatingDescription schema:description)

# Annotation Property: schema:diversityStaffingReport (diversityStaffingReport)

AnnotationAssertion(rdfs:comment schema:diversityStaffingReport "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.")
AnnotationAssertion(rdfs:label schema:diversityStaffingReport "diversityStaffingReport")
AnnotationAssertion(schema:contributor schema:diversityStaffingReport <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:diversityStaffingReport schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:diversityStaffingReport schema:Organization)
AnnotationAssertion(schema:isPartOf schema:diversityStaffingReport <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diversityStaffingReport schema:Article)
AnnotationAssertion(schema:rangeIncludes schema:diversityStaffingReport schema:URL)
AnnotationAssertion(schema:source schema:diversityStaffingReport <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:diversityStaffingReport schema:publishingPrinciples)

# Annotation Property: schema:domainIncludes (domainIncludes)

AnnotationAssertion(rdfs:comment schema:domainIncludes "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.")
AnnotationAssertion(rdfs:label schema:domainIncludes "domainIncludes")
AnnotationAssertion(schema:domainIncludes schema:domainIncludes schema:Property)
AnnotationAssertion(schema:isPartOf schema:domainIncludes <https://meta.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:domainIncludes schema:Class)

# Annotation Property: schema:duns (duns)

AnnotationAssertion(rdfs:comment schema:duns "The Dun & Bradstreet DUNS number for identifying an organization or business person.")
AnnotationAssertion(rdfs:label schema:duns "duns")
AnnotationAssertion(schema:contributor schema:duns <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:duns schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:duns schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:duns schema:Text)
SubAnnotationPropertyOf(schema:duns schema:identifier)

# Annotation Property: schema:duration (duration)

AnnotationAssertion(rdfs:comment schema:duration "The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:duration "duration")
AnnotationAssertion(schema:domainIncludes schema:duration schema:Audiobook)
AnnotationAssertion(schema:domainIncludes schema:duration schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:duration schema:Event)
AnnotationAssertion(schema:domainIncludes schema:duration schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:duration schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:duration schema:MusicRecording)
AnnotationAssertion(schema:domainIncludes schema:duration schema:MusicRelease)
AnnotationAssertion(schema:domainIncludes schema:duration schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:domainIncludes schema:duration schema:Schedule)
AnnotationAssertion(schema:rangeIncludes schema:duration schema:Duration)
AnnotationAssertion(schema:source schema:duration <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(schema:source schema:duration <https://github.com/schemaorg/schemaorg/issues/1698>)

# Annotation Property: schema:editEIDR (editEIDR)

AnnotationAssertion(rdfs:comment schema:editEIDR "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing a specific edit / edition for a work of film or television.

For example, the motion picture known as \"Ghostbusters\" whose [[titleEIDR]] is \"10.5240/7EC7-228A-510A-053E-CBB8-J\" has several edits, e.g. \"10.5240/1F2A-E1C5-680A-14C6-E76B-I\" and \"10.5240/8A35-3BEE-6497-5D12-9E4F-3\".

Since schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.
")
AnnotationAssertion(rdfs:label schema:editEIDR "editEIDR")
AnnotationAssertion(schema:domainIncludes schema:editEIDR schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:editEIDR <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:editEIDR schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:editEIDR schema:URL)
AnnotationAssertion(schema:source schema:editEIDR <https://github.com/schemaorg/schemaorg/issues/2469>)
SubAnnotationPropertyOf(schema:editEIDR schema:identifier)

# Annotation Property: schema:eligibleRegion (eligibleRegion)

AnnotationAssertion(rdfs:comment schema:eligibleRegion "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\\n\\nSee also [[ineligibleRegion]].
    ")
AnnotationAssertion(rdfs:label schema:eligibleRegion "eligibleRegion")
AnnotationAssertion(schema:contributor schema:eligibleRegion <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:eligibleRegion schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:eligibleRegion schema:DeliveryChargeSpecification)
AnnotationAssertion(schema:domainIncludes schema:eligibleRegion schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:eligibleRegion schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:eligibleRegion schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:eligibleRegion schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:eligibleRegion schema:Text)
AnnotationAssertion(schema:source schema:eligibleRegion <https://github.com/schemaorg/schemaorg/issues/1741>)
SubAnnotationPropertyOf(schema:eligibleRegion schema:areaServed)

# Annotation Property: schema:embeddedTextCaption (embeddedTextCaption)

AnnotationAssertion(rdfs:comment schema:embeddedTextCaption "Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.")
AnnotationAssertion(rdfs:label schema:embeddedTextCaption "embeddedTextCaption")
AnnotationAssertion(schema:domainIncludes schema:embeddedTextCaption schema:AudioObject)
AnnotationAssertion(schema:domainIncludes schema:embeddedTextCaption schema:ImageObject)
AnnotationAssertion(schema:domainIncludes schema:embeddedTextCaption schema:VideoObject)
AnnotationAssertion(schema:isPartOf schema:embeddedTextCaption <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:embeddedTextCaption schema:Text)
AnnotationAssertion(schema:source schema:embeddedTextCaption <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:embeddedTextCaption schema:caption)

# Annotation Property: schema:endorsee (endorsee)

AnnotationAssertion(rdfs:comment schema:endorsee "A sub property of participant. The person/organization being supported.")
AnnotationAssertion(rdfs:label schema:endorsee "endorsee")
AnnotationAssertion(schema:domainIncludes schema:endorsee schema:EndorseAction)
AnnotationAssertion(schema:rangeIncludes schema:endorsee schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:endorsee schema:Person)
SubAnnotationPropertyOf(schema:endorsee schema:participant)

# Annotation Property: schema:entertainmentBusiness (entertainmentBusiness)

AnnotationAssertion(rdfs:comment schema:entertainmentBusiness "A sub property of location. The entertainment business where the action occurred.")
AnnotationAssertion(rdfs:label schema:entertainmentBusiness "entertainmentBusiness")
AnnotationAssertion(schema:domainIncludes schema:entertainmentBusiness schema:PerformAction)
AnnotationAssertion(schema:rangeIncludes schema:entertainmentBusiness schema:EntertainmentBusiness)
SubAnnotationPropertyOf(schema:entertainmentBusiness schema:location)

# Annotation Property: schema:episode (episode)

AnnotationAssertion(rdfs:comment schema:episode "An episode of a TV, radio or game media within a series or season.")
AnnotationAssertion(rdfs:label schema:episode "episode")
AnnotationAssertion(schema:domainIncludes schema:episode schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:episode schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:episode schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:episode schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:episode schema:Episode)
SubAnnotationPropertyOf(schema:episode schema:hasPart)

# Annotation Property: schema:episodeNumber (episodeNumber)

AnnotationAssertion(rdfs:comment schema:episodeNumber "Position of the episode within an ordered group of episodes.")
AnnotationAssertion(rdfs:label schema:episodeNumber "episodeNumber")
AnnotationAssertion(schema:domainIncludes schema:episodeNumber schema:Episode)
AnnotationAssertion(schema:rangeIncludes schema:episodeNumber schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:episodeNumber schema:Text)
SubAnnotationPropertyOf(schema:episodeNumber schema:position)

# Annotation Property: schema:exerciseCourse (exerciseCourse)

AnnotationAssertion(rdfs:comment schema:exerciseCourse "A sub property of location. The course where this action was taken.")
AnnotationAssertion(rdfs:label schema:exerciseCourse "exerciseCourse")
AnnotationAssertion(schema:domainIncludes schema:exerciseCourse schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:exerciseCourse schema:Place)
SubAnnotationPropertyOf(schema:exerciseCourse schema:location)

# Annotation Property: schema:exercisePlan (exercisePlan)

AnnotationAssertion(rdfs:comment schema:exercisePlan "A sub property of instrument. The exercise plan used on this action.")
AnnotationAssertion(rdfs:label schema:exercisePlan "exercisePlan")
AnnotationAssertion(schema:domainIncludes schema:exercisePlan schema:ExerciseAction)
AnnotationAssertion(schema:isPartOf schema:exercisePlan <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:exercisePlan schema:ExercisePlan)
SubAnnotationPropertyOf(schema:exercisePlan schema:instrument)

# Annotation Property: schema:exerciseRelatedDiet (exerciseRelatedDiet)

AnnotationAssertion(rdfs:comment schema:exerciseRelatedDiet "A sub property of instrument. The diet used in this action.")
AnnotationAssertion(rdfs:label schema:exerciseRelatedDiet "exerciseRelatedDiet")
AnnotationAssertion(schema:domainIncludes schema:exerciseRelatedDiet schema:ExerciseAction)
AnnotationAssertion(schema:isPartOf schema:exerciseRelatedDiet <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:exerciseRelatedDiet schema:Diet)
SubAnnotationPropertyOf(schema:exerciseRelatedDiet schema:instrument)

# Annotation Property: schema:firstAppearance (firstAppearance)

AnnotationAssertion(rdfs:comment schema:firstAppearance "Indicates the first known occurrence of a [[Claim]] in some [[CreativeWork]].")
AnnotationAssertion(rdfs:label schema:firstAppearance "firstAppearance")
AnnotationAssertion(schema:domainIncludes schema:firstAppearance schema:Claim)
AnnotationAssertion(schema:isPartOf schema:firstAppearance <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:firstAppearance schema:CreativeWork)
AnnotationAssertion(schema:source schema:firstAppearance <https://github.com/schemaorg/schemaorg/issues/1828>)
SubAnnotationPropertyOf(schema:firstAppearance schema:workExample)

# Annotation Property: schema:flightNumber (flightNumber)

AnnotationAssertion(rdfs:comment schema:flightNumber "The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.")
AnnotationAssertion(rdfs:label schema:flightNumber "flightNumber")
AnnotationAssertion(schema:domainIncludes schema:flightNumber schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:flightNumber schema:Text)
SubAnnotationPropertyOf(schema:flightNumber schema:identifier)

# Annotation Property: schema:followee (followee)

AnnotationAssertion(rdfs:comment schema:followee "A sub property of object. The person or organization being followed.")
AnnotationAssertion(rdfs:label schema:followee "followee")
AnnotationAssertion(schema:domainIncludes schema:followee schema:FollowAction)
AnnotationAssertion(schema:rangeIncludes schema:followee schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:followee schema:Person)
SubAnnotationPropertyOf(schema:followee schema:object)

# Annotation Property: schema:foodEstablishment (foodEstablishment)

AnnotationAssertion(rdfs:comment schema:foodEstablishment "A sub property of location. The specific food establishment where the action occurred.")
AnnotationAssertion(rdfs:label schema:foodEstablishment "foodEstablishment")
AnnotationAssertion(schema:domainIncludes schema:foodEstablishment schema:CookAction)
AnnotationAssertion(schema:rangeIncludes schema:foodEstablishment schema:FoodEstablishment)
AnnotationAssertion(schema:rangeIncludes schema:foodEstablishment schema:Place)
SubAnnotationPropertyOf(schema:foodEstablishment schema:location)

# Annotation Property: schema:foodEvent (foodEvent)

AnnotationAssertion(rdfs:comment schema:foodEvent "A sub property of location. The specific food event where the action occurred.")
AnnotationAssertion(rdfs:label schema:foodEvent "foodEvent")
AnnotationAssertion(schema:domainIncludes schema:foodEvent schema:CookAction)
AnnotationAssertion(schema:rangeIncludes schema:foodEvent schema:FoodEvent)
SubAnnotationPropertyOf(schema:foodEvent schema:location)

# Annotation Property: schema:frequency (frequency)

AnnotationAssertion(rdfs:comment schema:frequency "How often the dose is taken, e.g. 'daily'.")
AnnotationAssertion(rdfs:label schema:frequency "frequency")
AnnotationAssertion(schema:domainIncludes schema:frequency schema:DoseSchedule)
AnnotationAssertion(schema:isPartOf schema:frequency <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:frequency schema:Text)

# Annotation Property: schema:fromLocation (fromLocation)

AnnotationAssertion(rdfs:comment schema:fromLocation "A sub property of location. The original location of the object or the agent before the action.")
AnnotationAssertion(rdfs:label schema:fromLocation "fromLocation")
AnnotationAssertion(schema:domainIncludes schema:fromLocation schema:ExerciseAction)
AnnotationAssertion(schema:domainIncludes schema:fromLocation schema:MoveAction)
AnnotationAssertion(schema:domainIncludes schema:fromLocation schema:TransferAction)
AnnotationAssertion(schema:rangeIncludes schema:fromLocation schema:Place)
SubAnnotationPropertyOf(schema:fromLocation schema:location)

# Annotation Property: schema:funder (funder)

AnnotationAssertion(rdfs:comment schema:funder "A person or organization that supports (sponsors) something through some kind of financial contribution.")
AnnotationAssertion(rdfs:label schema:funder "funder")
AnnotationAssertion(schema:domainIncludes schema:funder schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:funder schema:Event)
AnnotationAssertion(schema:domainIncludes schema:funder schema:Grant)
AnnotationAssertion(schema:domainIncludes schema:funder schema:MonetaryGrant)
AnnotationAssertion(schema:domainIncludes schema:funder schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:funder schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:funder schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:funder schema:Person)
SubAnnotationPropertyOf(schema:funder schema:sponsor)

# Annotation Property: schema:genre (genre)

AnnotationAssertion(rdfs:comment schema:genre "Genre of the creative work, broadcast channel or group.")
AnnotationAssertion(rdfs:label schema:genre "genre")
AnnotationAssertion(schema:domainIncludes schema:genre schema:BroadcastChannel)
AnnotationAssertion(schema:domainIncludes schema:genre schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:genre schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:genre schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:genre schema:URL)

# Annotation Property: schema:globalLocationNumber (globalLocationNumber)

AnnotationAssertion(rdfs:comment schema:globalLocationNumber "The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.")
AnnotationAssertion(rdfs:label schema:globalLocationNumber "globalLocationNumber")
AnnotationAssertion(schema:contributor schema:globalLocationNumber <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:globalLocationNumber schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:globalLocationNumber schema:Person)
AnnotationAssertion(schema:domainIncludes schema:globalLocationNumber schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:globalLocationNumber schema:Text)
SubAnnotationPropertyOf(schema:globalLocationNumber schema:identifier)

# Annotation Property: schema:gtin (gtin)

AnnotationAssertion(rdfs:comment schema:gtin "A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.

A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a \"GS1 Digital Link\" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.

The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) expresses GTINs as URLs (URIs, IRIs, etc.).
Digital Links should be populated into the [[hasGS1DigitalLink]] attribute.

Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.")
AnnotationAssertion(rdfs:label schema:gtin "gtin")
AnnotationAssertion(schema:domainIncludes schema:gtin schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:gtin schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:gtin schema:Product)
AnnotationAssertion(schema:isPartOf schema:gtin <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:gtin schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:gtin schema:URL)
AnnotationAssertion(schema:source schema:gtin <https://github.com/schemaorg/schemaorg/issues/2288>)
SubAnnotationPropertyOf(schema:gtin schema:identifier)

# Annotation Property: schema:gtin12 (gtin12)

AnnotationAssertion(rdfs:comment schema:gtin12 "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.")
AnnotationAssertion(rdfs:label schema:gtin12 "gtin12")
AnnotationAssertion(schema:domainIncludes schema:gtin12 schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:gtin12 schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:gtin12 schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:gtin12 schema:Text)
SubAnnotationPropertyOf(schema:gtin12 schema:gtin)
SubAnnotationPropertyOf(schema:gtin12 schema:identifier)

# Annotation Property: schema:gtin13 (gtin13)

AnnotationAssertion(rdfs:comment schema:gtin13 "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.")
AnnotationAssertion(rdfs:label schema:gtin13 "gtin13")
AnnotationAssertion(schema:contributor schema:gtin13 <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:gtin13 schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:gtin13 schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:gtin13 schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:gtin13 schema:Text)
SubAnnotationPropertyOf(schema:gtin13 schema:gtin)
SubAnnotationPropertyOf(schema:gtin13 schema:identifier)

# Annotation Property: schema:gtin14 (gtin14)

AnnotationAssertion(rdfs:comment schema:gtin14 "The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.")
AnnotationAssertion(rdfs:label schema:gtin14 "gtin14")
AnnotationAssertion(schema:contributor schema:gtin14 <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:gtin14 schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:gtin14 schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:gtin14 schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:gtin14 schema:Text)
SubAnnotationPropertyOf(schema:gtin14 schema:gtin)
SubAnnotationPropertyOf(schema:gtin14 schema:identifier)

# Annotation Property: schema:gtin8 (gtin8)

AnnotationAssertion(rdfs:comment schema:gtin8 "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.")
AnnotationAssertion(rdfs:label schema:gtin8 "gtin8")
AnnotationAssertion(schema:contributor schema:gtin8 <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:gtin8 schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:gtin8 schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:gtin8 schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:gtin8 schema:Text)
SubAnnotationPropertyOf(schema:gtin8 schema:gtin)
SubAnnotationPropertyOf(schema:gtin8 schema:identifier)

# Annotation Property: schema:hasBioPolymerSequence (hasBioPolymerSequence)

AnnotationAssertion(rdfs:comment schema:hasBioPolymerSequence "A symbolic representation of a BioChemEntity. For example, a nucleotide sequence of a Gene or an amino acid sequence of a Protein.")
AnnotationAssertion(rdfs:label schema:hasBioPolymerSequence "hasBioPolymerSequence")
AnnotationAssertion(schema:domainIncludes schema:hasBioPolymerSequence schema:Gene)
AnnotationAssertion(schema:domainIncludes schema:hasBioPolymerSequence schema:Protein)
AnnotationAssertion(schema:isPartOf schema:hasBioPolymerSequence <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasBioPolymerSequence schema:Text)
AnnotationAssertion(schema:source schema:hasBioPolymerSequence <http://www.bioschemas.org/Gene>)
SubAnnotationPropertyOf(schema:hasBioPolymerSequence schema:hasRepresentation)

# Annotation Property: schema:hasCategoryCode (hasCategoryCode)

AnnotationAssertion(rdfs:comment schema:hasCategoryCode "A Category code contained in this code set.")
AnnotationAssertion(rdfs:label schema:hasCategoryCode "hasCategoryCode")
AnnotationAssertion(schema:domainIncludes schema:hasCategoryCode schema:CategoryCodeSet)
AnnotationAssertion(schema:isPartOf schema:hasCategoryCode <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasCategoryCode schema:CategoryCode)
AnnotationAssertion(schema:source schema:hasCategoryCode <https://github.com/schemaorg/schemaorg/issues/894>)
SubAnnotationPropertyOf(schema:hasCategoryCode schema:hasDefinedTerm)

# Annotation Property: schema:hasDefinedTerm (hasDefinedTerm)

AnnotationAssertion(rdfs:comment schema:hasDefinedTerm "A Defined Term contained in this term set.")
AnnotationAssertion(rdfs:label schema:hasDefinedTerm "hasDefinedTerm")
AnnotationAssertion(schema:domainIncludes schema:hasDefinedTerm schema:DefinedTermSet)
AnnotationAssertion(schema:domainIncludes schema:hasDefinedTerm schema:Taxon)
AnnotationAssertion(schema:isPartOf schema:hasDefinedTerm <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasDefinedTerm schema:DefinedTerm)
AnnotationAssertion(schema:source schema:hasDefinedTerm <https://github.com/schemaorg/schemaorg/issues/894>)

# Annotation Property: schema:hasGS1DigitalLink (hasGS1DigitalLink)

AnnotationAssertion(rdfs:comment schema:hasGS1DigitalLink "The <a href=\"https://www.gs1.org/standards/gs1-digital-link\">GS1 digital link</a> associated with the object. This URL should conform to the particular requirements of digital links. The link should only contain the Application Identifiers (AIs) that are relevant for the entity being annotated, for instance a [[Product]] or an [[Organization]], and for the correct granularity. In particular, for products:<ul><li>A Digital Link that contains a serial number (AI <code>21</code>) should only be present on instances of [[IndividualProduct]]</li><li>A Digital Link that contains a lot number (AI <code>10</code>) should be annotated as [[SomeProduct]] if only products from that lot are sold, or [[IndividualProduct]] if there is only a specific product.</li><li>A Digital Link that contains a global model number (AI <code>8013</code>)  should be attached to a [[Product]] or a [[ProductModel]].</li></ul> Other item types should be adapted similarly.")
AnnotationAssertion(rdfs:label schema:hasGS1DigitalLink "hasGS1DigitalLink")
AnnotationAssertion(schema:domainIncludes schema:hasGS1DigitalLink schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:hasGS1DigitalLink schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasGS1DigitalLink schema:Place)
AnnotationAssertion(schema:domainIncludes schema:hasGS1DigitalLink schema:Product)
AnnotationAssertion(schema:isPartOf schema:hasGS1DigitalLink <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasGS1DigitalLink schema:URL)
AnnotationAssertion(schema:source schema:hasGS1DigitalLink <https://github.com/schemaorg/schemaorg/issues/3475>)
SubAnnotationPropertyOf(schema:hasGS1DigitalLink schema:identifier)

# Annotation Property: schema:hasPart (hasPart)

AnnotationAssertion(rdfs:comment schema:hasPart "Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).")
AnnotationAssertion(rdfs:label schema:hasPart "hasPart")
AnnotationAssertion(schema:contributor schema:hasPart <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:hasPart schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:hasPart schema:isPartOf)
AnnotationAssertion(schema:rangeIncludes schema:hasPart schema:CreativeWork)

# Annotation Property: schema:hasRepresentation (hasRepresentation)

AnnotationAssertion(rdfs:comment schema:hasRepresentation "A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.")
AnnotationAssertion(rdfs:label schema:hasRepresentation "hasRepresentation")
AnnotationAssertion(schema:domainIncludes schema:hasRepresentation schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:hasRepresentation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasRepresentation schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:hasRepresentation schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:hasRepresentation schema:URL)
AnnotationAssertion(schema:source schema:hasRepresentation <http://www.bioschemas.org>)

# Annotation Property: schema:homeLocation (homeLocation)

AnnotationAssertion(rdfs:comment schema:homeLocation "A contact location for a person's residence.")
AnnotationAssertion(rdfs:label schema:homeLocation "homeLocation")
AnnotationAssertion(schema:domainIncludes schema:homeLocation schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:homeLocation schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:homeLocation schema:Place)
SubAnnotationPropertyOf(schema:homeLocation schema:location)

# Annotation Property: schema:homeTeam (homeTeam)

AnnotationAssertion(rdfs:comment schema:homeTeam "The home team in a sports event.")
AnnotationAssertion(rdfs:label schema:homeTeam "homeTeam")
AnnotationAssertion(schema:domainIncludes schema:homeTeam schema:SportsEvent)
AnnotationAssertion(schema:rangeIncludes schema:homeTeam schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:homeTeam schema:SportsTeam)
SubAnnotationPropertyOf(schema:homeTeam schema:competitor)

# Annotation Property: schema:identifier (identifier)

AnnotationAssertion(rdfs:comment schema:identifier "The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
        ")
AnnotationAssertion(rdfs:label schema:identifier "identifier")
AnnotationAssertion(schema:domainIncludes schema:identifier schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:identifier schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:identifier schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:identifier schema:URL)

# Annotation Property: schema:image (image)

AnnotationAssertion(rdfs:comment schema:image "An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].")
AnnotationAssertion(rdfs:label schema:image "image")
AnnotationAssertion(schema:domainIncludes schema:image schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:image schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:image schema:URL)

# Annotation Property: schema:inChI (inChI)

AnnotationAssertion(rdfs:comment schema:inChI "Non-proprietary identifier for molecular entity that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.")
AnnotationAssertion(rdfs:label schema:inChI "inChI")
AnnotationAssertion(schema:domainIncludes schema:inChI schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:inChI <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inChI schema:Text)
AnnotationAssertion(schema:source schema:inChI <http://www.bioschemas.org/MolecularEntity>)
SubAnnotationPropertyOf(schema:inChI schema:hasRepresentation)

# Annotation Property: schema:inChIKey (inChIKey)

AnnotationAssertion(rdfs:comment schema:inChIKey "InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).")
AnnotationAssertion(rdfs:label schema:inChIKey "inChIKey")
AnnotationAssertion(schema:domainIncludes schema:inChIKey schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:inChIKey <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inChIKey schema:Text)
AnnotationAssertion(schema:source schema:inChIKey <http://www.bioschemas.org/MolecularEntity>)
SubAnnotationPropertyOf(schema:inChIKey schema:hasRepresentation)

# Annotation Property: schema:inCodeSet (inCodeSet)

AnnotationAssertion(rdfs:comment schema:inCodeSet "A [[CategoryCodeSet]] that contains this category code.")
AnnotationAssertion(rdfs:label schema:inCodeSet "inCodeSet")
AnnotationAssertion(schema:domainIncludes schema:inCodeSet schema:CategoryCode)
AnnotationAssertion(schema:isPartOf schema:inCodeSet <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inCodeSet schema:CategoryCodeSet)
AnnotationAssertion(schema:rangeIncludes schema:inCodeSet schema:URL)
AnnotationAssertion(schema:source schema:inCodeSet <https://github.com/schemaorg/schemaorg/issues/894>)
SubAnnotationPropertyOf(schema:inCodeSet schema:inDefinedTermSet)

# Annotation Property: schema:inDefinedTermSet (inDefinedTermSet)

AnnotationAssertion(rdfs:comment schema:inDefinedTermSet "A [[DefinedTermSet]] that contains this term.")
AnnotationAssertion(rdfs:label schema:inDefinedTermSet "inDefinedTermSet")
AnnotationAssertion(schema:domainIncludes schema:inDefinedTermSet schema:DefinedTerm)
AnnotationAssertion(schema:isPartOf schema:inDefinedTermSet <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inDefinedTermSet schema:DefinedTermSet)
AnnotationAssertion(schema:rangeIncludes schema:inDefinedTermSet schema:URL)
AnnotationAssertion(schema:source schema:inDefinedTermSet <https://github.com/schemaorg/schemaorg/issues/894>)
SubAnnotationPropertyOf(schema:inDefinedTermSet schema:isPartOf)

# Annotation Property: schema:ingredients (ingredients)

AnnotationAssertion(rdfs:comment schema:ingredients "A single ingredient used in the recipe, e.g. sugar, flour or garlic.")
AnnotationAssertion(rdfs:label schema:ingredients "ingredients")
AnnotationAssertion(schema:domainIncludes schema:ingredients schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:ingredients schema:Text)
AnnotationAssertion(schema:supersededBy schema:ingredients schema:recipeIngredient)
SubAnnotationPropertyOf(schema:ingredients schema:supply)

# Annotation Property: schema:instrument (instrument)

AnnotationAssertion(rdfs:comment schema:instrument "The object that helped the agent perform the action. E.g. John wrote a book with *a pen*.")
AnnotationAssertion(rdfs:label schema:instrument "instrument")
AnnotationAssertion(schema:domainIncludes schema:instrument schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:instrument schema:Thing)

# Annotation Property: schema:interpretedAsClaim (interpretedAsClaim)

AnnotationAssertion(rdfs:comment schema:interpretedAsClaim "Used to indicate a specific claim contained, implied, translated or refined from the content of a [[MediaObject]] or other [[CreativeWork]]. The interpreting party can be indicated using [[claimInterpreter]].")
AnnotationAssertion(rdfs:label schema:interpretedAsClaim "interpretedAsClaim")
AnnotationAssertion(schema:domainIncludes schema:interpretedAsClaim schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:interpretedAsClaim schema:MediaObject)
AnnotationAssertion(schema:isPartOf schema:interpretedAsClaim <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:interpretedAsClaim schema:Claim)
AnnotationAssertion(schema:source schema:interpretedAsClaim <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:interpretedAsClaim schema:description)

# Annotation Property: schema:inverseOf (inverseOf)

AnnotationAssertion(rdfs:comment schema:inverseOf "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.")
AnnotationAssertion(rdfs:label schema:inverseOf "inverseOf")
AnnotationAssertion(schema:domainIncludes schema:inverseOf schema:Property)
AnnotationAssertion(schema:isPartOf schema:inverseOf <https://meta.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inverseOf schema:Property)

# Annotation Property: schema:isPartOf (isPartOf)

AnnotationAssertion(rdfs:comment schema:isPartOf "Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.")
AnnotationAssertion(rdfs:label schema:isPartOf "isPartOf")
AnnotationAssertion(schema:domainIncludes schema:isPartOf schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:isPartOf schema:hasPart)
AnnotationAssertion(schema:rangeIncludes schema:isPartOf schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:isPartOf schema:URL)

# Annotation Property: schema:isbn (isbn)

AnnotationAssertion(rdfs:comment schema:isbn "The ISBN of the book.")
AnnotationAssertion(rdfs:label schema:isbn "isbn")
AnnotationAssertion(schema:domainIncludes schema:isbn schema:Book)
AnnotationAssertion(schema:rangeIncludes schema:isbn schema:Text)
SubAnnotationPropertyOf(schema:isbn schema:identifier)

# Annotation Property: schema:issn (issn)

AnnotationAssertion(rdfs:comment schema:issn "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.")
AnnotationAssertion(rdfs:label schema:issn "issn")
AnnotationAssertion(schema:contributor schema:issn <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:issn schema:Blog)
AnnotationAssertion(schema:domainIncludes schema:issn schema:CreativeWorkSeries)
AnnotationAssertion(schema:domainIncludes schema:issn schema:Dataset)
AnnotationAssertion(schema:domainIncludes schema:issn schema:WebSite)
AnnotationAssertion(schema:rangeIncludes schema:issn schema:Text)
SubAnnotationPropertyOf(schema:issn schema:identifier)

# Annotation Property: schema:issueNumber (issueNumber)

AnnotationAssertion(rdfs:comment schema:issueNumber "Identifies the issue of publication; for example, \"iii\" or \"2\".")
AnnotationAssertion(rdfs:label schema:issueNumber "issueNumber")
AnnotationAssertion(schema:contributor schema:issueNumber <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:issueNumber schema:PublicationIssue)
AnnotationAssertion(schema:rangeIncludes schema:issueNumber schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:issueNumber schema:Text)
SubAnnotationPropertyOf(schema:issueNumber schema:position)

# Annotation Property: schema:itemLocation (itemLocation)

AnnotationAssertion(rdfs:comment schema:itemLocation "Current location of the item."@en)
AnnotationAssertion(rdfs:label schema:itemLocation "itemLocation"@en)
AnnotationAssertion(schema:domainIncludes schema:itemLocation schema:ArchiveComponent)
AnnotationAssertion(schema:isPartOf schema:itemLocation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:itemLocation schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:itemLocation schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:itemLocation schema:Text)
AnnotationAssertion(schema:source schema:itemLocation <https://github.com/schemaorg/schemaorg/issues/1758>)
SubAnnotationPropertyOf(schema:itemLocation schema:location)

# Annotation Property: schema:jurisdiction (jurisdiction)

AnnotationAssertion(rdfs:comment schema:jurisdiction "Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.")
AnnotationAssertion(rdfs:label schema:jurisdiction "jurisdiction")
AnnotationAssertion(schema:domainIncludes schema:jurisdiction schema:GovernmentService)
AnnotationAssertion(schema:domainIncludes schema:jurisdiction schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:jurisdiction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:jurisdiction schema:AdministrativeArea)
AnnotationAssertion(schema:rangeIncludes schema:jurisdiction schema:Text)
AnnotationAssertion(schema:source schema:jurisdiction <https://github.com/schemaorg/schemaorg/issues/2534>)

# Annotation Property: schema:landlord (landlord)

AnnotationAssertion(rdfs:comment schema:landlord "A sub property of participant. The owner of the real estate property.")
AnnotationAssertion(rdfs:label schema:landlord "landlord")
AnnotationAssertion(schema:domainIncludes schema:landlord schema:RentAction)
AnnotationAssertion(schema:rangeIncludes schema:landlord schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:landlord schema:Person)
SubAnnotationPropertyOf(schema:landlord schema:participant)

# Annotation Property: schema:language (language)

AnnotationAssertion(rdfs:comment schema:language "A sub property of instrument. The language used on this action.")
AnnotationAssertion(rdfs:label schema:language "language")
AnnotationAssertion(schema:domainIncludes schema:language schema:CommunicateAction)
AnnotationAssertion(schema:domainIncludes schema:language schema:WriteAction)
AnnotationAssertion(schema:rangeIncludes schema:language schema:Language)
AnnotationAssertion(schema:supersededBy schema:language schema:inLanguage)
SubAnnotationPropertyOf(schema:language schema:instrument)

# Annotation Property: schema:layoutImage (layoutImage)

AnnotationAssertion(rdfs:comment schema:layoutImage "A schematic image showing the floorplan layout.")
AnnotationAssertion(rdfs:label schema:layoutImage "layoutImage")
AnnotationAssertion(schema:domainIncludes schema:layoutImage schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:layoutImage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:layoutImage schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:layoutImage schema:URL)
AnnotationAssertion(schema:source schema:layoutImage <https://github.com/schemaorg/schemaorg/issues/2690>)
SubAnnotationPropertyOf(schema:layoutImage schema:image)

# Annotation Property: schema:legislationApplies (legislationApplies)

AnnotationAssertion(rdfs:comment schema:legislationApplies "Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href=\"/legislationTransposes\">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state \"applies\" the consolidated version of the European Directive implemented in it.")
AnnotationAssertion(rdfs:label schema:legislationApplies "legislationApplies")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationApplies <http://data.europa.eu/eli/ontology#implements>)
AnnotationAssertion(schema:contributor schema:legislationApplies <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationApplies schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationApplies <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationApplies schema:Legislation)
AnnotationAssertion(schema:source schema:legislationApplies <https://github.com/schemaorg/schemaorg/issues/1156>)

# Annotation Property: schema:legislationDate (legislationDate)

AnnotationAssertion(rdfs:comment schema:legislationDate "The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.")
AnnotationAssertion(rdfs:label schema:legislationDate "legislationDate")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationDate <http://data.europa.eu/eli/ontology#date_document>)
AnnotationAssertion(schema:contributor schema:legislationDate <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationDate schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationDate schema:Date)
AnnotationAssertion(schema:source schema:legislationDate <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationDate schema:dateCreated)

# Annotation Property: schema:legislationIdentifier (legislationIdentifier)

AnnotationAssertion(rdfs:comment schema:legislationIdentifier "An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.")
AnnotationAssertion(rdfs:label schema:legislationIdentifier "legislationIdentifier")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:legislationIdentifier <http://data.europa.eu/eli/ontology#id_local>)
AnnotationAssertion(schema:contributor schema:legislationIdentifier <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationIdentifier schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationIdentifier <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationIdentifier schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:legislationIdentifier schema:URL)
AnnotationAssertion(schema:source schema:legislationIdentifier <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationIdentifier schema:identifier)

# Annotation Property: schema:legislationJurisdiction (legislationJurisdiction)

AnnotationAssertion(rdfs:comment schema:legislationJurisdiction "The jurisdiction from which the legislation originates.")
AnnotationAssertion(rdfs:label schema:legislationJurisdiction "legislationJurisdiction")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationJurisdiction <http://data.europa.eu/eli/ontology#jurisdiction>)
AnnotationAssertion(schema:contributor schema:legislationJurisdiction <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationJurisdiction schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationJurisdiction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationJurisdiction schema:AdministrativeArea)
AnnotationAssertion(schema:rangeIncludes schema:legislationJurisdiction schema:Text)
AnnotationAssertion(schema:source schema:legislationJurisdiction <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationJurisdiction schema:jurisdiction)
SubAnnotationPropertyOf(schema:legislationJurisdiction schema:spatialCoverage)

# Annotation Property: schema:legislationPassedBy (legislationPassedBy)

AnnotationAssertion(rdfs:comment schema:legislationPassedBy "The person or organization that originally passed or made the law: typically parliament (for primary legislation) or government (for secondary legislation). This indicates the \"legal author\" of the law, as opposed to its physical author.")
AnnotationAssertion(rdfs:label schema:legislationPassedBy "legislationPassedBy")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationPassedBy <http://data.europa.eu/eli/ontology#passed_by>)
AnnotationAssertion(schema:contributor schema:legislationPassedBy <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationPassedBy schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationPassedBy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationPassedBy schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:legislationPassedBy schema:Person)
AnnotationAssertion(schema:source schema:legislationPassedBy <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationPassedBy schema:creator)

# Annotation Property: schema:legislationTransposes (legislationTransposes)

AnnotationAssertion(rdfs:comment schema:legislationTransposes "Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.")
AnnotationAssertion(rdfs:label schema:legislationTransposes "legislationTransposes")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationTransposes <http://data.europa.eu/eli/ontology#transposes>)
AnnotationAssertion(schema:contributor schema:legislationTransposes <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationTransposes schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationTransposes <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationTransposes schema:Legislation)
AnnotationAssertion(schema:source schema:legislationTransposes <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationTransposes schema:legislationApplies)

# Annotation Property: schema:legislationType (legislationType)

AnnotationAssertion(rdfs:comment schema:legislationType "The type of the legislation. Examples of values are \"law\", \"act\", \"directive\", \"decree\", \"regulation\", \"statutory instrument\", \"loi organique\", \"règlement grand-ducal\", etc., depending on the country.")
AnnotationAssertion(rdfs:label schema:legislationType "legislationType")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationType <http://data.europa.eu/eli/ontology#type_document>)
AnnotationAssertion(schema:contributor schema:legislationType <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationType schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationType schema:CategoryCode)
AnnotationAssertion(schema:rangeIncludes schema:legislationType schema:Text)
AnnotationAssertion(schema:source schema:legislationType <https://github.com/schemaorg/schemaorg/issues/1156>)
SubAnnotationPropertyOf(schema:legislationType schema:genre)

# Annotation Property: schema:leiCode (leiCode)

AnnotationAssertion(rdfs:comment schema:leiCode "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.")
AnnotationAssertion(rdfs:label schema:leiCode "leiCode")
AnnotationAssertion(schema:contributor schema:leiCode <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:contributor schema:leiCode <https://schema.org/docs/collab/GLEIF>)
AnnotationAssertion(schema:domainIncludes schema:leiCode schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:leiCode schema:Text)
SubAnnotationPropertyOf(schema:leiCode schema:identifier)

# Annotation Property: schema:lender (lender)

AnnotationAssertion(rdfs:comment schema:lender "A sub property of participant. The person that lends the object being borrowed.")
AnnotationAssertion(rdfs:label schema:lender "lender")
AnnotationAssertion(schema:domainIncludes schema:lender schema:BorrowAction)
AnnotationAssertion(schema:rangeIncludes schema:lender schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:lender schema:Person)
SubAnnotationPropertyOf(schema:lender schema:participant)

# Annotation Property: schema:loanTerm (loanTerm)

AnnotationAssertion(rdfs:comment schema:loanTerm "The duration of the loan or credit agreement.")
AnnotationAssertion(rdfs:label schema:loanTerm "loanTerm")
AnnotationAssertion(schema:contributor schema:loanTerm <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanTerm schema:LoanOrCredit)
AnnotationAssertion(schema:rangeIncludes schema:loanTerm schema:QuantitativeValue)
SubAnnotationPropertyOf(schema:loanTerm schema:duration)

# Annotation Property: schema:location (location)

AnnotationAssertion(rdfs:comment schema:location "The location of, for example, where an event is happening, where an organization is located, or where an action takes place.")
AnnotationAssertion(rdfs:label schema:location "location")
AnnotationAssertion(schema:domainIncludes schema:location schema:Action)
AnnotationAssertion(schema:domainIncludes schema:location schema:Event)
AnnotationAssertion(schema:domainIncludes schema:location schema:InteractionCounter)
AnnotationAssertion(schema:domainIncludes schema:location schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:location schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:location schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:location schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:location schema:VirtualLocation)

# Annotation Property: schema:logo (logo)

AnnotationAssertion(rdfs:comment schema:logo "An associated logo.")
AnnotationAssertion(rdfs:label schema:logo "logo")
AnnotationAssertion(schema:contributor schema:logo <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Brand)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Place)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Product)
AnnotationAssertion(schema:domainIncludes schema:logo schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:logo schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:logo schema:URL)
SubAnnotationPropertyOf(schema:logo schema:image)

# Annotation Property: schema:loser (loser)

AnnotationAssertion(rdfs:comment schema:loser "A sub property of participant. The loser of the action.")
AnnotationAssertion(rdfs:label schema:loser "loser")
AnnotationAssertion(schema:domainIncludes schema:loser schema:WinAction)
AnnotationAssertion(schema:rangeIncludes schema:loser schema:Person)
SubAnnotationPropertyOf(schema:loser schema:participant)

# Annotation Property: schema:mainEntity (mainEntity)

AnnotationAssertion(rdfs:comment schema:mainEntity "Indicates the primary entity described in some page or other CreativeWork.")
AnnotationAssertion(rdfs:label schema:mainEntity "mainEntity")
AnnotationAssertion(schema:domainIncludes schema:mainEntity schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:mainEntity schema:mainEntityOfPage)
AnnotationAssertion(schema:rangeIncludes schema:mainEntity schema:Thing)
SubAnnotationPropertyOf(schema:mainEntity schema:about)

# Annotation Property: schema:masthead (masthead)

AnnotationAssertion(rdfs:comment schema:masthead "For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.")
AnnotationAssertion(rdfs:label schema:masthead "masthead")
AnnotationAssertion(schema:contributor schema:masthead <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:masthead schema:NewsMediaOrganization)
AnnotationAssertion(schema:isPartOf schema:masthead <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:masthead schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:masthead schema:URL)
AnnotationAssertion(schema:source schema:masthead <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:masthead schema:publishingPrinciples)

# Annotation Property: schema:material (material)

AnnotationAssertion(rdfs:comment schema:material "A material that something is made from, e.g. leather, wool, cotton, paper.")
AnnotationAssertion(rdfs:label schema:material "material")
AnnotationAssertion(schema:domainIncludes schema:material schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:material schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:material schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:material schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:material schema:URL)

# Annotation Property: schema:measurementMethod (measurementMethod)

AnnotationAssertion(rdfs:comment schema:measurementMethod "A subproperty of [[measurementTechnique]] that can be used for specifying specific methods, in particular via [[MeasurementMethodEnum]].")
AnnotationAssertion(rdfs:label schema:measurementMethod "measurementMethod")
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:DataCatalog)
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:DataDownload)
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:Dataset)
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:Observation)
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:measurementMethod schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:measurementMethod <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:measurementMethod schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:measurementMethod schema:MeasurementMethodEnum)
AnnotationAssertion(schema:rangeIncludes schema:measurementMethod schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:measurementMethod schema:URL)
AnnotationAssertion(schema:source schema:measurementMethod <https://github.com/schemaorg/schemaorg/issues/1425>)
SubAnnotationPropertyOf(schema:measurementMethod schema:measurementTechnique)

# Annotation Property: schema:measurementTechnique (measurementTechnique)

AnnotationAssertion(rdfs:comment schema:measurementTechnique "A technique, method or technology used in an [[Observation]], [[StatisticalVariable]] or [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using [[variableMeasured]]; for [[Observation]], a [[StatisticalVariable]]). Often but not necessarily each [[variableMeasured]] will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and \"knowledge graphs\". In that case the subproperty of [[variableMeasured]] called [[measuredProperty]] is applicable.
    
The [[measurementTechnique]] property helps when extra clarification is needed about how a [[measuredProperty]] was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery. 

For example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\". If the [[variableMeasured]] is \"depression rating\", the [[measurementTechnique]] could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\". 

If there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]]. The value can also be from an enumeration, organized as a [[MeasurementMetholdEnumeration]].")
AnnotationAssertion(rdfs:label schema:measurementTechnique "measurementTechnique")
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:DataCatalog)
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:DataDownload)
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:Dataset)
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:Observation)
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:measurementTechnique schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:measurementTechnique <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:measurementTechnique schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:measurementTechnique schema:MeasurementMethodEnum)
AnnotationAssertion(schema:rangeIncludes schema:measurementTechnique schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:measurementTechnique schema:URL)
AnnotationAssertion(schema:source schema:measurementTechnique <https://github.com/schemaorg/schemaorg/issues/1425>)

# Annotation Property: schema:memberOf (memberOf)

AnnotationAssertion(rdfs:comment schema:memberOf "An Organization (or ProgramMembership) to which this Person or Organization belongs.")
AnnotationAssertion(rdfs:label schema:memberOf "memberOf")
AnnotationAssertion(schema:domainIncludes schema:memberOf schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:memberOf schema:Person)
AnnotationAssertion(schema:inverseOf schema:memberOf schema:member)
AnnotationAssertion(schema:rangeIncludes schema:memberOf schema:MemberProgramTier)
AnnotationAssertion(schema:rangeIncludes schema:memberOf schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:memberOf schema:ProgramMembership)

# Annotation Property: schema:missionCoveragePrioritiesPolicy (missionCoveragePrioritiesPolicy)

AnnotationAssertion(rdfs:comment schema:missionCoveragePrioritiesPolicy "For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.")
AnnotationAssertion(rdfs:label schema:missionCoveragePrioritiesPolicy "missionCoveragePrioritiesPolicy")
AnnotationAssertion(schema:contributor schema:missionCoveragePrioritiesPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:missionCoveragePrioritiesPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:isPartOf schema:missionCoveragePrioritiesPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:missionCoveragePrioritiesPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:missionCoveragePrioritiesPolicy schema:URL)
AnnotationAssertion(schema:source schema:missionCoveragePrioritiesPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:missionCoveragePrioritiesPolicy schema:publishingPrinciples)

# Annotation Property: schema:name (name)

AnnotationAssertion(rdfs:comment schema:name "The name of the item.")
AnnotationAssertion(rdfs:label schema:name "name")
AnnotationAssertion(schema:domainIncludes schema:name schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:name schema:Text)
SubAnnotationPropertyOf(schema:name rdfs:label)

# Annotation Property: schema:noBylinesPolicy (noBylinesPolicy)

AnnotationAssertion(rdfs:comment schema:noBylinesPolicy "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.")
AnnotationAssertion(rdfs:label schema:noBylinesPolicy "noBylinesPolicy")
AnnotationAssertion(schema:contributor schema:noBylinesPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:noBylinesPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:isPartOf schema:noBylinesPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:noBylinesPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:noBylinesPolicy schema:URL)
AnnotationAssertion(schema:source schema:noBylinesPolicy <https://github.com/schemaorg/schemaorg/issues/1688>)
SubAnnotationPropertyOf(schema:noBylinesPolicy schema:publishingPrinciples)

# Annotation Property: schema:nsn (nsn)

AnnotationAssertion(rdfs:comment schema:nsn "Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. ")
AnnotationAssertion(rdfs:label schema:nsn "nsn")
AnnotationAssertion(schema:domainIncludes schema:nsn schema:Product)
AnnotationAssertion(schema:isPartOf schema:nsn <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:nsn schema:Text)
AnnotationAssertion(schema:source schema:nsn <https://github.com/schemaorg/schemaorg/issues/2126>)
SubAnnotationPropertyOf(schema:nsn schema:identifier)

# Annotation Property: schema:object (object)

AnnotationAssertion(rdfs:comment schema:object "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). E.g. John read *a book*.")
AnnotationAssertion(rdfs:label schema:object "object")
AnnotationAssertion(schema:domainIncludes schema:object schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:object schema:Thing)

# Annotation Property: schema:opponent (opponent)

AnnotationAssertion(rdfs:comment schema:opponent "A sub property of participant. The opponent on this action.")
AnnotationAssertion(rdfs:label schema:opponent "opponent")
AnnotationAssertion(schema:domainIncludes schema:opponent schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:opponent schema:Person)
SubAnnotationPropertyOf(schema:opponent schema:participant)

# Annotation Property: schema:option (option)

AnnotationAssertion(rdfs:comment schema:option "A sub property of object. The options subject to this action.")
AnnotationAssertion(rdfs:label schema:option "option")
AnnotationAssertion(schema:domainIncludes schema:option schema:ChooseAction)
AnnotationAssertion(schema:rangeIncludes schema:option schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:option schema:Thing)
AnnotationAssertion(schema:supersededBy schema:option schema:actionOption)
SubAnnotationPropertyOf(schema:option schema:object)

# Annotation Property: schema:orderNumber (orderNumber)

AnnotationAssertion(rdfs:comment schema:orderNumber "The identifier of the transaction.")
AnnotationAssertion(rdfs:label schema:orderNumber "orderNumber")
AnnotationAssertion(schema:domainIncludes schema:orderNumber schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:orderNumber schema:Text)
SubAnnotationPropertyOf(schema:orderNumber schema:identifier)

# Annotation Property: schema:originalMediaContextDescription (originalMediaContextDescription)

AnnotationAssertion(rdfs:comment schema:originalMediaContextDescription "Describes, in a [[MediaReview]] when dealing with [[DecontextualizedContent]], background information that can contribute to better interpretation of the [[MediaObject]].")
AnnotationAssertion(rdfs:label schema:originalMediaContextDescription "originalMediaContextDescription")
AnnotationAssertion(schema:domainIncludes schema:originalMediaContextDescription schema:MediaReview)
AnnotationAssertion(schema:isPartOf schema:originalMediaContextDescription <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:originalMediaContextDescription schema:Text)
AnnotationAssertion(schema:source schema:originalMediaContextDescription <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:originalMediaContextDescription schema:description)

# Annotation Property: schema:ownershipFundingInfo (ownershipFundingInfo)

AnnotationAssertion(rdfs:comment schema:ownershipFundingInfo "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.")
AnnotationAssertion(rdfs:label schema:ownershipFundingInfo "ownershipFundingInfo")
AnnotationAssertion(schema:contributor schema:ownershipFundingInfo <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:ownershipFundingInfo schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:ownershipFundingInfo schema:Organization)
AnnotationAssertion(schema:isPartOf schema:ownershipFundingInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:ownershipFundingInfo schema:AboutPage)
AnnotationAssertion(schema:rangeIncludes schema:ownershipFundingInfo schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:ownershipFundingInfo schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:ownershipFundingInfo schema:URL)
AnnotationAssertion(schema:source schema:ownershipFundingInfo <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:ownershipFundingInfo schema:publishingPrinciples)

# Annotation Property: schema:partOfEpisode (partOfEpisode)

AnnotationAssertion(rdfs:comment schema:partOfEpisode "The episode to which this clip belongs.")
AnnotationAssertion(rdfs:label schema:partOfEpisode "partOfEpisode")
AnnotationAssertion(schema:domainIncludes schema:partOfEpisode schema:Clip)
AnnotationAssertion(schema:rangeIncludes schema:partOfEpisode schema:Episode)
SubAnnotationPropertyOf(schema:partOfEpisode schema:isPartOf)

# Annotation Property: schema:partOfSeason (partOfSeason)

AnnotationAssertion(rdfs:comment schema:partOfSeason "The season to which this episode belongs.")
AnnotationAssertion(rdfs:label schema:partOfSeason "partOfSeason")
AnnotationAssertion(schema:domainIncludes schema:partOfSeason schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:partOfSeason schema:Episode)
AnnotationAssertion(schema:rangeIncludes schema:partOfSeason schema:CreativeWorkSeason)
SubAnnotationPropertyOf(schema:partOfSeason schema:isPartOf)

# Annotation Property: schema:partOfSeries (partOfSeries)

AnnotationAssertion(rdfs:comment schema:partOfSeries "The series to which this episode or season belongs.")
AnnotationAssertion(rdfs:label schema:partOfSeries "partOfSeries")
AnnotationAssertion(schema:domainIncludes schema:partOfSeries schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:partOfSeries schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:partOfSeries schema:Episode)
AnnotationAssertion(schema:rangeIncludes schema:partOfSeries schema:CreativeWorkSeries)
SubAnnotationPropertyOf(schema:partOfSeries schema:isPartOf)

# Annotation Property: schema:partOfTVSeries (partOfTVSeries)

AnnotationAssertion(rdfs:comment schema:partOfTVSeries "The TV series to which this episode or season belongs.")
AnnotationAssertion(rdfs:label schema:partOfTVSeries "partOfTVSeries")
AnnotationAssertion(schema:domainIncludes schema:partOfTVSeries schema:TVClip)
AnnotationAssertion(schema:domainIncludes schema:partOfTVSeries schema:TVEpisode)
AnnotationAssertion(schema:domainIncludes schema:partOfTVSeries schema:TVSeason)
AnnotationAssertion(schema:rangeIncludes schema:partOfTVSeries schema:TVSeries)
AnnotationAssertion(schema:supersededBy schema:partOfTVSeries schema:partOfSeries)
SubAnnotationPropertyOf(schema:partOfTVSeries schema:isPartOf)

# Annotation Property: schema:participant (participant)

AnnotationAssertion(rdfs:comment schema:participant "Other co-agents that participated in the action indirectly. E.g. John wrote a book with *Steve*.")
AnnotationAssertion(rdfs:label schema:participant "participant")
AnnotationAssertion(schema:domainIncludes schema:participant schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:participant schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:participant schema:Person)

# Annotation Property: schema:performTime (performTime)

AnnotationAssertion(rdfs:comment schema:performTime "The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:performTime "performTime")
AnnotationAssertion(schema:domainIncludes schema:performTime schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:performTime schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:performTime schema:Duration)

# Annotation Property: schema:photo (photo)

AnnotationAssertion(rdfs:comment schema:photo "A photograph of this place.")
AnnotationAssertion(rdfs:label schema:photo "photo")
AnnotationAssertion(schema:domainIncludes schema:photo schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:photo schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:photo schema:Photograph)
SubAnnotationPropertyOf(schema:photo schema:image)

# Annotation Property: schema:position (position)

AnnotationAssertion(rdfs:comment schema:position "The position of an item in a series or sequence of items.")
AnnotationAssertion(rdfs:label schema:position "position")
AnnotationAssertion(schema:domainIncludes schema:position schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:position schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:position schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:position schema:Text)

# Annotation Property: schema:productID (productID)

AnnotationAssertion(rdfs:comment schema:productID "The product identifier, such as ISBN. For example: ``` meta itemprop=\"productID\" content=\"isbn:123-456-789\" ```.")
AnnotationAssertion(rdfs:label schema:productID "productID")
AnnotationAssertion(schema:domainIncludes schema:productID schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:productID schema:Text)
SubAnnotationPropertyOf(schema:productID schema:identifier)

# Annotation Property: schema:publishingPrinciples (publishingPrinciples)

AnnotationAssertion(rdfs:comment schema:publishingPrinciples "The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].

While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
")
AnnotationAssertion(rdfs:label schema:publishingPrinciples "publishingPrinciples")
AnnotationAssertion(schema:domainIncludes schema:publishingPrinciples schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:publishingPrinciples schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:publishingPrinciples schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:publishingPrinciples schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:publishingPrinciples schema:URL)

# Annotation Property: schema:query (query)

AnnotationAssertion(rdfs:comment schema:query "A sub property of instrument. The query used on this action.")
AnnotationAssertion(rdfs:label schema:query "query")
AnnotationAssertion(schema:domainIncludes schema:query schema:SearchAction)
AnnotationAssertion(schema:rangeIncludes schema:query schema:Text)
SubAnnotationPropertyOf(schema:query schema:instrument)

# Annotation Property: schema:question (question)

AnnotationAssertion(rdfs:comment schema:question "A sub property of object. A question.")
AnnotationAssertion(rdfs:label schema:question "question")
AnnotationAssertion(schema:domainIncludes schema:question schema:AskAction)
AnnotationAssertion(schema:rangeIncludes schema:question schema:Question)
SubAnnotationPropertyOf(schema:question schema:object)

# Annotation Property: schema:rangeIncludes (rangeIncludes)

AnnotationAssertion(rdfs:comment schema:rangeIncludes "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.")
AnnotationAssertion(rdfs:label schema:rangeIncludes "rangeIncludes")
AnnotationAssertion(schema:domainIncludes schema:rangeIncludes schema:Property)
AnnotationAssertion(schema:isPartOf schema:rangeIncludes <https://meta.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:rangeIncludes schema:Class)

# Annotation Property: schema:readBy (readBy)

AnnotationAssertion(rdfs:comment schema:readBy "A person who reads (performs) the audiobook.")
AnnotationAssertion(rdfs:label schema:readBy "readBy")
AnnotationAssertion(schema:domainIncludes schema:readBy schema:Audiobook)
AnnotationAssertion(schema:isPartOf schema:readBy <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:readBy schema:Person)
SubAnnotationPropertyOf(schema:readBy schema:actor)

# Annotation Property: schema:realEstateAgent (realEstateAgent)

AnnotationAssertion(rdfs:comment schema:realEstateAgent "A sub property of participant. The real estate agent involved in the action.")
AnnotationAssertion(rdfs:label schema:realEstateAgent "realEstateAgent")
AnnotationAssertion(schema:domainIncludes schema:realEstateAgent schema:RentAction)
AnnotationAssertion(schema:rangeIncludes schema:realEstateAgent schema:RealEstateAgent)
SubAnnotationPropertyOf(schema:realEstateAgent schema:participant)

# Annotation Property: schema:recipe (recipe)

AnnotationAssertion(rdfs:comment schema:recipe "A sub property of instrument. The recipe/instructions used to perform the action.")
AnnotationAssertion(rdfs:label schema:recipe "recipe")
AnnotationAssertion(schema:domainIncludes schema:recipe schema:CookAction)
AnnotationAssertion(schema:rangeIncludes schema:recipe schema:Recipe)
SubAnnotationPropertyOf(schema:recipe schema:instrument)

# Annotation Property: schema:recipeIngredient (recipeIngredient)

AnnotationAssertion(rdfs:comment schema:recipeIngredient "A single ingredient used in the recipe, e.g. sugar, flour or garlic.")
AnnotationAssertion(rdfs:label schema:recipeIngredient "recipeIngredient")
AnnotationAssertion(schema:domainIncludes schema:recipeIngredient schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:recipeIngredient schema:Text)
SubAnnotationPropertyOf(schema:recipeIngredient schema:supply)

# Annotation Property: schema:recipeInstructions (recipeInstructions)

AnnotationAssertion(rdfs:comment schema:recipeInstructions "A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.")
AnnotationAssertion(rdfs:label schema:recipeInstructions "recipeInstructions")
AnnotationAssertion(schema:domainIncludes schema:recipeInstructions schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:recipeInstructions schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:recipeInstructions schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:recipeInstructions schema:Text)
SubAnnotationPropertyOf(schema:recipeInstructions schema:step)

# Annotation Property: schema:recipeYield (recipeYield)

AnnotationAssertion(rdfs:comment schema:recipeYield "The quantity produced by the recipe (for example, number of people served, number of servings, etc).")
AnnotationAssertion(rdfs:label schema:recipeYield "recipeYield")
AnnotationAssertion(schema:domainIncludes schema:recipeYield schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:recipeYield schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:recipeYield schema:Text)
SubAnnotationPropertyOf(schema:recipeYield schema:yield)

# Annotation Property: schema:recipient (recipient)

AnnotationAssertion(rdfs:comment schema:recipient "A sub property of participant. The participant who is at the receiving end of the action.")
AnnotationAssertion(rdfs:label schema:recipient "recipient")
AnnotationAssertion(schema:domainIncludes schema:recipient schema:AuthorizeAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:CommunicateAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:DonateAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:GiveAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:Message)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:PayAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:ReturnAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:SendAction)
AnnotationAssertion(schema:domainIncludes schema:recipient schema:TipAction)
AnnotationAssertion(schema:rangeIncludes schema:recipient schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:recipient schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:recipient schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:recipient schema:Person)
SubAnnotationPropertyOf(schema:recipient schema:participant)

# Annotation Property: schema:repeatFrequency (repeatFrequency)

AnnotationAssertion(rdfs:comment schema:repeatFrequency "Defines the frequency at which [[Event]]s will occur according to a schedule [[Schedule]]. The intervals between
      events should be defined as a [[Duration]] of time.")
AnnotationAssertion(rdfs:label schema:repeatFrequency "repeatFrequency")
AnnotationAssertion(schema:domainIncludes schema:repeatFrequency schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:repeatFrequency <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:repeatFrequency schema:Duration)
AnnotationAssertion(schema:rangeIncludes schema:repeatFrequency schema:Text)
AnnotationAssertion(schema:source schema:repeatFrequency <https://github.com/schemaorg/schemaorg/issues/1457>)
SubAnnotationPropertyOf(schema:repeatFrequency schema:frequency)

# Annotation Property: schema:replacee (replacee)

AnnotationAssertion(rdfs:comment schema:replacee "A sub property of object. The object that is being replaced.")
AnnotationAssertion(rdfs:label schema:replacee "replacee")
AnnotationAssertion(schema:domainIncludes schema:replacee schema:ReplaceAction)
AnnotationAssertion(schema:rangeIncludes schema:replacee schema:Thing)
SubAnnotationPropertyOf(schema:replacee schema:object)

# Annotation Property: schema:replacer (replacer)

AnnotationAssertion(rdfs:comment schema:replacer "A sub property of object. The object that replaces.")
AnnotationAssertion(rdfs:label schema:replacer "replacer")
AnnotationAssertion(schema:domainIncludes schema:replacer schema:ReplaceAction)
AnnotationAssertion(schema:rangeIncludes schema:replacer schema:Thing)
SubAnnotationPropertyOf(schema:replacer schema:object)

# Annotation Property: schema:result (result)

AnnotationAssertion(rdfs:comment schema:result "The result produced in the action. E.g. John wrote *a book*.")
AnnotationAssertion(rdfs:label schema:result "result")
AnnotationAssertion(schema:domainIncludes schema:result schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:result schema:Thing)

# Annotation Property: schema:resultComment (resultComment)

AnnotationAssertion(rdfs:comment schema:resultComment "A sub property of result. The Comment created or sent as a result of this action.")
AnnotationAssertion(rdfs:label schema:resultComment "resultComment")
AnnotationAssertion(schema:domainIncludes schema:resultComment schema:CommentAction)
AnnotationAssertion(schema:domainIncludes schema:resultComment schema:ReplyAction)
AnnotationAssertion(schema:rangeIncludes schema:resultComment schema:Comment)
SubAnnotationPropertyOf(schema:resultComment schema:result)

# Annotation Property: schema:resultReview (resultReview)

AnnotationAssertion(rdfs:comment schema:resultReview "A sub property of result. The review that resulted in the performing of the action.")
AnnotationAssertion(rdfs:label schema:resultReview "resultReview")
AnnotationAssertion(schema:domainIncludes schema:resultReview schema:ReviewAction)
AnnotationAssertion(schema:rangeIncludes schema:resultReview schema:Review)
SubAnnotationPropertyOf(schema:resultReview schema:result)

# Annotation Property: schema:sameAs (sameAs)

AnnotationAssertion(rdfs:comment schema:sameAs "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.")
AnnotationAssertion(rdfs:label schema:sameAs "sameAs")
AnnotationAssertion(schema:domainIncludes schema:sameAs schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:sameAs schema:URL)

# Annotation Property: schema:season (season)

AnnotationAssertion(rdfs:comment schema:season "A season in a media series.")
AnnotationAssertion(rdfs:label schema:season "season")
AnnotationAssertion(schema:domainIncludes schema:season schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:season schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:season schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:season schema:CreativeWorkSeason)
AnnotationAssertion(schema:rangeIncludes schema:season schema:URL)
AnnotationAssertion(schema:supersededBy schema:season schema:containsSeason)
SubAnnotationPropertyOf(schema:season schema:hasPart)

# Annotation Property: schema:seasonNumber (seasonNumber)

AnnotationAssertion(rdfs:comment schema:seasonNumber "Position of the season within an ordered group of seasons.")
AnnotationAssertion(rdfs:label schema:seasonNumber "seasonNumber")
AnnotationAssertion(schema:domainIncludes schema:seasonNumber schema:CreativeWorkSeason)
AnnotationAssertion(schema:rangeIncludes schema:seasonNumber schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:seasonNumber schema:Text)
SubAnnotationPropertyOf(schema:seasonNumber schema:position)

# Annotation Property: schema:seller (seller)

AnnotationAssertion(rdfs:comment schema:seller "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.")
AnnotationAssertion(rdfs:label schema:seller "seller")
AnnotationAssertion(schema:domainIncludes schema:seller schema:BuyAction)
AnnotationAssertion(schema:domainIncludes schema:seller schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:seller schema:Flight)
AnnotationAssertion(schema:domainIncludes schema:seller schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:seller schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:seller schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:seller schema:Person)
SubAnnotationPropertyOf(schema:seller schema:participant)

# Annotation Property: schema:sender (sender)

AnnotationAssertion(rdfs:comment schema:sender "A sub property of participant. The participant who is at the sending end of the action.")
AnnotationAssertion(rdfs:label schema:sender "sender")
AnnotationAssertion(schema:domainIncludes schema:sender schema:Message)
AnnotationAssertion(schema:domainIncludes schema:sender schema:ReceiveAction)
AnnotationAssertion(schema:rangeIncludes schema:sender schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:sender schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:sender schema:Person)
SubAnnotationPropertyOf(schema:sender schema:participant)

# Annotation Property: schema:serialNumber (serialNumber)

AnnotationAssertion(rdfs:comment schema:serialNumber "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.")
AnnotationAssertion(rdfs:label schema:serialNumber "serialNumber")
AnnotationAssertion(schema:contributor schema:serialNumber <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:serialNumber schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:serialNumber schema:IndividualProduct)
AnnotationAssertion(schema:domainIncludes schema:serialNumber schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:serialNumber schema:Text)
SubAnnotationPropertyOf(schema:serialNumber schema:identifier)

# Annotation Property: schema:sha256 (sha256)

AnnotationAssertion(rdfs:comment schema:sha256 "The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'.")
AnnotationAssertion(rdfs:label schema:sha256 "sha256")
AnnotationAssertion(schema:domainIncludes schema:sha256 schema:MediaObject)
AnnotationAssertion(schema:isPartOf schema:sha256 <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sha256 schema:Text)
AnnotationAssertion(schema:source schema:sha256 <https://github.com/schemaorg/schemaorg/issues/2450>)
SubAnnotationPropertyOf(schema:sha256 schema:description)

# Annotation Property: schema:sku (sku)

AnnotationAssertion(rdfs:comment schema:sku "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.")
AnnotationAssertion(rdfs:label schema:sku "sku")
AnnotationAssertion(schema:contributor schema:sku <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:sku schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:sku schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:sku schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:sku schema:Text)
SubAnnotationPropertyOf(schema:sku schema:identifier)

# Annotation Property: schema:smiles (smiles)

AnnotationAssertion(rdfs:comment schema:smiles "A specification in form of a line notation for describing the structure of chemical species using short ASCII strings.  Double bond stereochemistry \\ indicators may need to be escaped in the string in formats where the backslash is an escape character.")
AnnotationAssertion(rdfs:label schema:smiles "smiles")
AnnotationAssertion(schema:domainIncludes schema:smiles schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:smiles <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:smiles schema:Text)
AnnotationAssertion(schema:source schema:smiles <http://www.bioschemas.org/MolecularEntity>)
SubAnnotationPropertyOf(schema:smiles schema:hasRepresentation)

# Annotation Property: schema:spatialCoverage (spatialCoverage)

AnnotationAssertion(rdfs:comment schema:spatialCoverage "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.")
AnnotationAssertion(rdfs:label schema:spatialCoverage "spatialCoverage")
AnnotationAssertion(schema:domainIncludes schema:spatialCoverage schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:spatialCoverage schema:Place)
SubAnnotationPropertyOf(schema:spatialCoverage schema:contentLocation)

# Annotation Property: schema:sponsor (sponsor)

AnnotationAssertion(rdfs:comment schema:sponsor "A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.")
AnnotationAssertion(rdfs:label schema:sponsor "sponsor")
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:Event)
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:Grant)
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:MedicalStudy)
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:sponsor schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:sponsor schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:sponsor schema:Person)

# Annotation Property: schema:sportsActivityLocation (sportsActivityLocation)

AnnotationAssertion(rdfs:comment schema:sportsActivityLocation "A sub property of location. The sports activity location where this action occurred.")
AnnotationAssertion(rdfs:label schema:sportsActivityLocation "sportsActivityLocation")
AnnotationAssertion(schema:domainIncludes schema:sportsActivityLocation schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:sportsActivityLocation schema:SportsActivityLocation)
SubAnnotationPropertyOf(schema:sportsActivityLocation schema:location)

# Annotation Property: schema:sportsEvent (sportsEvent)

AnnotationAssertion(rdfs:comment schema:sportsEvent "A sub property of location. The sports event where this action occurred.")
AnnotationAssertion(rdfs:label schema:sportsEvent "sportsEvent")
AnnotationAssertion(schema:domainIncludes schema:sportsEvent schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:sportsEvent schema:SportsEvent)
SubAnnotationPropertyOf(schema:sportsEvent schema:location)

# Annotation Property: schema:sportsTeam (sportsTeam)

AnnotationAssertion(rdfs:comment schema:sportsTeam "A sub property of participant. The sports team that participated on this action.")
AnnotationAssertion(rdfs:label schema:sportsTeam "sportsTeam")
AnnotationAssertion(schema:domainIncludes schema:sportsTeam schema:ExerciseAction)
AnnotationAssertion(schema:rangeIncludes schema:sportsTeam schema:SportsTeam)
SubAnnotationPropertyOf(schema:sportsTeam schema:participant)

# Annotation Property: schema:step (step)

AnnotationAssertion(rdfs:comment schema:step "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.")
AnnotationAssertion(rdfs:label schema:step "step")
AnnotationAssertion(schema:domainIncludes schema:step schema:HowTo)
AnnotationAssertion(schema:rangeIncludes schema:step schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:step schema:HowToSection)
AnnotationAssertion(schema:rangeIncludes schema:step schema:HowToStep)
AnnotationAssertion(schema:rangeIncludes schema:step schema:Text)

# Annotation Property: schema:suggestedAnswer (suggestedAnswer)

AnnotationAssertion(rdfs:comment schema:suggestedAnswer "An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.")
AnnotationAssertion(rdfs:label schema:suggestedAnswer "suggestedAnswer")
AnnotationAssertion(schema:domainIncludes schema:suggestedAnswer schema:Question)
AnnotationAssertion(schema:rangeIncludes schema:suggestedAnswer schema:Answer)
AnnotationAssertion(schema:rangeIncludes schema:suggestedAnswer schema:ItemList)

# Annotation Property: schema:supersededBy (supersededBy)

AnnotationAssertion(rdfs:comment schema:supersededBy "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.")
AnnotationAssertion(rdfs:label schema:supersededBy "supersededBy")
AnnotationAssertion(schema:domainIncludes schema:supersededBy schema:Class)
AnnotationAssertion(schema:domainIncludes schema:supersededBy schema:Enumeration)
AnnotationAssertion(schema:domainIncludes schema:supersededBy schema:Property)
AnnotationAssertion(schema:isPartOf schema:supersededBy <https://meta.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:supersededBy schema:Class)
AnnotationAssertion(schema:rangeIncludes schema:supersededBy schema:Enumeration)
AnnotationAssertion(schema:rangeIncludes schema:supersededBy schema:Property)

# Annotation Property: schema:supply (supply)

AnnotationAssertion(rdfs:comment schema:supply "A sub-property of instrument. A supply consumed when performing instructions or a direction.")
AnnotationAssertion(rdfs:label schema:supply "supply")
AnnotationAssertion(schema:domainIncludes schema:supply schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:supply schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:supply schema:HowToSupply)
AnnotationAssertion(schema:rangeIncludes schema:supply schema:Text)
SubAnnotationPropertyOf(schema:supply schema:instrument)

# Annotation Property: schema:surface (surface)

AnnotationAssertion(rdfs:comment schema:surface "A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.")
AnnotationAssertion(rdfs:label schema:surface "surface")
AnnotationAssertion(schema:domainIncludes schema:surface schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:surface schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:surface schema:URL)
AnnotationAssertion(schema:supersededBy schema:surface schema:artworkSurface)
SubAnnotationPropertyOf(schema:surface schema:material)

# Annotation Property: schema:targetCollection (targetCollection)

AnnotationAssertion(rdfs:comment schema:targetCollection "A sub property of object. The collection target of the action.")
AnnotationAssertion(rdfs:label schema:targetCollection "targetCollection")
AnnotationAssertion(schema:domainIncludes schema:targetCollection schema:UpdateAction)
AnnotationAssertion(schema:rangeIncludes schema:targetCollection schema:Thing)
SubAnnotationPropertyOf(schema:targetCollection schema:object)

# Annotation Property: schema:taxID (taxID)

AnnotationAssertion(rdfs:comment schema:taxID "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.")
AnnotationAssertion(rdfs:label schema:taxID "taxID")
AnnotationAssertion(schema:contributor schema:taxID <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:taxID schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:taxID schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:taxID schema:Text)
SubAnnotationPropertyOf(schema:taxID schema:identifier)

# Annotation Property: schema:termCode (termCode)

AnnotationAssertion(rdfs:comment schema:termCode "A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]].")
AnnotationAssertion(rdfs:label schema:termCode "termCode")
AnnotationAssertion(schema:domainIncludes schema:termCode schema:DefinedTerm)
AnnotationAssertion(schema:isPartOf schema:termCode <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:termCode schema:Text)
AnnotationAssertion(schema:source schema:termCode <https://github.com/schemaorg/schemaorg/issues/894>)

# Annotation Property: schema:titleEIDR (titleEIDR)

AnnotationAssertion(rdfs:comment schema:titleEIDR "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing at the most general/abstract level, a work of film or television.

For example, the motion picture known as \"Ghostbusters\" has a titleEIDR of  \"10.5240/7EC7-228A-510A-053E-CBB8-J\". This title (or work) may have several variants, which EIDR calls \"edits\". See [[editEIDR]].

Since schema.org types like [[Movie]], [[TVEpisode]], [[TVSeason]], and [[TVSeries]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.
")
AnnotationAssertion(rdfs:label schema:titleEIDR "titleEIDR")
AnnotationAssertion(schema:domainIncludes schema:titleEIDR schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:titleEIDR schema:TVEpisode)
AnnotationAssertion(schema:domainIncludes schema:titleEIDR schema:TVSeason)
AnnotationAssertion(schema:domainIncludes schema:titleEIDR schema:TVSeries)
AnnotationAssertion(schema:isPartOf schema:titleEIDR <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:titleEIDR schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:titleEIDR schema:URL)
AnnotationAssertion(schema:source schema:titleEIDR <https://github.com/schemaorg/schemaorg/issues/2469>)
SubAnnotationPropertyOf(schema:titleEIDR schema:identifier)

# Annotation Property: schema:toLocation (toLocation)

AnnotationAssertion(rdfs:comment schema:toLocation "A sub property of location. The final location of the object or the agent after the action.")
AnnotationAssertion(rdfs:label schema:toLocation "toLocation")
AnnotationAssertion(schema:domainIncludes schema:toLocation schema:ExerciseAction)
AnnotationAssertion(schema:domainIncludes schema:toLocation schema:InsertAction)
AnnotationAssertion(schema:domainIncludes schema:toLocation schema:MoveAction)
AnnotationAssertion(schema:domainIncludes schema:toLocation schema:TransferAction)
AnnotationAssertion(schema:rangeIncludes schema:toLocation schema:Place)
SubAnnotationPropertyOf(schema:toLocation schema:location)

# Annotation Property: schema:toRecipient (toRecipient)

AnnotationAssertion(rdfs:comment schema:toRecipient "A sub property of recipient. The recipient who was directly sent the message.")
AnnotationAssertion(rdfs:label schema:toRecipient "toRecipient")
AnnotationAssertion(schema:domainIncludes schema:toRecipient schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:toRecipient schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:toRecipient schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:toRecipient schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:toRecipient schema:Person)
SubAnnotationPropertyOf(schema:toRecipient schema:recipient)

# Annotation Property: schema:tocEntry (tocEntry)

AnnotationAssertion(rdfs:comment schema:tocEntry "Indicates a [[HyperTocEntry]] in a [[HyperToc]].")
AnnotationAssertion(rdfs:label schema:tocEntry "tocEntry")
AnnotationAssertion(schema:domainIncludes schema:tocEntry schema:HyperToc)
AnnotationAssertion(schema:isPartOf schema:tocEntry <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tocEntry schema:HyperTocEntry)
AnnotationAssertion(schema:source schema:tocEntry <https://github.com/schemaorg/schemaorg/issues/2766>)
SubAnnotationPropertyOf(schema:tocEntry schema:hasPart)

# Annotation Property: schema:tool (tool)

AnnotationAssertion(rdfs:comment schema:tool "A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.")
AnnotationAssertion(rdfs:label schema:tool "tool")
AnnotationAssertion(schema:domainIncludes schema:tool schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:tool schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:tool schema:HowToTool)
AnnotationAssertion(schema:rangeIncludes schema:tool schema:Text)
SubAnnotationPropertyOf(schema:tool schema:instrument)

# Annotation Property: schema:unnamedSourcesPolicy (unnamedSourcesPolicy)

AnnotationAssertion(rdfs:comment schema:unnamedSourcesPolicy "For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.")
AnnotationAssertion(rdfs:label schema:unnamedSourcesPolicy "unnamedSourcesPolicy")
AnnotationAssertion(schema:contributor schema:unnamedSourcesPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:unnamedSourcesPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:unnamedSourcesPolicy schema:Organization)
AnnotationAssertion(schema:isPartOf schema:unnamedSourcesPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:unnamedSourcesPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:unnamedSourcesPolicy schema:URL)
AnnotationAssertion(schema:source schema:unnamedSourcesPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:unnamedSourcesPolicy schema:publishingPrinciples)

# Annotation Property: schema:usNPI (usNPI)

AnnotationAssertion(rdfs:comment schema:usNPI "A <a href=\"https://en.wikipedia.org/wiki/National_Provider_Identifier\">National Provider Identifier</a> (NPI) 
    is a unique 10-digit identification number issued to health care providers in the United States by the Centers for Medicare and Medicaid Services.")
AnnotationAssertion(rdfs:label schema:usNPI "usNPI")
AnnotationAssertion(schema:domainIncludes schema:usNPI schema:Physician)
AnnotationAssertion(schema:isPartOf schema:usNPI <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:usNPI schema:Text)
AnnotationAssertion(schema:source schema:usNPI <https://github.com/schemaorg/schemaorg/issues/3420>)
SubAnnotationPropertyOf(schema:usNPI schema:identifier)

# Annotation Property: schema:usageInfo (usageInfo)

AnnotationAssertion(rdfs:comment schema:usageInfo "The schema.org [[usageInfo]] property indicates further information about a [[CreativeWork]]. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.

This property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.")
AnnotationAssertion(rdfs:label schema:usageInfo "usageInfo")
AnnotationAssertion(schema:domainIncludes schema:usageInfo schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:usageInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:usageInfo schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:usageInfo schema:URL)
AnnotationAssertion(schema:source schema:usageInfo <https://github.com/schemaorg/schemaorg/issues/2454>)

# Annotation Property: schema:vehicleIdentificationNumber (vehicleIdentificationNumber)

AnnotationAssertion(rdfs:comment schema:vehicleIdentificationNumber "The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.")
AnnotationAssertion(rdfs:label schema:vehicleIdentificationNumber "vehicleIdentificationNumber")
AnnotationAssertion(schema:contributor schema:vehicleIdentificationNumber <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleIdentificationNumber schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleIdentificationNumber schema:Text)
SubAnnotationPropertyOf(schema:vehicleIdentificationNumber schema:serialNumber)

# Annotation Property: schema:vendor (vendor)

AnnotationAssertion(rdfs:comment schema:vendor "'vendor' is an earlier term for 'seller'.")
AnnotationAssertion(rdfs:label schema:vendor "vendor")
AnnotationAssertion(schema:domainIncludes schema:vendor schema:BuyAction)
AnnotationAssertion(schema:rangeIncludes schema:vendor schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:vendor schema:Person)
AnnotationAssertion(schema:supersededBy schema:vendor schema:seller)
SubAnnotationPropertyOf(schema:vendor schema:participant)

# Annotation Property: schema:verificationFactCheckingPolicy (verificationFactCheckingPolicy)

AnnotationAssertion(rdfs:comment schema:verificationFactCheckingPolicy "Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].")
AnnotationAssertion(rdfs:label schema:verificationFactCheckingPolicy "verificationFactCheckingPolicy")
AnnotationAssertion(schema:contributor schema:verificationFactCheckingPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:verificationFactCheckingPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:isPartOf schema:verificationFactCheckingPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:verificationFactCheckingPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:verificationFactCheckingPolicy schema:URL)
AnnotationAssertion(schema:source schema:verificationFactCheckingPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
SubAnnotationPropertyOf(schema:verificationFactCheckingPolicy schema:publishingPrinciples)

# Annotation Property: schema:volumeNumber (volumeNumber)

AnnotationAssertion(rdfs:comment schema:volumeNumber "Identifies the volume of publication or multi-part work; for example, \"iii\" or \"2\".")
AnnotationAssertion(rdfs:label schema:volumeNumber "volumeNumber")
AnnotationAssertion(schema:contributor schema:volumeNumber <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:volumeNumber schema:PublicationVolume)
AnnotationAssertion(schema:rangeIncludes schema:volumeNumber schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:volumeNumber schema:Text)
SubAnnotationPropertyOf(schema:volumeNumber schema:position)

# Annotation Property: schema:winner (winner)

AnnotationAssertion(rdfs:comment schema:winner "A sub property of participant. The winner of the action.")
AnnotationAssertion(rdfs:label schema:winner "winner")
AnnotationAssertion(schema:domainIncludes schema:winner schema:LoseAction)
AnnotationAssertion(schema:rangeIncludes schema:winner schema:Person)
SubAnnotationPropertyOf(schema:winner schema:participant)

# Annotation Property: schema:workExample (workExample)

AnnotationAssertion(rdfs:comment schema:workExample "Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.")
AnnotationAssertion(rdfs:label schema:workExample "workExample")
AnnotationAssertion(schema:contributor schema:workExample <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:workExample schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:workExample schema:exampleOfWork)
AnnotationAssertion(schema:rangeIncludes schema:workExample schema:CreativeWork)

# Annotation Property: schema:workFeatured (workFeatured)

AnnotationAssertion(rdfs:comment schema:workFeatured "A work featured in some event, e.g. exhibited in an ExhibitionEvent.
       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).")
AnnotationAssertion(rdfs:label schema:workFeatured "workFeatured")
AnnotationAssertion(schema:domainIncludes schema:workFeatured schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:workFeatured schema:CreativeWork)

# Annotation Property: schema:workLocation (workLocation)

AnnotationAssertion(rdfs:comment schema:workLocation "A contact location for a person's place of work.")
AnnotationAssertion(rdfs:label schema:workLocation "workLocation")
AnnotationAssertion(schema:domainIncludes schema:workLocation schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:workLocation schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:workLocation schema:Place)
SubAnnotationPropertyOf(schema:workLocation schema:location)

# Annotation Property: schema:workPerformed (workPerformed)

AnnotationAssertion(rdfs:comment schema:workPerformed "A work performed in some event, for example a play performed in a TheaterEvent.")
AnnotationAssertion(rdfs:label schema:workPerformed "workPerformed")
AnnotationAssertion(schema:domainIncludes schema:workPerformed schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:workPerformed schema:CreativeWork)
SubAnnotationPropertyOf(schema:workPerformed schema:workFeatured)

# Annotation Property: schema:workPresented (workPresented)

AnnotationAssertion(rdfs:comment schema:workPresented "The movie presented during this event.")
AnnotationAssertion(rdfs:label schema:workPresented "workPresented")
AnnotationAssertion(schema:domainIncludes schema:workPresented schema:ScreeningEvent)
AnnotationAssertion(schema:rangeIncludes schema:workPresented schema:Movie)
SubAnnotationPropertyOf(schema:workPresented schema:workFeatured)

# Annotation Property: schema:yield (yield)

AnnotationAssertion(rdfs:comment schema:yield "The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.")
AnnotationAssertion(rdfs:label schema:yield "yield")
AnnotationAssertion(schema:domainIncludes schema:yield schema:HowTo)
AnnotationAssertion(schema:rangeIncludes schema:yield schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:yield schema:Text)



############################
#   Classes
############################

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/105590001> (<http://purl.bioontology.org/ontology/SNOMEDCT/105590001>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/105590001> schema:Substance)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/116154003> (<http://purl.bioontology.org/ontology/SNOMEDCT/116154003>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/116154003> schema:Patient)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/277132007> (<http://purl.bioontology.org/ontology/SNOMEDCT/277132007>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/277132007> schema:TherapeuticProcedure)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/387713003> (<http://purl.bioontology.org/ontology/SNOMEDCT/387713003>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/387713003> schema:SurgicalProcedure)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/410942007> (<http://purl.bioontology.org/ontology/SNOMEDCT/410942007>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/410942007> schema:Drug)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/50731006> (<http://purl.bioontology.org/ontology/SNOMEDCT/50731006>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/50731006> schema:MedicalProcedure)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/51114001> (<http://purl.bioontology.org/ontology/SNOMEDCT/51114001>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/51114001> schema:Artery)

# Class: <http://purl.bioontology.org/ontology/SNOMEDCT/63653004> (<http://purl.bioontology.org/ontology/SNOMEDCT/63653004>)

EquivalentClasses(<http://purl.bioontology.org/ontology/SNOMEDCT/63653004> schema:MedicalDevice)

# Class: <http://purl.org/dc/dcmitype/Dataset> (<http://purl.org/dc/dcmitype/Dataset>)

EquivalentClasses(<http://purl.org/dc/dcmitype/Dataset> schema:Dataset)

# Class: <http://purl.org/dc/dcmitype/Event> (<http://purl.org/dc/dcmitype/Event>)

EquivalentClasses(<http://purl.org/dc/dcmitype/Event> schema:Event)

# Class: <http://purl.org/dc/dcmitype/Image> (<http://purl.org/dc/dcmitype/Image>)

EquivalentClasses(<http://purl.org/dc/dcmitype/Image> schema:ImageObject)

# Class: <http://purl.org/dc/dcmitype/Text> (<http://purl.org/dc/dcmitype/Text>)

EquivalentClasses(<http://purl.org/dc/dcmitype/Text> schema:TextObject)

# Class: <http://purl.org/ontology/bibo/Issue> (<http://purl.org/ontology/bibo/Issue>)

EquivalentClasses(<http://purl.org/ontology/bibo/Issue> schema:PublicationIssue)

# Class: <http://purl.org/ontology/bibo/Periodical> (<http://purl.org/ontology/bibo/Periodical>)

EquivalentClasses(<http://purl.org/ontology/bibo/Periodical> schema:Periodical)

# Class: <http://rdfs.org/ns/void#Dataset> (<http://rdfs.org/ns/void#Dataset>)

EquivalentClasses(<http://rdfs.org/ns/void#Dataset> schema:Dataset)

# Class: rdfs:Property (rdfs:Property)

EquivalentClasses(rdfs:Property schema:Property)

# Class: rdfs:Class (rdfs:Class)

EquivalentClasses(rdfs:Class schema:Class)

# Class: <http://www.w3.org/ns/dcat#Catalog> (<http://www.w3.org/ns/dcat#Catalog>)

EquivalentClasses(<http://www.w3.org/ns/dcat#Catalog> schema:DataCatalog)

# Class: <http://www.w3.org/ns/dcat#Dataset> (<http://www.w3.org/ns/dcat#Dataset>)

EquivalentClasses(<http://www.w3.org/ns/dcat#Dataset> schema:Dataset)

# Class: <http://www.w3.org/ns/dcat#Distribution> (<http://www.w3.org/ns/dcat#Distribution>)

EquivalentClasses(<http://www.w3.org/ns/dcat#Distribution> schema:DataDownload)

# Class: <http://xmlns.com/foaf/0.1/Person> (<http://xmlns.com/foaf/0.1/Person>)

EquivalentClasses(<http://xmlns.com/foaf/0.1/Person> schema:Person)

# Class: schema:AMRadioChannel (AMRadioChannel)

AnnotationAssertion(rdfs:comment schema:AMRadioChannel "A radio channel that uses AM.")
AnnotationAssertion(rdfs:label schema:AMRadioChannel "AMRadioChannel")
AnnotationAssertion(schema:source schema:AMRadioChannel <https://github.com/schemaorg/schemaorg/issues/1004>)
SubClassOf(schema:AMRadioChannel schema:RadioChannel)

# Class: schema:APIReference (APIReference)

AnnotationAssertion(rdfs:comment schema:APIReference "Reference documentation for application programming interfaces (APIs).")
AnnotationAssertion(rdfs:label schema:APIReference "APIReference")
SubClassOf(schema:APIReference schema:TechArticle)

# Class: schema:AboutPage (AboutPage)

AnnotationAssertion(rdfs:comment schema:AboutPage "Web page type: About page.")
AnnotationAssertion(rdfs:label schema:AboutPage "AboutPage")
SubClassOf(schema:AboutPage schema:WebPage)

# Class: schema:AcceptAction (AcceptAction)

AnnotationAssertion(rdfs:comment schema:AcceptAction "The act of committing to/adopting an object.\\n\\nRelated actions:\\n\\n* [[RejectAction]]: The antonym of AcceptAction.")
AnnotationAssertion(rdfs:label schema:AcceptAction "AcceptAction")
SubClassOf(schema:AcceptAction schema:AllocateAction)

# Class: schema:Accommodation (Accommodation)

AnnotationAssertion(rdfs:comment schema:Accommodation "An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
For more specific types of accommodations not defined in schema.org, one can use [[additionalType]] with external vocabularies.
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Accommodation "Accommodation")
AnnotationAssertion(schema:contributor schema:Accommodation <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Accommodation schema:Place)

# Class: schema:AccountingService (AccountingService)

AnnotationAssertion(rdfs:comment schema:AccountingService "Accountancy business.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).
      ")
AnnotationAssertion(rdfs:label schema:AccountingService "AccountingService")
SubClassOf(schema:AccountingService schema:FinancialService)

# Class: schema:AchieveAction (AchieveAction)

AnnotationAssertion(rdfs:comment schema:AchieveAction "The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.")
AnnotationAssertion(rdfs:label schema:AchieveAction "AchieveAction")
SubClassOf(schema:AchieveAction schema:Action)

# Class: schema:Action (Action)

AnnotationAssertion(rdfs:comment schema:Action "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\\n\\nSee also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) and [Actions overview document](https://schema.org/docs/actions.html).")
AnnotationAssertion(rdfs:label schema:Action "Action")
AnnotationAssertion(schema:contributor schema:Action <https://schema.org/docs/collab/ActionCollabClass>)
SubClassOf(schema:Action schema:Thing)

# Class: schema:ActionAccessSpecification (ActionAccessSpecification)

AnnotationAssertion(rdfs:comment schema:ActionAccessSpecification "A set of requirements that must be fulfilled in order to perform an Action.")
AnnotationAssertion(rdfs:label schema:ActionAccessSpecification "ActionAccessSpecification")
AnnotationAssertion(schema:source schema:ActionAccessSpecification <https://github.com/schemaorg/schemaorg/issues/1741>)
SubClassOf(schema:ActionAccessSpecification schema:Intangible)

# Class: schema:ActionStatusType (ActionStatusType)

AnnotationAssertion(rdfs:comment schema:ActionStatusType "The status of an Action.")
AnnotationAssertion(rdfs:label schema:ActionStatusType "ActionStatusType")
SubClassOf(schema:ActionStatusType schema:StatusEnumeration)

# Class: schema:ActivateAction (ActivateAction)

AnnotationAssertion(rdfs:comment schema:ActivateAction "The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).")
AnnotationAssertion(rdfs:label schema:ActivateAction "ActivateAction")
SubClassOf(schema:ActivateAction schema:ControlAction)

# Class: schema:AddAction (AddAction)

AnnotationAssertion(rdfs:comment schema:AddAction "The act of editing by adding an object to a collection.")
AnnotationAssertion(rdfs:label schema:AddAction "AddAction")
SubClassOf(schema:AddAction schema:UpdateAction)

# Class: schema:AdministrativeArea (AdministrativeArea)

AnnotationAssertion(rdfs:comment schema:AdministrativeArea "A geographical region, typically under the jurisdiction of a particular government.")
AnnotationAssertion(rdfs:label schema:AdministrativeArea "AdministrativeArea")
SubClassOf(schema:AdministrativeArea schema:Place)

# Class: schema:AdultEntertainment (AdultEntertainment)

AnnotationAssertion(rdfs:comment schema:AdultEntertainment "An adult entertainment establishment.")
AnnotationAssertion(rdfs:label schema:AdultEntertainment "AdultEntertainment")
SubClassOf(schema:AdultEntertainment schema:EntertainmentBusiness)

# Class: schema:AdultOrientedEnumeration (AdultOrientedEnumeration)

AnnotationAssertion(rdfs:comment schema:AdultOrientedEnumeration "Enumeration of considerations that make a product relevant or potentially restricted for adults only.")
AnnotationAssertion(rdfs:label schema:AdultOrientedEnumeration "AdultOrientedEnumeration")
AnnotationAssertion(schema:isPartOf schema:AdultOrientedEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AdultOrientedEnumeration <https://github.com/schemaorg/schemaorg/issues/2989>)
SubClassOf(schema:AdultOrientedEnumeration schema:Enumeration)

# Class: schema:AdvertiserContentArticle (AdvertiserContentArticle)

AnnotationAssertion(rdfs:comment schema:AdvertiserContentArticle "An [[Article]] that an external entity has paid to place or to produce to its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), sponsored content, native advertising and other paid content.")
AnnotationAssertion(rdfs:label schema:AdvertiserContentArticle "AdvertiserContentArticle")
AnnotationAssertion(schema:contributor schema:AdvertiserContentArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:AdvertiserContentArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AdvertiserContentArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:AdvertiserContentArticle schema:Article)

# Class: schema:AggregateOffer (AggregateOffer)

AnnotationAssertion(rdfs:comment schema:AggregateOffer "When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\\n\\nNote: AggregateOffers are normally expected to associate multiple offers that all share the same defined [[businessFunction]] value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined.")
AnnotationAssertion(rdfs:label schema:AggregateOffer "AggregateOffer")
SubClassOf(schema:AggregateOffer schema:Offer)

# Class: schema:AggregateRating (AggregateRating)

AnnotationAssertion(rdfs:comment schema:AggregateRating "The average rating based on multiple ratings or reviews.")
AnnotationAssertion(rdfs:label schema:AggregateRating "AggregateRating")
SubClassOf(schema:AggregateRating schema:Rating)

# Class: schema:AgreeAction (AgreeAction)

AnnotationAssertion(rdfs:comment schema:AgreeAction "The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.")
AnnotationAssertion(rdfs:label schema:AgreeAction "AgreeAction")
SubClassOf(schema:AgreeAction schema:ReactAction)

# Class: schema:Airline (Airline)

AnnotationAssertion(rdfs:comment schema:Airline "An organization that provides flights for passengers.")
AnnotationAssertion(rdfs:label schema:Airline "Airline")
SubClassOf(schema:Airline schema:Organization)

# Class: schema:Airport (Airport)

AnnotationAssertion(rdfs:comment schema:Airport "An airport.")
AnnotationAssertion(rdfs:label schema:Airport "Airport")
SubClassOf(schema:Airport schema:CivicStructure)

# Class: schema:AlignmentObject (AlignmentObject)

AnnotationAssertion(rdfs:comment schema:AlignmentObject "An intangible item that describes an alignment between a learning resource and a node in an educational framework.

Should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.")
AnnotationAssertion(rdfs:label schema:AlignmentObject "AlignmentObject")
AnnotationAssertion(schema:contributor schema:AlignmentObject <https://schema.org/docs/collab/LRMIClass>)
SubClassOf(schema:AlignmentObject schema:Intangible)

# Class: schema:AllocateAction (AllocateAction)

AnnotationAssertion(rdfs:comment schema:AllocateAction "The act of organizing tasks/objects/events by associating resources to it.")
AnnotationAssertion(rdfs:label schema:AllocateAction "AllocateAction")
SubClassOf(schema:AllocateAction schema:OrganizeAction)

# Class: schema:AmpStory (AmpStory)

AnnotationAssertion(rdfs:comment schema:AmpStory "A creative work with a visual storytelling format intended to be viewed online, particularly on mobile devices.")
AnnotationAssertion(rdfs:label schema:AmpStory "AmpStory")
AnnotationAssertion(schema:isPartOf schema:AmpStory <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AmpStory <https://github.com/schemaorg/schemaorg/issues/2646>)
SubClassOf(schema:AmpStory schema:CreativeWork)
SubClassOf(schema:AmpStory schema:MediaObject)

# Class: schema:AmusementPark (AmusementPark)

AnnotationAssertion(rdfs:comment schema:AmusementPark "An amusement park.")
AnnotationAssertion(rdfs:label schema:AmusementPark "AmusementPark")
SubClassOf(schema:AmusementPark schema:EntertainmentBusiness)

# Class: schema:AnalysisNewsArticle (AnalysisNewsArticle)

AnnotationAssertion(rdfs:comment schema:AnalysisNewsArticle "An AnalysisNewsArticle is a [[NewsArticle]] that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.")
AnnotationAssertion(rdfs:label schema:AnalysisNewsArticle "AnalysisNewsArticle")
AnnotationAssertion(schema:contributor schema:AnalysisNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:AnalysisNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AnalysisNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:AnalysisNewsArticle schema:NewsArticle)

# Class: schema:AnatomicalStructure (AnatomicalStructure)

AnnotationAssertion(rdfs:comment schema:AnatomicalStructure "Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.")
AnnotationAssertion(rdfs:label schema:AnatomicalStructure "AnatomicalStructure")
AnnotationAssertion(schema:isPartOf schema:AnatomicalStructure <https://health-lifesci.schema.org>)
SubClassOf(schema:AnatomicalStructure schema:MedicalEntity)

# Class: schema:AnatomicalSystem (AnatomicalSystem)

AnnotationAssertion(rdfs:comment schema:AnatomicalSystem "An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can include circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.")
AnnotationAssertion(rdfs:label schema:AnatomicalSystem "AnatomicalSystem")
AnnotationAssertion(schema:isPartOf schema:AnatomicalSystem <https://health-lifesci.schema.org>)
SubClassOf(schema:AnatomicalSystem schema:MedicalEntity)

# Class: schema:AnimalShelter (AnimalShelter)

AnnotationAssertion(rdfs:comment schema:AnimalShelter "Animal shelter.")
AnnotationAssertion(rdfs:label schema:AnimalShelter "AnimalShelter")
SubClassOf(schema:AnimalShelter schema:LocalBusiness)

# Class: schema:Answer (Answer)

AnnotationAssertion(rdfs:comment schema:Answer "An answer offered to a question; perhaps correct, perhaps opinionated or wrong.")
AnnotationAssertion(rdfs:label schema:Answer "Answer")
AnnotationAssertion(schema:contributor schema:Answer <https://schema.org/docs/collab/QAStackExchange>)
SubClassOf(schema:Answer schema:Comment)

# Class: schema:Apartment (Apartment)

AnnotationAssertion(rdfs:comment schema:Apartment "An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Apartment\">http://en.wikipedia.org/wiki/Apartment</a>).")
AnnotationAssertion(rdfs:label schema:Apartment "Apartment")
AnnotationAssertion(schema:contributor schema:Apartment <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Apartment schema:Accommodation)

# Class: schema:ApartmentComplex (ApartmentComplex)

AnnotationAssertion(rdfs:comment schema:ApartmentComplex "Residence type: Apartment complex.")
AnnotationAssertion(rdfs:label schema:ApartmentComplex "ApartmentComplex")
SubClassOf(schema:ApartmentComplex schema:Residence)

# Class: schema:AppendAction (AppendAction)

AnnotationAssertion(rdfs:comment schema:AppendAction "The act of inserting at the end if an ordered collection.")
AnnotationAssertion(rdfs:label schema:AppendAction "AppendAction")
SubClassOf(schema:AppendAction schema:InsertAction)

# Class: schema:ApplyAction (ApplyAction)

AnnotationAssertion(rdfs:comment schema:ApplyAction "The act of registering to an organization/service without the guarantee to receive it.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.")
AnnotationAssertion(rdfs:label schema:ApplyAction "ApplyAction")
SubClassOf(schema:ApplyAction schema:OrganizeAction)

# Class: schema:ApprovedIndication (ApprovedIndication)

AnnotationAssertion(rdfs:comment schema:ApprovedIndication "An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.")
AnnotationAssertion(rdfs:label schema:ApprovedIndication "ApprovedIndication")
AnnotationAssertion(schema:isPartOf schema:ApprovedIndication <https://health-lifesci.schema.org>)
SubClassOf(schema:ApprovedIndication schema:MedicalIndication)

# Class: schema:Aquarium (Aquarium)

AnnotationAssertion(rdfs:comment schema:Aquarium "Aquarium.")
AnnotationAssertion(rdfs:label schema:Aquarium "Aquarium")
SubClassOf(schema:Aquarium schema:CivicStructure)

# Class: schema:ArchiveComponent (ArchiveComponent)

AnnotationAssertion(rdfs:comment schema:ArchiveComponent "An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections."@en)
AnnotationAssertion(rdfs:label schema:ArchiveComponent "ArchiveComponent"@en)
AnnotationAssertion(schema:isPartOf schema:ArchiveComponent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ArchiveComponent <https://github.com/schemaorg/schemaorg/issues/1758>)
SubClassOf(schema:ArchiveComponent schema:CreativeWork)

# Class: schema:ArchiveOrganization (ArchiveOrganization)

AnnotationAssertion(rdfs:comment schema:ArchiveOrganization "An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public."@en)
AnnotationAssertion(rdfs:label schema:ArchiveOrganization "ArchiveOrganization"@en)
AnnotationAssertion(schema:isPartOf schema:ArchiveOrganization <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ArchiveOrganization <https://github.com/schemaorg/schemaorg/issues/1758>)
SubClassOf(schema:ArchiveOrganization schema:LocalBusiness)

# Class: schema:ArriveAction (ArriveAction)

AnnotationAssertion(rdfs:comment schema:ArriveAction "The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.")
AnnotationAssertion(rdfs:label schema:ArriveAction "ArriveAction")
SubClassOf(schema:ArriveAction schema:MoveAction)

# Class: schema:ArtGallery (ArtGallery)

AnnotationAssertion(rdfs:comment schema:ArtGallery "An art gallery.")
AnnotationAssertion(rdfs:label schema:ArtGallery "ArtGallery")
SubClassOf(schema:ArtGallery schema:EntertainmentBusiness)

# Class: schema:Artery (Artery)

AnnotationAssertion(rdfs:comment schema:Artery "A type of blood vessel that specifically carries blood away from the heart.")
AnnotationAssertion(rdfs:label schema:Artery "Artery")
AnnotationAssertion(schema:isPartOf schema:Artery <https://health-lifesci.schema.org>)
SubClassOf(schema:Artery schema:Vessel)

# Class: schema:Article (Article)

AnnotationAssertion(rdfs:comment schema:Article "An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).")
AnnotationAssertion(rdfs:label schema:Article "Article")
AnnotationAssertion(schema:contributor schema:Article <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:Article schema:CreativeWork)

# Class: schema:AskAction (AskAction)

AnnotationAssertion(rdfs:comment schema:AskAction "The act of posing a question / favor to someone.\\n\\nRelated actions:\\n\\n* [[ReplyAction]]: Appears generally as a response to AskAction.")
AnnotationAssertion(rdfs:label schema:AskAction "AskAction")
SubClassOf(schema:AskAction schema:CommunicateAction)

# Class: schema:AskPublicNewsArticle (AskPublicNewsArticle)

AnnotationAssertion(rdfs:comment schema:AskPublicNewsArticle "A [[NewsArticle]] expressing an open call by a [[NewsMediaOrganization]] asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.")
AnnotationAssertion(rdfs:label schema:AskPublicNewsArticle "AskPublicNewsArticle")
AnnotationAssertion(schema:contributor schema:AskPublicNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:AskPublicNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AskPublicNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:AskPublicNewsArticle schema:NewsArticle)

# Class: schema:AssessAction (AssessAction)

AnnotationAssertion(rdfs:comment schema:AssessAction "The act of forming one's opinion, reaction or sentiment.")
AnnotationAssertion(rdfs:label schema:AssessAction "AssessAction")
SubClassOf(schema:AssessAction schema:Action)

# Class: schema:AssignAction (AssignAction)

AnnotationAssertion(rdfs:comment schema:AssignAction "The act of allocating an action/event/task to some destination (someone or something).")
AnnotationAssertion(rdfs:label schema:AssignAction "AssignAction")
SubClassOf(schema:AssignAction schema:AllocateAction)

# Class: schema:Atlas (Atlas)

AnnotationAssertion(rdfs:comment schema:Atlas "A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.")
AnnotationAssertion(rdfs:label schema:Atlas "Atlas")
AnnotationAssertion(schema:isPartOf schema:Atlas <https://bib.schema.org>)
AnnotationAssertion(schema:source schema:Atlas <http://www.productontology.org/id/Atlas>)
SubClassOf(schema:Atlas schema:CreativeWork)

# Class: schema:Attorney (Attorney)

AnnotationAssertion(rdfs:comment schema:Attorney "Professional service: Attorney. \\n\\nThis type is deprecated - [[LegalService]] is more inclusive and less ambiguous.")
AnnotationAssertion(rdfs:label schema:Attorney "Attorney")
SubClassOf(schema:Attorney schema:LegalService)

# Class: schema:Audience (Audience)

AnnotationAssertion(rdfs:comment schema:Audience "Intended audience for an item, i.e. the group for whom the item was created.")
AnnotationAssertion(rdfs:label schema:Audience "Audience")
SubClassOf(schema:Audience schema:Intangible)

# Class: schema:AudioObject (AudioObject)

AnnotationAssertion(rdfs:comment schema:AudioObject "An audio file.")
AnnotationAssertion(rdfs:label schema:AudioObject "AudioObject")
AnnotationAssertion(schema:contributor schema:AudioObject <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:AudioObject schema:MediaObject)

# Class: schema:AudioObjectSnapshot (AudioObjectSnapshot)

AnnotationAssertion(rdfs:comment schema:AudioObjectSnapshot "A specific and exact (byte-for-byte) version of an [[AudioObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.")
AnnotationAssertion(rdfs:label schema:AudioObjectSnapshot "AudioObjectSnapshot")
AnnotationAssertion(schema:isPartOf schema:AudioObjectSnapshot <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AudioObjectSnapshot <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:AudioObjectSnapshot schema:AudioObject)

# Class: schema:Audiobook (Audiobook)

AnnotationAssertion(rdfs:comment schema:Audiobook "An audiobook.")
AnnotationAssertion(rdfs:label schema:Audiobook "Audiobook")
AnnotationAssertion(schema:isPartOf schema:Audiobook <https://bib.schema.org>)
SubClassOf(schema:Audiobook schema:AudioObject)
SubClassOf(schema:Audiobook schema:Book)

# Class: schema:AuthorizeAction (AuthorizeAction)

AnnotationAssertion(rdfs:comment schema:AuthorizeAction "The act of granting permission to an object.")
AnnotationAssertion(rdfs:label schema:AuthorizeAction "AuthorizeAction")
SubClassOf(schema:AuthorizeAction schema:AllocateAction)

# Class: schema:AutoBodyShop (AutoBodyShop)

AnnotationAssertion(rdfs:comment schema:AutoBodyShop "Auto body shop.")
AnnotationAssertion(rdfs:label schema:AutoBodyShop "AutoBodyShop")
SubClassOf(schema:AutoBodyShop schema:AutomotiveBusiness)

# Class: schema:AutoDealer (AutoDealer)

AnnotationAssertion(rdfs:comment schema:AutoDealer "An car dealership.")
AnnotationAssertion(rdfs:label schema:AutoDealer "AutoDealer")
SubClassOf(schema:AutoDealer schema:AutomotiveBusiness)

# Class: schema:AutoPartsStore (AutoPartsStore)

AnnotationAssertion(rdfs:comment schema:AutoPartsStore "An auto parts store.")
AnnotationAssertion(rdfs:label schema:AutoPartsStore "AutoPartsStore")
SubClassOf(schema:AutoPartsStore schema:AutomotiveBusiness)
SubClassOf(schema:AutoPartsStore schema:Store)

# Class: schema:AutoRental (AutoRental)

AnnotationAssertion(rdfs:comment schema:AutoRental "A car rental business.")
AnnotationAssertion(rdfs:label schema:AutoRental "AutoRental")
SubClassOf(schema:AutoRental schema:AutomotiveBusiness)

# Class: schema:AutoRepair (AutoRepair)

AnnotationAssertion(rdfs:comment schema:AutoRepair "Car repair business.")
AnnotationAssertion(rdfs:label schema:AutoRepair "AutoRepair")
SubClassOf(schema:AutoRepair schema:AutomotiveBusiness)

# Class: schema:AutoWash (AutoWash)

AnnotationAssertion(rdfs:comment schema:AutoWash "A car wash business.")
AnnotationAssertion(rdfs:label schema:AutoWash "AutoWash")
SubClassOf(schema:AutoWash schema:AutomotiveBusiness)

# Class: schema:AutomatedTeller (AutomatedTeller)

AnnotationAssertion(rdfs:comment schema:AutomatedTeller "ATM/cash machine.")
AnnotationAssertion(rdfs:label schema:AutomatedTeller "AutomatedTeller")
SubClassOf(schema:AutomatedTeller schema:FinancialService)

# Class: schema:AutomotiveBusiness (AutomotiveBusiness)

AnnotationAssertion(rdfs:comment schema:AutomotiveBusiness "Car repair, sales, or parts.")
AnnotationAssertion(rdfs:label schema:AutomotiveBusiness "AutomotiveBusiness")
SubClassOf(schema:AutomotiveBusiness schema:LocalBusiness)

# Class: schema:BackgroundNewsArticle (BackgroundNewsArticle)

AnnotationAssertion(rdfs:comment schema:BackgroundNewsArticle "A [[NewsArticle]] providing historical context, definition and detail on a specific topic (aka \"explainer\" or \"backgrounder\"). For example, an in-depth article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using [[Book]] or [[Article]], in particular [[ScholarlyArticle]]. See also [[NewsArticle]] for related vocabulary from a learning/education perspective.")
AnnotationAssertion(rdfs:label schema:BackgroundNewsArticle "BackgroundNewsArticle")
AnnotationAssertion(schema:contributor schema:BackgroundNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:BackgroundNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BackgroundNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:BackgroundNewsArticle schema:NewsArticle)

# Class: schema:Bakery (Bakery)

AnnotationAssertion(rdfs:comment schema:Bakery "A bakery.")
AnnotationAssertion(rdfs:label schema:Bakery "Bakery")
SubClassOf(schema:Bakery schema:FoodEstablishment)

# Class: schema:BankAccount (BankAccount)

AnnotationAssertion(rdfs:comment schema:BankAccount "A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.")
AnnotationAssertion(rdfs:label schema:BankAccount "BankAccount")
AnnotationAssertion(schema:contributor schema:BankAccount <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:BankAccount schema:FinancialProduct)

# Class: schema:BankOrCreditUnion (BankOrCreditUnion)

AnnotationAssertion(rdfs:comment schema:BankOrCreditUnion "Bank or credit union.")
AnnotationAssertion(rdfs:label schema:BankOrCreditUnion "BankOrCreditUnion")
SubClassOf(schema:BankOrCreditUnion schema:FinancialService)

# Class: schema:BarOrPub (BarOrPub)

AnnotationAssertion(rdfs:comment schema:BarOrPub "A bar or pub.")
AnnotationAssertion(rdfs:label schema:BarOrPub "BarOrPub")
SubClassOf(schema:BarOrPub schema:FoodEstablishment)

# Class: schema:Barcode (Barcode)

AnnotationAssertion(rdfs:comment schema:Barcode "An image of a visual machine-readable code such as a barcode or QR code.")
AnnotationAssertion(rdfs:label schema:Barcode "Barcode")
SubClassOf(schema:Barcode schema:ImageObject)

# Class: schema:Beach (Beach)

AnnotationAssertion(rdfs:comment schema:Beach "Beach.")
AnnotationAssertion(rdfs:label schema:Beach "Beach")
SubClassOf(schema:Beach schema:CivicStructure)

# Class: schema:BeautySalon (BeautySalon)

AnnotationAssertion(rdfs:comment schema:BeautySalon "Beauty salon.")
AnnotationAssertion(rdfs:label schema:BeautySalon "BeautySalon")
SubClassOf(schema:BeautySalon schema:HealthAndBeautyBusiness)

# Class: schema:BedAndBreakfast (BedAndBreakfast)

AnnotationAssertion(rdfs:comment schema:BedAndBreakfast "Bed and breakfast.
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:BedAndBreakfast "BedAndBreakfast")
SubClassOf(schema:BedAndBreakfast schema:LodgingBusiness)

# Class: schema:BedDetails (BedDetails)

AnnotationAssertion(rdfs:comment schema:BedDetails "An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also [[BedType]] (under development).")
AnnotationAssertion(rdfs:label schema:BedDetails "BedDetails")
AnnotationAssertion(schema:contributor schema:BedDetails <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:BedDetails schema:Intangible)

# Class: schema:BedType (BedType)

AnnotationAssertion(rdfs:comment schema:BedType "A type of bed. This is used for indicating the bed or beds available in an accommodation.")
AnnotationAssertion(rdfs:label schema:BedType "BedType")
AnnotationAssertion(schema:contributor schema:BedType <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:source schema:BedType <https://github.com/schemaorg/schemaorg/issues/1262>)
SubClassOf(schema:BedType schema:QualitativeValue)

# Class: schema:BefriendAction (BefriendAction)

AnnotationAssertion(rdfs:comment schema:BefriendAction "The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.")
AnnotationAssertion(rdfs:label schema:BefriendAction "BefriendAction")
SubClassOf(schema:BefriendAction schema:InteractAction)

# Class: schema:BikeStore (BikeStore)

AnnotationAssertion(rdfs:comment schema:BikeStore "A bike store.")
AnnotationAssertion(rdfs:label schema:BikeStore "BikeStore")
SubClassOf(schema:BikeStore schema:Store)

# Class: schema:BioChemEntity (BioChemEntity)

AnnotationAssertion(rdfs:comment schema:BioChemEntity "Any biological, chemical, or biochemical thing. For example: a protein; a gene; a chemical; a synthetic chemical.")
AnnotationAssertion(rdfs:label schema:BioChemEntity "BioChemEntity")
AnnotationAssertion(schema:isPartOf schema:BioChemEntity <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BioChemEntity <http://bioschemas.org>)
SubClassOf(schema:BioChemEntity schema:Thing)

# Class: schema:Blog (Blog)

AnnotationAssertion(rdfs:comment schema:Blog "A [blog](https://en.wikipedia.org/wiki/Blog), sometimes known as a \"weblog\". Note that the individual posts ([[BlogPosting]]s) in a [[Blog]] are often colloquially referred to by the same term.")
AnnotationAssertion(rdfs:label schema:Blog "Blog")
SubClassOf(schema:Blog schema:CreativeWork)

# Class: schema:BlogPosting (BlogPosting)

AnnotationAssertion(rdfs:comment schema:BlogPosting "A blog post.")
AnnotationAssertion(rdfs:label schema:BlogPosting "BlogPosting")
SubClassOf(schema:BlogPosting schema:SocialMediaPosting)

# Class: schema:BloodTest (BloodTest)

AnnotationAssertion(rdfs:comment schema:BloodTest "A medical test performed on a sample of a patient's blood.")
AnnotationAssertion(rdfs:label schema:BloodTest "BloodTest")
AnnotationAssertion(schema:isPartOf schema:BloodTest <https://health-lifesci.schema.org>)
SubClassOf(schema:BloodTest schema:MedicalTest)

# Class: schema:BoardingPolicyType (BoardingPolicyType)

AnnotationAssertion(rdfs:comment schema:BoardingPolicyType "A type of boarding policy used by an airline.")
AnnotationAssertion(rdfs:label schema:BoardingPolicyType "BoardingPolicyType")
SubClassOf(schema:BoardingPolicyType schema:Enumeration)

# Class: schema:BoatReservation (BoatReservation)

AnnotationAssertion(rdfs:comment schema:BoatReservation "A reservation for boat travel.

Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:BoatReservation "BoatReservation")
AnnotationAssertion(schema:isPartOf schema:BoatReservation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BoatReservation <https://github.com/schemaorg/schemaorg/issues/1755>)
SubClassOf(schema:BoatReservation schema:Reservation)

# Class: schema:BoatTerminal (BoatTerminal)

AnnotationAssertion(rdfs:comment schema:BoatTerminal "A terminal for boats, ships, and other water vessels.")
AnnotationAssertion(rdfs:label schema:BoatTerminal "BoatTerminal")
AnnotationAssertion(schema:isPartOf schema:BoatTerminal <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BoatTerminal <https://github.com/schemaorg/schemaorg/issues/1755>)
SubClassOf(schema:BoatTerminal schema:CivicStructure)

# Class: schema:BoatTrip (BoatTrip)

AnnotationAssertion(rdfs:comment schema:BoatTrip "A trip on a commercial ferry line.")
AnnotationAssertion(rdfs:label schema:BoatTrip "BoatTrip")
AnnotationAssertion(schema:isPartOf schema:BoatTrip <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BoatTrip <https://github.com/schemaorg/schemaorg/issues/1755>)
SubClassOf(schema:BoatTrip schema:Trip)

# Class: schema:BodyMeasurementTypeEnumeration (BodyMeasurementTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementTypeEnumeration "Enumerates types (or dimensions) of a person's body measurements, for example for fitting of clothes.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementTypeEnumeration "BodyMeasurementTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:BodyMeasurementTypeEnumeration schema:MeasurementTypeEnumeration)

# Class: schema:BodyOfWater (BodyOfWater)

AnnotationAssertion(rdfs:comment schema:BodyOfWater "A body of water, such as a sea, ocean, or lake.")
AnnotationAssertion(rdfs:label schema:BodyOfWater "BodyOfWater")
SubClassOf(schema:BodyOfWater schema:Landform)

# Class: schema:Bone (Bone)

AnnotationAssertion(rdfs:comment schema:Bone "Rigid connective tissue that comprises up the skeletal structure of the human body.")
AnnotationAssertion(rdfs:label schema:Bone "Bone")
AnnotationAssertion(schema:isPartOf schema:Bone <https://health-lifesci.schema.org>)
SubClassOf(schema:Bone schema:AnatomicalStructure)

# Class: schema:Book (Book)

AnnotationAssertion(rdfs:comment schema:Book "A book.")
AnnotationAssertion(rdfs:label schema:Book "Book")
SubClassOf(schema:Book schema:CreativeWork)

# Class: schema:BookFormatType (BookFormatType)

AnnotationAssertion(rdfs:comment schema:BookFormatType "The publication format of the book.")
AnnotationAssertion(rdfs:label schema:BookFormatType "BookFormatType")
SubClassOf(schema:BookFormatType schema:Enumeration)

# Class: schema:BookSeries (BookSeries)

AnnotationAssertion(rdfs:comment schema:BookSeries "A series of books. Included books can be indicated with the hasPart property.")
AnnotationAssertion(rdfs:label schema:BookSeries "BookSeries")
SubClassOf(schema:BookSeries schema:CreativeWorkSeries)

# Class: schema:BookStore (BookStore)

AnnotationAssertion(rdfs:comment schema:BookStore "A bookstore.")
AnnotationAssertion(rdfs:label schema:BookStore "BookStore")
SubClassOf(schema:BookStore schema:Store)

# Class: schema:BookmarkAction (BookmarkAction)

AnnotationAssertion(rdfs:comment schema:BookmarkAction "An agent bookmarks/flags/labels/tags/marks an object.")
AnnotationAssertion(rdfs:label schema:BookmarkAction "BookmarkAction")
SubClassOf(schema:BookmarkAction schema:OrganizeAction)

# Class: schema:Boolean (Boolean)

AnnotationAssertion(rdfs:comment schema:Boolean "Boolean: True or False.")
AnnotationAssertion(rdfs:label schema:Boolean "Boolean")

# Class: schema:BorrowAction (BorrowAction)

AnnotationAssertion(rdfs:comment schema:BorrowAction "The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.\\n\\nRelated actions:\\n\\n* [[LendAction]]: Reciprocal of BorrowAction.")
AnnotationAssertion(rdfs:label schema:BorrowAction "BorrowAction")
SubClassOf(schema:BorrowAction schema:TransferAction)

# Class: schema:BowlingAlley (BowlingAlley)

AnnotationAssertion(rdfs:comment schema:BowlingAlley "A bowling alley.")
AnnotationAssertion(rdfs:label schema:BowlingAlley "BowlingAlley")
SubClassOf(schema:BowlingAlley schema:SportsActivityLocation)

# Class: schema:BrainStructure (BrainStructure)

AnnotationAssertion(rdfs:comment schema:BrainStructure "Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.")
AnnotationAssertion(rdfs:label schema:BrainStructure "BrainStructure")
AnnotationAssertion(schema:isPartOf schema:BrainStructure <https://health-lifesci.schema.org>)
SubClassOf(schema:BrainStructure schema:AnatomicalStructure)

# Class: schema:Brand (Brand)

AnnotationAssertion(rdfs:comment schema:Brand "A brand is a name used by an organization or business person for labeling a product, product group, or similar.")
AnnotationAssertion(rdfs:label schema:Brand "Brand")
AnnotationAssertion(schema:contributor schema:Brand <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:Brand schema:Intangible)

# Class: schema:BreadcrumbList (BreadcrumbList)

AnnotationAssertion(rdfs:comment schema:BreadcrumbList "A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.\\n\\nThe [[position]] property is used to reconstruct the order of the items in a BreadcrumbList. The convention is that a breadcrumb list has an [[itemListOrder]] of [[ItemListOrderAscending]] (lower values listed first), and that the first items in this list correspond to the \"top\" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
      ")
AnnotationAssertion(rdfs:label schema:BreadcrumbList "BreadcrumbList")
SubClassOf(schema:BreadcrumbList schema:ItemList)

# Class: schema:Brewery (Brewery)

AnnotationAssertion(rdfs:comment schema:Brewery "Brewery.")
AnnotationAssertion(rdfs:label schema:Brewery "Brewery")
SubClassOf(schema:Brewery schema:FoodEstablishment)

# Class: schema:Bridge (Bridge)

AnnotationAssertion(rdfs:comment schema:Bridge "A bridge.")
AnnotationAssertion(rdfs:label schema:Bridge "Bridge")
SubClassOf(schema:Bridge schema:CivicStructure)

# Class: schema:BroadcastChannel (BroadcastChannel)

AnnotationAssertion(rdfs:comment schema:BroadcastChannel "A unique instance of a BroadcastService on a CableOrSatelliteService lineup.")
AnnotationAssertion(rdfs:label schema:BroadcastChannel "BroadcastChannel")
SubClassOf(schema:BroadcastChannel schema:Intangible)

# Class: schema:BroadcastEvent (BroadcastEvent)

AnnotationAssertion(rdfs:comment schema:BroadcastEvent "An over the air or online broadcast event.")
AnnotationAssertion(rdfs:label schema:BroadcastEvent "BroadcastEvent")
SubClassOf(schema:BroadcastEvent schema:PublicationEvent)

# Class: schema:BroadcastFrequencySpecification (BroadcastFrequencySpecification)

AnnotationAssertion(rdfs:comment schema:BroadcastFrequencySpecification "The frequency in MHz and the modulation used for a particular BroadcastService.")
AnnotationAssertion(rdfs:label schema:BroadcastFrequencySpecification "BroadcastFrequencySpecification")
AnnotationAssertion(schema:source schema:BroadcastFrequencySpecification <https://github.com/schemaorg/schemaorg/issues/1004>)
SubClassOf(schema:BroadcastFrequencySpecification schema:Intangible)

# Class: schema:BroadcastService (BroadcastService)

AnnotationAssertion(rdfs:comment schema:BroadcastService "A delivery service through which content is provided via broadcast over the air or online.")
AnnotationAssertion(rdfs:label schema:BroadcastService "BroadcastService")
SubClassOf(schema:BroadcastService schema:Service)

# Class: schema:BrokerageAccount (BrokerageAccount)

AnnotationAssertion(rdfs:comment schema:BrokerageAccount "An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.")
AnnotationAssertion(rdfs:label schema:BrokerageAccount "BrokerageAccount")
AnnotationAssertion(schema:contributor schema:BrokerageAccount <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:BrokerageAccount <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BrokerageAccount <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:BrokerageAccount schema:InvestmentOrDeposit)

# Class: schema:BuddhistTemple (BuddhistTemple)

AnnotationAssertion(rdfs:comment schema:BuddhistTemple "A Buddhist temple.")
AnnotationAssertion(rdfs:label schema:BuddhistTemple "BuddhistTemple")
SubClassOf(schema:BuddhistTemple schema:PlaceOfWorship)

# Class: schema:BusOrCoach (BusOrCoach)

AnnotationAssertion(rdfs:comment schema:BusOrCoach "A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury buses, usually in service for long distance travel.")
AnnotationAssertion(rdfs:label schema:BusOrCoach "BusOrCoach")
AnnotationAssertion(schema:contributor schema:BusOrCoach <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:BusOrCoach <https://auto.schema.org>)
SubClassOf(schema:BusOrCoach schema:Vehicle)

# Class: schema:BusReservation (BusReservation)

AnnotationAssertion(rdfs:comment schema:BusReservation "A reservation for bus travel. \\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:BusReservation "BusReservation")
SubClassOf(schema:BusReservation schema:Reservation)

# Class: schema:BusStation (BusStation)

AnnotationAssertion(rdfs:comment schema:BusStation "A bus station.")
AnnotationAssertion(rdfs:label schema:BusStation "BusStation")
SubClassOf(schema:BusStation schema:CivicStructure)

# Class: schema:BusStop (BusStop)

AnnotationAssertion(rdfs:comment schema:BusStop "A bus stop.")
AnnotationAssertion(rdfs:label schema:BusStop "BusStop")
SubClassOf(schema:BusStop schema:CivicStructure)

# Class: schema:BusTrip (BusTrip)

AnnotationAssertion(rdfs:comment schema:BusTrip "A trip on a commercial bus line.")
AnnotationAssertion(rdfs:label schema:BusTrip "BusTrip")
SubClassOf(schema:BusTrip schema:Trip)

# Class: schema:BusinessAudience (BusinessAudience)

AnnotationAssertion(rdfs:comment schema:BusinessAudience "A set of characteristics belonging to businesses, e.g. who compose an item's target audience.")
AnnotationAssertion(rdfs:label schema:BusinessAudience "BusinessAudience")
SubClassOf(schema:BusinessAudience schema:Audience)

# Class: schema:BusinessEntityType (BusinessEntityType)

AnnotationAssertion(rdfs:comment schema:BusinessEntityType "A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#Business\\n* http://purl.org/goodrelations/v1#Enduser\\n* http://purl.org/goodrelations/v1#PublicInstitution\\n* http://purl.org/goodrelations/v1#Reseller
    ")
AnnotationAssertion(rdfs:label schema:BusinessEntityType "BusinessEntityType")
AnnotationAssertion(schema:contributor schema:BusinessEntityType <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:BusinessEntityType schema:Enumeration)

# Class: schema:BusinessEvent (BusinessEvent)

AnnotationAssertion(rdfs:comment schema:BusinessEvent "Event type: Business event.")
AnnotationAssertion(rdfs:label schema:BusinessEvent "BusinessEvent")
SubClassOf(schema:BusinessEvent schema:Event)

# Class: schema:BusinessFunction (BusinessFunction)

AnnotationAssertion(rdfs:comment schema:BusinessFunction "The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#ConstructionInstallation\\n* http://purl.org/goodrelations/v1#Dispose\\n* http://purl.org/goodrelations/v1#LeaseOut\\n* http://purl.org/goodrelations/v1#Maintain\\n* http://purl.org/goodrelations/v1#ProvideService\\n* http://purl.org/goodrelations/v1#Repair\\n* http://purl.org/goodrelations/v1#Sell\\n* http://purl.org/goodrelations/v1#Buy
        ")
AnnotationAssertion(rdfs:label schema:BusinessFunction "BusinessFunction")
AnnotationAssertion(schema:contributor schema:BusinessFunction <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:BusinessFunction schema:Enumeration)

# Class: schema:BuyAction (BuyAction)

AnnotationAssertion(rdfs:comment schema:BuyAction "The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.")
AnnotationAssertion(rdfs:label schema:BuyAction "BuyAction")
SubClassOf(schema:BuyAction schema:TradeAction)

# Class: schema:CDCPMDRecord (CDCPMDRecord)

AnnotationAssertion(rdfs:comment schema:CDCPMDRecord "A CDCPMDRecord is a data structure representing a record in a CDC tabular data format
      used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative
      definitions used as the source here.
      ")
AnnotationAssertion(rdfs:label schema:CDCPMDRecord "CDCPMDRecord")
AnnotationAssertion(schema:isPartOf schema:CDCPMDRecord <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CDCPMDRecord <https://github.com/schemaorg/schemaorg/issues/2521>)
SubClassOf(schema:CDCPMDRecord schema:StructuredValue)

# Class: schema:CableOrSatelliteService (CableOrSatelliteService)

AnnotationAssertion(rdfs:comment schema:CableOrSatelliteService "A service which provides access to media programming like TV or radio. Access may be via cable or satellite.")
AnnotationAssertion(rdfs:label schema:CableOrSatelliteService "CableOrSatelliteService")
SubClassOf(schema:CableOrSatelliteService schema:Service)

# Class: schema:CafeOrCoffeeShop (CafeOrCoffeeShop)

AnnotationAssertion(rdfs:comment schema:CafeOrCoffeeShop "A cafe or coffee shop.")
AnnotationAssertion(rdfs:label schema:CafeOrCoffeeShop "CafeOrCoffeeShop")
SubClassOf(schema:CafeOrCoffeeShop schema:FoodEstablishment)

# Class: schema:Campground (Campground)

AnnotationAssertion(rdfs:comment schema:Campground "A camping site, campsite, or [[Campground]] is a place used for overnight stay in the outdoors, typically containing individual [[CampingPitch]] locations. \\n\\n
In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\\n\\n

See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
")
AnnotationAssertion(rdfs:label schema:Campground "Campground")
AnnotationAssertion(schema:contributor schema:Campground <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Campground schema:CivicStructure)
SubClassOf(schema:Campground schema:LodgingBusiness)

# Class: schema:CampingPitch (CampingPitch)

AnnotationAssertion(rdfs:comment schema:CampingPitch "A [[CampingPitch]] is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or [[Campground]].\\n\\n
In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
(Source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite).)\\n\\n
See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
")
AnnotationAssertion(rdfs:label schema:CampingPitch "CampingPitch")
AnnotationAssertion(schema:contributor schema:CampingPitch <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:CampingPitch schema:Accommodation)

# Class: schema:Canal (Canal)

AnnotationAssertion(rdfs:comment schema:Canal "A canal, like the Panama Canal.")
AnnotationAssertion(rdfs:label schema:Canal "Canal")
SubClassOf(schema:Canal schema:BodyOfWater)

# Class: schema:CancelAction (CancelAction)

AnnotationAssertion(rdfs:comment schema:CancelAction "The act of asserting that a future event/action is no longer going to happen.\\n\\nRelated actions:\\n\\n* [[ConfirmAction]]: The antonym of CancelAction.")
AnnotationAssertion(rdfs:label schema:CancelAction "CancelAction")
SubClassOf(schema:CancelAction schema:PlanAction)

# Class: schema:Car (Car)

AnnotationAssertion(rdfs:comment schema:Car "A car is a wheeled, self-powered motor vehicle used for transportation.")
AnnotationAssertion(rdfs:label schema:Car "Car")
AnnotationAssertion(schema:contributor schema:Car <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
SubClassOf(schema:Car schema:Vehicle)

# Class: schema:CarUsageType (CarUsageType)

AnnotationAssertion(rdfs:comment schema:CarUsageType "A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.")
AnnotationAssertion(rdfs:label schema:CarUsageType "CarUsageType")
AnnotationAssertion(schema:contributor schema:CarUsageType <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:CarUsageType <https://auto.schema.org>)
SubClassOf(schema:CarUsageType schema:Enumeration)

# Class: schema:Casino (Casino)

AnnotationAssertion(rdfs:comment schema:Casino "A casino.")
AnnotationAssertion(rdfs:label schema:Casino "Casino")
SubClassOf(schema:Casino schema:EntertainmentBusiness)

# Class: schema:CategoryCode (CategoryCode)

AnnotationAssertion(rdfs:comment schema:CategoryCode "A Category Code.")
AnnotationAssertion(rdfs:label schema:CategoryCode "CategoryCode")
AnnotationAssertion(schema:isPartOf schema:CategoryCode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CategoryCode <https://github.com/schemaorg/schemaorg/issues/894>)
SubClassOf(schema:CategoryCode schema:DefinedTerm)

# Class: schema:CategoryCodeSet (CategoryCodeSet)

AnnotationAssertion(rdfs:comment schema:CategoryCodeSet "A set of Category Code values.")
AnnotationAssertion(rdfs:label schema:CategoryCodeSet "CategoryCodeSet")
AnnotationAssertion(schema:isPartOf schema:CategoryCodeSet <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CategoryCodeSet <https://github.com/schemaorg/schemaorg/issues/894>)
SubClassOf(schema:CategoryCodeSet schema:DefinedTermSet)

# Class: schema:CatholicChurch (CatholicChurch)

AnnotationAssertion(rdfs:comment schema:CatholicChurch "A Catholic church.")
AnnotationAssertion(rdfs:label schema:CatholicChurch "CatholicChurch")
SubClassOf(schema:CatholicChurch schema:Church)

# Class: schema:Cemetery (Cemetery)

AnnotationAssertion(rdfs:comment schema:Cemetery "A graveyard.")
AnnotationAssertion(rdfs:label schema:Cemetery "Cemetery")
SubClassOf(schema:Cemetery schema:CivicStructure)

# Class: schema:Certification (Certification)

AnnotationAssertion(rdfs:comment schema:Certification "A Certification is an official and authoritative statement about a subject, for example a product, service, person, or organization. A certification is typically issued by an indendent certification body, for example a professional organization or government. It formally attests certain characteristics about the subject, for example Organizations can be ISO certified, Food products can be certified Organic or Vegan, a Person can be a certified professional, a Place can be certified for food processing. There are certifications for many domains: regulatory, organizational, recycling, food, efficiency, educational, ecological, etc. A certification is a form of credential, as are accreditations and licenses. Mapped from the [gs1:CertificationDetails](https://www.gs1.org/voc/CertificationDetails) class in the GS1 Web Vocabulary.")
AnnotationAssertion(rdfs:label schema:Certification "Certification")
AnnotationAssertion(schema:isPartOf schema:Certification <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Certification <https://github.com/schemaorg/schemaorg/issues/3230>)
SubClassOf(schema:Certification schema:CreativeWork)

# Class: schema:CertificationStatusEnumeration (CertificationStatusEnumeration)

AnnotationAssertion(rdfs:comment schema:CertificationStatusEnumeration "Enumerates the different statuses of a Certification (Active and Inactive).")
AnnotationAssertion(rdfs:label schema:CertificationStatusEnumeration "CertificationStatusEnumeration")
AnnotationAssertion(schema:isPartOf schema:CertificationStatusEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CertificationStatusEnumeration <https://github.com/schemaorg/schemaorg/issues/3230>)
SubClassOf(schema:CertificationStatusEnumeration schema:Enumeration)

# Class: schema:Chapter (Chapter)

AnnotationAssertion(rdfs:comment schema:Chapter "One of the sections into which a book is divided. A chapter usually has a section number or a name.")
AnnotationAssertion(rdfs:label schema:Chapter "Chapter")
AnnotationAssertion(schema:isPartOf schema:Chapter <https://bib.schema.org>)
SubClassOf(schema:Chapter schema:CreativeWork)

# Class: schema:CheckAction (CheckAction)

AnnotationAssertion(rdfs:comment schema:CheckAction "An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.")
AnnotationAssertion(rdfs:label schema:CheckAction "CheckAction")
SubClassOf(schema:CheckAction schema:FindAction)

# Class: schema:CheckInAction (CheckInAction)

AnnotationAssertion(rdfs:comment schema:CheckInAction "The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check-in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).\\n\\nRelated actions:\\n\\n* [[CheckOutAction]]: The antonym of CheckInAction.\\n* [[ArriveAction]]: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.\\n* [[ConfirmAction]]: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.")
AnnotationAssertion(rdfs:label schema:CheckInAction "CheckInAction")
SubClassOf(schema:CheckInAction schema:CommunicateAction)

# Class: schema:CheckOutAction (CheckOutAction)

AnnotationAssertion(rdfs:comment schema:CheckOutAction "The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check-in) or place (e.g. hotel).\\n\\nRelated actions:\\n\\n* [[CheckInAction]]: The antonym of CheckOutAction.\\n* [[DepartAction]]: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\\n* [[CancelAction]]: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.")
AnnotationAssertion(rdfs:label schema:CheckOutAction "CheckOutAction")
SubClassOf(schema:CheckOutAction schema:CommunicateAction)

# Class: schema:CheckoutPage (CheckoutPage)

AnnotationAssertion(rdfs:comment schema:CheckoutPage "Web page type: Checkout page.")
AnnotationAssertion(rdfs:label schema:CheckoutPage "CheckoutPage")
SubClassOf(schema:CheckoutPage schema:WebPage)

# Class: schema:ChemicalSubstance (ChemicalSubstance)

AnnotationAssertion(rdfs:comment schema:ChemicalSubstance "A chemical substance is 'a portion of matter of constant composition, composed of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).")
AnnotationAssertion(rdfs:label schema:ChemicalSubstance "ChemicalSubstance")
AnnotationAssertion(schema:isPartOf schema:ChemicalSubstance <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ChemicalSubstance <http://bioschemas.org>)
AnnotationAssertion(schema:source schema:ChemicalSubstance <https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999>)
SubClassOf(schema:ChemicalSubstance schema:BioChemEntity)

# Class: schema:ChildCare (ChildCare)

AnnotationAssertion(rdfs:comment schema:ChildCare "A Childcare center.")
AnnotationAssertion(rdfs:label schema:ChildCare "ChildCare")
SubClassOf(schema:ChildCare schema:LocalBusiness)

# Class: schema:ChildrensEvent (ChildrensEvent)

AnnotationAssertion(rdfs:comment schema:ChildrensEvent "Event type: Children's event.")
AnnotationAssertion(rdfs:label schema:ChildrensEvent "ChildrensEvent")
SubClassOf(schema:ChildrensEvent schema:Event)

# Class: schema:ChooseAction (ChooseAction)

AnnotationAssertion(rdfs:comment schema:ChooseAction "The act of expressing a preference from a set of options or a large or unbounded set of choices/options.")
AnnotationAssertion(rdfs:label schema:ChooseAction "ChooseAction")
SubClassOf(schema:ChooseAction schema:AssessAction)

# Class: schema:Church (Church)

AnnotationAssertion(rdfs:comment schema:Church "A church.")
AnnotationAssertion(rdfs:label schema:Church "Church")
SubClassOf(schema:Church schema:PlaceOfWorship)

# Class: schema:City (City)

AnnotationAssertion(rdfs:comment schema:City "A city or town.")
AnnotationAssertion(rdfs:label schema:City "City")
SubClassOf(schema:City schema:AdministrativeArea)

# Class: schema:CityHall (CityHall)

AnnotationAssertion(rdfs:comment schema:CityHall "A city hall.")
AnnotationAssertion(rdfs:label schema:CityHall "CityHall")
SubClassOf(schema:CityHall schema:GovernmentBuilding)

# Class: schema:CivicStructure (CivicStructure)

AnnotationAssertion(rdfs:comment schema:CivicStructure "A public structure, such as a town hall or concert hall.")
AnnotationAssertion(rdfs:label schema:CivicStructure "CivicStructure")
SubClassOf(schema:CivicStructure schema:Place)

# Class: schema:Claim (Claim)

AnnotationAssertion(rdfs:comment schema:Claim "A [[Claim]] in Schema.org represents a specific, factually-oriented claim that could be the [[itemReviewed]] in a [[ClaimReview]]. The content of a claim can be summarized with the [[text]] property. Variations on well known claims can have their common identity indicated via [[sameAs]] links, and summarized with a [[name]]. Ideally, a [[Claim]] description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.

  Beyond [[ClaimReview]], the Claim type can be associated with related creative works - for example a [[ScholarlyArticle]] or [[Question]] might be [[about]] some [[Claim]].

  At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.
  ")
AnnotationAssertion(rdfs:label schema:Claim "Claim")
AnnotationAssertion(schema:isPartOf schema:Claim <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Claim <https://github.com/schemaorg/schemaorg/issues/1828>)
SubClassOf(schema:Claim schema:CreativeWork)

# Class: schema:ClaimReview (ClaimReview)

AnnotationAssertion(rdfs:comment schema:ClaimReview "A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).")
AnnotationAssertion(rdfs:label schema:ClaimReview "ClaimReview")
AnnotationAssertion(schema:source schema:ClaimReview <https://github.com/schemaorg/schemaorg/issues/1061>)
SubClassOf(schema:ClaimReview schema:Review)

# Class: schema:Class (Class)

AnnotationAssertion(rdfs:comment schema:Class "A class, also often called a 'Type'; equivalent to rdfs:Class.")
AnnotationAssertion(rdfs:label schema:Class "Class")
AnnotationAssertion(schema:isPartOf schema:Class <https://meta.schema.org>)
SubClassOf(schema:Class schema:Intangible)

# Class: schema:Clip (Clip)

AnnotationAssertion(rdfs:comment schema:Clip "A short TV or radio program or a segment/part of a program.")
AnnotationAssertion(rdfs:label schema:Clip "Clip")
SubClassOf(schema:Clip schema:CreativeWork)

# Class: schema:ClothingStore (ClothingStore)

AnnotationAssertion(rdfs:comment schema:ClothingStore "A clothing store.")
AnnotationAssertion(rdfs:label schema:ClothingStore "ClothingStore")
SubClassOf(schema:ClothingStore schema:Store)

# Class: schema:Code (Code)

AnnotationAssertion(rdfs:comment schema:Code "Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.")
AnnotationAssertion(rdfs:label schema:Code "Code")
AnnotationAssertion(schema:supersededBy schema:Code schema:SoftwareSourceCode)
SubClassOf(schema:Code schema:CreativeWork)

# Class: schema:Collection (Collection)

AnnotationAssertion(rdfs:comment schema:Collection "A collection of items, e.g. creative works or products.")
AnnotationAssertion(rdfs:label schema:Collection "Collection")
AnnotationAssertion(schema:isPartOf schema:Collection <https://bib.schema.org>)
SubClassOf(schema:Collection schema:CreativeWork)

# Class: schema:CollectionPage (CollectionPage)

AnnotationAssertion(rdfs:comment schema:CollectionPage "Web page type: Collection page.")
AnnotationAssertion(rdfs:label schema:CollectionPage "CollectionPage")
SubClassOf(schema:CollectionPage schema:WebPage)

# Class: schema:CollegeOrUniversity (CollegeOrUniversity)

AnnotationAssertion(rdfs:comment schema:CollegeOrUniversity "A college, university, or other third-level educational institution.")
AnnotationAssertion(rdfs:label schema:CollegeOrUniversity "CollegeOrUniversity")
SubClassOf(schema:CollegeOrUniversity schema:EducationalOrganization)

# Class: schema:ComedyClub (ComedyClub)

AnnotationAssertion(rdfs:comment schema:ComedyClub "A comedy club.")
AnnotationAssertion(rdfs:label schema:ComedyClub "ComedyClub")
SubClassOf(schema:ComedyClub schema:EntertainmentBusiness)

# Class: schema:ComedyEvent (ComedyEvent)

AnnotationAssertion(rdfs:comment schema:ComedyEvent "Event type: Comedy event.")
AnnotationAssertion(rdfs:label schema:ComedyEvent "ComedyEvent")
SubClassOf(schema:ComedyEvent schema:Event)

# Class: schema:ComicCoverArt (ComicCoverArt)

AnnotationAssertion(rdfs:comment schema:ComicCoverArt "The artwork on the cover of a comic.")
AnnotationAssertion(rdfs:label schema:ComicCoverArt "ComicCoverArt")
AnnotationAssertion(schema:isPartOf schema:ComicCoverArt <https://bib.schema.org>)
SubClassOf(schema:ComicCoverArt schema:ComicStory)
SubClassOf(schema:ComicCoverArt schema:CoverArt)

# Class: schema:ComicIssue (ComicIssue)

AnnotationAssertion(rdfs:comment schema:ComicIssue "Individual comic issues are serially published as
    	part of a larger series. For the sake of consistency, even one-shot issues
    	belong to a series comprised of a single issue. All comic issues can be
    	uniquely identified by: the combination of the name and volume number of the
    	series to which the issue belongs; the issue number; and the variant
    	description of the issue (if any).")
AnnotationAssertion(rdfs:label schema:ComicIssue "ComicIssue")
AnnotationAssertion(schema:isPartOf schema:ComicIssue <https://bib.schema.org>)
SubClassOf(schema:ComicIssue schema:PublicationIssue)

# Class: schema:ComicSeries (ComicSeries)

AnnotationAssertion(rdfs:comment schema:ComicSeries "A sequential publication of comic stories under a
    	unifying title, for example \"The Amazing Spider-Man\" or \"Groo the
    	Wanderer\".")
AnnotationAssertion(rdfs:label schema:ComicSeries "ComicSeries")
AnnotationAssertion(schema:isPartOf schema:ComicSeries <https://bib.schema.org>)
SubClassOf(schema:ComicSeries schema:Periodical)

# Class: schema:ComicStory (ComicStory)

AnnotationAssertion(rdfs:comment schema:ComicStory "The term \"story\" is any indivisible, re-printable
    	unit of a comic, including the interior stories, covers, and backmatter. Most
    	comics have at least two stories: a cover (ComicCoverArt) and an interior story.")
AnnotationAssertion(rdfs:label schema:ComicStory "ComicStory")
AnnotationAssertion(schema:isPartOf schema:ComicStory <https://bib.schema.org>)
SubClassOf(schema:ComicStory schema:CreativeWork)

# Class: schema:Comment (Comment)

AnnotationAssertion(rdfs:comment schema:Comment "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the [[text]] property, and its topic via [[about]], properties shared with all CreativeWorks.")
AnnotationAssertion(rdfs:label schema:Comment "Comment")
SubClassOf(schema:Comment schema:CreativeWork)

# Class: schema:CommentAction (CommentAction)

AnnotationAssertion(rdfs:comment schema:CommentAction "The act of generating a comment about a subject.")
AnnotationAssertion(rdfs:label schema:CommentAction "CommentAction")
SubClassOf(schema:CommentAction schema:CommunicateAction)

# Class: schema:CommunicateAction (CommunicateAction)

AnnotationAssertion(rdfs:comment schema:CommunicateAction "The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.")
AnnotationAssertion(rdfs:label schema:CommunicateAction "CommunicateAction")
SubClassOf(schema:CommunicateAction schema:InteractAction)

# Class: schema:CommunityHealth (CommunityHealth)

AnnotationAssertion(rdfs:comment schema:CommunityHealth "A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas.")
AnnotationAssertion(rdfs:label schema:CommunityHealth "CommunityHealth")
AnnotationAssertion(schema:isPartOf schema:CommunityHealth <https://health-lifesci.schema.org>)
SubClassOf(schema:CommunityHealth schema:MedicalBusiness)

# Class: schema:CompleteDataFeed (CompleteDataFeed)

AnnotationAssertion(rdfs:comment schema:CompleteDataFeed "A [[CompleteDataFeed]] is a [[DataFeed]] whose standard representation includes content for every item currently in the feed.

This is the equivalent of Atom's element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), for example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. \"Top Twenty Records\") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.")
AnnotationAssertion(rdfs:label schema:CompleteDataFeed "CompleteDataFeed")
AnnotationAssertion(schema:isPartOf schema:CompleteDataFeed <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CompleteDataFeed <https://github.com/schemaorg/schemaorg/issues/1397>)
SubClassOf(schema:CompleteDataFeed schema:DataFeed)

# Class: schema:CompoundPriceSpecification (CompoundPriceSpecification)

AnnotationAssertion(rdfs:comment schema:CompoundPriceSpecification "A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. \"electricity\" or \"final cleaning\").")
AnnotationAssertion(rdfs:label schema:CompoundPriceSpecification "CompoundPriceSpecification")
AnnotationAssertion(schema:contributor schema:CompoundPriceSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:CompoundPriceSpecification schema:PriceSpecification)

# Class: schema:ComputerLanguage (ComputerLanguage)

AnnotationAssertion(rdfs:comment schema:ComputerLanguage "This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the [[Language]] type.")
AnnotationAssertion(rdfs:label schema:ComputerLanguage "ComputerLanguage")
SubClassOf(schema:ComputerLanguage schema:Intangible)

# Class: schema:ComputerStore (ComputerStore)

AnnotationAssertion(rdfs:comment schema:ComputerStore "A computer store.")
AnnotationAssertion(rdfs:label schema:ComputerStore "ComputerStore")
SubClassOf(schema:ComputerStore schema:Store)

# Class: schema:ConfirmAction (ConfirmAction)

AnnotationAssertion(rdfs:comment schema:ConfirmAction "The act of notifying someone that a future event/action is going to happen as expected.\\n\\nRelated actions:\\n\\n* [[CancelAction]]: The antonym of ConfirmAction.")
AnnotationAssertion(rdfs:label schema:ConfirmAction "ConfirmAction")
SubClassOf(schema:ConfirmAction schema:InformAction)

# Class: schema:Consortium (Consortium)

AnnotationAssertion(rdfs:comment schema:Consortium "A Consortium is a membership [[Organization]] whose members are typically Organizations.")
AnnotationAssertion(rdfs:label schema:Consortium "Consortium")
AnnotationAssertion(schema:isPartOf schema:Consortium <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Consortium <https://github.com/schemaorg/schemaorg/issues/1559>)
SubClassOf(schema:Consortium schema:Organization)

# Class: schema:ConstraintNode (ConstraintNode)

AnnotationAssertion(rdfs:comment schema:ConstraintNode "The ConstraintNode type is provided to support usecases in which a node in a structured data graph is described with properties which appear to describe a single entity, but are being used in a situation where they serve a more abstract purpose. A [[ConstraintNode]] can be described using [[constraintProperty]] and [[numConstraints]]. These constraint properties can serve a
    variety of purposes, and their values may sometimes be understood to indicate sets of possible values rather than single, exact and specific values.")
AnnotationAssertion(rdfs:label schema:ConstraintNode "ConstraintNode")
AnnotationAssertion(schema:isPartOf schema:ConstraintNode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ConstraintNode <https://github.com/schemaorg/schemaorg/issues/2564>)
SubClassOf(schema:ConstraintNode schema:Intangible)

# Class: schema:ConsumeAction (ConsumeAction)

AnnotationAssertion(rdfs:comment schema:ConsumeAction "The act of ingesting information/resources/food.")
AnnotationAssertion(rdfs:label schema:ConsumeAction "ConsumeAction")
SubClassOf(schema:ConsumeAction schema:Action)

# Class: schema:ContactPage (ContactPage)

AnnotationAssertion(rdfs:comment schema:ContactPage "Web page type: Contact page.")
AnnotationAssertion(rdfs:label schema:ContactPage "ContactPage")
SubClassOf(schema:ContactPage schema:WebPage)

# Class: schema:ContactPoint (ContactPoint)

AnnotationAssertion(rdfs:comment schema:ContactPoint "A contact point&#x2014;for example, a Customer Complaints department.")
AnnotationAssertion(rdfs:label schema:ContactPoint "ContactPoint")
SubClassOf(schema:ContactPoint schema:StructuredValue)

# Class: schema:ContactPointOption (ContactPointOption)

AnnotationAssertion(rdfs:comment schema:ContactPointOption "Enumerated options related to a ContactPoint.")
AnnotationAssertion(rdfs:label schema:ContactPointOption "ContactPointOption")
SubClassOf(schema:ContactPointOption schema:Enumeration)

# Class: schema:Continent (Continent)

AnnotationAssertion(rdfs:comment schema:Continent "One of the continents (for example, Europe or Africa).")
AnnotationAssertion(rdfs:label schema:Continent "Continent")
SubClassOf(schema:Continent schema:Landform)

# Class: schema:ControlAction (ControlAction)

AnnotationAssertion(rdfs:comment schema:ControlAction "An agent controls a device or application.")
AnnotationAssertion(rdfs:label schema:ControlAction "ControlAction")
SubClassOf(schema:ControlAction schema:Action)

# Class: schema:ConvenienceStore (ConvenienceStore)

AnnotationAssertion(rdfs:comment schema:ConvenienceStore "A convenience store.")
AnnotationAssertion(rdfs:label schema:ConvenienceStore "ConvenienceStore")
SubClassOf(schema:ConvenienceStore schema:Store)

# Class: schema:Conversation (Conversation)

AnnotationAssertion(rdfs:comment schema:Conversation "One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.")
AnnotationAssertion(rdfs:label schema:Conversation "Conversation")
SubClassOf(schema:Conversation schema:CreativeWork)

# Class: schema:CookAction (CookAction)

AnnotationAssertion(rdfs:comment schema:CookAction "The act of producing/preparing food.")
AnnotationAssertion(rdfs:label schema:CookAction "CookAction")
SubClassOf(schema:CookAction schema:CreateAction)

# Class: schema:Corporation (Corporation)

AnnotationAssertion(rdfs:comment schema:Corporation "Organization: A business corporation.")
AnnotationAssertion(rdfs:label schema:Corporation "Corporation")
AnnotationAssertion(schema:contributor schema:Corporation <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:Corporation schema:Organization)

# Class: schema:CorrectionComment (CorrectionComment)

AnnotationAssertion(rdfs:comment schema:CorrectionComment "A [[comment]] that corrects [[CreativeWork]].")
AnnotationAssertion(rdfs:label schema:CorrectionComment "CorrectionComment")
AnnotationAssertion(schema:isPartOf schema:CorrectionComment <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CorrectionComment <https://github.com/schemaorg/schemaorg/issues/1950>)
SubClassOf(schema:CorrectionComment schema:Comment)

# Class: schema:Country (Country)

AnnotationAssertion(rdfs:comment schema:Country "A country.")
AnnotationAssertion(rdfs:label schema:Country "Country")
SubClassOf(schema:Country schema:AdministrativeArea)

# Class: schema:Course (Course)

AnnotationAssertion(rdfs:comment schema:Course "A description of an educational course which may be offered as distinct instances which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.")
AnnotationAssertion(rdfs:label schema:Course "Course")
SubClassOf(schema:Course schema:CreativeWork)
SubClassOf(schema:Course schema:LearningResource)

# Class: schema:CourseInstance (CourseInstance)

AnnotationAssertion(rdfs:comment schema:CourseInstance "An instance of a [[Course]] which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.")
AnnotationAssertion(rdfs:label schema:CourseInstance "CourseInstance")
SubClassOf(schema:CourseInstance schema:Event)

# Class: schema:Courthouse (Courthouse)

AnnotationAssertion(rdfs:comment schema:Courthouse "A courthouse.")
AnnotationAssertion(rdfs:label schema:Courthouse "Courthouse")
SubClassOf(schema:Courthouse schema:GovernmentBuilding)

# Class: schema:CoverArt (CoverArt)

AnnotationAssertion(rdfs:comment schema:CoverArt "The artwork on the outer surface of a CreativeWork.")
AnnotationAssertion(rdfs:label schema:CoverArt "CoverArt")
AnnotationAssertion(schema:isPartOf schema:CoverArt <https://bib.schema.org>)
SubClassOf(schema:CoverArt schema:VisualArtwork)

# Class: schema:CovidTestingFacility (CovidTestingFacility)

AnnotationAssertion(rdfs:comment schema:CovidTestingFacility "A CovidTestingFacility is a [[MedicalClinic]] where testing for the COVID-19 Coronavirus
      disease is available. If the facility is being made available from an established [[Pharmacy]], [[Hotel]], or other
      non-medical organization, multiple types can be listed. This makes it easier to re-use existing schema.org information
      about that place, e.g. contact info, address, opening hours. Note that in an emergency, such information may not always be reliable.
      ")
AnnotationAssertion(rdfs:label schema:CovidTestingFacility "CovidTestingFacility")
AnnotationAssertion(schema:isPartOf schema:CovidTestingFacility <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CovidTestingFacility <https://github.com/schemaorg/schemaorg/issues/2490>)
SubClassOf(schema:CovidTestingFacility schema:MedicalClinic)

# Class: schema:CreateAction (CreateAction)

AnnotationAssertion(rdfs:comment schema:CreateAction "The act of deliberately creating/producing/generating/building a result out of the agent.")
AnnotationAssertion(rdfs:label schema:CreateAction "CreateAction")
SubClassOf(schema:CreateAction schema:Action)

# Class: schema:CreativeWork (CreativeWork)

AnnotationAssertion(rdfs:comment schema:CreativeWork "The most generic kind of creative work, including books, movies, photographs, software programs, etc.")
AnnotationAssertion(rdfs:label schema:CreativeWork "CreativeWork")
AnnotationAssertion(schema:contributor schema:CreativeWork <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:CreativeWork schema:Thing)

# Class: schema:CreativeWorkSeason (CreativeWorkSeason)

AnnotationAssertion(rdfs:comment schema:CreativeWorkSeason "A media season, e.g. TV, radio, video game etc.")
AnnotationAssertion(rdfs:label schema:CreativeWorkSeason "CreativeWorkSeason")
SubClassOf(schema:CreativeWorkSeason schema:CreativeWork)

# Class: schema:CreativeWorkSeries (CreativeWorkSeries)

AnnotationAssertion(rdfs:comment schema:CreativeWorkSeries "A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike [[ItemList]] which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as TV, radio and games).\\n\\nSpecific subtypes are available for describing [[TVSeries]], [[RadioSeries]], [[MovieSeries]], [[BookSeries]], [[Periodical]] and [[VideoGameSeries]]. In each case, the [[hasPart]] / [[isPartOf]] properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.\\n\\nIt is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
    ")
AnnotationAssertion(rdfs:label schema:CreativeWorkSeries "CreativeWorkSeries")
SubClassOf(schema:CreativeWorkSeries schema:CreativeWork)
SubClassOf(schema:CreativeWorkSeries schema:Series)

# Class: schema:CreditCard (CreditCard)

AnnotationAssertion(rdfs:comment schema:CreditCard "A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#AmericanExpress\\n* http://purl.org/goodrelations/v1#DinersClub\\n* http://purl.org/goodrelations/v1#Discover\\n* http://purl.org/goodrelations/v1#JCB\\n* http://purl.org/goodrelations/v1#MasterCard\\n* http://purl.org/goodrelations/v1#VISA
       ")
AnnotationAssertion(rdfs:label schema:CreditCard "CreditCard")
AnnotationAssertion(schema:contributor schema:CreditCard <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:contributor schema:CreditCard <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:CreditCard schema:LoanOrCredit)
SubClassOf(schema:CreditCard schema:PaymentCard)

# Class: schema:Crematorium (Crematorium)

AnnotationAssertion(rdfs:comment schema:Crematorium "A crematorium.")
AnnotationAssertion(rdfs:label schema:Crematorium "Crematorium")
SubClassOf(schema:Crematorium schema:CivicStructure)

# Class: schema:CriticReview (CriticReview)

AnnotationAssertion(rdfs:comment schema:CriticReview "A [[CriticReview]] is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. [[CriticReview]]s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the [[UserReview]] type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.")
AnnotationAssertion(rdfs:label schema:CriticReview "CriticReview")
AnnotationAssertion(schema:isPartOf schema:CriticReview <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CriticReview <https://github.com/schemaorg/schemaorg/issues/1589>)
SubClassOf(schema:CriticReview schema:Review)

# Class: schema:CssSelectorType (CssSelectorType)

AnnotationAssertion(rdfs:comment schema:CssSelectorType "Text representing a CSS selector.")
AnnotationAssertion(rdfs:label schema:CssSelectorType "CssSelectorType")
AnnotationAssertion(schema:isPartOf schema:CssSelectorType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CssSelectorType <https://github.com/schemaorg/schemaorg/issues/1672>)
SubClassOf(schema:CssSelectorType schema:Text)

# Class: schema:CurrencyConversionService (CurrencyConversionService)

AnnotationAssertion(rdfs:comment schema:CurrencyConversionService "A service to convert funds from one currency to another currency.")
AnnotationAssertion(rdfs:label schema:CurrencyConversionService "CurrencyConversionService")
AnnotationAssertion(schema:contributor schema:CurrencyConversionService <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:CurrencyConversionService schema:FinancialProduct)

# Class: schema:DDxElement (DDxElement)

AnnotationAssertion(rdfs:comment schema:DDxElement "An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.")
AnnotationAssertion(rdfs:label schema:DDxElement "DDxElement")
AnnotationAssertion(schema:isPartOf schema:DDxElement <https://health-lifesci.schema.org>)
SubClassOf(schema:DDxElement schema:MedicalIntangible)

# Class: schema:DanceEvent (DanceEvent)

AnnotationAssertion(rdfs:comment schema:DanceEvent "Event type: A social dance.")
AnnotationAssertion(rdfs:label schema:DanceEvent "DanceEvent")
SubClassOf(schema:DanceEvent schema:Event)

# Class: schema:DanceGroup (DanceGroup)

AnnotationAssertion(rdfs:comment schema:DanceGroup "A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.")
AnnotationAssertion(rdfs:label schema:DanceGroup "DanceGroup")
SubClassOf(schema:DanceGroup schema:PerformingGroup)

# Class: schema:DataCatalog (DataCatalog)

AnnotationAssertion(rdfs:comment schema:DataCatalog "A collection of datasets.")
AnnotationAssertion(rdfs:label schema:DataCatalog "DataCatalog")
AnnotationAssertion(schema:contributor schema:DataCatalog <https://schema.org/docs/collab/DatasetClass>)
SubClassOf(schema:DataCatalog schema:CreativeWork)

# Class: schema:DataDownload (DataDownload)

AnnotationAssertion(rdfs:comment schema:DataDownload "All or part of a [[Dataset]] in downloadable form. ")
AnnotationAssertion(rdfs:label schema:DataDownload "DataDownload")
AnnotationAssertion(schema:contributor schema:DataDownload <https://schema.org/docs/collab/DatasetClass>)
SubClassOf(schema:DataDownload schema:MediaObject)

# Class: schema:DataFeed (DataFeed)

AnnotationAssertion(rdfs:comment schema:DataFeed "A single feed providing structured information about one or more entities or topics.")
AnnotationAssertion(rdfs:label schema:DataFeed "DataFeed")
SubClassOf(schema:DataFeed schema:Dataset)

# Class: schema:DataFeedItem (DataFeedItem)

AnnotationAssertion(rdfs:comment schema:DataFeedItem "A single item within a larger data feed.")
AnnotationAssertion(rdfs:label schema:DataFeedItem "DataFeedItem")
SubClassOf(schema:DataFeedItem schema:Intangible)

# Class: schema:DataType (DataType)

AnnotationAssertion(rdfs:comment schema:DataType "The basic data types such as Integers, Strings, etc.")
AnnotationAssertion(rdfs:label schema:DataType "DataType")
SubClassOf(schema:DataType rdfs:Class)

# Class: schema:Dataset (Dataset)

AnnotationAssertion(rdfs:comment schema:Dataset "A body of structured information describing some topic(s) of interest.")
AnnotationAssertion(rdfs:label schema:Dataset "Dataset")
AnnotationAssertion(schema:contributor schema:Dataset <https://schema.org/docs/collab/DatasetClass>)
SubClassOf(schema:Dataset schema:CreativeWork)

# Class: schema:Date (Date)

AnnotationAssertion(rdfs:comment schema:Date "A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:Date "Date")

# Class: schema:DateTime (DateTime)

AnnotationAssertion(rdfs:comment schema:DateTime "A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).")
AnnotationAssertion(rdfs:label schema:DateTime "DateTime")

# Class: schema:DatedMoneySpecification (DatedMoneySpecification)

AnnotationAssertion(rdfs:comment schema:DatedMoneySpecification "A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. __Note:__ This type has been superseded by [[MonetaryAmount]], use of that type is recommended.")
AnnotationAssertion(rdfs:label schema:DatedMoneySpecification "DatedMoneySpecification")
AnnotationAssertion(schema:supersededBy schema:DatedMoneySpecification schema:MonetaryAmount)
SubClassOf(schema:DatedMoneySpecification schema:StructuredValue)

# Class: schema:DayOfWeek (DayOfWeek)

AnnotationAssertion(rdfs:comment schema:DayOfWeek "The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.

Originally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) were used (for [[Monday]], [[Tuesday]], [[Wednesday]], [[Thursday]], [[Friday]], [[Saturday]], [[Sunday]] plus a special entry for [[PublicHolidays]]); these have now been integrated directly into schema.org.
      ")
AnnotationAssertion(rdfs:label schema:DayOfWeek "DayOfWeek")
AnnotationAssertion(schema:contributor schema:DayOfWeek <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:DayOfWeek schema:Enumeration)

# Class: schema:DaySpa (DaySpa)

AnnotationAssertion(rdfs:comment schema:DaySpa "A day spa.")
AnnotationAssertion(rdfs:label schema:DaySpa "DaySpa")
SubClassOf(schema:DaySpa schema:HealthAndBeautyBusiness)

# Class: schema:DeactivateAction (DeactivateAction)

AnnotationAssertion(rdfs:comment schema:DeactivateAction "The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).")
AnnotationAssertion(rdfs:label schema:DeactivateAction "DeactivateAction")
SubClassOf(schema:DeactivateAction schema:ControlAction)

# Class: schema:DefenceEstablishment (DefenceEstablishment)

AnnotationAssertion(rdfs:comment schema:DefenceEstablishment "A defence establishment, such as an army or navy base.")
AnnotationAssertion(rdfs:label schema:DefenceEstablishment "DefenceEstablishment")
SubClassOf(schema:DefenceEstablishment schema:GovernmentBuilding)

# Class: schema:DefinedRegion (DefinedRegion)

AnnotationAssertion(rdfs:comment schema:DefinedRegion "A DefinedRegion is a geographic area defined by potentially arbitrary (rather than political, administrative or natural geographical) criteria. Properties are provided for defining a region by reference to sets of postal codes.

Examples: a delivery destination when shopping. Region where regional pricing is configured.

Requirement 1:
Country: US
States: \"NY\", \"CA\"

Requirement 2:
Country: US
PostalCode Set: { [94000-94585], [97000, 97999], [13000, 13599]}
{ [12345, 12345], [78945, 78945], }
Region = state, canton, prefecture, autonomous community...
")
AnnotationAssertion(rdfs:label schema:DefinedRegion "DefinedRegion")
AnnotationAssertion(schema:source schema:DefinedRegion <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:DefinedRegion schema:StructuredValue)

# Class: schema:DefinedTerm (DefinedTerm)

AnnotationAssertion(rdfs:comment schema:DefinedTerm "A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.")
AnnotationAssertion(rdfs:label schema:DefinedTerm "DefinedTerm")
AnnotationAssertion(schema:isPartOf schema:DefinedTerm <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DefinedTerm <https://github.com/schemaorg/schemaorg/issues/894>)
SubClassOf(schema:DefinedTerm schema:Intangible)

# Class: schema:DefinedTermSet (DefinedTermSet)

AnnotationAssertion(rdfs:comment schema:DefinedTermSet "A set of defined terms, for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.")
AnnotationAssertion(rdfs:label schema:DefinedTermSet "DefinedTermSet")
AnnotationAssertion(schema:isPartOf schema:DefinedTermSet <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DefinedTermSet <https://github.com/schemaorg/schemaorg/issues/894>)
SubClassOf(schema:DefinedTermSet schema:CreativeWork)

# Class: schema:DeleteAction (DeleteAction)

AnnotationAssertion(rdfs:comment schema:DeleteAction "The act of editing a recipient by removing one of its objects.")
AnnotationAssertion(rdfs:label schema:DeleteAction "DeleteAction")
SubClassOf(schema:DeleteAction schema:UpdateAction)

# Class: schema:DeliveryChargeSpecification (DeliveryChargeSpecification)

AnnotationAssertion(rdfs:comment schema:DeliveryChargeSpecification "The price for the delivery of an offer using a particular delivery method.")
AnnotationAssertion(rdfs:label schema:DeliveryChargeSpecification "DeliveryChargeSpecification")
AnnotationAssertion(schema:contributor schema:DeliveryChargeSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:DeliveryChargeSpecification schema:PriceSpecification)

# Class: schema:DeliveryEvent (DeliveryEvent)

AnnotationAssertion(rdfs:comment schema:DeliveryEvent "An event involving the delivery of an item.")
AnnotationAssertion(rdfs:label schema:DeliveryEvent "DeliveryEvent")
SubClassOf(schema:DeliveryEvent schema:Event)

# Class: schema:DeliveryMethod (DeliveryMethod)

AnnotationAssertion(rdfs:comment schema:DeliveryMethod "A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#DeliveryModeDirectDownload\\n* http://purl.org/goodrelations/v1#DeliveryModeFreight\\n* http://purl.org/goodrelations/v1#DeliveryModeMail\\n* http://purl.org/goodrelations/v1#DeliveryModeOwnFleet\\n* http://purl.org/goodrelations/v1#DeliveryModePickUp\\n* http://purl.org/goodrelations/v1#DHL\\n* http://purl.org/goodrelations/v1#FederalExpress\\n* http://purl.org/goodrelations/v1#UPS
        ")
AnnotationAssertion(rdfs:label schema:DeliveryMethod "DeliveryMethod")
AnnotationAssertion(schema:contributor schema:DeliveryMethod <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:DeliveryMethod schema:Enumeration)

# Class: schema:DeliveryTimeSettings (DeliveryTimeSettings)

AnnotationAssertion(rdfs:comment schema:DeliveryTimeSettings "A DeliveryTimeSettings represents re-usable pieces of shipping information, relating to timing. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished (and identified/referenced) by their different values for [[transitTimeLabel]].")
AnnotationAssertion(rdfs:label schema:DeliveryTimeSettings "DeliveryTimeSettings")
AnnotationAssertion(schema:source schema:DeliveryTimeSettings <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:DeliveryTimeSettings schema:StructuredValue)

# Class: schema:Demand (Demand)

AnnotationAssertion(rdfs:comment schema:Demand "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.")
AnnotationAssertion(rdfs:label schema:Demand "Demand")
AnnotationAssertion(schema:contributor schema:Demand <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:Demand schema:Intangible)

# Class: schema:Dentist (Dentist)

AnnotationAssertion(rdfs:comment schema:Dentist "A dentist.")
AnnotationAssertion(rdfs:label schema:Dentist "Dentist")
SubClassOf(schema:Dentist schema:LocalBusiness)
SubClassOf(schema:Dentist schema:MedicalBusiness)
SubClassOf(schema:Dentist schema:MedicalOrganization)

# Class: schema:DepartAction (DepartAction)

AnnotationAssertion(rdfs:comment schema:DepartAction "The act of  departing from a place. An agent departs from a fromLocation for a destination, optionally with participants.")
AnnotationAssertion(rdfs:label schema:DepartAction "DepartAction")
SubClassOf(schema:DepartAction schema:MoveAction)

# Class: schema:DepartmentStore (DepartmentStore)

AnnotationAssertion(rdfs:comment schema:DepartmentStore "A department store.")
AnnotationAssertion(rdfs:label schema:DepartmentStore "DepartmentStore")
SubClassOf(schema:DepartmentStore schema:Store)

# Class: schema:DepositAccount (DepositAccount)

AnnotationAssertion(rdfs:comment schema:DepositAccount "A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.")
AnnotationAssertion(rdfs:label schema:DepositAccount "DepositAccount")
AnnotationAssertion(schema:contributor schema:DepositAccount <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:DepositAccount schema:BankAccount)
SubClassOf(schema:DepositAccount schema:InvestmentOrDeposit)

# Class: schema:Dermatology (Dermatology)

AnnotationAssertion(rdfs:comment schema:Dermatology "A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.")
AnnotationAssertion(rdfs:label schema:Dermatology "Dermatology")
AnnotationAssertion(schema:isPartOf schema:Dermatology <https://health-lifesci.schema.org>)
SubClassOf(schema:Dermatology schema:MedicalBusiness)

# Class: schema:DiagnosticLab (DiagnosticLab)

AnnotationAssertion(rdfs:comment schema:DiagnosticLab "A medical laboratory that offers on-site or off-site diagnostic services.")
AnnotationAssertion(rdfs:label schema:DiagnosticLab "DiagnosticLab")
AnnotationAssertion(schema:isPartOf schema:DiagnosticLab <https://health-lifesci.schema.org>)
SubClassOf(schema:DiagnosticLab schema:MedicalOrganization)

# Class: schema:DiagnosticProcedure (DiagnosticProcedure)

AnnotationAssertion(rdfs:comment schema:DiagnosticProcedure "A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.")
AnnotationAssertion(rdfs:label schema:DiagnosticProcedure "DiagnosticProcedure")
AnnotationAssertion(schema:isPartOf schema:DiagnosticProcedure <https://health-lifesci.schema.org>)
SubClassOf(schema:DiagnosticProcedure schema:MedicalProcedure)

# Class: schema:Diet (Diet)

AnnotationAssertion(rdfs:comment schema:Diet "A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.")
AnnotationAssertion(rdfs:label schema:Diet "Diet")
AnnotationAssertion(schema:isPartOf schema:Diet <https://health-lifesci.schema.org>)
SubClassOf(schema:Diet schema:CreativeWork)
SubClassOf(schema:Diet schema:LifestyleModification)

# Class: schema:DietNutrition (DietNutrition)

AnnotationAssertion(rdfs:comment schema:DietNutrition "Dietetics and nutrition as a medical specialty.")
AnnotationAssertion(rdfs:label schema:DietNutrition "DietNutrition")
AnnotationAssertion(schema:isPartOf schema:DietNutrition <https://health-lifesci.schema.org>)
SubClassOf(schema:DietNutrition schema:MedicalBusiness)

# Class: schema:DietarySupplement (DietarySupplement)

AnnotationAssertion(rdfs:comment schema:DietarySupplement "A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.")
AnnotationAssertion(rdfs:label schema:DietarySupplement "DietarySupplement")
AnnotationAssertion(schema:isPartOf schema:DietarySupplement <https://health-lifesci.schema.org>)
SubClassOf(schema:DietarySupplement schema:Product)
SubClassOf(schema:DietarySupplement schema:Substance)

# Class: schema:DigitalDocument (DigitalDocument)

AnnotationAssertion(rdfs:comment schema:DigitalDocument "An electronic file or document.")
AnnotationAssertion(rdfs:label schema:DigitalDocument "DigitalDocument")
SubClassOf(schema:DigitalDocument schema:CreativeWork)

# Class: schema:DigitalDocumentPermission (DigitalDocumentPermission)

AnnotationAssertion(rdfs:comment schema:DigitalDocumentPermission "A permission for a particular person or group to access a particular file.")
AnnotationAssertion(rdfs:label schema:DigitalDocumentPermission "DigitalDocumentPermission")
SubClassOf(schema:DigitalDocumentPermission schema:Intangible)

# Class: schema:DigitalDocumentPermissionType (DigitalDocumentPermissionType)

AnnotationAssertion(rdfs:comment schema:DigitalDocumentPermissionType "A type of permission which can be granted for accessing a digital document.")
AnnotationAssertion(rdfs:label schema:DigitalDocumentPermissionType "DigitalDocumentPermissionType")
SubClassOf(schema:DigitalDocumentPermissionType schema:Enumeration)

# Class: schema:DigitalPlatformEnumeration (DigitalPlatformEnumeration)

AnnotationAssertion(rdfs:comment schema:DigitalPlatformEnumeration "Enumerates some common technology platforms, for use with properties such as [[actionPlatform]]. It is not supposed to be comprehensive - when a suitable code is not enumerated here, textual or URL values can be used instead. These codes are at a fairly high level and do not deal with versioning and other nuance. Additional codes can be suggested [in github](https://github.com/schemaorg/schemaorg/issues/3057). ")
AnnotationAssertion(rdfs:label schema:DigitalPlatformEnumeration "DigitalPlatformEnumeration")
AnnotationAssertion(schema:isPartOf schema:DigitalPlatformEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DigitalPlatformEnumeration <https://github.com/schemaorg/schemaorg/issues/3057>)
SubClassOf(schema:DigitalPlatformEnumeration schema:Enumeration)

# Class: schema:DisagreeAction (DisagreeAction)

AnnotationAssertion(rdfs:comment schema:DisagreeAction "The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.")
AnnotationAssertion(rdfs:label schema:DisagreeAction "DisagreeAction")
SubClassOf(schema:DisagreeAction schema:ReactAction)

# Class: schema:DiscoverAction (DiscoverAction)

AnnotationAssertion(rdfs:comment schema:DiscoverAction "The act of discovering/finding an object.")
AnnotationAssertion(rdfs:label schema:DiscoverAction "DiscoverAction")
SubClassOf(schema:DiscoverAction schema:FindAction)

# Class: schema:DiscussionForumPosting (DiscussionForumPosting)

AnnotationAssertion(rdfs:comment schema:DiscussionForumPosting "A posting to a discussion forum.")
AnnotationAssertion(rdfs:label schema:DiscussionForumPosting "DiscussionForumPosting")
SubClassOf(schema:DiscussionForumPosting schema:SocialMediaPosting)

# Class: schema:DislikeAction (DislikeAction)

AnnotationAssertion(rdfs:comment schema:DislikeAction "The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.")
AnnotationAssertion(rdfs:label schema:DislikeAction "DislikeAction")
SubClassOf(schema:DislikeAction schema:ReactAction)

# Class: schema:Distance (Distance)

AnnotationAssertion(rdfs:comment schema:Distance "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.")
AnnotationAssertion(rdfs:label schema:Distance "Distance")
SubClassOf(schema:Distance schema:Quantity)

# Class: schema:Distillery (Distillery)

AnnotationAssertion(rdfs:comment schema:Distillery "A distillery.")
AnnotationAssertion(rdfs:label schema:Distillery "Distillery")
AnnotationAssertion(schema:source schema:Distillery <https://github.com/schemaorg/schemaorg/issues/743>)
SubClassOf(schema:Distillery schema:FoodEstablishment)

# Class: schema:DonateAction (DonateAction)

AnnotationAssertion(rdfs:comment schema:DonateAction "The act of providing goods, services, or money without compensation, often for philanthropic reasons.")
AnnotationAssertion(rdfs:label schema:DonateAction "DonateAction")
SubClassOf(schema:DonateAction schema:TransferAction)

# Class: schema:DoseSchedule (DoseSchedule)

AnnotationAssertion(rdfs:comment schema:DoseSchedule "A specific dosing schedule for a drug or supplement.")
AnnotationAssertion(rdfs:label schema:DoseSchedule "DoseSchedule")
AnnotationAssertion(schema:isPartOf schema:DoseSchedule <https://health-lifesci.schema.org>)
SubClassOf(schema:DoseSchedule schema:MedicalIntangible)

# Class: schema:DownloadAction (DownloadAction)

AnnotationAssertion(rdfs:comment schema:DownloadAction "The act of downloading an object.")
AnnotationAssertion(rdfs:label schema:DownloadAction "DownloadAction")
SubClassOf(schema:DownloadAction schema:TransferAction)

# Class: schema:DrawAction (DrawAction)

AnnotationAssertion(rdfs:comment schema:DrawAction "The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.")
AnnotationAssertion(rdfs:label schema:DrawAction "DrawAction")
SubClassOf(schema:DrawAction schema:CreateAction)

# Class: schema:Drawing (Drawing)

AnnotationAssertion(rdfs:comment schema:Drawing "A picture or diagram made with a pencil, pen, or crayon rather than paint.")
AnnotationAssertion(rdfs:label schema:Drawing "Drawing")
AnnotationAssertion(schema:isPartOf schema:Drawing <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Drawing <https://github.com/schemaorg/schemaorg/issues/1448>)
SubClassOf(schema:Drawing schema:CreativeWork)

# Class: schema:DrinkAction (DrinkAction)

AnnotationAssertion(rdfs:comment schema:DrinkAction "The act of swallowing liquids.")
AnnotationAssertion(rdfs:label schema:DrinkAction "DrinkAction")
SubClassOf(schema:DrinkAction schema:ConsumeAction)

# Class: schema:DriveWheelConfigurationValue (DriveWheelConfigurationValue)

AnnotationAssertion(rdfs:comment schema:DriveWheelConfigurationValue "A value indicating which roadwheels will receive torque.")
AnnotationAssertion(rdfs:label schema:DriveWheelConfigurationValue "DriveWheelConfigurationValue")
AnnotationAssertion(schema:contributor schema:DriveWheelConfigurationValue <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
SubClassOf(schema:DriveWheelConfigurationValue schema:QualitativeValue)

# Class: schema:Drug (Drug)

AnnotationAssertion(rdfs:comment schema:Drug "A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge makes a clear difference between them.")
AnnotationAssertion(rdfs:label schema:Drug "Drug")
AnnotationAssertion(schema:isPartOf schema:Drug <https://health-lifesci.schema.org>)
SubClassOf(schema:Drug schema:Product)
SubClassOf(schema:Drug schema:Substance)

# Class: schema:DrugClass (DrugClass)

AnnotationAssertion(rdfs:comment schema:DrugClass "A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.")
AnnotationAssertion(rdfs:label schema:DrugClass "DrugClass")
AnnotationAssertion(schema:isPartOf schema:DrugClass <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugClass schema:MedicalEntity)

# Class: schema:DrugCost (DrugCost)

AnnotationAssertion(rdfs:comment schema:DrugCost "The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.")
AnnotationAssertion(rdfs:label schema:DrugCost "DrugCost")
AnnotationAssertion(schema:isPartOf schema:DrugCost <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugCost schema:MedicalEntity)

# Class: schema:DrugCostCategory (DrugCostCategory)

AnnotationAssertion(rdfs:comment schema:DrugCostCategory "Enumerated categories of medical drug costs.")
AnnotationAssertion(rdfs:label schema:DrugCostCategory "DrugCostCategory")
AnnotationAssertion(schema:isPartOf schema:DrugCostCategory <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugCostCategory schema:MedicalEnumeration)

# Class: schema:DrugLegalStatus (DrugLegalStatus)

AnnotationAssertion(rdfs:comment schema:DrugLegalStatus "The legal availability status of a medical drug.")
AnnotationAssertion(rdfs:label schema:DrugLegalStatus "DrugLegalStatus")
AnnotationAssertion(schema:isPartOf schema:DrugLegalStatus <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugLegalStatus schema:MedicalIntangible)

# Class: schema:DrugPregnancyCategory (DrugPregnancyCategory)

AnnotationAssertion(rdfs:comment schema:DrugPregnancyCategory "Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.")
AnnotationAssertion(rdfs:label schema:DrugPregnancyCategory "DrugPregnancyCategory")
AnnotationAssertion(schema:isPartOf schema:DrugPregnancyCategory <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugPregnancyCategory schema:MedicalEnumeration)

# Class: schema:DrugPrescriptionStatus (DrugPrescriptionStatus)

AnnotationAssertion(rdfs:comment schema:DrugPrescriptionStatus "Indicates whether this drug is available by prescription or over-the-counter.")
AnnotationAssertion(rdfs:label schema:DrugPrescriptionStatus "DrugPrescriptionStatus")
AnnotationAssertion(schema:isPartOf schema:DrugPrescriptionStatus <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugPrescriptionStatus schema:MedicalEnumeration)

# Class: schema:DrugStrength (DrugStrength)

AnnotationAssertion(rdfs:comment schema:DrugStrength "A specific strength in which a medical drug is available in a specific country.")
AnnotationAssertion(rdfs:label schema:DrugStrength "DrugStrength")
AnnotationAssertion(schema:isPartOf schema:DrugStrength <https://health-lifesci.schema.org>)
SubClassOf(schema:DrugStrength schema:MedicalIntangible)

# Class: schema:DryCleaningOrLaundry (DryCleaningOrLaundry)

AnnotationAssertion(rdfs:comment schema:DryCleaningOrLaundry "A dry-cleaning business.")
AnnotationAssertion(rdfs:label schema:DryCleaningOrLaundry "DryCleaningOrLaundry")
SubClassOf(schema:DryCleaningOrLaundry schema:LocalBusiness)

# Class: schema:Duration (Duration)

AnnotationAssertion(rdfs:comment schema:Duration "Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).")
AnnotationAssertion(rdfs:label schema:Duration "Duration")
SubClassOf(schema:Duration schema:Quantity)

# Class: schema:EUEnergyEfficiencyEnumeration (EUEnergyEfficiencyEnumeration)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyEnumeration "Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ as defined in EU directive 2017/1369.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyEnumeration "EUEnergyEfficiencyEnumeration")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyEnumeration <https://github.com/schemaorg/schemaorg/issues/2670>)
SubClassOf(schema:EUEnergyEfficiencyEnumeration schema:EnergyEfficiencyEnumeration)

# Class: schema:EatAction (EatAction)

AnnotationAssertion(rdfs:comment schema:EatAction "The act of swallowing solid objects.")
AnnotationAssertion(rdfs:label schema:EatAction "EatAction")
SubClassOf(schema:EatAction schema:ConsumeAction)

# Class: schema:EducationEvent (EducationEvent)

AnnotationAssertion(rdfs:comment schema:EducationEvent "Event type: Education event.")
AnnotationAssertion(rdfs:label schema:EducationEvent "EducationEvent")
SubClassOf(schema:EducationEvent schema:Event)

# Class: schema:EducationalAudience (EducationalAudience)

AnnotationAssertion(rdfs:comment schema:EducationalAudience "An EducationalAudience.")
AnnotationAssertion(rdfs:label schema:EducationalAudience "EducationalAudience")
AnnotationAssertion(schema:contributor schema:EducationalAudience <https://schema.org/docs/collab/LRMIClass>)
SubClassOf(schema:EducationalAudience schema:Audience)

# Class: schema:EducationalOccupationalCredential (EducationalOccupationalCredential)

AnnotationAssertion(rdfs:comment schema:EducationalOccupationalCredential "An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.")
AnnotationAssertion(rdfs:label schema:EducationalOccupationalCredential "EducationalOccupationalCredential")
AnnotationAssertion(schema:isPartOf schema:EducationalOccupationalCredential <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EducationalOccupationalCredential <https://github.com/schemaorg/schemaorg/issues/1779>)
SubClassOf(schema:EducationalOccupationalCredential schema:CreativeWork)

# Class: schema:EducationalOccupationalProgram (EducationalOccupationalProgram)

AnnotationAssertion(rdfs:comment schema:EducationalOccupationalProgram "A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).")
AnnotationAssertion(rdfs:label schema:EducationalOccupationalProgram "EducationalOccupationalProgram")
AnnotationAssertion(schema:isPartOf schema:EducationalOccupationalProgram <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EducationalOccupationalProgram <https://github.com/schemaorg/schemaorg/issues/2289>)
SubClassOf(schema:EducationalOccupationalProgram schema:Intangible)

# Class: schema:EducationalOrganization (EducationalOrganization)

AnnotationAssertion(rdfs:comment schema:EducationalOrganization "An educational organization.")
AnnotationAssertion(rdfs:label schema:EducationalOrganization "EducationalOrganization")
SubClassOf(schema:EducationalOrganization schema:CivicStructure)
SubClassOf(schema:EducationalOrganization schema:Organization)

# Class: schema:Electrician (Electrician)

AnnotationAssertion(rdfs:comment schema:Electrician "An electrician.")
AnnotationAssertion(rdfs:label schema:Electrician "Electrician")
SubClassOf(schema:Electrician schema:HomeAndConstructionBusiness)

# Class: schema:ElectronicsStore (ElectronicsStore)

AnnotationAssertion(rdfs:comment schema:ElectronicsStore "An electronics store.")
AnnotationAssertion(rdfs:label schema:ElectronicsStore "ElectronicsStore")
SubClassOf(schema:ElectronicsStore schema:Store)

# Class: schema:ElementarySchool (ElementarySchool)

AnnotationAssertion(rdfs:comment schema:ElementarySchool "An elementary school.")
AnnotationAssertion(rdfs:label schema:ElementarySchool "ElementarySchool")
SubClassOf(schema:ElementarySchool schema:EducationalOrganization)

# Class: schema:EmailMessage (EmailMessage)

AnnotationAssertion(rdfs:comment schema:EmailMessage "An email message.")
AnnotationAssertion(rdfs:label schema:EmailMessage "EmailMessage")
SubClassOf(schema:EmailMessage schema:Message)

# Class: schema:Embassy (Embassy)

AnnotationAssertion(rdfs:comment schema:Embassy "An embassy.")
AnnotationAssertion(rdfs:label schema:Embassy "Embassy")
SubClassOf(schema:Embassy schema:GovernmentBuilding)

# Class: schema:Emergency (Emergency)

AnnotationAssertion(rdfs:comment schema:Emergency "A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.")
AnnotationAssertion(rdfs:label schema:Emergency "Emergency")
AnnotationAssertion(schema:isPartOf schema:Emergency <https://health-lifesci.schema.org>)
SubClassOf(schema:Emergency schema:MedicalBusiness)

# Class: schema:EmergencyService (EmergencyService)

AnnotationAssertion(rdfs:comment schema:EmergencyService "An emergency service, such as a fire station or ER.")
AnnotationAssertion(rdfs:label schema:EmergencyService "EmergencyService")
SubClassOf(schema:EmergencyService schema:LocalBusiness)

# Class: schema:EmployeeRole (EmployeeRole)

AnnotationAssertion(rdfs:comment schema:EmployeeRole "A subclass of OrganizationRole used to describe employee relationships.")
AnnotationAssertion(rdfs:label schema:EmployeeRole "EmployeeRole")
SubClassOf(schema:EmployeeRole schema:OrganizationRole)

# Class: schema:EmployerAggregateRating (EmployerAggregateRating)

AnnotationAssertion(rdfs:comment schema:EmployerAggregateRating "An aggregate rating of an Organization related to its role as an employer.")
AnnotationAssertion(rdfs:label schema:EmployerAggregateRating "EmployerAggregateRating")
AnnotationAssertion(schema:source schema:EmployerAggregateRating <https://github.com/schemaorg/schemaorg/issues/1689>)
SubClassOf(schema:EmployerAggregateRating schema:AggregateRating)

# Class: schema:EmployerReview (EmployerReview)

AnnotationAssertion(rdfs:comment schema:EmployerReview "An [[EmployerReview]] is a review of an [[Organization]] regarding its role as an employer, written by a current or former employee of that organization.")
AnnotationAssertion(rdfs:label schema:EmployerReview "EmployerReview")
AnnotationAssertion(schema:isPartOf schema:EmployerReview <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EmployerReview <https://github.com/schemaorg/schemaorg/issues/1589>)
SubClassOf(schema:EmployerReview schema:Review)

# Class: schema:EmploymentAgency (EmploymentAgency)

AnnotationAssertion(rdfs:comment schema:EmploymentAgency "An employment agency.")
AnnotationAssertion(rdfs:label schema:EmploymentAgency "EmploymentAgency")
SubClassOf(schema:EmploymentAgency schema:LocalBusiness)

# Class: schema:EndorseAction (EndorseAction)

AnnotationAssertion(rdfs:comment schema:EndorseAction "An agent approves/certifies/likes/supports/sanctions an object.")
AnnotationAssertion(rdfs:label schema:EndorseAction "EndorseAction")
SubClassOf(schema:EndorseAction schema:ReactAction)

# Class: schema:EndorsementRating (EndorsementRating)

AnnotationAssertion(rdfs:comment schema:EndorsementRating "An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a \"critic's pick\" blog, a
\"Like\" or \"+1\" on a social network. It can be considered the [[result]] of an [[EndorseAction]] in which the [[object]] of the action is rated positively by
some [[agent]]. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the [[Action]].

An [[EndorsementRating]] may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
")
AnnotationAssertion(rdfs:label schema:EndorsementRating "EndorsementRating")
AnnotationAssertion(schema:source schema:EndorsementRating <https://github.com/schemaorg/schemaorg/issues/1293>)
SubClassOf(schema:EndorsementRating schema:Rating)

# Class: schema:Energy (Energy)

AnnotationAssertion(rdfs:comment schema:Energy "Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.")
AnnotationAssertion(rdfs:label schema:Energy "Energy")
SubClassOf(schema:Energy schema:Quantity)

# Class: schema:EnergyConsumptionDetails (EnergyConsumptionDetails)

AnnotationAssertion(rdfs:comment schema:EnergyConsumptionDetails "EnergyConsumptionDetails represents information related to the energy efficiency of a product that consumes energy. The information that can be provided is based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) under the Energy Policy and Conservation Act (EPCA) in the US.")
AnnotationAssertion(rdfs:label schema:EnergyConsumptionDetails "EnergyConsumptionDetails")
AnnotationAssertion(schema:isPartOf schema:EnergyConsumptionDetails <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EnergyConsumptionDetails <https://github.com/schemaorg/schemaorg/issues/2670>)
SubClassOf(schema:EnergyConsumptionDetails schema:Intangible)

# Class: schema:EnergyEfficiencyEnumeration (EnergyEfficiencyEnumeration)

AnnotationAssertion(rdfs:comment schema:EnergyEfficiencyEnumeration "Enumerates energy efficiency levels (also known as \"classes\" or \"ratings\") and certifications that are part of several international energy efficiency standards.")
AnnotationAssertion(rdfs:label schema:EnergyEfficiencyEnumeration "EnergyEfficiencyEnumeration")
AnnotationAssertion(schema:isPartOf schema:EnergyEfficiencyEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EnergyEfficiencyEnumeration <https://github.com/schemaorg/schemaorg/issues/2670>)
SubClassOf(schema:EnergyEfficiencyEnumeration schema:Enumeration)

# Class: schema:EnergyStarEnergyEfficiencyEnumeration (EnergyStarEnergyEfficiencyEnumeration)

AnnotationAssertion(rdfs:comment schema:EnergyStarEnergyEfficiencyEnumeration "Used to indicate whether a product is EnergyStar certified.")
AnnotationAssertion(rdfs:label schema:EnergyStarEnergyEfficiencyEnumeration "EnergyStarEnergyEfficiencyEnumeration")
AnnotationAssertion(schema:isPartOf schema:EnergyStarEnergyEfficiencyEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EnergyStarEnergyEfficiencyEnumeration <https://github.com/schemaorg/schemaorg/issues/2670>)
SubClassOf(schema:EnergyStarEnergyEfficiencyEnumeration schema:EnergyEfficiencyEnumeration)

# Class: schema:EngineSpecification (EngineSpecification)

AnnotationAssertion(rdfs:comment schema:EngineSpecification "Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.")
AnnotationAssertion(rdfs:label schema:EngineSpecification "EngineSpecification")
AnnotationAssertion(schema:contributor schema:EngineSpecification <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
SubClassOf(schema:EngineSpecification schema:StructuredValue)

# Class: schema:EntertainmentBusiness (EntertainmentBusiness)

AnnotationAssertion(rdfs:comment schema:EntertainmentBusiness "A business providing entertainment.")
AnnotationAssertion(rdfs:label schema:EntertainmentBusiness "EntertainmentBusiness")
SubClassOf(schema:EntertainmentBusiness schema:LocalBusiness)

# Class: schema:EntryPoint (EntryPoint)

AnnotationAssertion(rdfs:comment schema:EntryPoint "An entry point, within some Web-based protocol.")
AnnotationAssertion(rdfs:label schema:EntryPoint "EntryPoint")
AnnotationAssertion(schema:contributor schema:EntryPoint <https://schema.org/docs/collab/ActionCollabClass>)
SubClassOf(schema:EntryPoint schema:Intangible)

# Class: schema:Enumeration (Enumeration)

AnnotationAssertion(rdfs:comment schema:Enumeration "Lists or enumerations—for example, a list of cuisines or music genres, etc.")
AnnotationAssertion(rdfs:label schema:Enumeration "Enumeration")
SubClassOf(schema:Enumeration schema:Intangible)

# Class: schema:Episode (Episode)

AnnotationAssertion(rdfs:comment schema:Episode "A media episode (e.g. TV, radio, video game) which can be part of a series or season.")
AnnotationAssertion(rdfs:label schema:Episode "Episode")
SubClassOf(schema:Episode schema:CreativeWork)

# Class: schema:Event (Event)

AnnotationAssertion(rdfs:comment schema:Event "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the [[offers]] property. Repeated events may be structured as separate Event objects.")
AnnotationAssertion(rdfs:label schema:Event "Event")
SubClassOf(schema:Event schema:Thing)

# Class: schema:EventAttendanceModeEnumeration (EventAttendanceModeEnumeration)

AnnotationAssertion(rdfs:comment schema:EventAttendanceModeEnumeration "An EventAttendanceModeEnumeration value is one of potentially several modes of organising an event, relating to whether it is online or offline.")
AnnotationAssertion(rdfs:label schema:EventAttendanceModeEnumeration "EventAttendanceModeEnumeration")
AnnotationAssertion(schema:isPartOf schema:EventAttendanceModeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EventAttendanceModeEnumeration <https://github.com/schemaorg/schemaorg/issues/1842>)
SubClassOf(schema:EventAttendanceModeEnumeration schema:Enumeration)

# Class: schema:EventReservation (EventReservation)

AnnotationAssertion(rdfs:comment schema:EventReservation "A reservation for an event like a concert, sporting event, or lecture.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:EventReservation "EventReservation")
SubClassOf(schema:EventReservation schema:Reservation)

# Class: schema:EventSeries (EventSeries)

AnnotationAssertion(rdfs:comment schema:EventSeries "A series of [[Event]]s. Included events can relate with the series using the [[superEvent]] property.

An EventSeries is a collection of events that share some unifying characteristic. For example, \"The Olympic Games\" is a series, which
is repeated regularly. The \"2012 London Olympics\" can be presented both as an [[Event]] in the series \"Olympic Games\", and as an
[[EventSeries]] that included a number of sporting competitions as Events.

The nature of the association between the events in an [[EventSeries]] can vary, but typical examples could
include a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.

EventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without
worrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries
may seem more Event-like when the period of time is compact and when aspects such as location are fixed, but
it may also sometimes prove useful to describe a longer-term series as an Event.
   ")
AnnotationAssertion(rdfs:label schema:EventSeries "EventSeries")
AnnotationAssertion(schema:isPartOf schema:EventSeries <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EventSeries <https://github.com/schemaorg/schemaorg/issues/447>)
SubClassOf(schema:EventSeries schema:Event)
SubClassOf(schema:EventSeries schema:Series)

# Class: schema:EventStatusType (EventStatusType)

AnnotationAssertion(rdfs:comment schema:EventStatusType "EventStatusType is an enumeration type whose instances represent several states that an Event may be in.")
AnnotationAssertion(rdfs:label schema:EventStatusType "EventStatusType")
SubClassOf(schema:EventStatusType schema:StatusEnumeration)

# Class: schema:EventVenue (EventVenue)

AnnotationAssertion(rdfs:comment schema:EventVenue "An event venue.")
AnnotationAssertion(rdfs:label schema:EventVenue "EventVenue")
SubClassOf(schema:EventVenue schema:CivicStructure)

# Class: schema:ExchangeRateSpecification (ExchangeRateSpecification)

AnnotationAssertion(rdfs:comment schema:ExchangeRateSpecification "A structured value representing exchange rate.")
AnnotationAssertion(rdfs:label schema:ExchangeRateSpecification "ExchangeRateSpecification")
AnnotationAssertion(schema:contributor schema:ExchangeRateSpecification <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:ExchangeRateSpecification <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ExchangeRateSpecification <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:ExchangeRateSpecification schema:StructuredValue)

# Class: schema:ExerciseAction (ExerciseAction)

AnnotationAssertion(rdfs:comment schema:ExerciseAction "The act of participating in exertive activity for the purposes of improving health and fitness.")
AnnotationAssertion(rdfs:label schema:ExerciseAction "ExerciseAction")
SubClassOf(schema:ExerciseAction schema:PlayAction)

# Class: schema:ExerciseGym (ExerciseGym)

AnnotationAssertion(rdfs:comment schema:ExerciseGym "A gym.")
AnnotationAssertion(rdfs:label schema:ExerciseGym "ExerciseGym")
SubClassOf(schema:ExerciseGym schema:SportsActivityLocation)

# Class: schema:ExercisePlan (ExercisePlan)

AnnotationAssertion(rdfs:comment schema:ExercisePlan "Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.")
AnnotationAssertion(rdfs:label schema:ExercisePlan "ExercisePlan")
AnnotationAssertion(schema:isPartOf schema:ExercisePlan <https://health-lifesci.schema.org>)
SubClassOf(schema:ExercisePlan schema:CreativeWork)
SubClassOf(schema:ExercisePlan schema:PhysicalActivity)

# Class: schema:ExhibitionEvent (ExhibitionEvent)

AnnotationAssertion(rdfs:comment schema:ExhibitionEvent "Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...")
AnnotationAssertion(rdfs:label schema:ExhibitionEvent "ExhibitionEvent")
SubClassOf(schema:ExhibitionEvent schema:Event)

# Class: schema:FAQPage (FAQPage)

AnnotationAssertion(rdfs:comment schema:FAQPage "A [[FAQPage]] is a [[WebPage]] presenting one or more \"[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)\" (see also [[QAPage]]).")
AnnotationAssertion(rdfs:label schema:FAQPage "FAQPage")
AnnotationAssertion(schema:source schema:FAQPage <https://github.com/schemaorg/schemaorg/issues/1723>)
SubClassOf(schema:FAQPage schema:WebPage)

# Class: schema:FMRadioChannel (FMRadioChannel)

AnnotationAssertion(rdfs:comment schema:FMRadioChannel "A radio channel that uses FM.")
AnnotationAssertion(rdfs:label schema:FMRadioChannel "FMRadioChannel")
AnnotationAssertion(schema:source schema:FMRadioChannel <https://github.com/schemaorg/schemaorg/issues/1004>)
SubClassOf(schema:FMRadioChannel schema:RadioChannel)

# Class: schema:FastFoodRestaurant (FastFoodRestaurant)

AnnotationAssertion(rdfs:comment schema:FastFoodRestaurant "A fast-food restaurant.")
AnnotationAssertion(rdfs:label schema:FastFoodRestaurant "FastFoodRestaurant")
SubClassOf(schema:FastFoodRestaurant schema:FoodEstablishment)

# Class: schema:Festival (Festival)

AnnotationAssertion(rdfs:comment schema:Festival "Event type: Festival.")
AnnotationAssertion(rdfs:label schema:Festival "Festival")
SubClassOf(schema:Festival schema:Event)

# Class: schema:FilmAction (FilmAction)

AnnotationAssertion(rdfs:comment schema:FilmAction "The act of capturing sound and moving images on film, video, or digitally.")
AnnotationAssertion(rdfs:label schema:FilmAction "FilmAction")
SubClassOf(schema:FilmAction schema:CreateAction)

# Class: schema:FinancialProduct (FinancialProduct)

AnnotationAssertion(rdfs:comment schema:FinancialProduct "A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.")
AnnotationAssertion(rdfs:label schema:FinancialProduct "FinancialProduct")
AnnotationAssertion(schema:contributor schema:FinancialProduct <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:FinancialProduct schema:Service)

# Class: schema:FinancialService (FinancialService)

AnnotationAssertion(rdfs:comment schema:FinancialService "Financial services business.")
AnnotationAssertion(rdfs:label schema:FinancialService "FinancialService")
SubClassOf(schema:FinancialService schema:LocalBusiness)

# Class: schema:FindAction (FindAction)

AnnotationAssertion(rdfs:comment schema:FindAction "The act of finding an object.\\n\\nRelated actions:\\n\\n* [[SearchAction]]: FindAction is generally lead by a SearchAction, but not necessarily.")
AnnotationAssertion(rdfs:label schema:FindAction "FindAction")
SubClassOf(schema:FindAction schema:Action)

# Class: schema:FireStation (FireStation)

AnnotationAssertion(rdfs:comment schema:FireStation "A fire station. With firemen.")
AnnotationAssertion(rdfs:label schema:FireStation "FireStation")
SubClassOf(schema:FireStation schema:CivicStructure)
SubClassOf(schema:FireStation schema:EmergencyService)

# Class: schema:Flight (Flight)

AnnotationAssertion(rdfs:comment schema:Flight "An airline flight.")
AnnotationAssertion(rdfs:label schema:Flight "Flight")
SubClassOf(schema:Flight schema:Trip)

# Class: schema:FlightReservation (FlightReservation)

AnnotationAssertion(rdfs:comment schema:FlightReservation "A reservation for air travel.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:FlightReservation "FlightReservation")
SubClassOf(schema:FlightReservation schema:Reservation)

# Class: schema:Float (Float)

AnnotationAssertion(rdfs:comment schema:Float "Data type: Floating number.")
AnnotationAssertion(rdfs:label schema:Float "Float")
SubClassOf(schema:Float schema:Number)

# Class: schema:FloorPlan (FloorPlan)

AnnotationAssertion(rdfs:comment schema:FloorPlan "A FloorPlan is an explicit representation of a collection of similar accommodations, allowing the provision of common information (room counts, sizes, layout diagrams) and offers for rental or sale. In typical use, some [[ApartmentComplex]] has an [[accommodationFloorPlan]] which is a [[FloorPlan]].  A FloorPlan is always in the context of a particular place, either a larger [[ApartmentComplex]] or a single [[Apartment]]. The visual/spatial aspects of a floor plan (i.e. room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can be indicated using [[image]]. ")
AnnotationAssertion(rdfs:label schema:FloorPlan "FloorPlan")
AnnotationAssertion(schema:isPartOf schema:FloorPlan <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FloorPlan <https://github.com/schemaorg/schemaorg/issues/2373>)
SubClassOf(schema:FloorPlan schema:Intangible)

# Class: schema:Florist (Florist)

AnnotationAssertion(rdfs:comment schema:Florist "A florist.")
AnnotationAssertion(rdfs:label schema:Florist "Florist")
SubClassOf(schema:Florist schema:Store)

# Class: schema:FollowAction (FollowAction)

AnnotationAssertion(rdfs:comment schema:FollowAction "The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.\\n\\nRelated actions:\\n\\n* [[BefriendAction]]: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.\\n* [[SubscribeAction]]: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.\\n* [[RegisterAction]]: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.\\n* [[JoinAction]]: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.\\n* [[TrackAction]]: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).")
AnnotationAssertion(rdfs:label schema:FollowAction "FollowAction")
SubClassOf(schema:FollowAction schema:InteractAction)

# Class: schema:FoodEstablishment (FoodEstablishment)

AnnotationAssertion(rdfs:comment schema:FoodEstablishment "A food-related business.")
AnnotationAssertion(rdfs:label schema:FoodEstablishment "FoodEstablishment")
SubClassOf(schema:FoodEstablishment schema:LocalBusiness)

# Class: schema:FoodEstablishmentReservation (FoodEstablishmentReservation)

AnnotationAssertion(rdfs:comment schema:FoodEstablishmentReservation "A reservation to dine at a food-related business.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.")
AnnotationAssertion(rdfs:label schema:FoodEstablishmentReservation "FoodEstablishmentReservation")
SubClassOf(schema:FoodEstablishmentReservation schema:Reservation)

# Class: schema:FoodEvent (FoodEvent)

AnnotationAssertion(rdfs:comment schema:FoodEvent "Event type: Food event.")
AnnotationAssertion(rdfs:label schema:FoodEvent "FoodEvent")
SubClassOf(schema:FoodEvent schema:Event)

# Class: schema:FoodService (FoodService)

AnnotationAssertion(rdfs:comment schema:FoodService "A food service, like breakfast, lunch, or dinner.")
AnnotationAssertion(rdfs:label schema:FoodService "FoodService")
AnnotationAssertion(schema:contributor schema:FoodService <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:FoodService schema:Service)

# Class: schema:FundingAgency (FundingAgency)

AnnotationAssertion(rdfs:comment schema:FundingAgency "A FundingAgency is an organization that implements one or more [[FundingScheme]]s and manages
    the granting process (via [[Grant]]s, typically [[MonetaryGrant]]s).
    A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.
    
Examples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation, ...
    ")
AnnotationAssertion(rdfs:label schema:FundingAgency "FundingAgency")
AnnotationAssertion(schema:isPartOf schema:FundingAgency <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FundingAgency <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:FundingAgency <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:FundingAgency schema:Project)

# Class: schema:FundingScheme (FundingScheme)

AnnotationAssertion(rdfs:comment schema:FundingScheme "A FundingScheme combines organizational, project and policy aspects of grant-based funding
    that sets guidelines, principles and mechanisms to support other kinds of projects and activities.
    Funding is typically organized via [[Grant]] funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - [[FundingAgency]]s such as ERC, REA, ...")
AnnotationAssertion(rdfs:label schema:FundingScheme "FundingScheme")
AnnotationAssertion(schema:isPartOf schema:FundingScheme <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FundingScheme <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:FundingScheme <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:FundingScheme schema:Organization)

# Class: schema:FurnitureStore (FurnitureStore)

AnnotationAssertion(rdfs:comment schema:FurnitureStore "A furniture store.")
AnnotationAssertion(rdfs:label schema:FurnitureStore "FurnitureStore")
SubClassOf(schema:FurnitureStore schema:Store)

# Class: schema:Game (Game)

AnnotationAssertion(rdfs:comment schema:Game "The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.")
AnnotationAssertion(rdfs:label schema:Game "Game")
SubClassOf(schema:Game schema:CreativeWork)

# Class: schema:GameAvailabilityEnumeration (GameAvailabilityEnumeration)

AnnotationAssertion(rdfs:comment schema:GameAvailabilityEnumeration "For a [[VideoGame]], such as used with a [[PlayGameAction]], an enumeration of the kind of game availability offered. ")
AnnotationAssertion(rdfs:label schema:GameAvailabilityEnumeration "GameAvailabilityEnumeration")
AnnotationAssertion(schema:isPartOf schema:GameAvailabilityEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:GameAvailabilityEnumeration <https://github.com/schemaorg/schemaorg/issues/3058>)
SubClassOf(schema:GameAvailabilityEnumeration schema:Enumeration)

# Class: schema:GamePlayMode (GamePlayMode)

AnnotationAssertion(rdfs:comment schema:GamePlayMode "Indicates whether this game is multi-player, co-op or single-player.")
AnnotationAssertion(rdfs:label schema:GamePlayMode "GamePlayMode")
SubClassOf(schema:GamePlayMode schema:Enumeration)

# Class: schema:GameServer (GameServer)

AnnotationAssertion(rdfs:comment schema:GameServer "Server that provides game interaction in a multiplayer game.")
AnnotationAssertion(rdfs:label schema:GameServer "GameServer")
SubClassOf(schema:GameServer schema:Intangible)

# Class: schema:GameServerStatus (GameServerStatus)

AnnotationAssertion(rdfs:comment schema:GameServerStatus "Status of a game server.")
AnnotationAssertion(rdfs:label schema:GameServerStatus "GameServerStatus")
SubClassOf(schema:GameServerStatus schema:StatusEnumeration)

# Class: schema:GardenStore (GardenStore)

AnnotationAssertion(rdfs:comment schema:GardenStore "A garden store.")
AnnotationAssertion(rdfs:label schema:GardenStore "GardenStore")
SubClassOf(schema:GardenStore schema:Store)

# Class: schema:GasStation (GasStation)

AnnotationAssertion(rdfs:comment schema:GasStation "A gas station.")
AnnotationAssertion(rdfs:label schema:GasStation "GasStation")
SubClassOf(schema:GasStation schema:AutomotiveBusiness)

# Class: schema:GatedResidenceCommunity (GatedResidenceCommunity)

AnnotationAssertion(rdfs:comment schema:GatedResidenceCommunity "Residence type: Gated community.")
AnnotationAssertion(rdfs:label schema:GatedResidenceCommunity "GatedResidenceCommunity")
SubClassOf(schema:GatedResidenceCommunity schema:Residence)

# Class: schema:GenderType (GenderType)

AnnotationAssertion(rdfs:comment schema:GenderType "An enumeration of genders.")
AnnotationAssertion(rdfs:label schema:GenderType "GenderType")
SubClassOf(schema:GenderType schema:Enumeration)

# Class: schema:Gene (Gene)

AnnotationAssertion(rdfs:comment schema:Gene "A discrete unit of inheritance which affects one or more biological traits (Source: [https://en.wikipedia.org/wiki/Gene](https://en.wikipedia.org/wiki/Gene)). Examples include FOXP2 (Forkhead box protein P2), SCARNA21 (small Cajal body-specific RNA 21), A- (agouti genotype).")
AnnotationAssertion(rdfs:label schema:Gene "Gene")
AnnotationAssertion(schema:isPartOf schema:Gene <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Gene <http://bioschemas.org>)
SubClassOf(schema:Gene schema:BioChemEntity)

# Class: schema:GeneralContractor (GeneralContractor)

AnnotationAssertion(rdfs:comment schema:GeneralContractor "A general contractor.")
AnnotationAssertion(rdfs:label schema:GeneralContractor "GeneralContractor")
SubClassOf(schema:GeneralContractor schema:HomeAndConstructionBusiness)

# Class: schema:GeoCircle (GeoCircle)

AnnotationAssertion(rdfs:comment schema:GeoCircle "A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
       ")
AnnotationAssertion(rdfs:label schema:GeoCircle "GeoCircle")
SubClassOf(schema:GeoCircle schema:GeoShape)

# Class: schema:GeoCoordinates (GeoCoordinates)

AnnotationAssertion(rdfs:comment schema:GeoCoordinates "The geographic coordinates of a place or event.")
AnnotationAssertion(rdfs:label schema:GeoCoordinates "GeoCoordinates")
SubClassOf(schema:GeoCoordinates schema:StructuredValue)

# Class: schema:GeoShape (GeoShape)

AnnotationAssertion(rdfs:comment schema:GeoShape "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.")
AnnotationAssertion(rdfs:label schema:GeoShape "GeoShape")
AnnotationAssertion(schema:contributor schema:GeoShape <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:GeoShape schema:StructuredValue)

# Class: schema:GeospatialGeometry (GeospatialGeometry)

AnnotationAssertion(rdfs:comment schema:GeospatialGeometry "(Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.")
AnnotationAssertion(rdfs:label schema:GeospatialGeometry "GeospatialGeometry")
AnnotationAssertion(schema:isPartOf schema:GeospatialGeometry <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:GeospatialGeometry <https://github.com/schemaorg/schemaorg/issues/1375>)
SubClassOf(schema:GeospatialGeometry schema:Intangible)

# Class: schema:Geriatric (Geriatric)

AnnotationAssertion(rdfs:comment schema:Geriatric "A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.")
AnnotationAssertion(rdfs:label schema:Geriatric "Geriatric")
AnnotationAssertion(schema:isPartOf schema:Geriatric <https://health-lifesci.schema.org>)
SubClassOf(schema:Geriatric schema:MedicalBusiness)

# Class: schema:GiveAction (GiveAction)

AnnotationAssertion(rdfs:comment schema:GiveAction "The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.\\n\\nRelated actions:\\n\\n* [[TakeAction]]: Reciprocal of GiveAction.\\n* [[SendAction]]: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).")
AnnotationAssertion(rdfs:label schema:GiveAction "GiveAction")
SubClassOf(schema:GiveAction schema:TransferAction)

# Class: schema:GolfCourse (GolfCourse)

AnnotationAssertion(rdfs:comment schema:GolfCourse "A golf course.")
AnnotationAssertion(rdfs:label schema:GolfCourse "GolfCourse")
SubClassOf(schema:GolfCourse schema:SportsActivityLocation)

# Class: schema:GovernmentBenefitsType (GovernmentBenefitsType)

AnnotationAssertion(rdfs:comment schema:GovernmentBenefitsType "GovernmentBenefitsType enumerates several kinds of government benefits to support the COVID-19 situation. Note that this structure may not capture all benefits offered.")
AnnotationAssertion(rdfs:label schema:GovernmentBenefitsType "GovernmentBenefitsType")
AnnotationAssertion(schema:isPartOf schema:GovernmentBenefitsType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:GovernmentBenefitsType <https://github.com/schemaorg/schemaorg/issues/2534>)
SubClassOf(schema:GovernmentBenefitsType schema:Enumeration)

# Class: schema:GovernmentBuilding (GovernmentBuilding)

AnnotationAssertion(rdfs:comment schema:GovernmentBuilding "A government building.")
AnnotationAssertion(rdfs:label schema:GovernmentBuilding "GovernmentBuilding")
SubClassOf(schema:GovernmentBuilding schema:CivicStructure)

# Class: schema:GovernmentOffice (GovernmentOffice)

AnnotationAssertion(rdfs:comment schema:GovernmentOffice "A government office&#x2014;for example, an IRS or DMV office.")
AnnotationAssertion(rdfs:label schema:GovernmentOffice "GovernmentOffice")
SubClassOf(schema:GovernmentOffice schema:LocalBusiness)

# Class: schema:GovernmentOrganization (GovernmentOrganization)

AnnotationAssertion(rdfs:comment schema:GovernmentOrganization "A governmental organization or agency.")
AnnotationAssertion(rdfs:label schema:GovernmentOrganization "GovernmentOrganization")
SubClassOf(schema:GovernmentOrganization schema:Organization)

# Class: schema:GovernmentPermit (GovernmentPermit)

AnnotationAssertion(rdfs:comment schema:GovernmentPermit "A permit issued by a government agency.")
AnnotationAssertion(rdfs:label schema:GovernmentPermit "GovernmentPermit")
SubClassOf(schema:GovernmentPermit schema:Permit)

# Class: schema:GovernmentService (GovernmentService)

AnnotationAssertion(rdfs:comment schema:GovernmentService "A service provided by a government organization, e.g. food stamps, veterans benefits, etc.")
AnnotationAssertion(rdfs:label schema:GovernmentService "GovernmentService")
SubClassOf(schema:GovernmentService schema:Service)

# Class: schema:Grant (Grant)

AnnotationAssertion(rdfs:comment schema:Grant "A grant, typically financial or otherwise quantifiable, of resources. Typically a [[funder]] sponsors some [[MonetaryAmount]] to an [[Organization]] or [[Person]],
    sometimes not necessarily via a dedicated or long-lived [[Project]], resulting in one or more outputs, or [[fundedItem]]s. For financial sponsorship, indicate the [[funder]] of a [[MonetaryGrant]]. For non-financial support, indicate [[sponsor]] of [[Grant]]s of resources (e.g. office space).

Grants support  activities directed towards some agreed collective goals, often but not always organized as [[Project]]s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.

The amount of a [[Grant]] is represented using [[amount]] as a [[MonetaryAmount]].
    ")
AnnotationAssertion(rdfs:label schema:Grant "Grant")
AnnotationAssertion(schema:isPartOf schema:Grant <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Grant <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:Grant <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:Grant schema:Intangible)

# Class: schema:GroceryStore (GroceryStore)

AnnotationAssertion(rdfs:comment schema:GroceryStore "A grocery store.")
AnnotationAssertion(rdfs:label schema:GroceryStore "GroceryStore")
SubClassOf(schema:GroceryStore schema:Store)

# Class: schema:Guide (Guide)

AnnotationAssertion(rdfs:comment schema:Guide "[[Guide]] is a page or article that recommends specific products or services, or aspects of a thing for a user to consider. A [[Guide]] may represent a Buying Guide and detail aspects of products or services for a user to consider. A [[Guide]] may represent a Product Guide and recommend specific products or services. A [[Guide]] may represent a Ranked List and recommend specific products or services with ranking.")
AnnotationAssertion(rdfs:label schema:Guide "Guide")
AnnotationAssertion(schema:isPartOf schema:Guide <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Guide <https://github.com/schemaorg/schemaorg/issues/2405>)
SubClassOf(schema:Guide schema:CreativeWork)

# Class: schema:Gynecologic (Gynecologic)

AnnotationAssertion(rdfs:comment schema:Gynecologic "A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.")
AnnotationAssertion(rdfs:label schema:Gynecologic "Gynecologic")
AnnotationAssertion(schema:isPartOf schema:Gynecologic <https://health-lifesci.schema.org>)
SubClassOf(schema:Gynecologic schema:MedicalBusiness)

# Class: schema:HVACBusiness (HVACBusiness)

AnnotationAssertion(rdfs:comment schema:HVACBusiness "A business that provides Heating, Ventilation and Air Conditioning services.")
AnnotationAssertion(rdfs:label schema:HVACBusiness "HVACBusiness")
SubClassOf(schema:HVACBusiness schema:HomeAndConstructionBusiness)

# Class: schema:Hackathon (Hackathon)

AnnotationAssertion(rdfs:comment schema:Hackathon "A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.")
AnnotationAssertion(rdfs:label schema:Hackathon "Hackathon")
AnnotationAssertion(schema:isPartOf schema:Hackathon <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Hackathon <https://github.com/schemaorg/schemaorg/issues/2526>)
SubClassOf(schema:Hackathon schema:Event)

# Class: schema:HairSalon (HairSalon)

AnnotationAssertion(rdfs:comment schema:HairSalon "A hair salon.")
AnnotationAssertion(rdfs:label schema:HairSalon "HairSalon")
SubClassOf(schema:HairSalon schema:HealthAndBeautyBusiness)

# Class: schema:HardwareStore (HardwareStore)

AnnotationAssertion(rdfs:comment schema:HardwareStore "A hardware store.")
AnnotationAssertion(rdfs:label schema:HardwareStore "HardwareStore")
SubClassOf(schema:HardwareStore schema:Store)

# Class: schema:HealthAndBeautyBusiness (HealthAndBeautyBusiness)

AnnotationAssertion(rdfs:comment schema:HealthAndBeautyBusiness "Health and beauty.")
AnnotationAssertion(rdfs:label schema:HealthAndBeautyBusiness "HealthAndBeautyBusiness")
SubClassOf(schema:HealthAndBeautyBusiness schema:LocalBusiness)

# Class: schema:HealthAspectEnumeration (HealthAspectEnumeration)

AnnotationAssertion(rdfs:comment schema:HealthAspectEnumeration "HealthAspectEnumeration enumerates several aspects of health content online, each of which might be described using [[hasHealthAspect]] and [[HealthTopicContent]].")
AnnotationAssertion(rdfs:label schema:HealthAspectEnumeration "HealthAspectEnumeration")
AnnotationAssertion(schema:isPartOf schema:HealthAspectEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthAspectEnumeration <https://github.com/schemaorg/schemaorg/issues/2374>)
SubClassOf(schema:HealthAspectEnumeration schema:Enumeration)

# Class: schema:HealthClub (HealthClub)

AnnotationAssertion(rdfs:comment schema:HealthClub "A health club.")
AnnotationAssertion(rdfs:label schema:HealthClub "HealthClub")
SubClassOf(schema:HealthClub schema:HealthAndBeautyBusiness)
SubClassOf(schema:HealthClub schema:SportsActivityLocation)

# Class: schema:HealthInsurancePlan (HealthInsurancePlan)

AnnotationAssertion(rdfs:comment schema:HealthInsurancePlan "A US-style health insurance plan, including PPOs, EPOs, and HMOs.")
AnnotationAssertion(rdfs:label schema:HealthInsurancePlan "HealthInsurancePlan")
AnnotationAssertion(schema:isPartOf schema:HealthInsurancePlan <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthInsurancePlan <https://github.com/schemaorg/schemaorg/issues/1062>)
SubClassOf(schema:HealthInsurancePlan schema:Intangible)

# Class: schema:HealthPlanCostSharingSpecification (HealthPlanCostSharingSpecification)

AnnotationAssertion(rdfs:comment schema:HealthPlanCostSharingSpecification "A description of costs to the patient under a given network or formulary.")
AnnotationAssertion(rdfs:label schema:HealthPlanCostSharingSpecification "HealthPlanCostSharingSpecification")
AnnotationAssertion(schema:isPartOf schema:HealthPlanCostSharingSpecification <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthPlanCostSharingSpecification <https://github.com/schemaorg/schemaorg/issues/1062>)
SubClassOf(schema:HealthPlanCostSharingSpecification schema:Intangible)

# Class: schema:HealthPlanFormulary (HealthPlanFormulary)

AnnotationAssertion(rdfs:comment schema:HealthPlanFormulary "For a given health insurance plan, the specification for costs and coverage of prescription drugs.")
AnnotationAssertion(rdfs:label schema:HealthPlanFormulary "HealthPlanFormulary")
AnnotationAssertion(schema:isPartOf schema:HealthPlanFormulary <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthPlanFormulary <https://github.com/schemaorg/schemaorg/issues/1062>)
SubClassOf(schema:HealthPlanFormulary schema:Intangible)

# Class: schema:HealthPlanNetwork (HealthPlanNetwork)

AnnotationAssertion(rdfs:comment schema:HealthPlanNetwork "A US-style health insurance plan network.")
AnnotationAssertion(rdfs:label schema:HealthPlanNetwork "HealthPlanNetwork")
AnnotationAssertion(schema:isPartOf schema:HealthPlanNetwork <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthPlanNetwork <https://github.com/schemaorg/schemaorg/issues/1062>)
SubClassOf(schema:HealthPlanNetwork schema:Intangible)

# Class: schema:HealthTopicContent (HealthTopicContent)

AnnotationAssertion(rdfs:comment schema:HealthTopicContent "[[HealthTopicContent]] is [[WebContent]] that is about some aspect of a health topic, e.g. a condition, its symptoms or treatments. Such content may be comprised of several parts or sections and use different types of media. Multiple instances of [[WebContent]] (and hence [[HealthTopicContent]]) can be related using [[hasPart]] / [[isPartOf]] where there is some kind of content hierarchy, and their content described with [[about]] and [[mentions]] e.g. building upon the existing [[MedicalCondition]] vocabulary.
  ")
AnnotationAssertion(rdfs:label schema:HealthTopicContent "HealthTopicContent")
AnnotationAssertion(schema:isPartOf schema:HealthTopicContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthTopicContent <https://github.com/schemaorg/schemaorg/issues/2374>)
SubClassOf(schema:HealthTopicContent schema:WebContent)

# Class: schema:HighSchool (HighSchool)

AnnotationAssertion(rdfs:comment schema:HighSchool "A high school.")
AnnotationAssertion(rdfs:label schema:HighSchool "HighSchool")
SubClassOf(schema:HighSchool schema:EducationalOrganization)

# Class: schema:HinduTemple (HinduTemple)

AnnotationAssertion(rdfs:comment schema:HinduTemple "A Hindu temple.")
AnnotationAssertion(rdfs:label schema:HinduTemple "HinduTemple")
SubClassOf(schema:HinduTemple schema:PlaceOfWorship)

# Class: schema:HobbyShop (HobbyShop)

AnnotationAssertion(rdfs:comment schema:HobbyShop "A store that sells materials useful or necessary for various hobbies.")
AnnotationAssertion(rdfs:label schema:HobbyShop "HobbyShop")
SubClassOf(schema:HobbyShop schema:Store)

# Class: schema:HomeAndConstructionBusiness (HomeAndConstructionBusiness)

AnnotationAssertion(rdfs:comment schema:HomeAndConstructionBusiness "A construction business.\\n\\nA HomeAndConstructionBusiness is a [[LocalBusiness]] that provides services around homes and buildings.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).")
AnnotationAssertion(rdfs:label schema:HomeAndConstructionBusiness "HomeAndConstructionBusiness")
SubClassOf(schema:HomeAndConstructionBusiness schema:LocalBusiness)

# Class: schema:HomeGoodsStore (HomeGoodsStore)

AnnotationAssertion(rdfs:comment schema:HomeGoodsStore "A home goods store.")
AnnotationAssertion(rdfs:label schema:HomeGoodsStore "HomeGoodsStore")
SubClassOf(schema:HomeGoodsStore schema:Store)

# Class: schema:Hospital (Hospital)

AnnotationAssertion(rdfs:comment schema:Hospital "A hospital.")
AnnotationAssertion(rdfs:label schema:Hospital "Hospital")
SubClassOf(schema:Hospital schema:CivicStructure)
SubClassOf(schema:Hospital schema:EmergencyService)
SubClassOf(schema:Hospital schema:MedicalOrganization)

# Class: schema:Hostel (Hostel)

AnnotationAssertion(rdfs:comment schema:Hostel "A hostel - cheap accommodation, often in shared dormitories.
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Hostel "Hostel")
SubClassOf(schema:Hostel schema:LodgingBusiness)

# Class: schema:Hotel (Hotel)

AnnotationAssertion(rdfs:comment schema:Hotel "A hotel is an establishment that provides lodging paid on a short-term basis (source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Hotel "Hotel")
AnnotationAssertion(schema:contributor schema:Hotel <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Hotel schema:LodgingBusiness)

# Class: schema:HotelRoom (HotelRoom)

AnnotationAssertion(rdfs:comment schema:HotelRoom "A hotel room is a single room in a hotel.
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:HotelRoom "HotelRoom")
AnnotationAssertion(schema:contributor schema:HotelRoom <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:HotelRoom schema:Room)

# Class: schema:House (House)

AnnotationAssertion(rdfs:comment schema:House "A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/House\">http://en.wikipedia.org/wiki/House</a>).")
AnnotationAssertion(rdfs:label schema:House "House")
AnnotationAssertion(schema:contributor schema:House <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:House schema:Accommodation)

# Class: schema:HousePainter (HousePainter)

AnnotationAssertion(rdfs:comment schema:HousePainter "A house painting service.")
AnnotationAssertion(rdfs:label schema:HousePainter "HousePainter")
SubClassOf(schema:HousePainter schema:HomeAndConstructionBusiness)

# Class: schema:HowTo (HowTo)

AnnotationAssertion(rdfs:comment schema:HowTo "Instructions that explain how to achieve a result by performing a sequence of steps.")
AnnotationAssertion(rdfs:label schema:HowTo "HowTo")
SubClassOf(schema:HowTo schema:CreativeWork)

# Class: schema:HowToDirection (HowToDirection)

AnnotationAssertion(rdfs:comment schema:HowToDirection "A direction indicating a single action to do in the instructions for how to achieve a result.")
AnnotationAssertion(rdfs:label schema:HowToDirection "HowToDirection")
SubClassOf(schema:HowToDirection schema:CreativeWork)
SubClassOf(schema:HowToDirection schema:ListItem)

# Class: schema:HowToItem (HowToItem)

AnnotationAssertion(rdfs:comment schema:HowToItem "An item used as either a tool or supply when performing the instructions for how to achieve a result.")
AnnotationAssertion(rdfs:label schema:HowToItem "HowToItem")
SubClassOf(schema:HowToItem schema:ListItem)

# Class: schema:HowToSection (HowToSection)

AnnotationAssertion(rdfs:comment schema:HowToSection "A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).")
AnnotationAssertion(rdfs:label schema:HowToSection "HowToSection")
SubClassOf(schema:HowToSection schema:CreativeWork)
SubClassOf(schema:HowToSection schema:ItemList)
SubClassOf(schema:HowToSection schema:ListItem)

# Class: schema:HowToStep (HowToStep)

AnnotationAssertion(rdfs:comment schema:HowToStep "A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.")
AnnotationAssertion(rdfs:label schema:HowToStep "HowToStep")
SubClassOf(schema:HowToStep schema:CreativeWork)
SubClassOf(schema:HowToStep schema:ItemList)
SubClassOf(schema:HowToStep schema:ListItem)

# Class: schema:HowToSupply (HowToSupply)

AnnotationAssertion(rdfs:comment schema:HowToSupply "A supply consumed when performing the instructions for how to achieve a result.")
AnnotationAssertion(rdfs:label schema:HowToSupply "HowToSupply")
SubClassOf(schema:HowToSupply schema:HowToItem)

# Class: schema:HowToTip (HowToTip)

AnnotationAssertion(rdfs:comment schema:HowToTip "An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).")
AnnotationAssertion(rdfs:label schema:HowToTip "HowToTip")
SubClassOf(schema:HowToTip schema:CreativeWork)
SubClassOf(schema:HowToTip schema:ListItem)

# Class: schema:HowToTool (HowToTool)

AnnotationAssertion(rdfs:comment schema:HowToTool "A tool used (but not consumed) when performing instructions for how to achieve a result.")
AnnotationAssertion(rdfs:label schema:HowToTool "HowToTool")
SubClassOf(schema:HowToTool schema:HowToItem)

# Class: schema:HyperToc (HyperToc)

AnnotationAssertion(rdfs:comment schema:HyperToc "A HyperToc represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. Items in the table of contents are indicated using the [[tocEntry]] property, and typed [[HyperTocEntry]]. For cases where the same larger work is split into multiple files, [[associatedMedia]] can be used on individual [[HyperTocEntry]] items.")
AnnotationAssertion(rdfs:label schema:HyperToc "HyperToc")
AnnotationAssertion(schema:isPartOf schema:HyperToc <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HyperToc <https://github.com/schemaorg/schemaorg/issues/2766>)
SubClassOf(schema:HyperToc schema:CreativeWork)

# Class: schema:HyperTocEntry (HyperTocEntry)

AnnotationAssertion(rdfs:comment schema:HyperTocEntry "A HyperToEntry is an item within a [[HyperToc]], which represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. The media object itself is indicated using [[associatedMedia]]. Each section of interest within that content can be described with a [[HyperTocEntry]], with associated [[startOffset]] and [[endOffset]]. When several entries are all from the same file, [[associatedMedia]] is used on the overarching [[HyperTocEntry]]; if the content has been split into multiple files, they can be referenced using [[associatedMedia]] on each [[HyperTocEntry]].")
AnnotationAssertion(rdfs:label schema:HyperTocEntry "HyperTocEntry")
AnnotationAssertion(schema:isPartOf schema:HyperTocEntry <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HyperTocEntry <https://github.com/schemaorg/schemaorg/issues/2766>)
SubClassOf(schema:HyperTocEntry schema:CreativeWork)

# Class: schema:IPTCDigitalSourceEnumeration (IPTCDigitalSourceEnumeration)

AnnotationAssertion(rdfs:comment schema:IPTCDigitalSourceEnumeration "<a href=\"https://www.iptc.org/\">IPTC</a> \"Digital Source\" codes for use with the [[digitalSourceType]] property, providing information about the source for a digital media object.
In general these codes are not declared here to be mutually exclusive, although some combinations would be contradictory if applied simultaneously, or might be considered mutually incompatible by upstream maintainers of the definitions. See the IPTC <a href=\"https://www.iptc.org/std/photometadata/documentation/userguide/\">documentation</a>
 for <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">detailed definitions</a> of all terms.")
AnnotationAssertion(rdfs:label schema:IPTCDigitalSourceEnumeration "IPTCDigitalSourceEnumeration")
AnnotationAssertion(schema:isPartOf schema:IPTCDigitalSourceEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:IPTCDigitalSourceEnumeration <https://github.com/schemaorg/schemaorg/issues/3392>)
SubClassOf(schema:IPTCDigitalSourceEnumeration schema:MediaEnumeration)

# Class: schema:IceCreamShop (IceCreamShop)

AnnotationAssertion(rdfs:comment schema:IceCreamShop "An ice cream shop.")
AnnotationAssertion(rdfs:label schema:IceCreamShop "IceCreamShop")
SubClassOf(schema:IceCreamShop schema:FoodEstablishment)

# Class: schema:IgnoreAction (IgnoreAction)

AnnotationAssertion(rdfs:comment schema:IgnoreAction "The act of intentionally disregarding the object. An agent ignores an object.")
AnnotationAssertion(rdfs:label schema:IgnoreAction "IgnoreAction")
SubClassOf(schema:IgnoreAction schema:AssessAction)

# Class: schema:ImageGallery (ImageGallery)

AnnotationAssertion(rdfs:comment schema:ImageGallery "Web page type: Image gallery page.")
AnnotationAssertion(rdfs:label schema:ImageGallery "ImageGallery")
SubClassOf(schema:ImageGallery schema:MediaGallery)

# Class: schema:ImageObject (ImageObject)

AnnotationAssertion(rdfs:comment schema:ImageObject "An image file.")
AnnotationAssertion(rdfs:label schema:ImageObject "ImageObject")
SubClassOf(schema:ImageObject schema:MediaObject)

# Class: schema:ImageObjectSnapshot (ImageObjectSnapshot)

AnnotationAssertion(rdfs:comment schema:ImageObjectSnapshot "A specific and exact (byte-for-byte) version of an [[ImageObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata (e.g. XMP, EXIF) the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.")
AnnotationAssertion(rdfs:label schema:ImageObjectSnapshot "ImageObjectSnapshot")
AnnotationAssertion(schema:isPartOf schema:ImageObjectSnapshot <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ImageObjectSnapshot <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:ImageObjectSnapshot schema:ImageObject)

# Class: schema:ImagingTest (ImagingTest)

AnnotationAssertion(rdfs:comment schema:ImagingTest "Any medical imaging modality typically used for diagnostic purposes.")
AnnotationAssertion(rdfs:label schema:ImagingTest "ImagingTest")
AnnotationAssertion(schema:isPartOf schema:ImagingTest <https://health-lifesci.schema.org>)
SubClassOf(schema:ImagingTest schema:MedicalTest)

# Class: schema:IndividualPhysician (IndividualPhysician)

AnnotationAssertion(rdfs:comment schema:IndividualPhysician "An individual medical practitioner. For their official address use [[address]], for affiliations to hospitals use [[hospitalAffiliation]]. 
The [[practicesAt]] property can be used to indicate [[MedicalOrganization]] hospitals, clinics, pharmacies etc. where this physician practices.")
AnnotationAssertion(rdfs:label schema:IndividualPhysician "IndividualPhysician")
SubClassOf(schema:IndividualPhysician schema:Physician)

# Class: schema:IndividualProduct (IndividualProduct)

AnnotationAssertion(rdfs:comment schema:IndividualProduct "A single, identifiable product instance (e.g. a laptop with a particular serial number).")
AnnotationAssertion(rdfs:label schema:IndividualProduct "IndividualProduct")
AnnotationAssertion(schema:contributor schema:IndividualProduct <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:IndividualProduct schema:Product)

# Class: schema:InfectiousAgentClass (InfectiousAgentClass)

AnnotationAssertion(rdfs:comment schema:InfectiousAgentClass "Classes of agents or pathogens that transmit infectious diseases. Enumerated type.")
AnnotationAssertion(rdfs:label schema:InfectiousAgentClass "InfectiousAgentClass")
AnnotationAssertion(schema:isPartOf schema:InfectiousAgentClass <https://health-lifesci.schema.org>)
SubClassOf(schema:InfectiousAgentClass schema:MedicalEnumeration)

# Class: schema:InfectiousDisease (InfectiousDisease)

AnnotationAssertion(rdfs:comment schema:InfectiousDisease "An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.")
AnnotationAssertion(rdfs:label schema:InfectiousDisease "InfectiousDisease")
AnnotationAssertion(schema:isPartOf schema:InfectiousDisease <https://health-lifesci.schema.org>)
SubClassOf(schema:InfectiousDisease schema:MedicalCondition)

# Class: schema:InformAction (InformAction)

AnnotationAssertion(rdfs:comment schema:InformAction "The act of notifying someone of information pertinent to them, with no expectation of a response.")
AnnotationAssertion(rdfs:label schema:InformAction "InformAction")
SubClassOf(schema:InformAction schema:CommunicateAction)

# Class: schema:InsertAction (InsertAction)

AnnotationAssertion(rdfs:comment schema:InsertAction "The act of adding at a specific location in an ordered collection.")
AnnotationAssertion(rdfs:label schema:InsertAction "InsertAction")
SubClassOf(schema:InsertAction schema:AddAction)

# Class: schema:InstallAction (InstallAction)

AnnotationAssertion(rdfs:comment schema:InstallAction "The act of installing an application.")
AnnotationAssertion(rdfs:label schema:InstallAction "InstallAction")
SubClassOf(schema:InstallAction schema:ConsumeAction)

# Class: schema:InsuranceAgency (InsuranceAgency)

AnnotationAssertion(rdfs:comment schema:InsuranceAgency "An Insurance agency.")
AnnotationAssertion(rdfs:label schema:InsuranceAgency "InsuranceAgency")
SubClassOf(schema:InsuranceAgency schema:FinancialService)

# Class: schema:Intangible (Intangible)

AnnotationAssertion(rdfs:comment schema:Intangible "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.")
AnnotationAssertion(rdfs:label schema:Intangible "Intangible")
SubClassOf(schema:Intangible schema:Thing)

# Class: schema:Integer (Integer)

AnnotationAssertion(rdfs:comment schema:Integer "Data type: Integer.")
AnnotationAssertion(rdfs:label schema:Integer "Integer")
SubClassOf(schema:Integer schema:Number)

# Class: schema:InteractAction (InteractAction)

AnnotationAssertion(rdfs:comment schema:InteractAction "The act of interacting with another person or organization.")
AnnotationAssertion(rdfs:label schema:InteractAction "InteractAction")
SubClassOf(schema:InteractAction schema:Action)

# Class: schema:InteractionCounter (InteractionCounter)

AnnotationAssertion(rdfs:comment schema:InteractionCounter "A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.")
AnnotationAssertion(rdfs:label schema:InteractionCounter "InteractionCounter")
SubClassOf(schema:InteractionCounter schema:StructuredValue)

# Class: schema:InternetCafe (InternetCafe)

AnnotationAssertion(rdfs:comment schema:InternetCafe "An internet cafe.")
AnnotationAssertion(rdfs:label schema:InternetCafe "InternetCafe")
SubClassOf(schema:InternetCafe schema:LocalBusiness)

# Class: schema:InvestmentFund (InvestmentFund)

AnnotationAssertion(rdfs:comment schema:InvestmentFund "A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.")
AnnotationAssertion(rdfs:label schema:InvestmentFund "InvestmentFund")
AnnotationAssertion(schema:contributor schema:InvestmentFund <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:InvestmentFund <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:InvestmentFund <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:InvestmentFund schema:InvestmentOrDeposit)

# Class: schema:InvestmentOrDeposit (InvestmentOrDeposit)

AnnotationAssertion(rdfs:comment schema:InvestmentOrDeposit "A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.")
AnnotationAssertion(rdfs:label schema:InvestmentOrDeposit "InvestmentOrDeposit")
AnnotationAssertion(schema:contributor schema:InvestmentOrDeposit <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:InvestmentOrDeposit schema:FinancialProduct)

# Class: schema:InviteAction (InviteAction)

AnnotationAssertion(rdfs:comment schema:InviteAction "The act of asking someone to attend an event. Reciprocal of RsvpAction.")
AnnotationAssertion(rdfs:label schema:InviteAction "InviteAction")
SubClassOf(schema:InviteAction schema:CommunicateAction)

# Class: schema:Invoice (Invoice)

AnnotationAssertion(rdfs:comment schema:Invoice "A statement of the money due for goods or services; a bill.")
AnnotationAssertion(rdfs:label schema:Invoice "Invoice")
SubClassOf(schema:Invoice schema:Intangible)

# Class: schema:ItemAvailability (ItemAvailability)

AnnotationAssertion(rdfs:comment schema:ItemAvailability "A list of possible product availability options.")
AnnotationAssertion(rdfs:label schema:ItemAvailability "ItemAvailability")
SubClassOf(schema:ItemAvailability schema:Enumeration)

# Class: schema:ItemList (ItemList)

AnnotationAssertion(rdfs:comment schema:ItemList "A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.")
AnnotationAssertion(rdfs:label schema:ItemList "ItemList")
SubClassOf(schema:ItemList schema:Intangible)

# Class: schema:ItemListOrderType (ItemListOrderType)

AnnotationAssertion(rdfs:comment schema:ItemListOrderType "Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.")
AnnotationAssertion(rdfs:label schema:ItemListOrderType "ItemListOrderType")
SubClassOf(schema:ItemListOrderType schema:Enumeration)

# Class: schema:ItemPage (ItemPage)

AnnotationAssertion(rdfs:comment schema:ItemPage "A page devoted to a single item, such as a particular product or hotel.")
AnnotationAssertion(rdfs:label schema:ItemPage "ItemPage")
SubClassOf(schema:ItemPage schema:WebPage)

# Class: schema:JewelryStore (JewelryStore)

AnnotationAssertion(rdfs:comment schema:JewelryStore "A jewelry store.")
AnnotationAssertion(rdfs:label schema:JewelryStore "JewelryStore")
SubClassOf(schema:JewelryStore schema:Store)

# Class: schema:JobPosting (JobPosting)

AnnotationAssertion(rdfs:comment schema:JobPosting "A listing that describes a job opening in a certain organization.")
AnnotationAssertion(rdfs:label schema:JobPosting "JobPosting")
SubClassOf(schema:JobPosting schema:Intangible)

# Class: schema:JoinAction (JoinAction)

AnnotationAssertion(rdfs:comment schema:JoinAction "An agent joins an event/group with participants/friends at a location.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: Unlike RegisterAction, JoinAction refers to joining a group/team of people.\\n* [[SubscribeAction]]: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.\\n* [[FollowAction]]: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.")
AnnotationAssertion(rdfs:label schema:JoinAction "JoinAction")
SubClassOf(schema:JoinAction schema:InteractAction)

# Class: schema:Joint (Joint)

AnnotationAssertion(rdfs:comment schema:Joint "The anatomical location at which two or more bones make contact.")
AnnotationAssertion(rdfs:label schema:Joint "Joint")
AnnotationAssertion(schema:isPartOf schema:Joint <https://health-lifesci.schema.org>)
SubClassOf(schema:Joint schema:AnatomicalStructure)

# Class: schema:LakeBodyOfWater (LakeBodyOfWater)

AnnotationAssertion(rdfs:comment schema:LakeBodyOfWater "A lake (for example, Lake Pontrachain).")
AnnotationAssertion(rdfs:label schema:LakeBodyOfWater "LakeBodyOfWater")
SubClassOf(schema:LakeBodyOfWater schema:BodyOfWater)

# Class: schema:Landform (Landform)

AnnotationAssertion(rdfs:comment schema:Landform "A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.")
AnnotationAssertion(rdfs:label schema:Landform "Landform")
SubClassOf(schema:Landform schema:Place)

# Class: schema:LandmarksOrHistoricalBuildings (LandmarksOrHistoricalBuildings)

AnnotationAssertion(rdfs:comment schema:LandmarksOrHistoricalBuildings "An historical landmark or building.")
AnnotationAssertion(rdfs:label schema:LandmarksOrHistoricalBuildings "LandmarksOrHistoricalBuildings")
SubClassOf(schema:LandmarksOrHistoricalBuildings schema:Place)

# Class: schema:Language (Language)

AnnotationAssertion(rdfs:comment schema:Language "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) can be used via the [[alternateName]] property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using [[ComputerLanguage]].")
AnnotationAssertion(rdfs:label schema:Language "Language")
SubClassOf(schema:Language schema:Intangible)

# Class: schema:LearningResource (LearningResource)

AnnotationAssertion(rdfs:comment schema:LearningResource "The LearningResource type can be used to indicate [[CreativeWork]]s (whether physical or digital) that have a particular and explicit orientation towards learning, education, skill acquisition, and other educational purposes.

[[LearningResource]] is expected to be used as an addition to a primary type such as [[Book]], [[VideoObject]], [[Product]] etc.

[[EducationEvent]] serves a similar purpose for event-like things (e.g. a [[Trip]]). A [[LearningResource]] may be created as a result of an [[EducationEvent]], for example by recording one.")
AnnotationAssertion(rdfs:label schema:LearningResource "LearningResource")
AnnotationAssertion(schema:isPartOf schema:LearningResource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LearningResource <https://github.com/schemaorg/schemaorg/issues/1401>)
SubClassOf(schema:LearningResource schema:CreativeWork)

# Class: schema:LeaveAction (LeaveAction)

AnnotationAssertion(rdfs:comment schema:LeaveAction "An agent leaves an event / group with participants/friends at a location.\\n\\nRelated actions:\\n\\n* [[JoinAction]]: The antonym of LeaveAction.\\n* [[UnRegisterAction]]: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.")
AnnotationAssertion(rdfs:label schema:LeaveAction "LeaveAction")
SubClassOf(schema:LeaveAction schema:InteractAction)

# Class: schema:LegalForceStatus (LegalForceStatus)

AnnotationAssertion(rdfs:comment schema:LegalForceStatus "A list of possible statuses for the legal force of a legislation.")
AnnotationAssertion(rdfs:label schema:LegalForceStatus "LegalForceStatus")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:LegalForceStatus <http://data.europa.eu/eli/ontology#InForce>)
AnnotationAssertion(schema:contributor schema:LegalForceStatus <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:LegalForceStatus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LegalForceStatus <https://github.com/schemaorg/schemaorg/issues/1156>)
SubClassOf(schema:LegalForceStatus schema:StatusEnumeration)

# Class: schema:LegalService (LegalService)

AnnotationAssertion(rdfs:comment schema:LegalService "A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).")
AnnotationAssertion(rdfs:label schema:LegalService "LegalService")
SubClassOf(schema:LegalService schema:LocalBusiness)

# Class: schema:LegalValueLevel (LegalValueLevel)

AnnotationAssertion(rdfs:comment schema:LegalValueLevel "A list of possible levels for the legal validity of a legislation.")
AnnotationAssertion(rdfs:label schema:LegalValueLevel "LegalValueLevel")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:LegalValueLevel <http://data.europa.eu/eli/ontology#LegalValue>)
AnnotationAssertion(schema:contributor schema:LegalValueLevel <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:LegalValueLevel <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LegalValueLevel <https://github.com/schemaorg/schemaorg/issues/1156>)
SubClassOf(schema:LegalValueLevel schema:Enumeration)

# Class: schema:Legislation (Legislation)

AnnotationAssertion(rdfs:comment schema:Legislation "A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).")
AnnotationAssertion(rdfs:label schema:Legislation "Legislation")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:Legislation <http://data.europa.eu/eli/ontology#LegalExpression>)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:Legislation <http://data.europa.eu/eli/ontology#LegalRecontributor>)
AnnotationAssertion(schema:contributor schema:Legislation <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:Legislation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Legislation <https://github.com/schemaorg/schemaorg/issues/1156>)
SubClassOf(schema:Legislation schema:CreativeWork)

# Class: schema:LegislationObject (LegislationObject)

AnnotationAssertion(rdfs:comment schema:LegislationObject "A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.")
AnnotationAssertion(rdfs:label schema:LegislationObject "LegislationObject")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:LegislationObject <http://data.europa.eu/eli/ontology#Format>)
AnnotationAssertion(schema:contributor schema:LegislationObject <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:LegislationObject <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LegislationObject <https://github.com/schemaorg/schemaorg/issues/1156>)
SubClassOf(schema:LegislationObject schema:Legislation)
SubClassOf(schema:LegislationObject schema:MediaObject)

# Class: schema:LegislativeBuilding (LegislativeBuilding)

AnnotationAssertion(rdfs:comment schema:LegislativeBuilding "A legislative building&#x2014;for example, the state capitol.")
AnnotationAssertion(rdfs:label schema:LegislativeBuilding "LegislativeBuilding")
SubClassOf(schema:LegislativeBuilding schema:GovernmentBuilding)

# Class: schema:LendAction (LendAction)

AnnotationAssertion(rdfs:comment schema:LendAction "The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.\\n\\nRelated actions:\\n\\n* [[BorrowAction]]: Reciprocal of LendAction.")
AnnotationAssertion(rdfs:label schema:LendAction "LendAction")
SubClassOf(schema:LendAction schema:TransferAction)

# Class: schema:Library (Library)

AnnotationAssertion(rdfs:comment schema:Library "A library.")
AnnotationAssertion(rdfs:label schema:Library "Library")
SubClassOf(schema:Library schema:LocalBusiness)

# Class: schema:LibrarySystem (LibrarySystem)

AnnotationAssertion(rdfs:comment schema:LibrarySystem "A [[LibrarySystem]] is a collaborative system amongst several libraries.")
AnnotationAssertion(rdfs:label schema:LibrarySystem "LibrarySystem")
AnnotationAssertion(schema:isPartOf schema:LibrarySystem <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LibrarySystem <https://github.com/schemaorg/schemaorg/issues/1495>)
SubClassOf(schema:LibrarySystem schema:Organization)

# Class: schema:LifestyleModification (LifestyleModification)

AnnotationAssertion(rdfs:comment schema:LifestyleModification "A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.")
AnnotationAssertion(rdfs:label schema:LifestyleModification "LifestyleModification")
AnnotationAssertion(schema:isPartOf schema:LifestyleModification <https://health-lifesci.schema.org>)
SubClassOf(schema:LifestyleModification schema:MedicalEntity)

# Class: schema:Ligament (Ligament)

AnnotationAssertion(rdfs:comment schema:Ligament "A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.")
AnnotationAssertion(rdfs:label schema:Ligament "Ligament")
AnnotationAssertion(schema:isPartOf schema:Ligament <https://health-lifesci.schema.org>)
SubClassOf(schema:Ligament schema:AnatomicalStructure)

# Class: schema:LikeAction (LikeAction)

AnnotationAssertion(rdfs:comment schema:LikeAction "The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.")
AnnotationAssertion(rdfs:label schema:LikeAction "LikeAction")
SubClassOf(schema:LikeAction schema:ReactAction)

# Class: schema:LinkRole (LinkRole)

AnnotationAssertion(rdfs:comment schema:LinkRole "A Role that represents a Web link, e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types, e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.")
AnnotationAssertion(rdfs:label schema:LinkRole "LinkRole")
AnnotationAssertion(schema:isPartOf schema:LinkRole <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LinkRole <https://github.com/schemaorg/schemaorg/issues/1045>)
SubClassOf(schema:LinkRole schema:Role)

# Class: schema:LiquorStore (LiquorStore)

AnnotationAssertion(rdfs:comment schema:LiquorStore "A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.")
AnnotationAssertion(rdfs:label schema:LiquorStore "LiquorStore")
SubClassOf(schema:LiquorStore schema:Store)

# Class: schema:ListItem (ListItem)

AnnotationAssertion(rdfs:comment schema:ListItem "An list item, e.g. a step in a checklist or how-to description.")
AnnotationAssertion(rdfs:label schema:ListItem "ListItem")
SubClassOf(schema:ListItem schema:Intangible)

# Class: schema:ListenAction (ListenAction)

AnnotationAssertion(rdfs:comment schema:ListenAction "The act of consuming audio content.")
AnnotationAssertion(rdfs:label schema:ListenAction "ListenAction")
SubClassOf(schema:ListenAction schema:ConsumeAction)

# Class: schema:LiteraryEvent (LiteraryEvent)

AnnotationAssertion(rdfs:comment schema:LiteraryEvent "Event type: Literary event.")
AnnotationAssertion(rdfs:label schema:LiteraryEvent "LiteraryEvent")
SubClassOf(schema:LiteraryEvent schema:Event)

# Class: schema:LiveBlogPosting (LiveBlogPosting)

AnnotationAssertion(rdfs:comment schema:LiveBlogPosting "A [[LiveBlogPosting]] is a [[BlogPosting]] intended to provide a rolling textual coverage of an ongoing event through continuous updates.")
AnnotationAssertion(rdfs:label schema:LiveBlogPosting "LiveBlogPosting")
SubClassOf(schema:LiveBlogPosting schema:BlogPosting)

# Class: schema:LoanOrCredit (LoanOrCredit)

AnnotationAssertion(rdfs:comment schema:LoanOrCredit "A financial product for the loaning of an amount of money, or line of credit, under agreed terms and charges.")
AnnotationAssertion(rdfs:label schema:LoanOrCredit "LoanOrCredit")
AnnotationAssertion(schema:contributor schema:LoanOrCredit <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:LoanOrCredit schema:FinancialProduct)

# Class: schema:LocalBusiness (LocalBusiness)

AnnotationAssertion(rdfs:comment schema:LocalBusiness "A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.")
AnnotationAssertion(rdfs:label schema:LocalBusiness "LocalBusiness")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#closeMatch> schema:LocalBusiness <http://www.w3.org/ns/regorg#RegisteredOrganization>)
SubClassOf(schema:LocalBusiness schema:Organization)
SubClassOf(schema:LocalBusiness schema:Place)

# Class: schema:LocationFeatureSpecification (LocationFeatureSpecification)

AnnotationAssertion(rdfs:comment schema:LocationFeatureSpecification "Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.")
AnnotationAssertion(rdfs:label schema:LocationFeatureSpecification "LocationFeatureSpecification")
AnnotationAssertion(schema:contributor schema:LocationFeatureSpecification <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:LocationFeatureSpecification schema:PropertyValue)

# Class: schema:Locksmith (Locksmith)

AnnotationAssertion(rdfs:comment schema:Locksmith "A locksmith.")
AnnotationAssertion(rdfs:label schema:Locksmith "Locksmith")
SubClassOf(schema:Locksmith schema:HomeAndConstructionBusiness)

# Class: schema:LodgingBusiness (LodgingBusiness)

AnnotationAssertion(rdfs:comment schema:LodgingBusiness "A lodging business, such as a motel, hotel, or inn.")
AnnotationAssertion(rdfs:label schema:LodgingBusiness "LodgingBusiness")
SubClassOf(schema:LodgingBusiness schema:LocalBusiness)

# Class: schema:LodgingReservation (LodgingReservation)

AnnotationAssertion(rdfs:comment schema:LodgingReservation "A reservation for lodging at a hotel, motel, inn, etc.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.")
AnnotationAssertion(rdfs:label schema:LodgingReservation "LodgingReservation")
SubClassOf(schema:LodgingReservation schema:Reservation)

# Class: schema:LoseAction (LoseAction)

AnnotationAssertion(rdfs:comment schema:LoseAction "The act of being defeated in a competitive activity.")
AnnotationAssertion(rdfs:label schema:LoseAction "LoseAction")
SubClassOf(schema:LoseAction schema:AchieveAction)

# Class: schema:LymphaticVessel (LymphaticVessel)

AnnotationAssertion(rdfs:comment schema:LymphaticVessel "A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.")
AnnotationAssertion(rdfs:label schema:LymphaticVessel "LymphaticVessel")
AnnotationAssertion(schema:isPartOf schema:LymphaticVessel <https://health-lifesci.schema.org>)
SubClassOf(schema:LymphaticVessel schema:Vessel)

# Class: schema:Manuscript (Manuscript)

AnnotationAssertion(rdfs:comment schema:Manuscript "A book, document, or piece of music written by hand rather than typed or printed.")
AnnotationAssertion(rdfs:label schema:Manuscript "Manuscript")
AnnotationAssertion(schema:isPartOf schema:Manuscript <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Manuscript <https://github.com/schemaorg/schemaorg/issues/1448>)
SubClassOf(schema:Manuscript schema:CreativeWork)

# Class: schema:Map (Map)

AnnotationAssertion(rdfs:comment schema:Map "A map.")
AnnotationAssertion(rdfs:label schema:Map "Map")
SubClassOf(schema:Map schema:CreativeWork)

# Class: schema:MapCategoryType (MapCategoryType)

AnnotationAssertion(rdfs:comment schema:MapCategoryType "An enumeration of several kinds of Map.")
AnnotationAssertion(rdfs:label schema:MapCategoryType "MapCategoryType")
SubClassOf(schema:MapCategoryType schema:Enumeration)

# Class: schema:MarryAction (MarryAction)

AnnotationAssertion(rdfs:comment schema:MarryAction "The act of marrying a person.")
AnnotationAssertion(rdfs:label schema:MarryAction "MarryAction")
SubClassOf(schema:MarryAction schema:InteractAction)

# Class: schema:Mass (Mass)

AnnotationAssertion(rdfs:comment schema:Mass "Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.")
AnnotationAssertion(rdfs:label schema:Mass "Mass")
SubClassOf(schema:Mass schema:Quantity)

# Class: schema:MathSolver (MathSolver)

AnnotationAssertion(rdfs:comment schema:MathSolver "A math solver which is capable of solving a subset of mathematical problems.")
AnnotationAssertion(rdfs:label schema:MathSolver "MathSolver")
AnnotationAssertion(schema:isPartOf schema:MathSolver <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MathSolver <https://github.com/schemaorg/schemaorg/issues/2740>)
SubClassOf(schema:MathSolver schema:CreativeWork)

# Class: schema:MaximumDoseSchedule (MaximumDoseSchedule)

AnnotationAssertion(rdfs:comment schema:MaximumDoseSchedule "The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.")
AnnotationAssertion(rdfs:label schema:MaximumDoseSchedule "MaximumDoseSchedule")
AnnotationAssertion(schema:isPartOf schema:MaximumDoseSchedule <https://health-lifesci.schema.org>)
SubClassOf(schema:MaximumDoseSchedule schema:DoseSchedule)

# Class: schema:MeasurementMethodEnum (MeasurementMethodEnum)

AnnotationAssertion(rdfs:comment schema:MeasurementMethodEnum "Enumeration(s) for use with [[measurementMethod]].")
AnnotationAssertion(rdfs:label schema:MeasurementMethodEnum "MeasurementMethodEnum")
AnnotationAssertion(schema:isPartOf schema:MeasurementMethodEnum <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MeasurementMethodEnum <https://github.com/schemaorg/schemaorg/issues/2564>)
SubClassOf(schema:MeasurementMethodEnum schema:Enumeration)

# Class: schema:MeasurementTypeEnumeration (MeasurementTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:MeasurementTypeEnumeration "Enumeration of common measurement types (or dimensions), for example \"chest\" for a person, \"inseam\" for pants, \"gauge\" for screws, or \"wheel\" for bicycles.")
AnnotationAssertion(rdfs:label schema:MeasurementTypeEnumeration "MeasurementTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:MeasurementTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MeasurementTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:MeasurementTypeEnumeration schema:Enumeration)

# Class: schema:MediaEnumeration (MediaEnumeration)

AnnotationAssertion(rdfs:comment schema:MediaEnumeration "MediaEnumeration enumerations are lists of codes, labels etc. useful for describing media objects. They may be reflections of externally developed lists, or created at schema.org, or a combination.")
AnnotationAssertion(rdfs:label schema:MediaEnumeration "MediaEnumeration")
AnnotationAssertion(schema:isPartOf schema:MediaEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MediaEnumeration <https://github.com/schemaorg/schemaorg/issues/3392>)
SubClassOf(schema:MediaEnumeration schema:Enumeration)

# Class: schema:MediaGallery (MediaGallery)

AnnotationAssertion(rdfs:comment schema:MediaGallery "Web page type: Media gallery page. A mixed-media page that can contain media such as images, videos, and other multimedia.")
AnnotationAssertion(rdfs:label schema:MediaGallery "MediaGallery")
SubClassOf(schema:MediaGallery schema:CollectionPage)

# Class: schema:MediaManipulationRatingEnumeration (MediaManipulationRatingEnumeration)

AnnotationAssertion(rdfs:comment schema:MediaManipulationRatingEnumeration " Codes for use with the [[mediaAuthenticityCategory]] property, indicating the authenticity of a media object (in the context of how it was published or shared). In general these codes are not mutually exclusive, although some combinations (such as 'original' versus 'transformed', 'edited' and 'staged') would be contradictory if applied in the same [[MediaReview]]. Note that the application of these codes is with regard to a piece of media shared or published in a particular context.")
AnnotationAssertion(rdfs:label schema:MediaManipulationRatingEnumeration "MediaManipulationRatingEnumeration")
AnnotationAssertion(schema:isPartOf schema:MediaManipulationRatingEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MediaManipulationRatingEnumeration <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:MediaManipulationRatingEnumeration schema:Enumeration)

# Class: schema:MediaObject (MediaObject)

AnnotationAssertion(rdfs:comment schema:MediaObject "A media object, such as an image, video, audio, or text object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).")
AnnotationAssertion(rdfs:label schema:MediaObject "MediaObject")
SubClassOf(schema:MediaObject schema:CreativeWork)

# Class: schema:MediaReview (MediaReview)

AnnotationAssertion(rdfs:comment schema:MediaReview "A [[MediaReview]] is a more specialized form of Review dedicated to the evaluation of media content online, typically in the context of fact-checking and misinformation.
    For more general reviews of media in the broader sense, use [[UserReview]], [[CriticReview]] or other [[Review]] types. This definition is
    a work in progress. While the [[MediaManipulationRatingEnumeration]] list reflects significant community review amongst fact-checkers and others working
    to combat misinformation, the specific structures for representing media objects, their versions and publication context, are still evolving. Similarly, best practices for the relationship between [[MediaReview]] and [[ClaimReview]] markup have not yet been finalized.")
AnnotationAssertion(rdfs:label schema:MediaReview "MediaReview")
AnnotationAssertion(schema:isPartOf schema:MediaReview <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MediaReview <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:MediaReview schema:Review)

# Class: schema:MediaReviewItem (MediaReviewItem)

AnnotationAssertion(rdfs:comment schema:MediaReviewItem "Represents an item or group of closely related items treated as a unit for the sake of evaluation in a [[MediaReview]]. Authorship etc. apply to the items rather than to the curation/grouping or reviewing party.")
AnnotationAssertion(rdfs:label schema:MediaReviewItem "MediaReviewItem")
AnnotationAssertion(schema:isPartOf schema:MediaReviewItem <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MediaReviewItem <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:MediaReviewItem schema:CreativeWork)

# Class: schema:MediaSubscription (MediaSubscription)

AnnotationAssertion(rdfs:comment schema:MediaSubscription "A subscription which allows a user to access media including audio, video, books, etc.")
AnnotationAssertion(rdfs:label schema:MediaSubscription "MediaSubscription")
AnnotationAssertion(schema:source schema:MediaSubscription <https://github.com/schemaorg/schemaorg/issues/1741>)
SubClassOf(schema:MediaSubscription schema:Intangible)

# Class: schema:MedicalAudience (MedicalAudience)

AnnotationAssertion(rdfs:comment schema:MedicalAudience "Target audiences for medical web pages.")
AnnotationAssertion(rdfs:label schema:MedicalAudience "MedicalAudience")
AnnotationAssertion(schema:isPartOf schema:MedicalAudience <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalAudience schema:Audience)
SubClassOf(schema:MedicalAudience schema:PeopleAudience)

# Class: schema:MedicalAudienceType (MedicalAudienceType)

AnnotationAssertion(rdfs:comment schema:MedicalAudienceType "Target audiences types for medical web pages. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalAudienceType "MedicalAudienceType")
AnnotationAssertion(schema:isPartOf schema:MedicalAudienceType <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalAudienceType schema:MedicalEnumeration)

# Class: schema:MedicalBusiness (MedicalBusiness)

AnnotationAssertion(rdfs:comment schema:MedicalBusiness "A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include different businesses run by health professionals.")
AnnotationAssertion(rdfs:label schema:MedicalBusiness "MedicalBusiness")
AnnotationAssertion(schema:isPartOf schema:MedicalBusiness <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalBusiness schema:LocalBusiness)

# Class: schema:MedicalCause (MedicalCause)

AnnotationAssertion(rdfs:comment schema:MedicalCause "The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.")
AnnotationAssertion(rdfs:label schema:MedicalCause "MedicalCause")
AnnotationAssertion(schema:isPartOf schema:MedicalCause <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalCause schema:MedicalEntity)

# Class: schema:MedicalClinic (MedicalClinic)

AnnotationAssertion(rdfs:comment schema:MedicalClinic "A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.")
AnnotationAssertion(rdfs:label schema:MedicalClinic "MedicalClinic")
AnnotationAssertion(schema:isPartOf schema:MedicalClinic <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalClinic schema:MedicalBusiness)
SubClassOf(schema:MedicalClinic schema:MedicalOrganization)

# Class: schema:MedicalCode (MedicalCode)

AnnotationAssertion(rdfs:comment schema:MedicalCode "A code for a medical entity.")
AnnotationAssertion(rdfs:label schema:MedicalCode "MedicalCode")
AnnotationAssertion(schema:isPartOf schema:MedicalCode <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalCode schema:CategoryCode)
SubClassOf(schema:MedicalCode schema:MedicalIntangible)

# Class: schema:MedicalCondition (MedicalCondition)

AnnotationAssertion(rdfs:comment schema:MedicalCondition "Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.")
AnnotationAssertion(rdfs:label schema:MedicalCondition "MedicalCondition")
AnnotationAssertion(schema:isPartOf schema:MedicalCondition <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalCondition schema:MedicalEntity)

# Class: schema:MedicalConditionStage (MedicalConditionStage)

AnnotationAssertion(rdfs:comment schema:MedicalConditionStage "A stage of a medical condition, such as 'Stage IIIa'.")
AnnotationAssertion(rdfs:label schema:MedicalConditionStage "MedicalConditionStage")
AnnotationAssertion(schema:isPartOf schema:MedicalConditionStage <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalConditionStage schema:MedicalIntangible)

# Class: schema:MedicalContraindication (MedicalContraindication)

AnnotationAssertion(rdfs:comment schema:MedicalContraindication "A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but these risks may be outweighed by other considerations or mitigated by other measures).")
AnnotationAssertion(rdfs:label schema:MedicalContraindication "MedicalContraindication")
AnnotationAssertion(schema:isPartOf schema:MedicalContraindication <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalContraindication schema:MedicalEntity)

# Class: schema:MedicalDevice (MedicalDevice)

AnnotationAssertion(rdfs:comment schema:MedicalDevice "Any object used in a medical capacity, such as to diagnose or treat a patient.")
AnnotationAssertion(rdfs:label schema:MedicalDevice "MedicalDevice")
AnnotationAssertion(schema:isPartOf schema:MedicalDevice <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalDevice schema:MedicalEntity)

# Class: schema:MedicalDevicePurpose (MedicalDevicePurpose)

AnnotationAssertion(rdfs:comment schema:MedicalDevicePurpose "Categories of medical devices, organized by the purpose or intended use of the device.")
AnnotationAssertion(rdfs:label schema:MedicalDevicePurpose "MedicalDevicePurpose")
AnnotationAssertion(schema:isPartOf schema:MedicalDevicePurpose <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalDevicePurpose schema:MedicalEnumeration)

# Class: schema:MedicalEntity (MedicalEntity)

AnnotationAssertion(rdfs:comment schema:MedicalEntity "The most generic type of entity related to health and the practice of medicine.")
AnnotationAssertion(rdfs:label schema:MedicalEntity "MedicalEntity")
AnnotationAssertion(schema:isPartOf schema:MedicalEntity <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalEntity schema:Thing)

# Class: schema:MedicalEnumeration (MedicalEnumeration)

AnnotationAssertion(rdfs:comment schema:MedicalEnumeration "Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.")
AnnotationAssertion(rdfs:label schema:MedicalEnumeration "MedicalEnumeration")
AnnotationAssertion(schema:isPartOf schema:MedicalEnumeration <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalEnumeration schema:Enumeration)

# Class: schema:MedicalEvidenceLevel (MedicalEvidenceLevel)

AnnotationAssertion(rdfs:comment schema:MedicalEvidenceLevel "Level of evidence for a medical guideline. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalEvidenceLevel "MedicalEvidenceLevel")
AnnotationAssertion(schema:isPartOf schema:MedicalEvidenceLevel <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalEvidenceLevel schema:MedicalEnumeration)

# Class: schema:MedicalGuideline (MedicalGuideline)

AnnotationAssertion(rdfs:comment schema:MedicalGuideline "Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.")
AnnotationAssertion(rdfs:label schema:MedicalGuideline "MedicalGuideline")
AnnotationAssertion(schema:isPartOf schema:MedicalGuideline <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalGuideline schema:MedicalEntity)

# Class: schema:MedicalGuidelineContraindication (MedicalGuidelineContraindication)

AnnotationAssertion(rdfs:comment schema:MedicalGuidelineContraindication "A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.")
AnnotationAssertion(rdfs:label schema:MedicalGuidelineContraindication "MedicalGuidelineContraindication")
AnnotationAssertion(schema:isPartOf schema:MedicalGuidelineContraindication <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalGuidelineContraindication schema:MedicalGuideline)

# Class: schema:MedicalGuidelineRecommendation (MedicalGuidelineRecommendation)

AnnotationAssertion(rdfs:comment schema:MedicalGuidelineRecommendation "A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.")
AnnotationAssertion(rdfs:label schema:MedicalGuidelineRecommendation "MedicalGuidelineRecommendation")
AnnotationAssertion(schema:isPartOf schema:MedicalGuidelineRecommendation <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalGuidelineRecommendation schema:MedicalGuideline)

# Class: schema:MedicalImagingTechnique (MedicalImagingTechnique)

AnnotationAssertion(rdfs:comment schema:MedicalImagingTechnique "Any medical imaging modality typically used for diagnostic purposes. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalImagingTechnique "MedicalImagingTechnique")
AnnotationAssertion(schema:isPartOf schema:MedicalImagingTechnique <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalImagingTechnique schema:MedicalEnumeration)

# Class: schema:MedicalIndication (MedicalIndication)

AnnotationAssertion(rdfs:comment schema:MedicalIndication "A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.")
AnnotationAssertion(rdfs:label schema:MedicalIndication "MedicalIndication")
AnnotationAssertion(schema:isPartOf schema:MedicalIndication <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalIndication schema:MedicalEntity)

# Class: schema:MedicalIntangible (MedicalIntangible)

AnnotationAssertion(rdfs:comment schema:MedicalIntangible "A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.")
AnnotationAssertion(rdfs:label schema:MedicalIntangible "MedicalIntangible")
AnnotationAssertion(schema:isPartOf schema:MedicalIntangible <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalIntangible schema:MedicalEntity)

# Class: schema:MedicalObservationalStudy (MedicalObservationalStudy)

AnnotationAssertion(rdfs:comment schema:MedicalObservationalStudy "An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.")
AnnotationAssertion(rdfs:label schema:MedicalObservationalStudy "MedicalObservationalStudy")
AnnotationAssertion(schema:isPartOf schema:MedicalObservationalStudy <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalObservationalStudy schema:MedicalStudy)

# Class: schema:MedicalObservationalStudyDesign (MedicalObservationalStudyDesign)

AnnotationAssertion(rdfs:comment schema:MedicalObservationalStudyDesign "Design models for observational medical studies. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalObservationalStudyDesign "MedicalObservationalStudyDesign")
AnnotationAssertion(schema:isPartOf schema:MedicalObservationalStudyDesign <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalObservationalStudyDesign schema:MedicalEnumeration)

# Class: schema:MedicalOrganization (MedicalOrganization)

AnnotationAssertion(rdfs:comment schema:MedicalOrganization "A medical organization (physical or not), such as hospital, institution or clinic.")
AnnotationAssertion(rdfs:label schema:MedicalOrganization "MedicalOrganization")
SubClassOf(schema:MedicalOrganization schema:Organization)

# Class: schema:MedicalProcedure (MedicalProcedure)

AnnotationAssertion(rdfs:comment schema:MedicalProcedure "A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.")
AnnotationAssertion(rdfs:label schema:MedicalProcedure "MedicalProcedure")
AnnotationAssertion(schema:isPartOf schema:MedicalProcedure <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalProcedure schema:MedicalEntity)

# Class: schema:MedicalProcedureType (MedicalProcedureType)

AnnotationAssertion(rdfs:comment schema:MedicalProcedureType "An enumeration that describes different types of medical procedures.")
AnnotationAssertion(rdfs:label schema:MedicalProcedureType "MedicalProcedureType")
AnnotationAssertion(schema:isPartOf schema:MedicalProcedureType <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalProcedureType schema:MedicalEnumeration)

# Class: schema:MedicalRiskCalculator (MedicalRiskCalculator)

AnnotationAssertion(rdfs:comment schema:MedicalRiskCalculator "A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.")
AnnotationAssertion(rdfs:label schema:MedicalRiskCalculator "MedicalRiskCalculator")
AnnotationAssertion(schema:isPartOf schema:MedicalRiskCalculator <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalRiskCalculator schema:MedicalRiskEstimator)

# Class: schema:MedicalRiskEstimator (MedicalRiskEstimator)

AnnotationAssertion(rdfs:comment schema:MedicalRiskEstimator "Any rule set or interactive tool for estimating the risk of developing a complication or condition.")
AnnotationAssertion(rdfs:label schema:MedicalRiskEstimator "MedicalRiskEstimator")
AnnotationAssertion(schema:isPartOf schema:MedicalRiskEstimator <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalRiskEstimator schema:MedicalEntity)

# Class: schema:MedicalRiskFactor (MedicalRiskFactor)

AnnotationAssertion(rdfs:comment schema:MedicalRiskFactor "A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.")
AnnotationAssertion(rdfs:label schema:MedicalRiskFactor "MedicalRiskFactor")
AnnotationAssertion(schema:isPartOf schema:MedicalRiskFactor <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalRiskFactor schema:MedicalEntity)

# Class: schema:MedicalRiskScore (MedicalRiskScore)

AnnotationAssertion(rdfs:comment schema:MedicalRiskScore "A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.")
AnnotationAssertion(rdfs:label schema:MedicalRiskScore "MedicalRiskScore")
AnnotationAssertion(schema:isPartOf schema:MedicalRiskScore <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalRiskScore schema:MedicalRiskEstimator)

# Class: schema:MedicalScholarlyArticle (MedicalScholarlyArticle)

AnnotationAssertion(rdfs:comment schema:MedicalScholarlyArticle "A scholarly article in the medical domain.")
AnnotationAssertion(rdfs:label schema:MedicalScholarlyArticle "MedicalScholarlyArticle")
AnnotationAssertion(schema:isPartOf schema:MedicalScholarlyArticle <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalScholarlyArticle schema:ScholarlyArticle)

# Class: schema:MedicalSign (MedicalSign)

AnnotationAssertion(rdfs:comment schema:MedicalSign "Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.")
AnnotationAssertion(rdfs:label schema:MedicalSign "MedicalSign")
AnnotationAssertion(schema:isPartOf schema:MedicalSign <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalSign schema:MedicalSignOrSymptom)

# Class: schema:MedicalSignOrSymptom (MedicalSignOrSymptom)

AnnotationAssertion(rdfs:comment schema:MedicalSignOrSymptom "Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.")
AnnotationAssertion(rdfs:label schema:MedicalSignOrSymptom "MedicalSignOrSymptom")
AnnotationAssertion(schema:isPartOf schema:MedicalSignOrSymptom <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalSignOrSymptom schema:MedicalCondition)

# Class: schema:MedicalSpecialty (MedicalSpecialty)

AnnotationAssertion(rdfs:comment schema:MedicalSpecialty "Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalSpecialty "MedicalSpecialty")
AnnotationAssertion(schema:isPartOf schema:MedicalSpecialty <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalSpecialty schema:MedicalEnumeration)
SubClassOf(schema:MedicalSpecialty schema:Specialty)

# Class: schema:MedicalStudy (MedicalStudy)

AnnotationAssertion(rdfs:comment schema:MedicalStudy "A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.")
AnnotationAssertion(rdfs:label schema:MedicalStudy "MedicalStudy")
AnnotationAssertion(schema:isPartOf schema:MedicalStudy <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalStudy schema:MedicalEntity)

# Class: schema:MedicalStudyStatus (MedicalStudyStatus)

AnnotationAssertion(rdfs:comment schema:MedicalStudyStatus "The status of a medical study. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalStudyStatus "MedicalStudyStatus")
AnnotationAssertion(schema:isPartOf schema:MedicalStudyStatus <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalStudyStatus schema:MedicalEnumeration)

# Class: schema:MedicalSymptom (MedicalSymptom)

AnnotationAssertion(rdfs:comment schema:MedicalSymptom "Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.")
AnnotationAssertion(rdfs:label schema:MedicalSymptom "MedicalSymptom")
AnnotationAssertion(schema:isPartOf schema:MedicalSymptom <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalSymptom schema:MedicalSignOrSymptom)

# Class: schema:MedicalTest (MedicalTest)

AnnotationAssertion(rdfs:comment schema:MedicalTest "Any medical test, typically performed for diagnostic purposes.")
AnnotationAssertion(rdfs:label schema:MedicalTest "MedicalTest")
AnnotationAssertion(schema:isPartOf schema:MedicalTest <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalTest schema:MedicalEntity)

# Class: schema:MedicalTestPanel (MedicalTestPanel)

AnnotationAssertion(rdfs:comment schema:MedicalTestPanel "Any collection of tests commonly ordered together.")
AnnotationAssertion(rdfs:label schema:MedicalTestPanel "MedicalTestPanel")
AnnotationAssertion(schema:isPartOf schema:MedicalTestPanel <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalTestPanel schema:MedicalTest)

# Class: schema:MedicalTherapy (MedicalTherapy)

AnnotationAssertion(rdfs:comment schema:MedicalTherapy "Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.")
AnnotationAssertion(rdfs:label schema:MedicalTherapy "MedicalTherapy")
AnnotationAssertion(schema:isPartOf schema:MedicalTherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalTherapy schema:TherapeuticProcedure)

# Class: schema:MedicalTrial (MedicalTrial)

AnnotationAssertion(rdfs:comment schema:MedicalTrial "A medical trial is a type of medical study that uses a scientific process to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.")
AnnotationAssertion(rdfs:label schema:MedicalTrial "MedicalTrial")
AnnotationAssertion(schema:isPartOf schema:MedicalTrial <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalTrial schema:MedicalStudy)

# Class: schema:MedicalTrialDesign (MedicalTrialDesign)

AnnotationAssertion(rdfs:comment schema:MedicalTrialDesign "Design models for medical trials. Enumerated type.")
AnnotationAssertion(rdfs:label schema:MedicalTrialDesign "MedicalTrialDesign")
AnnotationAssertion(schema:contributor schema:MedicalTrialDesign <https://schema.org/docs/collab/WikiDoc>)
AnnotationAssertion(schema:isPartOf schema:MedicalTrialDesign <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalTrialDesign schema:MedicalEnumeration)

# Class: schema:MedicalWebPage (MedicalWebPage)

AnnotationAssertion(rdfs:comment schema:MedicalWebPage "A web page that provides medical information.")
AnnotationAssertion(rdfs:label schema:MedicalWebPage "MedicalWebPage")
AnnotationAssertion(schema:isPartOf schema:MedicalWebPage <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicalWebPage schema:WebPage)

# Class: schema:MedicineSystem (MedicineSystem)

AnnotationAssertion(rdfs:comment schema:MedicineSystem "Systems of medical practice.")
AnnotationAssertion(rdfs:label schema:MedicineSystem "MedicineSystem")
AnnotationAssertion(schema:isPartOf schema:MedicineSystem <https://health-lifesci.schema.org>)
SubClassOf(schema:MedicineSystem schema:MedicalEnumeration)

# Class: schema:MeetingRoom (MeetingRoom)

AnnotationAssertion(rdfs:comment schema:MeetingRoom "A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Conference_hall\">http://en.wikipedia.org/wiki/Conference_hall</a>).
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:MeetingRoom "MeetingRoom")
AnnotationAssertion(schema:contributor schema:MeetingRoom <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:MeetingRoom schema:Room)

# Class: schema:MemberProgram (MemberProgram)

AnnotationAssertion(rdfs:comment schema:MemberProgram "A MemberProgram defines a loyalty (or membership) program that provides its members with certain benefits, for example better pricing, free shipping or returns, or the ability to earn loyalty points. Member programs may have multiple tiers, for example silver and gold members, each with different benefits.")
AnnotationAssertion(rdfs:label schema:MemberProgram "MemberProgram")
AnnotationAssertion(schema:isPartOf schema:MemberProgram <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MemberProgram <https://github.com/schemaorg/schemaorg/issues/3563>)
SubClassOf(schema:MemberProgram schema:Intangible)

# Class: schema:MemberProgramTier (MemberProgramTier)

AnnotationAssertion(rdfs:comment schema:MemberProgramTier "A MemberProgramTier specifies a tier under a loyalty (member) program, for example \"gold\".")
AnnotationAssertion(rdfs:label schema:MemberProgramTier "MemberProgramTier")
AnnotationAssertion(schema:isPartOf schema:MemberProgramTier <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MemberProgramTier <https://github.com/schemaorg/schemaorg/issues/3563>)
SubClassOf(schema:MemberProgramTier schema:Intangible)

# Class: schema:MensClothingStore (MensClothingStore)

AnnotationAssertion(rdfs:comment schema:MensClothingStore "A men's clothing store.")
AnnotationAssertion(rdfs:label schema:MensClothingStore "MensClothingStore")
SubClassOf(schema:MensClothingStore schema:Store)

# Class: schema:Menu (Menu)

AnnotationAssertion(rdfs:comment schema:Menu "A structured representation of food or drink items available from a FoodEstablishment.")
AnnotationAssertion(rdfs:label schema:Menu "Menu")
SubClassOf(schema:Menu schema:CreativeWork)

# Class: schema:MenuItem (MenuItem)

AnnotationAssertion(rdfs:comment schema:MenuItem "A food or drink item listed in a menu or menu section.")
AnnotationAssertion(rdfs:label schema:MenuItem "MenuItem")
SubClassOf(schema:MenuItem schema:Intangible)

# Class: schema:MenuSection (MenuSection)

AnnotationAssertion(rdfs:comment schema:MenuSection "A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.")
AnnotationAssertion(rdfs:label schema:MenuSection "MenuSection")
SubClassOf(schema:MenuSection schema:CreativeWork)

# Class: schema:MerchantReturnEnumeration (MerchantReturnEnumeration)

AnnotationAssertion(rdfs:comment schema:MerchantReturnEnumeration "Enumerates several kinds of product return policies.")
AnnotationAssertion(rdfs:label schema:MerchantReturnEnumeration "MerchantReturnEnumeration")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnEnumeration <https://github.com/schemaorg/schemaorg/issues/2288>)
SubClassOf(schema:MerchantReturnEnumeration schema:Enumeration)

# Class: schema:MerchantReturnPolicy (MerchantReturnPolicy)

AnnotationAssertion(rdfs:comment schema:MerchantReturnPolicy "A MerchantReturnPolicy provides information about product return policies associated with an [[Organization]], [[Product]], or [[Offer]].")
AnnotationAssertion(rdfs:label schema:MerchantReturnPolicy "MerchantReturnPolicy")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnPolicy <https://github.com/schemaorg/schemaorg/issues/2288>)
SubClassOf(schema:MerchantReturnPolicy schema:Intangible)

# Class: schema:MerchantReturnPolicySeasonalOverride (MerchantReturnPolicySeasonalOverride)

AnnotationAssertion(rdfs:comment schema:MerchantReturnPolicySeasonalOverride "A seasonal override of a return policy, for example used for holidays.")
AnnotationAssertion(rdfs:label schema:MerchantReturnPolicySeasonalOverride "MerchantReturnPolicySeasonalOverride")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnPolicySeasonalOverride <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnPolicySeasonalOverride <https://github.com/schemaorg/schemaorg/issues/2880>)
SubClassOf(schema:MerchantReturnPolicySeasonalOverride schema:Intangible)

# Class: schema:Message (Message)

AnnotationAssertion(rdfs:comment schema:Message "A single message from a sender to one or more organizations or people.")
AnnotationAssertion(rdfs:label schema:Message "Message")
SubClassOf(schema:Message schema:CreativeWork)

# Class: schema:MiddleSchool (MiddleSchool)

AnnotationAssertion(rdfs:comment schema:MiddleSchool "A middle school (typically for children aged around 11-14, although this varies somewhat).")
AnnotationAssertion(rdfs:label schema:MiddleSchool "MiddleSchool")
SubClassOf(schema:MiddleSchool schema:EducationalOrganization)

# Class: schema:Midwifery (Midwifery)

AnnotationAssertion(rdfs:comment schema:Midwifery "A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.")
AnnotationAssertion(rdfs:label schema:Midwifery "Midwifery")
AnnotationAssertion(schema:isPartOf schema:Midwifery <https://health-lifesci.schema.org>)
SubClassOf(schema:Midwifery schema:MedicalBusiness)

# Class: schema:MobileApplication (MobileApplication)

AnnotationAssertion(rdfs:comment schema:MobileApplication "A software application designed specifically to work well on a mobile device such as a telephone.")
AnnotationAssertion(rdfs:label schema:MobileApplication "MobileApplication")
SubClassOf(schema:MobileApplication schema:SoftwareApplication)

# Class: schema:MobilePhoneStore (MobilePhoneStore)

AnnotationAssertion(rdfs:comment schema:MobilePhoneStore "A store that sells mobile phones and related accessories.")
AnnotationAssertion(rdfs:label schema:MobilePhoneStore "MobilePhoneStore")
SubClassOf(schema:MobilePhoneStore schema:Store)

# Class: schema:MolecularEntity (MolecularEntity)

AnnotationAssertion(rdfs:comment schema:MolecularEntity "Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer etc., identifiable as a separately distinguishable entity.")
AnnotationAssertion(rdfs:label schema:MolecularEntity "MolecularEntity")
AnnotationAssertion(schema:isPartOf schema:MolecularEntity <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MolecularEntity <http://bioschemas.org>)
SubClassOf(schema:MolecularEntity schema:BioChemEntity)

# Class: schema:MonetaryAmount (MonetaryAmount)

AnnotationAssertion(rdfs:comment schema:MonetaryAmount "A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use [[PriceSpecification]] Types to describe the price of an Offer, Invoice, etc.")
AnnotationAssertion(rdfs:label schema:MonetaryAmount "MonetaryAmount")
AnnotationAssertion(schema:contributor schema:MonetaryAmount <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:MonetaryAmount schema:StructuredValue)

# Class: schema:MonetaryAmountDistribution (MonetaryAmountDistribution)

AnnotationAssertion(rdfs:comment schema:MonetaryAmountDistribution "A statistical distribution of monetary amounts.")
AnnotationAssertion(rdfs:label schema:MonetaryAmountDistribution "MonetaryAmountDistribution")
AnnotationAssertion(schema:source schema:MonetaryAmountDistribution <https://github.com/schemaorg/schemaorg/issues/1698>)
SubClassOf(schema:MonetaryAmountDistribution schema:QuantitativeValueDistribution)

# Class: schema:MonetaryGrant (MonetaryGrant)

AnnotationAssertion(rdfs:comment schema:MonetaryGrant "A monetary grant.")
AnnotationAssertion(rdfs:label schema:MonetaryGrant "MonetaryGrant")
AnnotationAssertion(schema:isPartOf schema:MonetaryGrant <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MonetaryGrant <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:MonetaryGrant <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:MonetaryGrant schema:Grant)

# Class: schema:MoneyTransfer (MoneyTransfer)

AnnotationAssertion(rdfs:comment schema:MoneyTransfer "The act of transferring money from one place to another place. This may occur electronically or physically.")
AnnotationAssertion(rdfs:label schema:MoneyTransfer "MoneyTransfer")
AnnotationAssertion(schema:contributor schema:MoneyTransfer <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:MoneyTransfer <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MoneyTransfer <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:MoneyTransfer schema:TransferAction)

# Class: schema:MortgageLoan (MortgageLoan)

AnnotationAssertion(rdfs:comment schema:MortgageLoan "A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)")
AnnotationAssertion(rdfs:label schema:MortgageLoan "MortgageLoan")
AnnotationAssertion(schema:contributor schema:MortgageLoan <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:MortgageLoan <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MortgageLoan <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:MortgageLoan schema:LoanOrCredit)

# Class: schema:Mosque (Mosque)

AnnotationAssertion(rdfs:comment schema:Mosque "A mosque.")
AnnotationAssertion(rdfs:label schema:Mosque "Mosque")
SubClassOf(schema:Mosque schema:PlaceOfWorship)

# Class: schema:Motel (Motel)

AnnotationAssertion(rdfs:comment schema:Motel "A motel.
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Motel "Motel")
SubClassOf(schema:Motel schema:LodgingBusiness)

# Class: schema:Motorcycle (Motorcycle)

AnnotationAssertion(rdfs:comment schema:Motorcycle "A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.")
AnnotationAssertion(rdfs:label schema:Motorcycle "Motorcycle")
AnnotationAssertion(schema:contributor schema:Motorcycle <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:Motorcycle <https://auto.schema.org>)
SubClassOf(schema:Motorcycle schema:Vehicle)

# Class: schema:MotorcycleDealer (MotorcycleDealer)

AnnotationAssertion(rdfs:comment schema:MotorcycleDealer "A motorcycle dealer.")
AnnotationAssertion(rdfs:label schema:MotorcycleDealer "MotorcycleDealer")
SubClassOf(schema:MotorcycleDealer schema:AutomotiveBusiness)

# Class: schema:MotorcycleRepair (MotorcycleRepair)

AnnotationAssertion(rdfs:comment schema:MotorcycleRepair "A motorcycle repair shop.")
AnnotationAssertion(rdfs:label schema:MotorcycleRepair "MotorcycleRepair")
SubClassOf(schema:MotorcycleRepair schema:AutomotiveBusiness)

# Class: schema:MotorizedBicycle (MotorizedBicycle)

AnnotationAssertion(rdfs:comment schema:MotorizedBicycle "A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.")
AnnotationAssertion(rdfs:label schema:MotorizedBicycle "MotorizedBicycle")
AnnotationAssertion(schema:contributor schema:MotorizedBicycle <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:MotorizedBicycle <https://auto.schema.org>)
SubClassOf(schema:MotorizedBicycle schema:Vehicle)

# Class: schema:Mountain (Mountain)

AnnotationAssertion(rdfs:comment schema:Mountain "A mountain, like Mount Whitney or Mount Everest.")
AnnotationAssertion(rdfs:label schema:Mountain "Mountain")
SubClassOf(schema:Mountain schema:Landform)

# Class: schema:MoveAction (MoveAction)

AnnotationAssertion(rdfs:comment schema:MoveAction "The act of an agent relocating to a place.\\n\\nRelated actions:\\n\\n* [[TransferAction]]: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.")
AnnotationAssertion(rdfs:label schema:MoveAction "MoveAction")
SubClassOf(schema:MoveAction schema:Action)

# Class: schema:Movie (Movie)

AnnotationAssertion(rdfs:comment schema:Movie "A movie.")
AnnotationAssertion(rdfs:label schema:Movie "Movie")
SubClassOf(schema:Movie schema:CreativeWork)

# Class: schema:MovieClip (MovieClip)

AnnotationAssertion(rdfs:comment schema:MovieClip "A short segment/part of a movie.")
AnnotationAssertion(rdfs:label schema:MovieClip "MovieClip")
SubClassOf(schema:MovieClip schema:Clip)

# Class: schema:MovieRentalStore (MovieRentalStore)

AnnotationAssertion(rdfs:comment schema:MovieRentalStore "A movie rental store.")
AnnotationAssertion(rdfs:label schema:MovieRentalStore "MovieRentalStore")
SubClassOf(schema:MovieRentalStore schema:Store)

# Class: schema:MovieSeries (MovieSeries)

AnnotationAssertion(rdfs:comment schema:MovieSeries "A series of movies. Included movies can be indicated with the hasPart property.")
AnnotationAssertion(rdfs:label schema:MovieSeries "MovieSeries")
SubClassOf(schema:MovieSeries schema:CreativeWorkSeries)

# Class: schema:MovieTheater (MovieTheater)

AnnotationAssertion(rdfs:comment schema:MovieTheater "A movie theater.")
AnnotationAssertion(rdfs:label schema:MovieTheater "MovieTheater")
SubClassOf(schema:MovieTheater schema:CivicStructure)
SubClassOf(schema:MovieTheater schema:EntertainmentBusiness)

# Class: schema:MovingCompany (MovingCompany)

AnnotationAssertion(rdfs:comment schema:MovingCompany "A moving company.")
AnnotationAssertion(rdfs:label schema:MovingCompany "MovingCompany")
SubClassOf(schema:MovingCompany schema:HomeAndConstructionBusiness)

# Class: schema:Muscle (Muscle)

AnnotationAssertion(rdfs:comment schema:Muscle "A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.")
AnnotationAssertion(rdfs:label schema:Muscle "Muscle")
AnnotationAssertion(schema:isPartOf schema:Muscle <https://health-lifesci.schema.org>)
SubClassOf(schema:Muscle schema:AnatomicalStructure)

# Class: schema:Museum (Museum)

AnnotationAssertion(rdfs:comment schema:Museum "A museum.")
AnnotationAssertion(rdfs:label schema:Museum "Museum")
SubClassOf(schema:Museum schema:CivicStructure)

# Class: schema:MusicAlbum (MusicAlbum)

AnnotationAssertion(rdfs:comment schema:MusicAlbum "A collection of music tracks.")
AnnotationAssertion(rdfs:label schema:MusicAlbum "MusicAlbum")
SubClassOf(schema:MusicAlbum schema:MusicPlaylist)

# Class: schema:MusicAlbumProductionType (MusicAlbumProductionType)

AnnotationAssertion(rdfs:comment schema:MusicAlbumProductionType "Classification of the album by its type of content: soundtrack, live album, studio album, etc.")
AnnotationAssertion(rdfs:label schema:MusicAlbumProductionType "MusicAlbumProductionType")
AnnotationAssertion(schema:contributor schema:MusicAlbumProductionType <https://schema.org/docs/collab/MBZ>)
SubClassOf(schema:MusicAlbumProductionType schema:Enumeration)

# Class: schema:MusicAlbumReleaseType (MusicAlbumReleaseType)

AnnotationAssertion(rdfs:comment schema:MusicAlbumReleaseType "The kind of release which this album is: single, EP or album.")
AnnotationAssertion(rdfs:label schema:MusicAlbumReleaseType "MusicAlbumReleaseType")
AnnotationAssertion(schema:contributor schema:MusicAlbumReleaseType <https://schema.org/docs/collab/MBZ>)
SubClassOf(schema:MusicAlbumReleaseType schema:Enumeration)

# Class: schema:MusicComposition (MusicComposition)

AnnotationAssertion(rdfs:comment schema:MusicComposition "A musical composition.")
AnnotationAssertion(rdfs:label schema:MusicComposition "MusicComposition")
AnnotationAssertion(schema:contributor schema:MusicComposition <https://schema.org/docs/collab/MBZ>)
SubClassOf(schema:MusicComposition schema:CreativeWork)

# Class: schema:MusicEvent (MusicEvent)

AnnotationAssertion(rdfs:comment schema:MusicEvent "Event type: Music event.")
AnnotationAssertion(rdfs:label schema:MusicEvent "MusicEvent")
SubClassOf(schema:MusicEvent schema:Event)

# Class: schema:MusicGroup (MusicGroup)

AnnotationAssertion(rdfs:comment schema:MusicGroup "A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.")
AnnotationAssertion(rdfs:label schema:MusicGroup "MusicGroup")
SubClassOf(schema:MusicGroup schema:PerformingGroup)

# Class: schema:MusicPlaylist (MusicPlaylist)

AnnotationAssertion(rdfs:comment schema:MusicPlaylist "A collection of music tracks in playlist form.")
AnnotationAssertion(rdfs:label schema:MusicPlaylist "MusicPlaylist")
SubClassOf(schema:MusicPlaylist schema:CreativeWork)

# Class: schema:MusicRecording (MusicRecording)

AnnotationAssertion(rdfs:comment schema:MusicRecording "A music recording (track), usually a single song.")
AnnotationAssertion(rdfs:label schema:MusicRecording "MusicRecording")
SubClassOf(schema:MusicRecording schema:CreativeWork)

# Class: schema:MusicRelease (MusicRelease)

AnnotationAssertion(rdfs:comment schema:MusicRelease "A MusicRelease is a specific release of a music album.")
AnnotationAssertion(rdfs:label schema:MusicRelease "MusicRelease")
AnnotationAssertion(schema:contributor schema:MusicRelease <https://schema.org/docs/collab/MBZ>)
SubClassOf(schema:MusicRelease schema:MusicPlaylist)

# Class: schema:MusicReleaseFormatType (MusicReleaseFormatType)

AnnotationAssertion(rdfs:comment schema:MusicReleaseFormatType "Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).")
AnnotationAssertion(rdfs:label schema:MusicReleaseFormatType "MusicReleaseFormatType")
AnnotationAssertion(schema:contributor schema:MusicReleaseFormatType <https://schema.org/docs/collab/MBZ>)
SubClassOf(schema:MusicReleaseFormatType schema:Enumeration)

# Class: schema:MusicStore (MusicStore)

AnnotationAssertion(rdfs:comment schema:MusicStore "A music store.")
AnnotationAssertion(rdfs:label schema:MusicStore "MusicStore")
SubClassOf(schema:MusicStore schema:Store)

# Class: schema:MusicVenue (MusicVenue)

AnnotationAssertion(rdfs:comment schema:MusicVenue "A music venue.")
AnnotationAssertion(rdfs:label schema:MusicVenue "MusicVenue")
SubClassOf(schema:MusicVenue schema:CivicStructure)

# Class: schema:MusicVideoObject (MusicVideoObject)

AnnotationAssertion(rdfs:comment schema:MusicVideoObject "A music video file.")
AnnotationAssertion(rdfs:label schema:MusicVideoObject "MusicVideoObject")
SubClassOf(schema:MusicVideoObject schema:MediaObject)

# Class: schema:NGO (NGO)

AnnotationAssertion(rdfs:comment schema:NGO "Organization: Non-governmental Organization.")
AnnotationAssertion(rdfs:label schema:NGO "NGO")
SubClassOf(schema:NGO schema:Organization)

# Class: schema:NLNonprofitType (NLNonprofitType)

AnnotationAssertion(rdfs:comment schema:NLNonprofitType "NLNonprofitType: Non-profit organization type originating from the Netherlands.")
AnnotationAssertion(rdfs:label schema:NLNonprofitType "NLNonprofitType")
AnnotationAssertion(schema:isPartOf schema:NLNonprofitType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NLNonprofitType <https://github.com/schemaorg/schemaorg/issues/2543>)
SubClassOf(schema:NLNonprofitType schema:NonprofitType)

# Class: schema:NailSalon (NailSalon)

AnnotationAssertion(rdfs:comment schema:NailSalon "A nail salon.")
AnnotationAssertion(rdfs:label schema:NailSalon "NailSalon")
SubClassOf(schema:NailSalon schema:HealthAndBeautyBusiness)

# Class: schema:Nerve (Nerve)

AnnotationAssertion(rdfs:comment schema:Nerve "A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.")
AnnotationAssertion(rdfs:label schema:Nerve "Nerve")
AnnotationAssertion(schema:isPartOf schema:Nerve <https://health-lifesci.schema.org>)
SubClassOf(schema:Nerve schema:AnatomicalStructure)

# Class: schema:NewsArticle (NewsArticle)

AnnotationAssertion(rdfs:comment schema:NewsArticle "A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.

A more detailed overview of [schema.org News markup](/docs/news.html) is also available.
")
AnnotationAssertion(rdfs:label schema:NewsArticle "NewsArticle")
AnnotationAssertion(schema:contributor schema:NewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:contributor schema:NewsArticle <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:NewsArticle schema:Article)

# Class: schema:NewsMediaOrganization (NewsMediaOrganization)

AnnotationAssertion(rdfs:comment schema:NewsMediaOrganization "A News/Media organization such as a newspaper or TV station.")
AnnotationAssertion(rdfs:label schema:NewsMediaOrganization "NewsMediaOrganization")
AnnotationAssertion(schema:contributor schema:NewsMediaOrganization <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:NewsMediaOrganization <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NewsMediaOrganization <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:NewsMediaOrganization schema:Organization)

# Class: schema:Newspaper (Newspaper)

AnnotationAssertion(rdfs:comment schema:Newspaper "A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.")
AnnotationAssertion(rdfs:label schema:Newspaper "Newspaper")
AnnotationAssertion(schema:isPartOf schema:Newspaper <https://bib.schema.org>)
AnnotationAssertion(schema:source schema:Newspaper <http://www.productontology.org/id/Newspaper>)
SubClassOf(schema:Newspaper schema:Periodical)

# Class: schema:NightClub (NightClub)

AnnotationAssertion(rdfs:comment schema:NightClub "A nightclub or discotheque.")
AnnotationAssertion(rdfs:label schema:NightClub "NightClub")
SubClassOf(schema:NightClub schema:EntertainmentBusiness)

# Class: schema:NonprofitType (NonprofitType)

AnnotationAssertion(rdfs:comment schema:NonprofitType "NonprofitType enumerates several kinds of official non-profit types of which a non-profit organization can be.")
AnnotationAssertion(rdfs:label schema:NonprofitType "NonprofitType")
AnnotationAssertion(schema:isPartOf schema:NonprofitType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NonprofitType <https://github.com/schemaorg/schemaorg/issues/2543>)
SubClassOf(schema:NonprofitType schema:Enumeration)

# Class: schema:Notary (Notary)

AnnotationAssertion(rdfs:comment schema:Notary "A notary.")
AnnotationAssertion(rdfs:label schema:Notary "Notary")
SubClassOf(schema:Notary schema:LegalService)

# Class: schema:NoteDigitalDocument (NoteDigitalDocument)

AnnotationAssertion(rdfs:comment schema:NoteDigitalDocument "A file containing a note, primarily for the author.")
AnnotationAssertion(rdfs:label schema:NoteDigitalDocument "NoteDigitalDocument")
SubClassOf(schema:NoteDigitalDocument schema:DigitalDocument)

# Class: schema:Number (Number)

AnnotationAssertion(rdfs:comment schema:Number "Data type: Number.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:Number "Number")

# Class: schema:Nursing (Nursing)

AnnotationAssertion(rdfs:comment schema:Nursing "A health profession of a person formally educated and trained in the care of the sick or infirm person.")
AnnotationAssertion(rdfs:label schema:Nursing "Nursing")
AnnotationAssertion(schema:isPartOf schema:Nursing <https://health-lifesci.schema.org>)
SubClassOf(schema:Nursing schema:MedicalBusiness)

# Class: schema:NutritionInformation (NutritionInformation)

AnnotationAssertion(rdfs:comment schema:NutritionInformation "Nutritional information about the recipe.")
AnnotationAssertion(rdfs:label schema:NutritionInformation "NutritionInformation")
SubClassOf(schema:NutritionInformation schema:StructuredValue)

# Class: schema:Observation (Observation)

AnnotationAssertion(rdfs:comment schema:Observation "Instances of the class [[Observation]] are used to specify observations about an entity at a particular time. The principal properties of an [[Observation]] are [[observationAbout]], [[measuredProperty]], [[statType]], [[value] and [[observationDate]]  and [[measuredProperty]]. Some but not all Observations represent a [[QuantitativeValue]]. Quantitative observations can be about a [[StatisticalVariable]], which is an abstract specification about which we can make observations that are grounded at a particular location and time.

Observations can also encode a subset of simple RDF-like statements (its observationAbout, a StatisticalVariable, defining the measuredPoperty; its observationAbout property indicating the entity the statement is about, and [[value]] )

In the context of a quantitative knowledge graph, typical properties could include [[measuredProperty]], [[observationAbout]], [[observationDate]], [[value]], [[unitCode]], [[unitText]], [[measurementMethod]].
    ")
AnnotationAssertion(rdfs:label schema:Observation "Observation")
AnnotationAssertion(schema:isPartOf schema:Observation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Observation <https://github.com/schemaorg/schemaorg/issues/2291>)
SubClassOf(schema:Observation schema:Intangible)
SubClassOf(schema:Observation schema:QuantitativeValue)

# Class: schema:Obstetric (Obstetric)

AnnotationAssertion(rdfs:comment schema:Obstetric "A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.")
AnnotationAssertion(rdfs:label schema:Obstetric "Obstetric")
AnnotationAssertion(schema:isPartOf schema:Obstetric <https://health-lifesci.schema.org>)
SubClassOf(schema:Obstetric schema:MedicalBusiness)

# Class: schema:Occupation (Occupation)

AnnotationAssertion(rdfs:comment schema:Occupation "A profession, may involve prolonged training and/or a formal qualification.")
AnnotationAssertion(rdfs:label schema:Occupation "Occupation")
AnnotationAssertion(schema:source schema:Occupation <https://github.com/schemaorg/schemaorg/issues/1698>)
SubClassOf(schema:Occupation schema:Intangible)

# Class: schema:OccupationalExperienceRequirements (OccupationalExperienceRequirements)

AnnotationAssertion(rdfs:comment schema:OccupationalExperienceRequirements "Indicates employment-related experience requirements, e.g. [[monthsOfExperience]].")
AnnotationAssertion(rdfs:label schema:OccupationalExperienceRequirements "OccupationalExperienceRequirements")
AnnotationAssertion(schema:isPartOf schema:OccupationalExperienceRequirements <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OccupationalExperienceRequirements <https://github.com/schemaorg/schemaorg/issues/2681>)
SubClassOf(schema:OccupationalExperienceRequirements schema:Intangible)

# Class: schema:OccupationalTherapy (OccupationalTherapy)

AnnotationAssertion(rdfs:comment schema:OccupationalTherapy "A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.")
AnnotationAssertion(rdfs:label schema:OccupationalTherapy "OccupationalTherapy")
AnnotationAssertion(schema:isPartOf schema:OccupationalTherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:OccupationalTherapy schema:MedicalTherapy)

# Class: schema:OceanBodyOfWater (OceanBodyOfWater)

AnnotationAssertion(rdfs:comment schema:OceanBodyOfWater "An ocean (for example, the Pacific).")
AnnotationAssertion(rdfs:label schema:OceanBodyOfWater "OceanBodyOfWater")
SubClassOf(schema:OceanBodyOfWater schema:BodyOfWater)

# Class: schema:Offer (Offer)

AnnotationAssertion(rdfs:comment schema:Offer "An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\\n\\nNote: As the [[businessFunction]] property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.\\n\\nFor [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) from [GS1](http://www.gs1.org/).")
AnnotationAssertion(rdfs:label schema:Offer "Offer")
AnnotationAssertion(schema:contributor schema:Offer <https://schema.org/docs/collab/GoodRelationsTerms>)
SubClassOf(schema:Offer schema:Intangible)

# Class: schema:OfferCatalog (OfferCatalog)

AnnotationAssertion(rdfs:comment schema:OfferCatalog "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.")
AnnotationAssertion(rdfs:label schema:OfferCatalog "OfferCatalog")
SubClassOf(schema:OfferCatalog schema:ItemList)

# Class: schema:OfferForLease (OfferForLease)

AnnotationAssertion(rdfs:comment schema:OfferForLease "An [[OfferForLease]] in Schema.org represents an [[Offer]] to lease out something, i.e. an [[Offer]] whose
  [[businessFunction]] is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
  background on the underlying concepts.
  ")
AnnotationAssertion(rdfs:label schema:OfferForLease "OfferForLease")
AnnotationAssertion(schema:isPartOf schema:OfferForLease <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OfferForLease <https://github.com/schemaorg/schemaorg/issues/2348>)
SubClassOf(schema:OfferForLease schema:Offer)

# Class: schema:OfferForPurchase (OfferForPurchase)

AnnotationAssertion(rdfs:comment schema:OfferForPurchase "An [[OfferForPurchase]] in Schema.org represents an [[Offer]] to sell something, i.e. an [[Offer]] whose
  [[businessFunction]] is [sell](http://purl.org/goodrelations/v1#Sell.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
  background on the underlying concepts.
  ")
AnnotationAssertion(rdfs:label schema:OfferForPurchase "OfferForPurchase")
AnnotationAssertion(schema:isPartOf schema:OfferForPurchase <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OfferForPurchase <https://github.com/schemaorg/schemaorg/issues/2348>)
SubClassOf(schema:OfferForPurchase schema:Offer)

# Class: schema:OfferItemCondition (OfferItemCondition)

AnnotationAssertion(rdfs:comment schema:OfferItemCondition "A list of possible conditions for the item.")
AnnotationAssertion(rdfs:label schema:OfferItemCondition "OfferItemCondition")
SubClassOf(schema:OfferItemCondition schema:Enumeration)

# Class: schema:OfferShippingDetails (OfferShippingDetails)

AnnotationAssertion(rdfs:comment schema:OfferShippingDetails "OfferShippingDetails represents information about shipping destinations.

Multiple of these entities can be used to represent different shipping rates for different destinations:

One entity for Alaska/Hawaii. A different one for continental US. A different one for all France.

Multiple of these entities can be used to represent different shipping costs and delivery times.

Two entities that are identical but differ in rate and time:

E.g. Cheaper and slower: $5 in 5-7 days
or Fast and expensive: $15 in 1-2 days.")
AnnotationAssertion(rdfs:label schema:OfferShippingDetails "OfferShippingDetails")
AnnotationAssertion(schema:source schema:OfferShippingDetails <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:OfferShippingDetails schema:StructuredValue)

# Class: schema:OfficeEquipmentStore (OfficeEquipmentStore)

AnnotationAssertion(rdfs:comment schema:OfficeEquipmentStore "An office equipment store.")
AnnotationAssertion(rdfs:label schema:OfficeEquipmentStore "OfficeEquipmentStore")
SubClassOf(schema:OfficeEquipmentStore schema:Store)

# Class: schema:OnDemandEvent (OnDemandEvent)

AnnotationAssertion(rdfs:comment schema:OnDemandEvent "A publication event, e.g. catch-up TV or radio podcast, during which a program is available on-demand.")
AnnotationAssertion(rdfs:label schema:OnDemandEvent "OnDemandEvent")
SubClassOf(schema:OnDemandEvent schema:PublicationEvent)

# Class: schema:Oncologic (Oncologic)

AnnotationAssertion(rdfs:comment schema:Oncologic "A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.")
AnnotationAssertion(rdfs:label schema:Oncologic "Oncologic")
AnnotationAssertion(schema:isPartOf schema:Oncologic <https://health-lifesci.schema.org>)
SubClassOf(schema:Oncologic schema:MedicalBusiness)

# Class: schema:OnlineBusiness (OnlineBusiness)

AnnotationAssertion(rdfs:comment schema:OnlineBusiness "A particular online business, either standalone or the online part of a broader organization. Examples include an eCommerce site, an online travel booking site, an online learning site, an online logistics and shipping provider, an online (virtual) doctor, etc.")
AnnotationAssertion(rdfs:label schema:OnlineBusiness "OnlineBusiness")
AnnotationAssertion(schema:isPartOf schema:OnlineBusiness <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OnlineBusiness <https://github.com/schemaorg/schemaorg/issues/3028>)
SubClassOf(schema:OnlineBusiness schema:Organization)

# Class: schema:OnlineStore (OnlineStore)

AnnotationAssertion(rdfs:comment schema:OnlineStore "An eCommerce site.")
AnnotationAssertion(rdfs:label schema:OnlineStore "OnlineStore")
AnnotationAssertion(schema:isPartOf schema:OnlineStore <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OnlineStore <https://github.com/schemaorg/schemaorg/issues/3028>)
SubClassOf(schema:OnlineStore schema:OnlineBusiness)

# Class: schema:OpeningHoursSpecification (OpeningHoursSpecification)

AnnotationAssertion(rdfs:comment schema:OpeningHoursSpecification "A structured value providing information about the opening hours of a place or a certain service inside a place.\\n\\n
The place is __open__ if the [[opens]] property is specified, and __closed__ otherwise.\\n\\nIf the value for the [[closes]] property is less than the value for the [[opens]] property then the hour range is assumed to span over the next day.
      ")
AnnotationAssertion(rdfs:label schema:OpeningHoursSpecification "OpeningHoursSpecification")
AnnotationAssertion(schema:contributor schema:OpeningHoursSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:OpeningHoursSpecification schema:StructuredValue)

# Class: schema:OpinionNewsArticle (OpinionNewsArticle)

AnnotationAssertion(rdfs:comment schema:OpinionNewsArticle "An [[OpinionNewsArticle]] is a [[NewsArticle]] that primarily expresses opinions rather than journalistic reporting of news and events. For example, a [[NewsArticle]] consisting of a column or [[Blog]]/[[BlogPosting]] entry in the Opinions section of a news publication. ")
AnnotationAssertion(rdfs:label schema:OpinionNewsArticle "OpinionNewsArticle")
AnnotationAssertion(schema:contributor schema:OpinionNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:OpinionNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OpinionNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:OpinionNewsArticle schema:NewsArticle)

# Class: schema:Optician (Optician)

AnnotationAssertion(rdfs:comment schema:Optician "A store that sells reading glasses and similar devices for improving vision.")
AnnotationAssertion(rdfs:label schema:Optician "Optician")
AnnotationAssertion(schema:isPartOf schema:Optician <https://health-lifesci.schema.org>)
SubClassOf(schema:Optician schema:MedicalBusiness)

# Class: schema:Optometric (Optometric)

AnnotationAssertion(rdfs:comment schema:Optometric "The science or practice of testing visual acuity and prescribing corrective lenses.")
AnnotationAssertion(rdfs:label schema:Optometric "Optometric")
AnnotationAssertion(schema:isPartOf schema:Optometric <https://health-lifesci.schema.org>)
SubClassOf(schema:Optometric schema:MedicalBusiness)

# Class: schema:Order (Order)

AnnotationAssertion(rdfs:comment schema:Order "An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.")
AnnotationAssertion(rdfs:label schema:Order "Order")
SubClassOf(schema:Order schema:Intangible)

# Class: schema:OrderAction (OrderAction)

AnnotationAssertion(rdfs:comment schema:OrderAction "An agent orders an object/product/service to be delivered/sent.")
AnnotationAssertion(rdfs:label schema:OrderAction "OrderAction")
SubClassOf(schema:OrderAction schema:TradeAction)

# Class: schema:OrderItem (OrderItem)

AnnotationAssertion(rdfs:comment schema:OrderItem "An order item is a line of an order. It includes the quantity and shipping details of a bought offer.")
AnnotationAssertion(rdfs:label schema:OrderItem "OrderItem")
SubClassOf(schema:OrderItem schema:Intangible)

# Class: schema:OrderStatus (OrderStatus)

AnnotationAssertion(rdfs:comment schema:OrderStatus "Enumerated status values for Order.")
AnnotationAssertion(rdfs:label schema:OrderStatus "OrderStatus")
SubClassOf(schema:OrderStatus schema:StatusEnumeration)

# Class: schema:Organization (Organization)

AnnotationAssertion(rdfs:comment schema:Organization "An organization such as a school, NGO, corporation, club, etc.")
AnnotationAssertion(rdfs:label schema:Organization "Organization")
SubClassOf(schema:Organization schema:Thing)

# Class: schema:OrganizationRole (OrganizationRole)

AnnotationAssertion(rdfs:comment schema:OrganizationRole "A subclass of Role used to describe roles within organizations.")
AnnotationAssertion(rdfs:label schema:OrganizationRole "OrganizationRole")
SubClassOf(schema:OrganizationRole schema:Role)

# Class: schema:OrganizeAction (OrganizeAction)

AnnotationAssertion(rdfs:comment schema:OrganizeAction "The act of manipulating/administering/supervising/controlling one or more objects.")
AnnotationAssertion(rdfs:label schema:OrganizeAction "OrganizeAction")
SubClassOf(schema:OrganizeAction schema:Action)

# Class: schema:Otolaryngologic (Otolaryngologic)

AnnotationAssertion(rdfs:comment schema:Otolaryngologic "A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.")
AnnotationAssertion(rdfs:label schema:Otolaryngologic "Otolaryngologic")
AnnotationAssertion(schema:isPartOf schema:Otolaryngologic <https://health-lifesci.schema.org>)
SubClassOf(schema:Otolaryngologic schema:MedicalBusiness)

# Class: schema:OutletStore (OutletStore)

AnnotationAssertion(rdfs:comment schema:OutletStore "An outlet store.")
AnnotationAssertion(rdfs:label schema:OutletStore "OutletStore")
SubClassOf(schema:OutletStore schema:Store)

# Class: schema:OwnershipInfo (OwnershipInfo)

AnnotationAssertion(rdfs:comment schema:OwnershipInfo "A structured value providing information about when a certain organization or person owned a certain product.")
AnnotationAssertion(rdfs:label schema:OwnershipInfo "OwnershipInfo")
AnnotationAssertion(schema:contributor schema:OwnershipInfo <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:OwnershipInfo schema:StructuredValue)

# Class: schema:PaintAction (PaintAction)

AnnotationAssertion(rdfs:comment schema:PaintAction "The act of producing a painting, typically with paint and canvas as instruments.")
AnnotationAssertion(rdfs:label schema:PaintAction "PaintAction")
SubClassOf(schema:PaintAction schema:CreateAction)

# Class: schema:Painting (Painting)

AnnotationAssertion(rdfs:comment schema:Painting "A painting.")
AnnotationAssertion(rdfs:label schema:Painting "Painting")
SubClassOf(schema:Painting schema:CreativeWork)

# Class: schema:PalliativeProcedure (PalliativeProcedure)

AnnotationAssertion(rdfs:comment schema:PalliativeProcedure "A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.")
AnnotationAssertion(rdfs:label schema:PalliativeProcedure "PalliativeProcedure")
AnnotationAssertion(schema:isPartOf schema:PalliativeProcedure <https://health-lifesci.schema.org>)
SubClassOf(schema:PalliativeProcedure schema:MedicalProcedure)
SubClassOf(schema:PalliativeProcedure schema:MedicalTherapy)

# Class: schema:ParcelDelivery (ParcelDelivery)

AnnotationAssertion(rdfs:comment schema:ParcelDelivery "The delivery of a parcel either via the postal service or a commercial service.")
AnnotationAssertion(rdfs:label schema:ParcelDelivery "ParcelDelivery")
SubClassOf(schema:ParcelDelivery schema:Intangible)

# Class: schema:ParentAudience (ParentAudience)

AnnotationAssertion(rdfs:comment schema:ParentAudience "A set of characteristics describing parents, who can be interested in viewing some content.")
AnnotationAssertion(rdfs:label schema:ParentAudience "ParentAudience")
SubClassOf(schema:ParentAudience schema:PeopleAudience)

# Class: schema:Park (Park)

AnnotationAssertion(rdfs:comment schema:Park "A park.")
AnnotationAssertion(rdfs:label schema:Park "Park")
SubClassOf(schema:Park schema:CivicStructure)

# Class: schema:ParkingFacility (ParkingFacility)

AnnotationAssertion(rdfs:comment schema:ParkingFacility "A parking lot or other parking facility.")
AnnotationAssertion(rdfs:label schema:ParkingFacility "ParkingFacility")
SubClassOf(schema:ParkingFacility schema:CivicStructure)

# Class: schema:PathologyTest (PathologyTest)

AnnotationAssertion(rdfs:comment schema:PathologyTest "A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.")
AnnotationAssertion(rdfs:label schema:PathologyTest "PathologyTest")
AnnotationAssertion(schema:isPartOf schema:PathologyTest <https://health-lifesci.schema.org>)
SubClassOf(schema:PathologyTest schema:MedicalTest)

# Class: schema:Patient (Patient)

AnnotationAssertion(rdfs:comment schema:Patient "A patient is any person recipient of health care services.")
AnnotationAssertion(rdfs:label schema:Patient "Patient")
AnnotationAssertion(schema:isPartOf schema:Patient <https://health-lifesci.schema.org>)
SubClassOf(schema:Patient schema:MedicalAudience)
SubClassOf(schema:Patient schema:Person)

# Class: schema:PawnShop (PawnShop)

AnnotationAssertion(rdfs:comment schema:PawnShop "A shop that will buy, or lend money against the security of, personal possessions.")
AnnotationAssertion(rdfs:label schema:PawnShop "PawnShop")
SubClassOf(schema:PawnShop schema:Store)

# Class: schema:PayAction (PayAction)

AnnotationAssertion(rdfs:comment schema:PayAction "An agent pays a price to a participant.")
AnnotationAssertion(rdfs:label schema:PayAction "PayAction")
SubClassOf(schema:PayAction schema:TradeAction)

# Class: schema:PaymentCard (PaymentCard)

AnnotationAssertion(rdfs:comment schema:PaymentCard "A payment method using a credit, debit, store or other card to associate the payment with an account.")
AnnotationAssertion(rdfs:label schema:PaymentCard "PaymentCard")
AnnotationAssertion(schema:contributor schema:PaymentCard <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:PaymentCard schema:FinancialProduct)
SubClassOf(schema:PaymentCard schema:PaymentMethod)

# Class: schema:PaymentChargeSpecification (PaymentChargeSpecification)

AnnotationAssertion(rdfs:comment schema:PaymentChargeSpecification "The costs of settling the payment using a particular payment method.")
AnnotationAssertion(rdfs:label schema:PaymentChargeSpecification "PaymentChargeSpecification")
AnnotationAssertion(schema:contributor schema:PaymentChargeSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:PaymentChargeSpecification schema:PriceSpecification)

# Class: schema:PaymentMethod (PaymentMethod)

AnnotationAssertion(rdfs:comment schema:PaymentMethod "A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction. The following legacy values should be accepted:
    \\n\\n* http://purl.org/goodrelations/v1#ByBankTransferInAdvance\\n* http://purl.org/goodrelations/v1#ByInvoice\\n* http://purl.org/goodrelations/v1#Cash\\n* http://purl.org/goodrelations/v1#CheckInAdvance\\n* http://purl.org/goodrelations/v1#COD\\n* http://purl.org/goodrelations/v1#DirectDebit\\n* http://purl.org/goodrelations/v1#GoogleCheckout\\n* http://purl.org/goodrelations/v1#PayPal\\n* http://purl.org/goodrelations/v1#PaySwarm\\n\\nStructured values are recommended for newer payment methods.")
AnnotationAssertion(rdfs:label schema:PaymentMethod "PaymentMethod")
AnnotationAssertion(schema:contributor schema:PaymentMethod <https://schema.org/docs/collab/GoodRelationsClass>)
AnnotationAssertion(schema:source schema:PaymentMethod <https://github.com/schemaorg/schemaorg/issues/3537>)
SubClassOf(schema:PaymentMethod schema:Intangible)

# Class: schema:PaymentMethodType (PaymentMethodType)

AnnotationAssertion(rdfs:comment schema:PaymentMethodType "The type of payment method, only for generic payment types, specific forms of payments, like card payment should be expressed using subclasses of PaymentMethod.")
AnnotationAssertion(rdfs:label schema:PaymentMethodType "PaymentMethodType")
AnnotationAssertion(schema:isPartOf schema:PaymentMethodType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PaymentMethodType <https://github.com/schemaorg/schemaorg/issues/3537>)
SubClassOf(schema:PaymentMethodType schema:Enumeration)

# Class: schema:PaymentService (PaymentService)

AnnotationAssertion(rdfs:comment schema:PaymentService "A Service to transfer funds from a person or organization to a beneficiary person or organization.")
AnnotationAssertion(rdfs:label schema:PaymentService "PaymentService")
AnnotationAssertion(schema:contributor schema:PaymentService <https://schema.org/docs/collab/FIBO>)
SubClassOf(schema:PaymentService schema:FinancialProduct)
SubClassOf(schema:PaymentService schema:PaymentMethod)

# Class: schema:PaymentStatusType (PaymentStatusType)

AnnotationAssertion(rdfs:comment schema:PaymentStatusType "A specific payment status. For example, PaymentDue, PaymentComplete, etc.")
AnnotationAssertion(rdfs:label schema:PaymentStatusType "PaymentStatusType")
SubClassOf(schema:PaymentStatusType schema:StatusEnumeration)

# Class: schema:Pediatric (Pediatric)

AnnotationAssertion(rdfs:comment schema:Pediatric "A specific branch of medical science that specializes in the care of infants, children and adolescents.")
AnnotationAssertion(rdfs:label schema:Pediatric "Pediatric")
AnnotationAssertion(schema:isPartOf schema:Pediatric <https://health-lifesci.schema.org>)
SubClassOf(schema:Pediatric schema:MedicalBusiness)

# Class: schema:PeopleAudience (PeopleAudience)

AnnotationAssertion(rdfs:comment schema:PeopleAudience "A set of characteristics belonging to people, e.g. who compose an item's target audience.")
AnnotationAssertion(rdfs:label schema:PeopleAudience "PeopleAudience")
SubClassOf(schema:PeopleAudience schema:Audience)

# Class: schema:PerformAction (PerformAction)

AnnotationAssertion(rdfs:comment schema:PerformAction "The act of participating in performance arts.")
AnnotationAssertion(rdfs:label schema:PerformAction "PerformAction")
SubClassOf(schema:PerformAction schema:PlayAction)

# Class: schema:PerformanceRole (PerformanceRole)

AnnotationAssertion(rdfs:comment schema:PerformanceRole "A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.")
AnnotationAssertion(rdfs:label schema:PerformanceRole "PerformanceRole")
SubClassOf(schema:PerformanceRole schema:Role)

# Class: schema:PerformingArtsTheater (PerformingArtsTheater)

AnnotationAssertion(rdfs:comment schema:PerformingArtsTheater "A theater or other performing art center.")
AnnotationAssertion(rdfs:label schema:PerformingArtsTheater "PerformingArtsTheater")
SubClassOf(schema:PerformingArtsTheater schema:CivicStructure)

# Class: schema:PerformingGroup (PerformingGroup)

AnnotationAssertion(rdfs:comment schema:PerformingGroup "A performance group, such as a band, an orchestra, or a circus.")
AnnotationAssertion(rdfs:label schema:PerformingGroup "PerformingGroup")
SubClassOf(schema:PerformingGroup schema:Organization)

# Class: schema:Periodical (Periodical)

AnnotationAssertion(rdfs:comment schema:Periodical "A publication in any medium issued in successive parts bearing numerical or chronological designations and intended to continue indefinitely, such as a magazine, scholarly journal, or newspaper.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).")
AnnotationAssertion(rdfs:label schema:Periodical "Periodical")
AnnotationAssertion(schema:contributor schema:Periodical <https://schema.org/docs/collab/bibex>)
SubClassOf(schema:Periodical schema:CreativeWorkSeries)

# Class: schema:Permit (Permit)

AnnotationAssertion(rdfs:comment schema:Permit "A permit issued by an organization, e.g. a parking pass.")
AnnotationAssertion(rdfs:label schema:Permit "Permit")
SubClassOf(schema:Permit schema:Intangible)

# Class: schema:Person (Person)

AnnotationAssertion(rdfs:comment schema:Person "A person (alive, dead, undead, or fictional).")
AnnotationAssertion(rdfs:label schema:Person "Person")
AnnotationAssertion(schema:contributor schema:Person <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:Person schema:Thing)

# Class: schema:PetStore (PetStore)

AnnotationAssertion(rdfs:comment schema:PetStore "A pet store.")
AnnotationAssertion(rdfs:label schema:PetStore "PetStore")
SubClassOf(schema:PetStore schema:Store)

# Class: schema:Pharmacy (Pharmacy)

AnnotationAssertion(rdfs:comment schema:Pharmacy "A pharmacy or drugstore.")
AnnotationAssertion(rdfs:label schema:Pharmacy "Pharmacy")
SubClassOf(schema:Pharmacy schema:MedicalBusiness)
SubClassOf(schema:Pharmacy schema:MedicalOrganization)

# Class: schema:Photograph (Photograph)

AnnotationAssertion(rdfs:comment schema:Photograph "A photograph.")
AnnotationAssertion(rdfs:label schema:Photograph "Photograph")
SubClassOf(schema:Photograph schema:CreativeWork)

# Class: schema:PhotographAction (PhotographAction)

AnnotationAssertion(rdfs:comment schema:PhotographAction "The act of capturing still images of objects using a camera.")
AnnotationAssertion(rdfs:label schema:PhotographAction "PhotographAction")
SubClassOf(schema:PhotographAction schema:CreateAction)

# Class: schema:PhysicalActivity (PhysicalActivity)

AnnotationAssertion(rdfs:comment schema:PhysicalActivity "Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.")
AnnotationAssertion(rdfs:label schema:PhysicalActivity "PhysicalActivity")
AnnotationAssertion(schema:isPartOf schema:PhysicalActivity <https://health-lifesci.schema.org>)
SubClassOf(schema:PhysicalActivity schema:LifestyleModification)

# Class: schema:PhysicalActivityCategory (PhysicalActivityCategory)

AnnotationAssertion(rdfs:comment schema:PhysicalActivityCategory "Categories of physical activity, organized by physiologic classification.")
AnnotationAssertion(rdfs:label schema:PhysicalActivityCategory "PhysicalActivityCategory")
AnnotationAssertion(schema:isPartOf schema:PhysicalActivityCategory <https://health-lifesci.schema.org>)
SubClassOf(schema:PhysicalActivityCategory schema:Enumeration)

# Class: schema:PhysicalExam (PhysicalExam)

AnnotationAssertion(rdfs:comment schema:PhysicalExam "A type of physical examination of a patient performed by a physician. ")
AnnotationAssertion(rdfs:label schema:PhysicalExam "PhysicalExam")
AnnotationAssertion(schema:isPartOf schema:PhysicalExam <https://health-lifesci.schema.org>)
SubClassOf(schema:PhysicalExam schema:MedicalEnumeration)
SubClassOf(schema:PhysicalExam schema:MedicalProcedure)

# Class: schema:PhysicalTherapy (PhysicalTherapy)

AnnotationAssertion(rdfs:comment schema:PhysicalTherapy "A process of progressive physical care and rehabilitation aimed at improving a health condition.")
AnnotationAssertion(rdfs:label schema:PhysicalTherapy "PhysicalTherapy")
AnnotationAssertion(schema:isPartOf schema:PhysicalTherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:PhysicalTherapy schema:MedicalTherapy)

# Class: schema:Physician (Physician)

AnnotationAssertion(rdfs:comment schema:Physician "An individual physician or a physician's office considered as a [[MedicalOrganization]].")
AnnotationAssertion(rdfs:label schema:Physician "Physician")
SubClassOf(schema:Physician schema:MedicalBusiness)
SubClassOf(schema:Physician schema:MedicalOrganization)

# Class: schema:PhysiciansOffice (PhysiciansOffice)

AnnotationAssertion(rdfs:comment schema:PhysiciansOffice "A doctor's office or clinic.")
AnnotationAssertion(rdfs:label schema:PhysiciansOffice "PhysiciansOffice")
SubClassOf(schema:PhysiciansOffice schema:Physician)

# Class: schema:Physiotherapy (Physiotherapy)

AnnotationAssertion(rdfs:comment schema:Physiotherapy "The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery.")
AnnotationAssertion(rdfs:label schema:Physiotherapy "Physiotherapy")
AnnotationAssertion(schema:isPartOf schema:Physiotherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:Physiotherapy schema:MedicalBusiness)

# Class: schema:Place (Place)

AnnotationAssertion(rdfs:comment schema:Place "Entities that have a somewhat fixed, physical extension.")
AnnotationAssertion(rdfs:label schema:Place "Place")
SubClassOf(schema:Place schema:Thing)

# Class: schema:PlaceOfWorship (PlaceOfWorship)

AnnotationAssertion(rdfs:comment schema:PlaceOfWorship "Place of worship, such as a church, synagogue, or mosque.")
AnnotationAssertion(rdfs:label schema:PlaceOfWorship "PlaceOfWorship")
SubClassOf(schema:PlaceOfWorship schema:CivicStructure)

# Class: schema:PlanAction (PlanAction)

AnnotationAssertion(rdfs:comment schema:PlanAction "The act of planning the execution of an event/task/action/reservation/plan to a future date.")
AnnotationAssertion(rdfs:label schema:PlanAction "PlanAction")
SubClassOf(schema:PlanAction schema:OrganizeAction)

# Class: schema:PlasticSurgery (PlasticSurgery)

AnnotationAssertion(rdfs:comment schema:PlasticSurgery "A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.")
AnnotationAssertion(rdfs:label schema:PlasticSurgery "PlasticSurgery")
AnnotationAssertion(schema:isPartOf schema:PlasticSurgery <https://health-lifesci.schema.org>)
SubClassOf(schema:PlasticSurgery schema:MedicalBusiness)

# Class: schema:Play (Play)

AnnotationAssertion(rdfs:comment schema:Play "A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note: A performance of a Play would be a [[TheaterEvent]] or [[BroadcastEvent]] - the *Play* being the [[workPerformed]].")
AnnotationAssertion(rdfs:label schema:Play "Play")
AnnotationAssertion(schema:isPartOf schema:Play <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Play <https://github.com/schemaorg/schemaorg/issues/1816>)
SubClassOf(schema:Play schema:CreativeWork)

# Class: schema:PlayAction (PlayAction)

AnnotationAssertion(rdfs:comment schema:PlayAction "The act of playing/exercising/training/performing for enjoyment, leisure, recreation, competition or exercise.\\n\\nRelated actions:\\n\\n* [[ListenAction]]: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.\\n* [[WatchAction]]: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.")
AnnotationAssertion(rdfs:label schema:PlayAction "PlayAction")
SubClassOf(schema:PlayAction schema:Action)

# Class: schema:PlayGameAction (PlayGameAction)

AnnotationAssertion(rdfs:comment schema:PlayGameAction "The act of playing a video game.")
AnnotationAssertion(rdfs:label schema:PlayGameAction "PlayGameAction")
AnnotationAssertion(schema:isPartOf schema:PlayGameAction <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PlayGameAction <https://github.com/schemaorg/schemaorg/issues/3058>)
SubClassOf(schema:PlayGameAction schema:ConsumeAction)

# Class: schema:Playground (Playground)

AnnotationAssertion(rdfs:comment schema:Playground "A playground.")
AnnotationAssertion(rdfs:label schema:Playground "Playground")
SubClassOf(schema:Playground schema:CivicStructure)

# Class: schema:Plumber (Plumber)

AnnotationAssertion(rdfs:comment schema:Plumber "A plumbing service.")
AnnotationAssertion(rdfs:label schema:Plumber "Plumber")
SubClassOf(schema:Plumber schema:HomeAndConstructionBusiness)

# Class: schema:PodcastEpisode (PodcastEpisode)

AnnotationAssertion(rdfs:comment schema:PodcastEpisode "A single episode of a podcast series.")
AnnotationAssertion(rdfs:label schema:PodcastEpisode "PodcastEpisode")
AnnotationAssertion(schema:isPartOf schema:PodcastEpisode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PodcastEpisode <https://github.com/schemaorg/schemaorg/issues/373>)
SubClassOf(schema:PodcastEpisode schema:Episode)

# Class: schema:PodcastSeason (PodcastSeason)

AnnotationAssertion(rdfs:comment schema:PodcastSeason "A single season of a podcast. Many podcasts do not break down into separate seasons. In that case, PodcastSeries should be used.")
AnnotationAssertion(rdfs:label schema:PodcastSeason "PodcastSeason")
AnnotationAssertion(schema:isPartOf schema:PodcastSeason <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PodcastSeason <https://github.com/schemaorg/schemaorg/issues/373>)
SubClassOf(schema:PodcastSeason schema:CreativeWorkSeason)

# Class: schema:PodcastSeries (PodcastSeries)

AnnotationAssertion(rdfs:comment schema:PodcastSeries "A podcast is an episodic series of digital audio or video files which a user can download and listen to.")
AnnotationAssertion(rdfs:label schema:PodcastSeries "PodcastSeries")
AnnotationAssertion(schema:isPartOf schema:PodcastSeries <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PodcastSeries <https://github.com/schemaorg/schemaorg/issues/373>)
SubClassOf(schema:PodcastSeries schema:CreativeWorkSeries)

# Class: schema:Podiatric (Podiatric)

AnnotationAssertion(rdfs:comment schema:Podiatric "Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.")
AnnotationAssertion(rdfs:label schema:Podiatric "Podiatric")
AnnotationAssertion(schema:isPartOf schema:Podiatric <https://health-lifesci.schema.org>)
SubClassOf(schema:Podiatric schema:MedicalBusiness)

# Class: schema:PoliceStation (PoliceStation)

AnnotationAssertion(rdfs:comment schema:PoliceStation "A police station.")
AnnotationAssertion(rdfs:label schema:PoliceStation "PoliceStation")
SubClassOf(schema:PoliceStation schema:CivicStructure)
SubClassOf(schema:PoliceStation schema:EmergencyService)

# Class: schema:PoliticalParty (PoliticalParty)

AnnotationAssertion(rdfs:comment schema:PoliticalParty "Organization: Political Party.")
AnnotationAssertion(rdfs:label schema:PoliticalParty "PoliticalParty")
AnnotationAssertion(schema:source schema:PoliticalParty <https://github.com/schemaorg/schemaorg/issues/3282>)
SubClassOf(schema:PoliticalParty schema:Organization)

# Class: schema:Pond (Pond)

AnnotationAssertion(rdfs:comment schema:Pond "A pond.")
AnnotationAssertion(rdfs:label schema:Pond "Pond")
SubClassOf(schema:Pond schema:BodyOfWater)

# Class: schema:PostOffice (PostOffice)

AnnotationAssertion(rdfs:comment schema:PostOffice "A post office.")
AnnotationAssertion(rdfs:label schema:PostOffice "PostOffice")
SubClassOf(schema:PostOffice schema:GovernmentOffice)

# Class: schema:PostalAddress (PostalAddress)

AnnotationAssertion(rdfs:comment schema:PostalAddress "The mailing address.")
AnnotationAssertion(rdfs:label schema:PostalAddress "PostalAddress")
SubClassOf(schema:PostalAddress schema:ContactPoint)

# Class: schema:PostalCodeRangeSpecification (PostalCodeRangeSpecification)

AnnotationAssertion(rdfs:comment schema:PostalCodeRangeSpecification "Indicates a range of postal codes, usually defined as the set of valid codes between [[postalCodeBegin]] and [[postalCodeEnd]], inclusively.")
AnnotationAssertion(rdfs:label schema:PostalCodeRangeSpecification "PostalCodeRangeSpecification")
AnnotationAssertion(schema:source schema:PostalCodeRangeSpecification <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:PostalCodeRangeSpecification schema:StructuredValue)

# Class: schema:Poster (Poster)

AnnotationAssertion(rdfs:comment schema:Poster "A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.")
AnnotationAssertion(rdfs:label schema:Poster "Poster")
AnnotationAssertion(schema:isPartOf schema:Poster <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Poster <https://github.com/schemaorg/schemaorg/issues/1448>)
SubClassOf(schema:Poster schema:CreativeWork)

# Class: schema:PreOrderAction (PreOrderAction)

AnnotationAssertion(rdfs:comment schema:PreOrderAction "An agent orders a (not yet released) object/product/service to be delivered/sent.")
AnnotationAssertion(rdfs:label schema:PreOrderAction "PreOrderAction")
AnnotationAssertion(schema:source schema:PreOrderAction <https://github.com/schemaorg/schemaorg/issues/1125>)
SubClassOf(schema:PreOrderAction schema:TradeAction)

# Class: schema:PrependAction (PrependAction)

AnnotationAssertion(rdfs:comment schema:PrependAction "The act of inserting at the beginning if an ordered collection.")
AnnotationAssertion(rdfs:label schema:PrependAction "PrependAction")
SubClassOf(schema:PrependAction schema:InsertAction)

# Class: schema:Preschool (Preschool)

AnnotationAssertion(rdfs:comment schema:Preschool "A preschool.")
AnnotationAssertion(rdfs:label schema:Preschool "Preschool")
SubClassOf(schema:Preschool schema:EducationalOrganization)

# Class: schema:PresentationDigitalDocument (PresentationDigitalDocument)

AnnotationAssertion(rdfs:comment schema:PresentationDigitalDocument "A file containing slides or used for a presentation.")
AnnotationAssertion(rdfs:label schema:PresentationDigitalDocument "PresentationDigitalDocument")
SubClassOf(schema:PresentationDigitalDocument schema:DigitalDocument)

# Class: schema:PreventionIndication (PreventionIndication)

AnnotationAssertion(rdfs:comment schema:PreventionIndication "An indication for preventing an underlying condition, symptom, etc.")
AnnotationAssertion(rdfs:label schema:PreventionIndication "PreventionIndication")
AnnotationAssertion(schema:isPartOf schema:PreventionIndication <https://health-lifesci.schema.org>)
SubClassOf(schema:PreventionIndication schema:MedicalIndication)

# Class: schema:PriceComponentTypeEnumeration (PriceComponentTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:PriceComponentTypeEnumeration "Enumerates different price components that together make up the total price for an offered product.")
AnnotationAssertion(rdfs:label schema:PriceComponentTypeEnumeration "PriceComponentTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:PriceComponentTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PriceComponentTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2689>)
SubClassOf(schema:PriceComponentTypeEnumeration schema:Enumeration)

# Class: schema:PriceSpecification (PriceSpecification)

AnnotationAssertion(rdfs:comment schema:PriceSpecification "A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use [[MonetaryAmount]] to describe independent amounts of money such as a salary, credit card limits, etc.")
AnnotationAssertion(rdfs:label schema:PriceSpecification "PriceSpecification")
AnnotationAssertion(schema:contributor schema:PriceSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:PriceSpecification schema:StructuredValue)

# Class: schema:PriceTypeEnumeration (PriceTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:PriceTypeEnumeration "Enumerates different price types, for example list price, invoice price, and sale price.")
AnnotationAssertion(rdfs:label schema:PriceTypeEnumeration "PriceTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:PriceTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PriceTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2712>)
SubClassOf(schema:PriceTypeEnumeration schema:Enumeration)

# Class: schema:PrimaryCare (PrimaryCare)

AnnotationAssertion(rdfs:comment schema:PrimaryCare "The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.")
AnnotationAssertion(rdfs:label schema:PrimaryCare "PrimaryCare")
AnnotationAssertion(schema:isPartOf schema:PrimaryCare <https://health-lifesci.schema.org>)
SubClassOf(schema:PrimaryCare schema:MedicalBusiness)

# Class: schema:Product (Product)

AnnotationAssertion(rdfs:comment schema:Product "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.")
AnnotationAssertion(rdfs:label schema:Product "Product")
AnnotationAssertion(schema:contributor schema:Product <https://schema.org/docs/collab/GoodRelationsTerms>)
SubClassOf(schema:Product schema:Thing)

# Class: schema:ProductCollection (ProductCollection)

AnnotationAssertion(rdfs:comment schema:ProductCollection "A set of products (either [[ProductGroup]]s or specific variants) that are listed together e.g. in an [[Offer]].")
AnnotationAssertion(rdfs:label schema:ProductCollection "ProductCollection")
AnnotationAssertion(schema:isPartOf schema:ProductCollection <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ProductCollection <https://github.com/schemaorg/schemaorg/issues/2597>)
SubClassOf(schema:ProductCollection schema:Collection)
SubClassOf(schema:ProductCollection schema:Product)

# Class: schema:ProductGroup (ProductGroup)

AnnotationAssertion(rdfs:comment schema:ProductGroup "A ProductGroup represents a group of [[Product]]s that vary only in certain well-described ways, such as by [[size]], [[color]], [[material]] etc.

While a ProductGroup itself is not directly offered for sale, the various varying products that it represents can be. The ProductGroup serves as a prototype or template, standing in for all of the products who have an [[isVariantOf]] relationship to it. As such, properties (including additional types) can be applied to the ProductGroup to represent characteristics shared by each of the (possibly very many) variants. Properties that reference a ProductGroup are not included in this mechanism; neither are the following specific properties [[variesBy]], [[hasVariant]], [[url]]. ")
AnnotationAssertion(rdfs:label schema:ProductGroup "ProductGroup")
AnnotationAssertion(schema:isPartOf schema:ProductGroup <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ProductGroup <https://github.com/schemaorg/schemaorg/issues/1797>)
SubClassOf(schema:ProductGroup schema:Product)

# Class: schema:ProductModel (ProductModel)

AnnotationAssertion(rdfs:comment schema:ProductModel "A datasheet or vendor specification of a product (in the sense of a prototypical description).")
AnnotationAssertion(rdfs:label schema:ProductModel "ProductModel")
AnnotationAssertion(schema:contributor schema:ProductModel <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:ProductModel schema:Product)

# Class: schema:ProfessionalService (ProfessionalService)

AnnotationAssertion(rdfs:comment schema:ProfessionalService "Original definition: \"provider of professional services.\"\\n\\nThe general [[ProfessionalService]] type for local businesses was deprecated due to confusion with [[Service]]. For reference, the types that it included were: [[Dentist]],
        [[AccountingService]], [[Attorney]], [[Notary]], as well as types for several kinds of [[HomeAndConstructionBusiness]]: [[Electrician]], [[GeneralContractor]],
        [[HousePainter]], [[Locksmith]], [[Plumber]], [[RoofingContractor]]. [[LegalService]] was introduced as a more inclusive supertype of [[Attorney]].")
AnnotationAssertion(rdfs:label schema:ProfessionalService "ProfessionalService")
SubClassOf(schema:ProfessionalService schema:LocalBusiness)

# Class: schema:ProfilePage (ProfilePage)

AnnotationAssertion(rdfs:comment schema:ProfilePage "Web page type: Profile page.")
AnnotationAssertion(rdfs:label schema:ProfilePage "ProfilePage")
SubClassOf(schema:ProfilePage schema:WebPage)

# Class: schema:ProgramMembership (ProgramMembership)

AnnotationAssertion(rdfs:comment schema:ProgramMembership "Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.")
AnnotationAssertion(rdfs:label schema:ProgramMembership "ProgramMembership")
SubClassOf(schema:ProgramMembership schema:Intangible)

# Class: schema:Project (Project)

AnnotationAssertion(rdfs:comment schema:Project "An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.
Use properties from [[Organization]], [[subOrganization]]/[[parentOrganization]] to indicate project sub-structures. 
   ")
AnnotationAssertion(rdfs:label schema:Project "Project")
AnnotationAssertion(schema:isPartOf schema:Project <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Project <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:Project <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:Project schema:Organization)

# Class: schema:PronounceableText (PronounceableText)

AnnotationAssertion(rdfs:comment schema:PronounceableText "Data type: PronounceableText.")
AnnotationAssertion(rdfs:label schema:PronounceableText "PronounceableText")
AnnotationAssertion(schema:isPartOf schema:PronounceableText <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PronounceableText <https://github.com/schemaorg/schemaorg/issues/2108>)
SubClassOf(schema:PronounceableText schema:Text)

# Class: schema:Property (Property)

AnnotationAssertion(rdfs:comment schema:Property "A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.")
AnnotationAssertion(rdfs:label schema:Property "Property")
AnnotationAssertion(schema:isPartOf schema:Property <https://meta.schema.org>)
SubClassOf(schema:Property schema:Intangible)

# Class: schema:PropertyValue (PropertyValue)

AnnotationAssertion(rdfs:comment schema:PropertyValue "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.\\n\\n Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
    ")
AnnotationAssertion(rdfs:label schema:PropertyValue "PropertyValue")
AnnotationAssertion(schema:contributor schema:PropertyValue <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:PropertyValue schema:StructuredValue)

# Class: schema:PropertyValueSpecification (PropertyValueSpecification)

AnnotationAssertion(rdfs:comment schema:PropertyValueSpecification "A Property value specification.")
AnnotationAssertion(rdfs:label schema:PropertyValueSpecification "PropertyValueSpecification")
AnnotationAssertion(schema:contributor schema:PropertyValueSpecification <https://schema.org/docs/collab/ActionCollabClass>)
SubClassOf(schema:PropertyValueSpecification schema:Intangible)

# Class: schema:Protein (Protein)

AnnotationAssertion(rdfs:comment schema:Protein "Protein is here used in its widest possible definition, as classes of amino acid based molecules. Amyloid-beta Protein in human (UniProt P05067), eukaryota (e.g. an OrthoDB group) or even a single molecule that one can point to are all of type :Protein. A protein can thus be a subclass of another protein, e.g. :Protein as a UniProt record can have multiple isoforms inside it which would also be :Protein. They can be imagined, synthetic, hypothetical or naturally occurring.")
AnnotationAssertion(rdfs:label schema:Protein "Protein")
AnnotationAssertion(schema:isPartOf schema:Protein <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Protein <http://bioschemas.org>)
SubClassOf(schema:Protein schema:BioChemEntity)

# Class: schema:Psychiatric (Psychiatric)

AnnotationAssertion(rdfs:comment schema:Psychiatric "A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.")
AnnotationAssertion(rdfs:label schema:Psychiatric "Psychiatric")
AnnotationAssertion(schema:isPartOf schema:Psychiatric <https://health-lifesci.schema.org>)
SubClassOf(schema:Psychiatric schema:MedicalBusiness)

# Class: schema:PsychologicalTreatment (PsychologicalTreatment)

AnnotationAssertion(rdfs:comment schema:PsychologicalTreatment "A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.")
AnnotationAssertion(rdfs:label schema:PsychologicalTreatment "PsychologicalTreatment")
AnnotationAssertion(schema:isPartOf schema:PsychologicalTreatment <https://health-lifesci.schema.org>)
SubClassOf(schema:PsychologicalTreatment schema:TherapeuticProcedure)

# Class: schema:PublicHealth (PublicHealth)

AnnotationAssertion(rdfs:comment schema:PublicHealth "Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.")
AnnotationAssertion(rdfs:label schema:PublicHealth "PublicHealth")
AnnotationAssertion(schema:isPartOf schema:PublicHealth <https://health-lifesci.schema.org>)
SubClassOf(schema:PublicHealth schema:MedicalBusiness)

# Class: schema:PublicSwimmingPool (PublicSwimmingPool)

AnnotationAssertion(rdfs:comment schema:PublicSwimmingPool "A public swimming pool.")
AnnotationAssertion(rdfs:label schema:PublicSwimmingPool "PublicSwimmingPool")
SubClassOf(schema:PublicSwimmingPool schema:SportsActivityLocation)

# Class: schema:PublicToilet (PublicToilet)

AnnotationAssertion(rdfs:comment schema:PublicToilet "A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.")
AnnotationAssertion(rdfs:label schema:PublicToilet "PublicToilet")
AnnotationAssertion(schema:isPartOf schema:PublicToilet <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PublicToilet <https://github.com/schemaorg/schemaorg/issues/1624>)
SubClassOf(schema:PublicToilet schema:CivicStructure)

# Class: schema:PublicationEvent (PublicationEvent)

AnnotationAssertion(rdfs:comment schema:PublicationEvent "A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type, e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.")
AnnotationAssertion(rdfs:label schema:PublicationEvent "PublicationEvent")
SubClassOf(schema:PublicationEvent schema:Event)

# Class: schema:PublicationIssue (PublicationIssue)

AnnotationAssertion(rdfs:comment schema:PublicationIssue "A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).")
AnnotationAssertion(rdfs:label schema:PublicationIssue "PublicationIssue")
AnnotationAssertion(schema:contributor schema:PublicationIssue <https://schema.org/docs/collab/bibex>)
SubClassOf(schema:PublicationIssue schema:CreativeWork)

# Class: schema:PublicationVolume (PublicationVolume)

AnnotationAssertion(rdfs:comment schema:PublicationVolume "A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).")
AnnotationAssertion(rdfs:label schema:PublicationVolume "PublicationVolume")
AnnotationAssertion(schema:contributor schema:PublicationVolume <https://schema.org/docs/collab/bibex>)
SubClassOf(schema:PublicationVolume schema:CreativeWork)

# Class: schema:QAPage (QAPage)

AnnotationAssertion(rdfs:comment schema:QAPage "A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).")
AnnotationAssertion(rdfs:label schema:QAPage "QAPage")
SubClassOf(schema:QAPage schema:WebPage)

# Class: schema:QualitativeValue (QualitativeValue)

AnnotationAssertion(rdfs:comment schema:QualitativeValue "A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.")
AnnotationAssertion(rdfs:label schema:QualitativeValue "QualitativeValue")
AnnotationAssertion(schema:contributor schema:QualitativeValue <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:QualitativeValue schema:Enumeration)

# Class: schema:QuantitativeValue (QuantitativeValue)

AnnotationAssertion(rdfs:comment schema:QuantitativeValue " A point value or interval for product characteristics and other purposes.")
AnnotationAssertion(rdfs:label schema:QuantitativeValue "QuantitativeValue")
AnnotationAssertion(schema:contributor schema:QuantitativeValue <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:QuantitativeValue schema:StructuredValue)

# Class: schema:QuantitativeValueDistribution (QuantitativeValueDistribution)

AnnotationAssertion(rdfs:comment schema:QuantitativeValueDistribution "A statistical distribution of values.")
AnnotationAssertion(rdfs:label schema:QuantitativeValueDistribution "QuantitativeValueDistribution")
AnnotationAssertion(schema:source schema:QuantitativeValueDistribution <https://github.com/schemaorg/schemaorg/issues/1698>)
SubClassOf(schema:QuantitativeValueDistribution schema:StructuredValue)

# Class: schema:Quantity (Quantity)

AnnotationAssertion(rdfs:comment schema:Quantity "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 kg' or '4 milligrams'.")
AnnotationAssertion(rdfs:label schema:Quantity "Quantity")
SubClassOf(schema:Quantity schema:Intangible)

# Class: schema:Question (Question)

AnnotationAssertion(rdfs:comment schema:Question "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.")
AnnotationAssertion(rdfs:label schema:Question "Question")
AnnotationAssertion(schema:contributor schema:Question <https://schema.org/docs/collab/QAStackExchange>)
SubClassOf(schema:Question schema:Comment)

# Class: schema:Quiz (Quiz)

AnnotationAssertion(rdfs:comment schema:Quiz "Quiz: A test of knowledge, skills and abilities.")
AnnotationAssertion(rdfs:label schema:Quiz "Quiz")
AnnotationAssertion(schema:isPartOf schema:Quiz <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Quiz <https://github.com/schemaorg/schemaorg/issues/2611>)
SubClassOf(schema:Quiz schema:LearningResource)

# Class: schema:Quotation (Quotation)

AnnotationAssertion(rdfs:comment schema:Quotation "A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use [[isBasedOn]] to link to source/origin. The [[recordedIn]] property can be used to reference a Quotation from an [[Event]].")
AnnotationAssertion(rdfs:label schema:Quotation "Quotation")
AnnotationAssertion(schema:isPartOf schema:Quotation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Quotation <https://github.com/schemaorg/schemaorg/issues/271>)
SubClassOf(schema:Quotation schema:CreativeWork)

# Class: schema:QuoteAction (QuoteAction)

AnnotationAssertion(rdfs:comment schema:QuoteAction "An agent quotes/estimates/appraises an object/product/service with a price at a location/store.")
AnnotationAssertion(rdfs:label schema:QuoteAction "QuoteAction")
SubClassOf(schema:QuoteAction schema:TradeAction)

# Class: schema:RVPark (RVPark)

AnnotationAssertion(rdfs:comment schema:RVPark "A place offering space for \"Recreational Vehicles\", Caravans, mobile homes and the like.")
AnnotationAssertion(rdfs:label schema:RVPark "RVPark")
SubClassOf(schema:RVPark schema:CivicStructure)

# Class: schema:RadiationTherapy (RadiationTherapy)

AnnotationAssertion(rdfs:comment schema:RadiationTherapy "A process of care using radiation aimed at improving a health condition.")
AnnotationAssertion(rdfs:label schema:RadiationTherapy "RadiationTherapy")
AnnotationAssertion(schema:isPartOf schema:RadiationTherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:RadiationTherapy schema:MedicalTherapy)

# Class: schema:RadioBroadcastService (RadioBroadcastService)

AnnotationAssertion(rdfs:comment schema:RadioBroadcastService "A delivery service through which radio content is provided via broadcast over the air or online.")
AnnotationAssertion(rdfs:label schema:RadioBroadcastService "RadioBroadcastService")
AnnotationAssertion(schema:isPartOf schema:RadioBroadcastService <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RadioBroadcastService <https://github.com/schemaorg/schemaorg/issues/2109>)
SubClassOf(schema:RadioBroadcastService schema:BroadcastService)

# Class: schema:RadioChannel (RadioChannel)

AnnotationAssertion(rdfs:comment schema:RadioChannel "A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.")
AnnotationAssertion(rdfs:label schema:RadioChannel "RadioChannel")
SubClassOf(schema:RadioChannel schema:BroadcastChannel)

# Class: schema:RadioClip (RadioClip)

AnnotationAssertion(rdfs:comment schema:RadioClip "A short radio program or a segment/part of a radio program.")
AnnotationAssertion(rdfs:label schema:RadioClip "RadioClip")
SubClassOf(schema:RadioClip schema:Clip)

# Class: schema:RadioEpisode (RadioEpisode)

AnnotationAssertion(rdfs:comment schema:RadioEpisode "A radio episode which can be part of a series or season.")
AnnotationAssertion(rdfs:label schema:RadioEpisode "RadioEpisode")
SubClassOf(schema:RadioEpisode schema:Episode)

# Class: schema:RadioSeason (RadioSeason)

AnnotationAssertion(rdfs:comment schema:RadioSeason "Season dedicated to radio broadcast and associated online delivery.")
AnnotationAssertion(rdfs:label schema:RadioSeason "RadioSeason")
SubClassOf(schema:RadioSeason schema:CreativeWorkSeason)

# Class: schema:RadioSeries (RadioSeries)

AnnotationAssertion(rdfs:comment schema:RadioSeries "CreativeWorkSeries dedicated to radio broadcast and associated online delivery.")
AnnotationAssertion(rdfs:label schema:RadioSeries "RadioSeries")
SubClassOf(schema:RadioSeries schema:CreativeWorkSeries)

# Class: schema:RadioStation (RadioStation)

AnnotationAssertion(rdfs:comment schema:RadioStation "A radio station.")
AnnotationAssertion(rdfs:label schema:RadioStation "RadioStation")
SubClassOf(schema:RadioStation schema:LocalBusiness)

# Class: schema:Rating (Rating)

AnnotationAssertion(rdfs:comment schema:Rating "A rating is an evaluation on a numeric scale, such as 1 to 5 stars.")
AnnotationAssertion(rdfs:label schema:Rating "Rating")
SubClassOf(schema:Rating schema:Intangible)

# Class: schema:ReactAction (ReactAction)

AnnotationAssertion(rdfs:comment schema:ReactAction "The act of responding instinctively and emotionally to an object, expressing a sentiment.")
AnnotationAssertion(rdfs:label schema:ReactAction "ReactAction")
SubClassOf(schema:ReactAction schema:AssessAction)

# Class: schema:ReadAction (ReadAction)

AnnotationAssertion(rdfs:comment schema:ReadAction "The act of consuming written content.")
AnnotationAssertion(rdfs:label schema:ReadAction "ReadAction")
SubClassOf(schema:ReadAction schema:ConsumeAction)

# Class: schema:RealEstateAgent (RealEstateAgent)

AnnotationAssertion(rdfs:comment schema:RealEstateAgent "A real-estate agent.")
AnnotationAssertion(rdfs:label schema:RealEstateAgent "RealEstateAgent")
SubClassOf(schema:RealEstateAgent schema:LocalBusiness)

# Class: schema:RealEstateListing (RealEstateListing)

AnnotationAssertion(rdfs:comment schema:RealEstateListing "A [[RealEstateListing]] is a listing that describes one or more real-estate [[Offer]]s (whose [[businessFunction]] is typically to lease out, or to sell).
  The [[RealEstateListing]] type itself represents the overall listing, as manifested in some [[WebPage]].
  ")
AnnotationAssertion(rdfs:label schema:RealEstateListing "RealEstateListing")
AnnotationAssertion(schema:isPartOf schema:RealEstateListing <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RealEstateListing <https://github.com/schemaorg/schemaorg/issues/2348>)
SubClassOf(schema:RealEstateListing schema:WebPage)

# Class: schema:ReceiveAction (ReceiveAction)

AnnotationAssertion(rdfs:comment schema:ReceiveAction "The act of physically/electronically taking delivery of an object that has been transferred from an origin to a destination. Reciprocal of SendAction.\\n\\nRelated actions:\\n\\n* [[SendAction]]: The reciprocal of ReceiveAction.\\n* [[TakeAction]]: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transferred (e.g. I can receive a package, but it does not mean the package is now mine).")
AnnotationAssertion(rdfs:label schema:ReceiveAction "ReceiveAction")
SubClassOf(schema:ReceiveAction schema:TransferAction)

# Class: schema:Recipe (Recipe)

AnnotationAssertion(rdfs:comment schema:Recipe "A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via [[suitableForDiet]]. The [[keywords]] property can also be used to add more detail.")
AnnotationAssertion(rdfs:label schema:Recipe "Recipe")
SubClassOf(schema:Recipe schema:HowTo)

# Class: schema:Recommendation (Recommendation)

AnnotationAssertion(rdfs:comment schema:Recommendation "[[Recommendation]] is a type of [[Review]] that suggests or proposes something as the best option or best course of action. Recommendations may be for products or services, or other concrete things, as in the case of a ranked list or product guide. A [[Guide]] may list multiple recommendations for different categories. For example, in a [[Guide]] about which TVs to buy, the author may have several [[Recommendation]]s.")
AnnotationAssertion(rdfs:label schema:Recommendation "Recommendation")
AnnotationAssertion(schema:isPartOf schema:Recommendation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Recommendation <https://github.com/schemaorg/schemaorg/issues/2405>)
SubClassOf(schema:Recommendation schema:Review)

# Class: schema:RecommendedDoseSchedule (RecommendedDoseSchedule)

AnnotationAssertion(rdfs:comment schema:RecommendedDoseSchedule "A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.")
AnnotationAssertion(rdfs:label schema:RecommendedDoseSchedule "RecommendedDoseSchedule")
AnnotationAssertion(schema:isPartOf schema:RecommendedDoseSchedule <https://health-lifesci.schema.org>)
SubClassOf(schema:RecommendedDoseSchedule schema:DoseSchedule)

# Class: schema:RecyclingCenter (RecyclingCenter)

AnnotationAssertion(rdfs:comment schema:RecyclingCenter "A recycling center.")
AnnotationAssertion(rdfs:label schema:RecyclingCenter "RecyclingCenter")
SubClassOf(schema:RecyclingCenter schema:LocalBusiness)

# Class: schema:RefundTypeEnumeration (RefundTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:RefundTypeEnumeration "Enumerates several kinds of product return refund types.")
AnnotationAssertion(rdfs:label schema:RefundTypeEnumeration "RefundTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:RefundTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RefundTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2288>)
SubClassOf(schema:RefundTypeEnumeration schema:Enumeration)

# Class: schema:RegisterAction (RegisterAction)

AnnotationAssertion(rdfs:comment schema:RegisterAction "The act of registering to be a user of a service, product or web page.\\n\\nRelated actions:\\n\\n* [[JoinAction]]: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.\\n* [[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.\\n* [[SubscribeAction]]: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.")
AnnotationAssertion(rdfs:label schema:RegisterAction "RegisterAction")
SubClassOf(schema:RegisterAction schema:InteractAction)

# Class: schema:RejectAction (RejectAction)

AnnotationAssertion(rdfs:comment schema:RejectAction "The act of rejecting to/adopting an object.\\n\\nRelated actions:\\n\\n* [[AcceptAction]]: The antonym of RejectAction.")
AnnotationAssertion(rdfs:label schema:RejectAction "RejectAction")
SubClassOf(schema:RejectAction schema:AllocateAction)

# Class: schema:RentAction (RentAction)

AnnotationAssertion(rdfs:comment schema:RentAction "The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.")
AnnotationAssertion(rdfs:label schema:RentAction "RentAction")
SubClassOf(schema:RentAction schema:TradeAction)

# Class: schema:RentalCarReservation (RentalCarReservation)

AnnotationAssertion(rdfs:comment schema:RentalCarReservation "A reservation for a rental car.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.")
AnnotationAssertion(rdfs:label schema:RentalCarReservation "RentalCarReservation")
SubClassOf(schema:RentalCarReservation schema:Reservation)

# Class: schema:RepaymentSpecification (RepaymentSpecification)

AnnotationAssertion(rdfs:comment schema:RepaymentSpecification "A structured value representing repayment.")
AnnotationAssertion(rdfs:label schema:RepaymentSpecification "RepaymentSpecification")
AnnotationAssertion(schema:contributor schema:RepaymentSpecification <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:isPartOf schema:RepaymentSpecification <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RepaymentSpecification <https://github.com/schemaorg/schemaorg/issues/1253>)
SubClassOf(schema:RepaymentSpecification schema:StructuredValue)

# Class: schema:ReplaceAction (ReplaceAction)

AnnotationAssertion(rdfs:comment schema:ReplaceAction "The act of editing a recipient by replacing an old object with a new object.")
AnnotationAssertion(rdfs:label schema:ReplaceAction "ReplaceAction")
SubClassOf(schema:ReplaceAction schema:UpdateAction)

# Class: schema:ReplyAction (ReplyAction)

AnnotationAssertion(rdfs:comment schema:ReplyAction "The act of responding to a question/message asked/sent by the object. Related to [[AskAction]].\\n\\nRelated actions:\\n\\n* [[AskAction]]: Appears generally as an origin of a ReplyAction.")
AnnotationAssertion(rdfs:label schema:ReplyAction "ReplyAction")
SubClassOf(schema:ReplyAction schema:CommunicateAction)

# Class: schema:Report (Report)

AnnotationAssertion(rdfs:comment schema:Report "A Report generated by governmental or non-governmental organization.")
AnnotationAssertion(rdfs:label schema:Report "Report")
SubClassOf(schema:Report schema:Article)

# Class: schema:ReportageNewsArticle (ReportageNewsArticle)

AnnotationAssertion(rdfs:comment schema:ReportageNewsArticle "The [[ReportageNewsArticle]] type is a subtype of [[NewsArticle]] representing
 news articles which are the result of journalistic news reporting conventions.

In practice many news publishers produce a wide variety of article types, many of which might be considered a [[NewsArticle]] but not a [[ReportageNewsArticle]]. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.

The [[ReportageNewsArticle]] type is based on a stricter ideal for \"news\" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the [[ReportageNewsArticle]] sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.

A [[ReportageNewsArticle]] which goes deeper into analysis can also be marked with an additional type of [[AnalysisNewsArticle]].
")
AnnotationAssertion(rdfs:label schema:ReportageNewsArticle "ReportageNewsArticle")
AnnotationAssertion(schema:contributor schema:ReportageNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:ReportageNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReportageNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:ReportageNewsArticle schema:NewsArticle)

# Class: schema:ReportedDoseSchedule (ReportedDoseSchedule)

AnnotationAssertion(rdfs:comment schema:ReportedDoseSchedule "A patient-reported or observed dosing schedule for a drug or supplement.")
AnnotationAssertion(rdfs:label schema:ReportedDoseSchedule "ReportedDoseSchedule")
AnnotationAssertion(schema:isPartOf schema:ReportedDoseSchedule <https://health-lifesci.schema.org>)
SubClassOf(schema:ReportedDoseSchedule schema:DoseSchedule)

# Class: schema:ResearchOrganization (ResearchOrganization)

AnnotationAssertion(rdfs:comment schema:ResearchOrganization "A Research Organization (e.g. scientific institute, research company).")
AnnotationAssertion(rdfs:label schema:ResearchOrganization "ResearchOrganization")
AnnotationAssertion(schema:isPartOf schema:ResearchOrganization <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ResearchOrganization <https://github.com/schemaorg/schemaorg/issues/2877>)
SubClassOf(schema:ResearchOrganization schema:Organization)

# Class: schema:ResearchProject (ResearchProject)

AnnotationAssertion(rdfs:comment schema:ResearchProject "A Research project.")
AnnotationAssertion(rdfs:label schema:ResearchProject "ResearchProject")
AnnotationAssertion(schema:isPartOf schema:ResearchProject <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ResearchProject <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(schema:source schema:ResearchProject <https://schema.org/docs/collab/FundInfoCollab>)
SubClassOf(schema:ResearchProject schema:Project)

# Class: schema:Researcher (Researcher)

AnnotationAssertion(rdfs:comment schema:Researcher "Researchers.")
AnnotationAssertion(rdfs:label schema:Researcher "Researcher")
SubClassOf(schema:Researcher schema:Audience)

# Class: schema:Reservation (Reservation)

AnnotationAssertion(rdfs:comment schema:Reservation "Describes a reservation for travel, dining or an event. Some reservations require tickets. \\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:Reservation "Reservation")
SubClassOf(schema:Reservation schema:Intangible)

# Class: schema:ReservationPackage (ReservationPackage)

AnnotationAssertion(rdfs:comment schema:ReservationPackage "A group of multiple reservations with common values for all sub-reservations.")
AnnotationAssertion(rdfs:label schema:ReservationPackage "ReservationPackage")
SubClassOf(schema:ReservationPackage schema:Reservation)

# Class: schema:ReservationStatusType (ReservationStatusType)

AnnotationAssertion(rdfs:comment schema:ReservationStatusType "Enumerated status values for Reservation.")
AnnotationAssertion(rdfs:label schema:ReservationStatusType "ReservationStatusType")
SubClassOf(schema:ReservationStatusType schema:StatusEnumeration)

# Class: schema:ReserveAction (ReserveAction)

AnnotationAssertion(rdfs:comment schema:ReserveAction "Reserving a concrete object.\\n\\nRelated actions:\\n\\n* [[ScheduleAction]]: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.")
AnnotationAssertion(rdfs:label schema:ReserveAction "ReserveAction")
SubClassOf(schema:ReserveAction schema:PlanAction)

# Class: schema:Reservoir (Reservoir)

AnnotationAssertion(rdfs:comment schema:Reservoir "A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.")
AnnotationAssertion(rdfs:label schema:Reservoir "Reservoir")
SubClassOf(schema:Reservoir schema:BodyOfWater)

# Class: schema:Residence (Residence)

AnnotationAssertion(rdfs:comment schema:Residence "The place where a person lives.")
AnnotationAssertion(rdfs:label schema:Residence "Residence")
SubClassOf(schema:Residence schema:Place)

# Class: schema:Resort (Resort)

AnnotationAssertion(rdfs:comment schema:Resort "A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishments operated by a single company (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Resort\">http://en.wikipedia.org/wiki/Resort</a>).
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ")
AnnotationAssertion(rdfs:label schema:Resort "Resort")
AnnotationAssertion(schema:contributor schema:Resort <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Resort schema:LodgingBusiness)

# Class: schema:RespiratoryTherapy (RespiratoryTherapy)

AnnotationAssertion(rdfs:comment schema:RespiratoryTherapy "The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).")
AnnotationAssertion(rdfs:label schema:RespiratoryTherapy "RespiratoryTherapy")
AnnotationAssertion(schema:isPartOf schema:RespiratoryTherapy <https://health-lifesci.schema.org>)
SubClassOf(schema:RespiratoryTherapy schema:MedicalTherapy)

# Class: schema:Restaurant (Restaurant)

AnnotationAssertion(rdfs:comment schema:Restaurant "A restaurant.")
AnnotationAssertion(rdfs:label schema:Restaurant "Restaurant")
SubClassOf(schema:Restaurant schema:FoodEstablishment)

# Class: schema:RestrictedDiet (RestrictedDiet)

AnnotationAssertion(rdfs:comment schema:RestrictedDiet "A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons. ")
AnnotationAssertion(rdfs:label schema:RestrictedDiet "RestrictedDiet")
SubClassOf(schema:RestrictedDiet schema:Enumeration)

# Class: schema:ResumeAction (ResumeAction)

AnnotationAssertion(rdfs:comment schema:ResumeAction "The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).")
AnnotationAssertion(rdfs:label schema:ResumeAction "ResumeAction")
SubClassOf(schema:ResumeAction schema:ControlAction)

# Class: schema:ReturnAction (ReturnAction)

AnnotationAssertion(rdfs:comment schema:ReturnAction "The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).")
AnnotationAssertion(rdfs:label schema:ReturnAction "ReturnAction")
SubClassOf(schema:ReturnAction schema:TransferAction)

# Class: schema:ReturnFeesEnumeration (ReturnFeesEnumeration)

AnnotationAssertion(rdfs:comment schema:ReturnFeesEnumeration "Enumerates several kinds of policies for product return fees.")
AnnotationAssertion(rdfs:label schema:ReturnFeesEnumeration "ReturnFeesEnumeration")
AnnotationAssertion(schema:isPartOf schema:ReturnFeesEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnFeesEnumeration <https://github.com/schemaorg/schemaorg/issues/2288>)
SubClassOf(schema:ReturnFeesEnumeration schema:Enumeration)

# Class: schema:ReturnLabelSourceEnumeration (ReturnLabelSourceEnumeration)

AnnotationAssertion(rdfs:comment schema:ReturnLabelSourceEnumeration "Enumerates several types of return labels for product returns.")
AnnotationAssertion(rdfs:label schema:ReturnLabelSourceEnumeration "ReturnLabelSourceEnumeration")
AnnotationAssertion(schema:isPartOf schema:ReturnLabelSourceEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnLabelSourceEnumeration <https://github.com/schemaorg/schemaorg/issues/2880>)
SubClassOf(schema:ReturnLabelSourceEnumeration schema:Enumeration)

# Class: schema:ReturnMethodEnumeration (ReturnMethodEnumeration)

AnnotationAssertion(rdfs:comment schema:ReturnMethodEnumeration "Enumerates several types of product return methods.")
AnnotationAssertion(rdfs:label schema:ReturnMethodEnumeration "ReturnMethodEnumeration")
AnnotationAssertion(schema:isPartOf schema:ReturnMethodEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnMethodEnumeration <https://github.com/schemaorg/schemaorg/issues/2880>)
SubClassOf(schema:ReturnMethodEnumeration schema:Enumeration)

# Class: schema:Review (Review)

AnnotationAssertion(rdfs:comment schema:Review "A review of an item - for example, of a restaurant, movie, or store.")
AnnotationAssertion(rdfs:label schema:Review "Review")
SubClassOf(schema:Review schema:CreativeWork)

# Class: schema:ReviewAction (ReviewAction)

AnnotationAssertion(rdfs:comment schema:ReviewAction "The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.")
AnnotationAssertion(rdfs:label schema:ReviewAction "ReviewAction")
SubClassOf(schema:ReviewAction schema:AssessAction)

# Class: schema:ReviewNewsArticle (ReviewNewsArticle)

AnnotationAssertion(rdfs:comment schema:ReviewNewsArticle "A [[NewsArticle]] and [[CriticReview]] providing a professional critic's assessment of a service, product, performance, or artistic or literary work.")
AnnotationAssertion(rdfs:label schema:ReviewNewsArticle "ReviewNewsArticle")
AnnotationAssertion(schema:contributor schema:ReviewNewsArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:ReviewNewsArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReviewNewsArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:ReviewNewsArticle schema:CriticReview)
SubClassOf(schema:ReviewNewsArticle schema:NewsArticle)

# Class: schema:RiverBodyOfWater (RiverBodyOfWater)

AnnotationAssertion(rdfs:comment schema:RiverBodyOfWater "A river (for example, the broad majestic Shannon).")
AnnotationAssertion(rdfs:label schema:RiverBodyOfWater "RiverBodyOfWater")
SubClassOf(schema:RiverBodyOfWater schema:BodyOfWater)

# Class: schema:Role (Role)

AnnotationAssertion(rdfs:comment schema:Role "Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.\\n\\nSee also [blog post](http://blog.schema.org/2014/06/introducing-role.html).")
AnnotationAssertion(rdfs:label schema:Role "Role")
SubClassOf(schema:Role schema:Intangible)

# Class: schema:RoofingContractor (RoofingContractor)

AnnotationAssertion(rdfs:comment schema:RoofingContractor "A roofing contractor.")
AnnotationAssertion(rdfs:label schema:RoofingContractor "RoofingContractor")
SubClassOf(schema:RoofingContractor schema:HomeAndConstructionBusiness)

# Class: schema:Room (Room)

AnnotationAssertion(rdfs:comment schema:Room "A room is a distinguishable space within a structure, usually separated from other spaces by interior walls (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Room\">http://en.wikipedia.org/wiki/Room</a>).
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Room "Room")
AnnotationAssertion(schema:contributor schema:Room <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Room schema:Accommodation)

# Class: schema:RsvpAction (RsvpAction)

AnnotationAssertion(rdfs:comment schema:RsvpAction "The act of notifying an event organizer as to whether you expect to attend the event.")
AnnotationAssertion(rdfs:label schema:RsvpAction "RsvpAction")
SubClassOf(schema:RsvpAction schema:InformAction)

# Class: schema:RsvpResponseType (RsvpResponseType)

AnnotationAssertion(rdfs:comment schema:RsvpResponseType "RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.")
AnnotationAssertion(rdfs:label schema:RsvpResponseType "RsvpResponseType")
SubClassOf(schema:RsvpResponseType schema:Enumeration)

# Class: schema:SaleEvent (SaleEvent)

AnnotationAssertion(rdfs:comment schema:SaleEvent "Event type: Sales event.")
AnnotationAssertion(rdfs:label schema:SaleEvent "SaleEvent")
SubClassOf(schema:SaleEvent schema:Event)

# Class: schema:SatiricalArticle (SatiricalArticle)

AnnotationAssertion(rdfs:comment schema:SatiricalArticle "An [[Article]] whose content is primarily [[satirical]](https://en.wikipedia.org/wiki/Satire) in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a [[NewsArticle]]. [[ScholarlyArticle]]s are also sometimes satirized.")
AnnotationAssertion(rdfs:label schema:SatiricalArticle "SatiricalArticle")
AnnotationAssertion(schema:contributor schema:SatiricalArticle <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:isPartOf schema:SatiricalArticle <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SatiricalArticle <https://github.com/schemaorg/schemaorg/issues/1525>)
SubClassOf(schema:SatiricalArticle schema:Article)

# Class: schema:Schedule (Schedule)

AnnotationAssertion(rdfs:comment schema:Schedule "A schedule defines a repeating time period used to describe a regularly occurring [[Event]]. At a minimum a schedule will specify [[repeatFrequency]] which describes the interval between occurrences of the event. Additional information can be provided to specify the schedule more precisely.
      This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also
      have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.")
AnnotationAssertion(rdfs:label schema:Schedule "Schedule")
AnnotationAssertion(schema:isPartOf schema:Schedule <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Schedule <https://github.com/schemaorg/schemaorg/issues/1457>)
SubClassOf(schema:Schedule schema:Intangible)

# Class: schema:ScheduleAction (ScheduleAction)

AnnotationAssertion(rdfs:comment schema:ScheduleAction "Scheduling future actions, events, or tasks.\\n\\nRelated actions:\\n\\n* [[ReserveAction]]: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.")
AnnotationAssertion(rdfs:label schema:ScheduleAction "ScheduleAction")
SubClassOf(schema:ScheduleAction schema:PlanAction)

# Class: schema:ScholarlyArticle (ScholarlyArticle)

AnnotationAssertion(rdfs:comment schema:ScholarlyArticle "A scholarly article.")
AnnotationAssertion(rdfs:label schema:ScholarlyArticle "ScholarlyArticle")
SubClassOf(schema:ScholarlyArticle schema:Article)

# Class: schema:School (School)

AnnotationAssertion(rdfs:comment schema:School "A school.")
AnnotationAssertion(rdfs:label schema:School "School")
SubClassOf(schema:School schema:EducationalOrganization)

# Class: schema:SchoolDistrict (SchoolDistrict)

AnnotationAssertion(rdfs:comment schema:SchoolDistrict "A School District is an administrative area for the administration of schools.")
AnnotationAssertion(rdfs:label schema:SchoolDistrict "SchoolDistrict")
AnnotationAssertion(schema:isPartOf schema:SchoolDistrict <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SchoolDistrict <https://github.com/schemaorg/schemaorg/issues/2500>)
SubClassOf(schema:SchoolDistrict schema:AdministrativeArea)

# Class: schema:ScreeningEvent (ScreeningEvent)

AnnotationAssertion(rdfs:comment schema:ScreeningEvent "A screening of a movie or other video.")
AnnotationAssertion(rdfs:label schema:ScreeningEvent "ScreeningEvent")
SubClassOf(schema:ScreeningEvent schema:Event)

# Class: schema:Sculpture (Sculpture)

AnnotationAssertion(rdfs:comment schema:Sculpture "A piece of sculpture.")
AnnotationAssertion(rdfs:label schema:Sculpture "Sculpture")
SubClassOf(schema:Sculpture schema:CreativeWork)

# Class: schema:SeaBodyOfWater (SeaBodyOfWater)

AnnotationAssertion(rdfs:comment schema:SeaBodyOfWater "A sea (for example, the Caspian sea).")
AnnotationAssertion(rdfs:label schema:SeaBodyOfWater "SeaBodyOfWater")
SubClassOf(schema:SeaBodyOfWater schema:BodyOfWater)

# Class: schema:SearchAction (SearchAction)

AnnotationAssertion(rdfs:comment schema:SearchAction "The act of searching for an object.\\n\\nRelated actions:\\n\\n* [[FindAction]]: SearchAction generally leads to a FindAction, but not necessarily.")
AnnotationAssertion(rdfs:label schema:SearchAction "SearchAction")
SubClassOf(schema:SearchAction schema:Action)

# Class: schema:SearchRescueOrganization (SearchRescueOrganization)

AnnotationAssertion(rdfs:comment schema:SearchRescueOrganization "A Search and Rescue organization of some kind.")
AnnotationAssertion(rdfs:label schema:SearchRescueOrganization "SearchRescueOrganization")
AnnotationAssertion(schema:isPartOf schema:SearchRescueOrganization <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SearchRescueOrganization <https://github.com/schemaorg/schemaorg/issues/3052>)
SubClassOf(schema:SearchRescueOrganization schema:Organization)

# Class: schema:SearchResultsPage (SearchResultsPage)

AnnotationAssertion(rdfs:comment schema:SearchResultsPage "Web page type: Search results page.")
AnnotationAssertion(rdfs:label schema:SearchResultsPage "SearchResultsPage")
SubClassOf(schema:SearchResultsPage schema:WebPage)

# Class: schema:Season (Season)

AnnotationAssertion(rdfs:comment schema:Season "A media season, e.g. TV, radio, video game etc.")
AnnotationAssertion(rdfs:label schema:Season "Season")
AnnotationAssertion(schema:supersededBy schema:Season schema:CreativeWorkSeason)
SubClassOf(schema:Season schema:CreativeWork)

# Class: schema:Seat (Seat)

AnnotationAssertion(rdfs:comment schema:Seat "Used to describe a seat, such as a reserved seat in an event reservation.")
AnnotationAssertion(rdfs:label schema:Seat "Seat")
SubClassOf(schema:Seat schema:Intangible)

# Class: schema:SeekToAction (SeekToAction)

AnnotationAssertion(rdfs:comment schema:SeekToAction "This is the [[Action]] of navigating to a specific [[startOffset]] timestamp within a [[VideoObject]], typically represented with a URL template structure.")
AnnotationAssertion(rdfs:label schema:SeekToAction "SeekToAction")
AnnotationAssertion(schema:isPartOf schema:SeekToAction <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SeekToAction <https://github.com/schemaorg/schemaorg/issues/2722>)
SubClassOf(schema:SeekToAction schema:Action)

# Class: schema:SelfStorage (SelfStorage)

AnnotationAssertion(rdfs:comment schema:SelfStorage "A self-storage facility.")
AnnotationAssertion(rdfs:label schema:SelfStorage "SelfStorage")
SubClassOf(schema:SelfStorage schema:LocalBusiness)

# Class: schema:SellAction (SellAction)

AnnotationAssertion(rdfs:comment schema:SellAction "The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.")
AnnotationAssertion(rdfs:label schema:SellAction "SellAction")
SubClassOf(schema:SellAction schema:TradeAction)

# Class: schema:SendAction (SendAction)

AnnotationAssertion(rdfs:comment schema:SendAction "The act of physically/electronically dispatching an object for transfer from an origin to a destination. Related actions:\\n\\n* [[ReceiveAction]]: The reciprocal of SendAction.\\n* [[GiveAction]]: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).")
AnnotationAssertion(rdfs:label schema:SendAction "SendAction")
SubClassOf(schema:SendAction schema:TransferAction)

# Class: schema:Series (Series)

AnnotationAssertion(rdfs:comment schema:Series "A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also [[CreativeWorkSeries]], [[EventSeries]].")
AnnotationAssertion(rdfs:label schema:Series "Series")
SubClassOf(schema:Series schema:Intangible)

# Class: schema:Service (Service)

AnnotationAssertion(rdfs:comment schema:Service "A service provided by an organization, e.g. delivery service, print services, etc.")
AnnotationAssertion(rdfs:label schema:Service "Service")
SubClassOf(schema:Service schema:Intangible)

# Class: schema:ServiceChannel (ServiceChannel)

AnnotationAssertion(rdfs:comment schema:ServiceChannel "A means for accessing a service, e.g. a government office location, web site, or phone number.")
AnnotationAssertion(rdfs:label schema:ServiceChannel "ServiceChannel")
SubClassOf(schema:ServiceChannel schema:Intangible)

# Class: schema:ShareAction (ShareAction)

AnnotationAssertion(rdfs:comment schema:ShareAction "The act of distributing content to people for their amusement or edification.")
AnnotationAssertion(rdfs:label schema:ShareAction "ShareAction")
SubClassOf(schema:ShareAction schema:CommunicateAction)

# Class: schema:SheetMusic (SheetMusic)

AnnotationAssertion(rdfs:comment schema:SheetMusic "Printed music, as opposed to performed or recorded music.")
AnnotationAssertion(rdfs:label schema:SheetMusic "SheetMusic")
AnnotationAssertion(schema:isPartOf schema:SheetMusic <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SheetMusic <https://github.com/schemaorg/schemaorg/issues/1448>)
SubClassOf(schema:SheetMusic schema:CreativeWork)

# Class: schema:ShippingDeliveryTime (ShippingDeliveryTime)

AnnotationAssertion(rdfs:comment schema:ShippingDeliveryTime "ShippingDeliveryTime provides various pieces of information about delivery times for shipping.")
AnnotationAssertion(rdfs:label schema:ShippingDeliveryTime "ShippingDeliveryTime")
AnnotationAssertion(schema:source schema:ShippingDeliveryTime <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:ShippingDeliveryTime schema:StructuredValue)

# Class: schema:ShippingRateSettings (ShippingRateSettings)

AnnotationAssertion(rdfs:comment schema:ShippingRateSettings "A ShippingRateSettings represents re-usable pieces of shipping information. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished and matched (i.e. identified/referenced) by their different values for [[shippingLabel]].")
AnnotationAssertion(rdfs:label schema:ShippingRateSettings "ShippingRateSettings")
AnnotationAssertion(schema:source schema:ShippingRateSettings <https://github.com/schemaorg/schemaorg/issues/2506>)
SubClassOf(schema:ShippingRateSettings schema:StructuredValue)

# Class: schema:ShoeStore (ShoeStore)

AnnotationAssertion(rdfs:comment schema:ShoeStore "A shoe store.")
AnnotationAssertion(rdfs:label schema:ShoeStore "ShoeStore")
SubClassOf(schema:ShoeStore schema:Store)

# Class: schema:ShoppingCenter (ShoppingCenter)

AnnotationAssertion(rdfs:comment schema:ShoppingCenter "A shopping center or mall.")
AnnotationAssertion(rdfs:label schema:ShoppingCenter "ShoppingCenter")
SubClassOf(schema:ShoppingCenter schema:LocalBusiness)

# Class: schema:ShortStory (ShortStory)

AnnotationAssertion(rdfs:comment schema:ShortStory "Short story or tale. A brief work of literature, usually written in narrative prose.")
AnnotationAssertion(rdfs:label schema:ShortStory "ShortStory")
AnnotationAssertion(schema:isPartOf schema:ShortStory <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ShortStory <https://github.com/schemaorg/schemaorg/issues/1976>)
SubClassOf(schema:ShortStory schema:CreativeWork)

# Class: schema:SingleFamilyResidence (SingleFamilyResidence)

AnnotationAssertion(rdfs:comment schema:SingleFamilyResidence "Residence type: Single-family home.")
AnnotationAssertion(rdfs:label schema:SingleFamilyResidence "SingleFamilyResidence")
SubClassOf(schema:SingleFamilyResidence schema:House)

# Class: schema:SiteNavigationElement (SiteNavigationElement)

AnnotationAssertion(rdfs:comment schema:SiteNavigationElement "A navigation element of the page.")
AnnotationAssertion(rdfs:label schema:SiteNavigationElement "SiteNavigationElement")
SubClassOf(schema:SiteNavigationElement schema:WebPageElement)

# Class: schema:SizeGroupEnumeration (SizeGroupEnumeration)

AnnotationAssertion(rdfs:comment schema:SizeGroupEnumeration "Enumerates common size groups for various product categories.")
AnnotationAssertion(rdfs:label schema:SizeGroupEnumeration "SizeGroupEnumeration")
AnnotationAssertion(schema:isPartOf schema:SizeGroupEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SizeGroupEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:SizeGroupEnumeration schema:Enumeration)

# Class: schema:SizeSpecification (SizeSpecification)

AnnotationAssertion(rdfs:comment schema:SizeSpecification "Size related properties of a product, typically a size code ([[name]]) and optionally a [[sizeSystem]], [[sizeGroup]], and product measurements ([[hasMeasurement]]). In addition, the intended audience can be defined through [[suggestedAge]], [[suggestedGender]], and suggested body measurements ([[suggestedMeasurement]]).")
AnnotationAssertion(rdfs:label schema:SizeSpecification "SizeSpecification")
AnnotationAssertion(schema:isPartOf schema:SizeSpecification <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SizeSpecification <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:SizeSpecification schema:QualitativeValue)

# Class: schema:SizeSystemEnumeration (SizeSystemEnumeration)

AnnotationAssertion(rdfs:comment schema:SizeSystemEnumeration "Enumerates common size systems for different categories of products, for example \"EN-13402\" or \"UK\" for wearables or \"Imperial\" for screws.")
AnnotationAssertion(rdfs:label schema:SizeSystemEnumeration "SizeSystemEnumeration")
AnnotationAssertion(schema:isPartOf schema:SizeSystemEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SizeSystemEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:SizeSystemEnumeration schema:Enumeration)

# Class: schema:SkiResort (SkiResort)

AnnotationAssertion(rdfs:comment schema:SkiResort "A ski resort.")
AnnotationAssertion(rdfs:label schema:SkiResort "SkiResort")
SubClassOf(schema:SkiResort schema:Resort)
SubClassOf(schema:SkiResort schema:SportsActivityLocation)

# Class: schema:SocialEvent (SocialEvent)

AnnotationAssertion(rdfs:comment schema:SocialEvent "Event type: Social event.")
AnnotationAssertion(rdfs:label schema:SocialEvent "SocialEvent")
SubClassOf(schema:SocialEvent schema:Event)

# Class: schema:SocialMediaPosting (SocialMediaPosting)

AnnotationAssertion(rdfs:comment schema:SocialMediaPosting "A post to a social media platform, including blog posts, tweets, Facebook posts, etc.")
AnnotationAssertion(rdfs:label schema:SocialMediaPosting "SocialMediaPosting")
SubClassOf(schema:SocialMediaPosting schema:Article)

# Class: schema:SoftwareApplication (SoftwareApplication)

AnnotationAssertion(rdfs:comment schema:SoftwareApplication "A software application.")
AnnotationAssertion(rdfs:label schema:SoftwareApplication "SoftwareApplication")
SubClassOf(schema:SoftwareApplication schema:CreativeWork)

# Class: schema:SoftwareSourceCode (SoftwareSourceCode)

AnnotationAssertion(rdfs:comment schema:SoftwareSourceCode "Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.")
AnnotationAssertion(rdfs:label schema:SoftwareSourceCode "SoftwareSourceCode")
SubClassOf(schema:SoftwareSourceCode schema:CreativeWork)

# Class: schema:SolveMathAction (SolveMathAction)

AnnotationAssertion(rdfs:comment schema:SolveMathAction "The action that takes in a math expression and directs users to a page potentially capable of solving/simplifying that expression.")
AnnotationAssertion(rdfs:label schema:SolveMathAction "SolveMathAction")
AnnotationAssertion(schema:isPartOf schema:SolveMathAction <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SolveMathAction <https://github.com/schemaorg/schemaorg/issues/2740>)
SubClassOf(schema:SolveMathAction schema:Action)

# Class: schema:SomeProducts (SomeProducts)

AnnotationAssertion(rdfs:comment schema:SomeProducts "A placeholder for multiple similar products of the same kind.")
AnnotationAssertion(rdfs:label schema:SomeProducts "SomeProducts")
AnnotationAssertion(schema:contributor schema:SomeProducts <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:SomeProducts schema:Product)

# Class: schema:SpeakableSpecification (SpeakableSpecification)

AnnotationAssertion(rdfs:comment schema:SpeakableSpecification "A SpeakableSpecification indicates (typically via [[xpath]] or [[cssSelector]]) sections of a document that are highlighted as particularly [[speakable]]. Instances of this type are expected to be used primarily as values of the [[speakable]] property.")
AnnotationAssertion(rdfs:label schema:SpeakableSpecification "SpeakableSpecification")
AnnotationAssertion(schema:source schema:SpeakableSpecification <https://github.com/schemaorg/schemaorg/issues/1389>)
SubClassOf(schema:SpeakableSpecification schema:Intangible)

# Class: schema:SpecialAnnouncement (SpecialAnnouncement)

AnnotationAssertion(rdfs:comment schema:SpecialAnnouncement "A SpecialAnnouncement combines a simple date-stamped textual information update
      with contextualized Web links and other structured data.  It represents an information update made by a
      locally-oriented organization, for example schools, pharmacies, healthcare providers,  community groups, police,
      local government.

For work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#).

The motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), and the initial vocabulary is oriented to this urgent situation. Schema.org
expect to improve the markup iteratively as it is deployed and as feedback emerges from use. In addition to our
usual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#).


While this schema is designed to communicate urgent crisis-related information, it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), although there may be overlaps. The intent is to cover
the kinds of everyday practical information being posted to existing websites during an emergency situation.

Several kinds of information can be provided:

We encourage the provision of \"name\", \"text\", \"datePosted\", \"expires\" (if appropriate), \"category\" and
\"url\" as a simple baseline. It is important to provide a value for \"category\" where possible, most ideally as a well known
URL from Wikipedia or Wikidata. In the case of the 2019-2020 Coronavirus pandemic, this should be \"https://en.wikipedia.org/w/index.php?title=2019-20\\_coronavirus\\_pandemic\" or \"https://www.wikidata.org/wiki/Q81068910\".

For many of the possible properties, values can either be simple links or an inline description, depending on whether a summary is available. For a link, provide just the URL of the appropriate page as the property's value. For an inline description, use a [[WebContent]] type, and provide the url as a property of that, alongside at least a simple \"[[text]]\" summary of the page. It is
unlikely that a single SpecialAnnouncement will need all of the possible properties simultaneously.

We expect that in many cases the page referenced might contain more specialized structured data, e.g. contact info, [[openingHours]], [[Event]], [[FAQPage]] etc. By linking to those pages from a [[SpecialAnnouncement]] you can help make it clearer that the events are related to the situation (e.g. Coronavirus) indicated by the [[category]] property of the [[SpecialAnnouncement]].

Many [[SpecialAnnouncement]]s will relate to particular regions and to identifiable local organizations. Use [[spatialCoverage]] for the region, and [[announcementLocation]] to indicate specific [[LocalBusiness]]es and [[CivicStructure]]s. If the announcement affects both a particular region and a specific location (for example, a library closure that serves an entire region), use both [[spatialCoverage]] and [[announcementLocation]].

The [[about]] property can be used to indicate entities that are the focus of the announcement. We now recommend using [[about]] only
for representing non-location entities (e.g. a [[Course]] or a [[RadioStation]]). For places, use [[announcementLocation]] and [[spatialCoverage]]. Consumers of this markup should be aware that the initial design encouraged the use of [[about]] for locations too.

The basic content of [[SpecialAnnouncement]] is similar to that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) feed. For publishers without such feeds, basic feed-like information can be shared by posting
[[SpecialAnnouncement]] updates in a page, e.g. using JSON-LD. For sites with Atom/RSS functionality, you can point to a feed
with the [[webFeed]] property. This can be a simple URL, or an inline [[DataFeed]] object, with [[encodingFormat]] providing
media type information, e.g. \"application/rss+xml\" or \"application/atom+xml\".
")
AnnotationAssertion(rdfs:label schema:SpecialAnnouncement "SpecialAnnouncement")
AnnotationAssertion(schema:isPartOf schema:SpecialAnnouncement <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SpecialAnnouncement <https://github.com/schemaorg/schemaorg/issues/2490>)
SubClassOf(schema:SpecialAnnouncement schema:CreativeWork)

# Class: schema:Specialty (Specialty)

AnnotationAssertion(rdfs:comment schema:Specialty "Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.")
AnnotationAssertion(rdfs:label schema:Specialty "Specialty")
SubClassOf(schema:Specialty schema:Enumeration)

# Class: schema:SportingGoodsStore (SportingGoodsStore)

AnnotationAssertion(rdfs:comment schema:SportingGoodsStore "A sporting goods store.")
AnnotationAssertion(rdfs:label schema:SportingGoodsStore "SportingGoodsStore")
SubClassOf(schema:SportingGoodsStore schema:Store)

# Class: schema:SportsActivityLocation (SportsActivityLocation)

AnnotationAssertion(rdfs:comment schema:SportsActivityLocation "A sports location, such as a playing field.")
AnnotationAssertion(rdfs:label schema:SportsActivityLocation "SportsActivityLocation")
SubClassOf(schema:SportsActivityLocation schema:LocalBusiness)

# Class: schema:SportsClub (SportsClub)

AnnotationAssertion(rdfs:comment schema:SportsClub "A sports club.")
AnnotationAssertion(rdfs:label schema:SportsClub "SportsClub")
SubClassOf(schema:SportsClub schema:SportsActivityLocation)

# Class: schema:SportsEvent (SportsEvent)

AnnotationAssertion(rdfs:comment schema:SportsEvent "Event type: Sports event.")
AnnotationAssertion(rdfs:label schema:SportsEvent "SportsEvent")
SubClassOf(schema:SportsEvent schema:Event)

# Class: schema:SportsOrganization (SportsOrganization)

AnnotationAssertion(rdfs:comment schema:SportsOrganization "Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.")
AnnotationAssertion(rdfs:label schema:SportsOrganization "SportsOrganization")
SubClassOf(schema:SportsOrganization schema:Organization)

# Class: schema:SportsTeam (SportsTeam)

AnnotationAssertion(rdfs:comment schema:SportsTeam "Organization: Sports team.")
AnnotationAssertion(rdfs:label schema:SportsTeam "SportsTeam")
SubClassOf(schema:SportsTeam schema:SportsOrganization)

# Class: schema:SpreadsheetDigitalDocument (SpreadsheetDigitalDocument)

AnnotationAssertion(rdfs:comment schema:SpreadsheetDigitalDocument "A spreadsheet file.")
AnnotationAssertion(rdfs:label schema:SpreadsheetDigitalDocument "SpreadsheetDigitalDocument")
SubClassOf(schema:SpreadsheetDigitalDocument schema:DigitalDocument)

# Class: schema:StadiumOrArena (StadiumOrArena)

AnnotationAssertion(rdfs:comment schema:StadiumOrArena "A stadium.")
AnnotationAssertion(rdfs:label schema:StadiumOrArena "StadiumOrArena")
SubClassOf(schema:StadiumOrArena schema:CivicStructure)
SubClassOf(schema:StadiumOrArena schema:SportsActivityLocation)

# Class: schema:State (State)

AnnotationAssertion(rdfs:comment schema:State "A state or province of a country.")
AnnotationAssertion(rdfs:label schema:State "State")
SubClassOf(schema:State schema:AdministrativeArea)

# Class: schema:Statement (Statement)

AnnotationAssertion(rdfs:comment schema:Statement "A statement about something, for example a fun or interesting fact. If known, the main entity this statement is about can be indicated using mainEntity. For more formal claims (e.g. in Fact Checking), consider using [[Claim]] instead. Use the [[text]] property to capture the text of the statement.")
AnnotationAssertion(rdfs:label schema:Statement "Statement")
AnnotationAssertion(schema:isPartOf schema:Statement <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Statement <https://github.com/schemaorg/schemaorg/issues/2912>)
SubClassOf(schema:Statement schema:CreativeWork)

# Class: schema:StatisticalPopulation (StatisticalPopulation)

AnnotationAssertion(rdfs:comment schema:StatisticalPopulation "A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property [[populationType]] is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a [[StatisticalPopulation]] representing all [[Person]]s with a [[homeLocation]] of East Podunk California would be described by applying the appropriate [[homeLocation]] and [[populationType]] properties to a [[StatisticalPopulation]] item that stands for that set of people.
The properties [[numConstraints]] and [[constraintProperty]] are used to specify which of the populations properties are used to specify the population. Note that the sense of \"population\" used here is the general sense of a statistical
population, and does not imply that the population consists of people. For example, a [[populationType]] of [[Event]] or [[NewsArticle]] could be used. See also [[Observation]], where a [[populationType]] such as [[Person]] or [[Event]] can be indicated directly. In most cases it may be better to use [[StatisticalVariable]] instead of [[StatisticalPopulation]].")
AnnotationAssertion(rdfs:label schema:StatisticalPopulation "StatisticalPopulation")
AnnotationAssertion(schema:isPartOf schema:StatisticalPopulation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StatisticalPopulation <https://github.com/schemaorg/schemaorg/issues/2291>)
SubClassOf(schema:StatisticalPopulation schema:Intangible)

# Class: schema:StatisticalVariable (StatisticalVariable)

AnnotationAssertion(rdfs:comment schema:StatisticalVariable "[[StatisticalVariable]] represents any type of statistical metric that can be measured at a place and time. The usage pattern for [[StatisticalVariable]] is typically expressed using [[Observation]] with an explicit [[populationType]], which is a type, typically drawn from Schema.org. Each [[StatisticalVariable]] is marked as a [[ConstraintNode]], meaning that some properties (those listed using [[constraintProperty]]) serve in this setting solely to define the statistical variable rather than literally describe a specific person, place or thing. For example, a [[StatisticalVariable]] Median_Height_Person_Female representing the median height of women, could be written as follows: the population type is [[Person]]; the measuredProperty [[height]]; the [[statType]] [[median]]; the [[gender]] [[Female]]. It is important to note that there are many kinds of scientific quantitative observation which are not fully, perfectly or unambiguously described following this pattern, or with solely Schema.org terminology. The approach taken here is designed to allow partial, incremental or minimal description of [[StatisticalVariable]]s, and the use of detailed sets of entity and property IDs from external repositories. The [[measurementMethod]], [[unitCode]] and [[unitText]] properties can also be used to clarify the specific nature and notation of an observed measurement. ")
AnnotationAssertion(rdfs:label schema:StatisticalVariable "StatisticalVariable")
AnnotationAssertion(schema:isPartOf schema:StatisticalVariable <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StatisticalVariable <https://github.com/schemaorg/schemaorg/issues/2564>)
SubClassOf(schema:StatisticalVariable schema:ConstraintNode)

# Class: schema:StatusEnumeration (StatusEnumeration)

AnnotationAssertion(rdfs:comment schema:StatusEnumeration "Lists or enumerations dealing with status types.")
AnnotationAssertion(rdfs:label schema:StatusEnumeration "StatusEnumeration")
AnnotationAssertion(schema:source schema:StatusEnumeration <https://github.com/schemaorg/schemaorg/issues/2604>)
SubClassOf(schema:StatusEnumeration schema:Enumeration)

# Class: schema:SteeringPositionValue (SteeringPositionValue)

AnnotationAssertion(rdfs:comment schema:SteeringPositionValue "A value indicating a steering position.")
AnnotationAssertion(rdfs:label schema:SteeringPositionValue "SteeringPositionValue")
AnnotationAssertion(schema:contributor schema:SteeringPositionValue <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
SubClassOf(schema:SteeringPositionValue schema:QualitativeValue)

# Class: schema:Store (Store)

AnnotationAssertion(rdfs:comment schema:Store "A retail good store.")
AnnotationAssertion(rdfs:label schema:Store "Store")
SubClassOf(schema:Store schema:LocalBusiness)

# Class: schema:StructuredValue (StructuredValue)

AnnotationAssertion(rdfs:comment schema:StructuredValue "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.")
AnnotationAssertion(rdfs:label schema:StructuredValue "StructuredValue")
SubClassOf(schema:StructuredValue schema:Intangible)

# Class: schema:SubscribeAction (SubscribeAction)

AnnotationAssertion(rdfs:comment schema:SubscribeAction "The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.\\n* [[RegisterAction]]: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\\n* [[JoinAction]]: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.")
AnnotationAssertion(rdfs:label schema:SubscribeAction "SubscribeAction")
SubClassOf(schema:SubscribeAction schema:InteractAction)

# Class: schema:Substance (Substance)

AnnotationAssertion(rdfs:comment schema:Substance "Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.")
AnnotationAssertion(rdfs:label schema:Substance "Substance")
AnnotationAssertion(schema:isPartOf schema:Substance <https://health-lifesci.schema.org>)
SubClassOf(schema:Substance schema:MedicalEntity)

# Class: schema:SubwayStation (SubwayStation)

AnnotationAssertion(rdfs:comment schema:SubwayStation "A subway station.")
AnnotationAssertion(rdfs:label schema:SubwayStation "SubwayStation")
SubClassOf(schema:SubwayStation schema:CivicStructure)

# Class: schema:Suite (Suite)

AnnotationAssertion(rdfs:comment schema:Suite "A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Suite_(hotel)\">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
<br /><br />
See also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
")
AnnotationAssertion(rdfs:label schema:Suite "Suite")
AnnotationAssertion(schema:contributor schema:Suite <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
SubClassOf(schema:Suite schema:Accommodation)

# Class: schema:SuperficialAnatomy (SuperficialAnatomy)

AnnotationAssertion(rdfs:comment schema:SuperficialAnatomy "Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).")
AnnotationAssertion(rdfs:label schema:SuperficialAnatomy "SuperficialAnatomy")
AnnotationAssertion(schema:isPartOf schema:SuperficialAnatomy <https://health-lifesci.schema.org>)
SubClassOf(schema:SuperficialAnatomy schema:MedicalEntity)

# Class: schema:SurgicalProcedure (SurgicalProcedure)

AnnotationAssertion(rdfs:comment schema:SurgicalProcedure "A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.")
AnnotationAssertion(rdfs:label schema:SurgicalProcedure "SurgicalProcedure")
AnnotationAssertion(schema:isPartOf schema:SurgicalProcedure <https://health-lifesci.schema.org>)
SubClassOf(schema:SurgicalProcedure schema:MedicalProcedure)

# Class: schema:SuspendAction (SuspendAction)

AnnotationAssertion(rdfs:comment schema:SuspendAction "The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).")
AnnotationAssertion(rdfs:label schema:SuspendAction "SuspendAction")
SubClassOf(schema:SuspendAction schema:ControlAction)

# Class: schema:Syllabus (Syllabus)

AnnotationAssertion(rdfs:comment schema:Syllabus "A syllabus that describes the material covered in a course, often with several such sections per [[Course]] so that a distinct [[timeRequired]] can be provided for that section of the [[Course]].")
AnnotationAssertion(rdfs:label schema:Syllabus "Syllabus")
AnnotationAssertion(schema:isPartOf schema:Syllabus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Syllabus <https://github.com/schemaorg/schemaorg/issues/3281>)
SubClassOf(schema:Syllabus schema:LearningResource)

# Class: schema:Synagogue (Synagogue)

AnnotationAssertion(rdfs:comment schema:Synagogue "A synagogue.")
AnnotationAssertion(rdfs:label schema:Synagogue "Synagogue")
SubClassOf(schema:Synagogue schema:PlaceOfWorship)

# Class: schema:TVClip (TVClip)

AnnotationAssertion(rdfs:comment schema:TVClip "A short TV program or a segment/part of a TV program.")
AnnotationAssertion(rdfs:label schema:TVClip "TVClip")
SubClassOf(schema:TVClip schema:Clip)

# Class: schema:TVEpisode (TVEpisode)

AnnotationAssertion(rdfs:comment schema:TVEpisode "A TV episode which can be part of a series or season.")
AnnotationAssertion(rdfs:label schema:TVEpisode "TVEpisode")
SubClassOf(schema:TVEpisode schema:Episode)

# Class: schema:TVSeason (TVSeason)

AnnotationAssertion(rdfs:comment schema:TVSeason "Season dedicated to TV broadcast and associated online delivery.")
AnnotationAssertion(rdfs:label schema:TVSeason "TVSeason")
SubClassOf(schema:TVSeason schema:CreativeWork)
SubClassOf(schema:TVSeason schema:CreativeWorkSeason)

# Class: schema:TVSeries (TVSeries)

AnnotationAssertion(rdfs:comment schema:TVSeries "CreativeWorkSeries dedicated to TV broadcast and associated online delivery.")
AnnotationAssertion(rdfs:label schema:TVSeries "TVSeries")
SubClassOf(schema:TVSeries schema:CreativeWork)
SubClassOf(schema:TVSeries schema:CreativeWorkSeries)

# Class: schema:Table (Table)

AnnotationAssertion(rdfs:comment schema:Table "A table on a Web page.")
AnnotationAssertion(rdfs:label schema:Table "Table")
SubClassOf(schema:Table schema:WebPageElement)

# Class: schema:TakeAction (TakeAction)

AnnotationAssertion(rdfs:comment schema:TakeAction "The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.\\n\\nRelated actions:\\n\\n* [[GiveAction]]: The reciprocal of TakeAction.\\n* [[ReceiveAction]]: Unlike ReceiveAction, TakeAction implies that ownership has been transferred.")
AnnotationAssertion(rdfs:label schema:TakeAction "TakeAction")
SubClassOf(schema:TakeAction schema:TransferAction)

# Class: schema:TattooParlor (TattooParlor)

AnnotationAssertion(rdfs:comment schema:TattooParlor "A tattoo parlor.")
AnnotationAssertion(rdfs:label schema:TattooParlor "TattooParlor")
SubClassOf(schema:TattooParlor schema:HealthAndBeautyBusiness)

# Class: schema:Taxi (Taxi)

AnnotationAssertion(rdfs:comment schema:Taxi "A taxi.")
AnnotationAssertion(rdfs:label schema:Taxi "Taxi")
AnnotationAssertion(schema:supersededBy schema:Taxi schema:TaxiService)
SubClassOf(schema:Taxi schema:Service)

# Class: schema:TaxiReservation (TaxiReservation)

AnnotationAssertion(rdfs:comment schema:TaxiReservation "A reservation for a taxi.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:TaxiReservation "TaxiReservation")
SubClassOf(schema:TaxiReservation schema:Reservation)

# Class: schema:TaxiService (TaxiService)

AnnotationAssertion(rdfs:comment schema:TaxiService "A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.")
AnnotationAssertion(rdfs:label schema:TaxiService "TaxiService")
SubClassOf(schema:TaxiService schema:Service)

# Class: schema:TaxiStand (TaxiStand)

AnnotationAssertion(rdfs:comment schema:TaxiStand "A taxi stand.")
AnnotationAssertion(rdfs:label schema:TaxiStand "TaxiStand")
SubClassOf(schema:TaxiStand schema:CivicStructure)

# Class: schema:Taxon (Taxon)

AnnotationAssertion(rdfs:comment schema:Taxon "A set of organisms asserted to represent a natural cohesive biological unit.")
AnnotationAssertion(rdfs:label schema:Taxon "Taxon")
AnnotationAssertion(schema:isPartOf schema:Taxon <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Taxon <http://bioschemas.org>)
SubClassOf(schema:Taxon schema:Thing)

# Class: schema:TechArticle (TechArticle)

AnnotationAssertion(rdfs:comment schema:TechArticle "A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.")
AnnotationAssertion(rdfs:label schema:TechArticle "TechArticle")
SubClassOf(schema:TechArticle schema:Article)

# Class: schema:TelevisionChannel (TelevisionChannel)

AnnotationAssertion(rdfs:comment schema:TelevisionChannel "A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.")
AnnotationAssertion(rdfs:label schema:TelevisionChannel "TelevisionChannel")
SubClassOf(schema:TelevisionChannel schema:BroadcastChannel)

# Class: schema:TelevisionStation (TelevisionStation)

AnnotationAssertion(rdfs:comment schema:TelevisionStation "A television station.")
AnnotationAssertion(rdfs:label schema:TelevisionStation "TelevisionStation")
SubClassOf(schema:TelevisionStation schema:LocalBusiness)

# Class: schema:TennisComplex (TennisComplex)

AnnotationAssertion(rdfs:comment schema:TennisComplex "A tennis complex.")
AnnotationAssertion(rdfs:label schema:TennisComplex "TennisComplex")
SubClassOf(schema:TennisComplex schema:SportsActivityLocation)

# Class: schema:Text (Text)

AnnotationAssertion(rdfs:comment schema:Text "Data type: Text.")
AnnotationAssertion(rdfs:label schema:Text "Text")

# Class: schema:TextDigitalDocument (TextDigitalDocument)

AnnotationAssertion(rdfs:comment schema:TextDigitalDocument "A file composed primarily of text.")
AnnotationAssertion(rdfs:label schema:TextDigitalDocument "TextDigitalDocument")
SubClassOf(schema:TextDigitalDocument schema:DigitalDocument)

# Class: schema:TextObject (TextObject)

AnnotationAssertion(rdfs:comment schema:TextObject "A text file. The text can be unformatted or contain markup, html, etc.")
AnnotationAssertion(rdfs:label schema:TextObject "TextObject")
SubClassOf(schema:TextObject schema:MediaObject)

# Class: schema:TheaterEvent (TheaterEvent)

AnnotationAssertion(rdfs:comment schema:TheaterEvent "Event type: Theater performance.")
AnnotationAssertion(rdfs:label schema:TheaterEvent "TheaterEvent")
SubClassOf(schema:TheaterEvent schema:Event)

# Class: schema:TheaterGroup (TheaterGroup)

AnnotationAssertion(rdfs:comment schema:TheaterGroup "A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.")
AnnotationAssertion(rdfs:label schema:TheaterGroup "TheaterGroup")
SubClassOf(schema:TheaterGroup schema:PerformingGroup)

# Class: schema:TherapeuticProcedure (TherapeuticProcedure)

AnnotationAssertion(rdfs:comment schema:TherapeuticProcedure "A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.")
AnnotationAssertion(rdfs:label schema:TherapeuticProcedure "TherapeuticProcedure")
AnnotationAssertion(schema:isPartOf schema:TherapeuticProcedure <https://health-lifesci.schema.org>)
SubClassOf(schema:TherapeuticProcedure schema:MedicalProcedure)

# Class: schema:Thesis (Thesis)

AnnotationAssertion(rdfs:comment schema:Thesis "A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.")
AnnotationAssertion(rdfs:label schema:Thesis "Thesis")
AnnotationAssertion(schema:isPartOf schema:Thesis <https://bib.schema.org>)
AnnotationAssertion(schema:source schema:Thesis <http://www.productontology.org/id/Thesis>)
SubClassOf(schema:Thesis schema:CreativeWork)

# Class: schema:Thing (Thing)

AnnotationAssertion(rdfs:comment schema:Thing "The most generic type of item.")
AnnotationAssertion(rdfs:label schema:Thing "Thing")

# Class: schema:Ticket (Ticket)

AnnotationAssertion(rdfs:comment schema:Ticket "Used to describe a ticket to an event, a flight, a bus ride, etc.")
AnnotationAssertion(rdfs:label schema:Ticket "Ticket")
SubClassOf(schema:Ticket schema:Intangible)

# Class: schema:TieAction (TieAction)

AnnotationAssertion(rdfs:comment schema:TieAction "The act of reaching a draw in a competitive activity.")
AnnotationAssertion(rdfs:label schema:TieAction "TieAction")
SubClassOf(schema:TieAction schema:AchieveAction)

# Class: schema:TierBenefitEnumeration (TierBenefitEnumeration)

AnnotationAssertion(rdfs:comment schema:TierBenefitEnumeration "An enumeration of possible benefits as part of a loyalty (members) program.")
AnnotationAssertion(rdfs:label schema:TierBenefitEnumeration "TierBenefitEnumeration")
AnnotationAssertion(schema:isPartOf schema:TierBenefitEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TierBenefitEnumeration <https://github.com/schemaorg/schemaorg/issues/3563>)
SubClassOf(schema:TierBenefitEnumeration schema:Enumeration)

# Class: schema:Time (Time)

AnnotationAssertion(rdfs:comment schema:Time "A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).")
AnnotationAssertion(rdfs:label schema:Time "Time")

# Class: schema:TipAction (TipAction)

AnnotationAssertion(rdfs:comment schema:TipAction "The act of giving money voluntarily to a beneficiary in recognition of services rendered.")
AnnotationAssertion(rdfs:label schema:TipAction "TipAction")
SubClassOf(schema:TipAction schema:TradeAction)

# Class: schema:TireShop (TireShop)

AnnotationAssertion(rdfs:comment schema:TireShop "A tire shop.")
AnnotationAssertion(rdfs:label schema:TireShop "TireShop")
SubClassOf(schema:TireShop schema:Store)

# Class: schema:TouristAttraction (TouristAttraction)

AnnotationAssertion(rdfs:comment schema:TouristAttraction "A tourist attraction.  In principle any Thing can be a [[TouristAttraction]], from a [[Mountain]] and [[LandmarksOrHistoricalBuildings]] to a [[LocalBusiness]].  This Type can be used on its own to describe a general [[TouristAttraction]], or be used as an [[additionalType]] to add tourist attraction properties to any other type.  (See examples below)")
AnnotationAssertion(rdfs:label schema:TouristAttraction "TouristAttraction")
AnnotationAssertion(schema:contributor schema:TouristAttraction <https://schema.org/docs/collab/IIT-CNR.it>)
AnnotationAssertion(schema:contributor schema:TouristAttraction <https://schema.org/docs/collab/Tourism>)
SubClassOf(schema:TouristAttraction schema:Place)

# Class: schema:TouristDestination (TouristDestination)

AnnotationAssertion(rdfs:comment schema:TouristDestination "A tourist destination. In principle any [[Place]] can be a [[TouristDestination]] from a [[City]], Region or [[Country]] to an [[AmusementPark]] or [[Hotel]]. This Type can be used on its own to describe a general [[TouristDestination]], or be used as an [[additionalType]] to add tourist relevant properties to any other [[Place]].  A [[TouristDestination]] is defined as a [[Place]] that contains, or is colocated with, one or more [[TouristAttraction]]s, often linked by a similar theme or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.
  (See examples below.)")
AnnotationAssertion(rdfs:label schema:TouristDestination "TouristDestination")
AnnotationAssertion(schema:contributor schema:TouristDestination <https://schema.org/docs/collab/IIT-CNR.it>)
AnnotationAssertion(schema:contributor schema:TouristDestination <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:isPartOf schema:TouristDestination <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TouristDestination <https://github.com/schemaorg/schemaorg/issues/1810>)
SubClassOf(schema:TouristDestination schema:Place)

# Class: schema:TouristInformationCenter (TouristInformationCenter)

AnnotationAssertion(rdfs:comment schema:TouristInformationCenter "A tourist information center.")
AnnotationAssertion(rdfs:label schema:TouristInformationCenter "TouristInformationCenter")
SubClassOf(schema:TouristInformationCenter schema:LocalBusiness)

# Class: schema:TouristTrip (TouristTrip)

AnnotationAssertion(rdfs:comment schema:TouristTrip "A tourist trip. A created itinerary of visits to one or more places of interest ([[TouristAttraction]]/[[TouristDestination]]) often linked by a similar theme, geographic area, or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines tourism trip as the Trip taken by visitors.
  (See examples below.)")
AnnotationAssertion(rdfs:label schema:TouristTrip "TouristTrip")
AnnotationAssertion(schema:contributor schema:TouristTrip <https://schema.org/docs/collab/IIT-CNR.it>)
AnnotationAssertion(schema:contributor schema:TouristTrip <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:isPartOf schema:TouristTrip <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TouristTrip <https://github.com/schemaorg/schemaorg/issues/1810>)
SubClassOf(schema:TouristTrip schema:Trip)

# Class: schema:ToyStore (ToyStore)

AnnotationAssertion(rdfs:comment schema:ToyStore "A toy store.")
AnnotationAssertion(rdfs:label schema:ToyStore "ToyStore")
SubClassOf(schema:ToyStore schema:Store)

# Class: schema:TrackAction (TrackAction)

AnnotationAssertion(rdfs:comment schema:TrackAction "An agent tracks an object for updates.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.\\n* [[SubscribeAction]]: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.")
AnnotationAssertion(rdfs:label schema:TrackAction "TrackAction")
SubClassOf(schema:TrackAction schema:FindAction)

# Class: schema:TradeAction (TradeAction)

AnnotationAssertion(rdfs:comment schema:TradeAction "The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.")
AnnotationAssertion(rdfs:label schema:TradeAction "TradeAction")
SubClassOf(schema:TradeAction schema:Action)

# Class: schema:TrainReservation (TrainReservation)

AnnotationAssertion(rdfs:comment schema:TrainReservation "A reservation for train travel.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].")
AnnotationAssertion(rdfs:label schema:TrainReservation "TrainReservation")
SubClassOf(schema:TrainReservation schema:Reservation)

# Class: schema:TrainStation (TrainStation)

AnnotationAssertion(rdfs:comment schema:TrainStation "A train station.")
AnnotationAssertion(rdfs:label schema:TrainStation "TrainStation")
SubClassOf(schema:TrainStation schema:CivicStructure)

# Class: schema:TrainTrip (TrainTrip)

AnnotationAssertion(rdfs:comment schema:TrainTrip "A trip on a commercial train line.")
AnnotationAssertion(rdfs:label schema:TrainTrip "TrainTrip")
SubClassOf(schema:TrainTrip schema:Trip)

# Class: schema:TransferAction (TransferAction)

AnnotationAssertion(rdfs:comment schema:TransferAction "The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.")
AnnotationAssertion(rdfs:label schema:TransferAction "TransferAction")
SubClassOf(schema:TransferAction schema:Action)

# Class: schema:TravelAction (TravelAction)

AnnotationAssertion(rdfs:comment schema:TravelAction "The act of traveling from a fromLocation to a destination by a specified mode of transport, optionally with participants.")
AnnotationAssertion(rdfs:label schema:TravelAction "TravelAction")
SubClassOf(schema:TravelAction schema:MoveAction)

# Class: schema:TravelAgency (TravelAgency)

AnnotationAssertion(rdfs:comment schema:TravelAgency "A travel agency.")
AnnotationAssertion(rdfs:label schema:TravelAgency "TravelAgency")
SubClassOf(schema:TravelAgency schema:LocalBusiness)

# Class: schema:TreatmentIndication (TreatmentIndication)

AnnotationAssertion(rdfs:comment schema:TreatmentIndication "An indication for treating an underlying condition, symptom, etc.")
AnnotationAssertion(rdfs:label schema:TreatmentIndication "TreatmentIndication")
AnnotationAssertion(schema:isPartOf schema:TreatmentIndication <https://health-lifesci.schema.org>)
SubClassOf(schema:TreatmentIndication schema:MedicalIndication)

# Class: schema:Trip (Trip)

AnnotationAssertion(rdfs:comment schema:Trip "A trip or journey. An itinerary of visits to one or more places.")
AnnotationAssertion(rdfs:label schema:Trip "Trip")
AnnotationAssertion(schema:contributor schema:Trip <https://schema.org/docs/collab/Tourism>)
SubClassOf(schema:Trip schema:Intangible)

# Class: schema:TypeAndQuantityNode (TypeAndQuantityNode)

AnnotationAssertion(rdfs:comment schema:TypeAndQuantityNode "A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.")
AnnotationAssertion(rdfs:label schema:TypeAndQuantityNode "TypeAndQuantityNode")
AnnotationAssertion(schema:contributor schema:TypeAndQuantityNode <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:TypeAndQuantityNode schema:StructuredValue)

# Class: schema:UKNonprofitType (UKNonprofitType)

AnnotationAssertion(rdfs:comment schema:UKNonprofitType "UKNonprofitType: Non-profit organization type originating from the United Kingdom.")
AnnotationAssertion(rdfs:label schema:UKNonprofitType "UKNonprofitType")
AnnotationAssertion(schema:isPartOf schema:UKNonprofitType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UKNonprofitType <https://github.com/schemaorg/schemaorg/issues/2543>)
SubClassOf(schema:UKNonprofitType schema:NonprofitType)

# Class: schema:URL (URL)

AnnotationAssertion(rdfs:comment schema:URL "Data type: URL.")
AnnotationAssertion(rdfs:label schema:URL "URL")
SubClassOf(schema:URL schema:Text)

# Class: schema:USNonprofitType (USNonprofitType)

AnnotationAssertion(rdfs:comment schema:USNonprofitType "USNonprofitType: Non-profit organization type originating from the United States.")
AnnotationAssertion(rdfs:label schema:USNonprofitType "USNonprofitType")
AnnotationAssertion(schema:isPartOf schema:USNonprofitType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:USNonprofitType <https://github.com/schemaorg/schemaorg/issues/2543>)
SubClassOf(schema:USNonprofitType schema:NonprofitType)

# Class: schema:UnRegisterAction (UnRegisterAction)

AnnotationAssertion(rdfs:comment schema:UnRegisterAction "The act of un-registering from a service.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: antonym of UnRegisterAction.\\n* [[LeaveAction]]: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you were previously registered, rather than leaving a team/group of people.")
AnnotationAssertion(rdfs:label schema:UnRegisterAction "UnRegisterAction")
SubClassOf(schema:UnRegisterAction schema:InteractAction)

# Class: schema:UnitPriceSpecification (UnitPriceSpecification)

AnnotationAssertion(rdfs:comment schema:UnitPriceSpecification "The price asked for a given offer by the respective organization or person.")
AnnotationAssertion(rdfs:label schema:UnitPriceSpecification "UnitPriceSpecification")
AnnotationAssertion(schema:contributor schema:UnitPriceSpecification <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:UnitPriceSpecification schema:PriceSpecification)

# Class: schema:UpdateAction (UpdateAction)

AnnotationAssertion(rdfs:comment schema:UpdateAction "The act of managing by changing/editing the state of the object.")
AnnotationAssertion(rdfs:label schema:UpdateAction "UpdateAction")
SubClassOf(schema:UpdateAction schema:Action)

# Class: schema:UseAction (UseAction)

AnnotationAssertion(rdfs:comment schema:UseAction "The act of applying an object to its intended purpose.")
AnnotationAssertion(rdfs:label schema:UseAction "UseAction")
SubClassOf(schema:UseAction schema:ConsumeAction)

# Class: schema:UserBlocks (UserBlocks)

AnnotationAssertion(rdfs:comment schema:UserBlocks "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserBlocks "UserBlocks")
AnnotationAssertion(schema:supersededBy schema:UserBlocks schema:InteractionCounter)
SubClassOf(schema:UserBlocks schema:UserInteraction)

# Class: schema:UserCheckins (UserCheckins)

AnnotationAssertion(rdfs:comment schema:UserCheckins "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserCheckins "UserCheckins")
AnnotationAssertion(schema:supersededBy schema:UserCheckins schema:InteractionCounter)
SubClassOf(schema:UserCheckins schema:UserInteraction)

# Class: schema:UserComments (UserComments)

AnnotationAssertion(rdfs:comment schema:UserComments "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserComments "UserComments")
AnnotationAssertion(schema:contributor schema:UserComments <https://schema.org/docs/collab/rNews>)
AnnotationAssertion(schema:supersededBy schema:UserComments schema:InteractionCounter)
SubClassOf(schema:UserComments schema:UserInteraction)

# Class: schema:UserDownloads (UserDownloads)

AnnotationAssertion(rdfs:comment schema:UserDownloads "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserDownloads "UserDownloads")
AnnotationAssertion(schema:supersededBy schema:UserDownloads schema:InteractionCounter)
SubClassOf(schema:UserDownloads schema:UserInteraction)

# Class: schema:UserInteraction (UserInteraction)

AnnotationAssertion(rdfs:comment schema:UserInteraction "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserInteraction "UserInteraction")
AnnotationAssertion(schema:supersededBy schema:UserInteraction schema:InteractionCounter)
SubClassOf(schema:UserInteraction schema:Event)

# Class: schema:UserLikes (UserLikes)

AnnotationAssertion(rdfs:comment schema:UserLikes "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserLikes "UserLikes")
AnnotationAssertion(schema:supersededBy schema:UserLikes schema:InteractionCounter)
SubClassOf(schema:UserLikes schema:UserInteraction)

# Class: schema:UserPageVisits (UserPageVisits)

AnnotationAssertion(rdfs:comment schema:UserPageVisits "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserPageVisits "UserPageVisits")
AnnotationAssertion(schema:supersededBy schema:UserPageVisits schema:InteractionCounter)
SubClassOf(schema:UserPageVisits schema:UserInteraction)

# Class: schema:UserPlays (UserPlays)

AnnotationAssertion(rdfs:comment schema:UserPlays "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserPlays "UserPlays")
AnnotationAssertion(schema:supersededBy schema:UserPlays schema:InteractionCounter)
SubClassOf(schema:UserPlays schema:UserInteraction)

# Class: schema:UserPlusOnes (UserPlusOnes)

AnnotationAssertion(rdfs:comment schema:UserPlusOnes "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserPlusOnes "UserPlusOnes")
AnnotationAssertion(schema:supersededBy schema:UserPlusOnes schema:InteractionCounter)
SubClassOf(schema:UserPlusOnes schema:UserInteraction)

# Class: schema:UserReview (UserReview)

AnnotationAssertion(rdfs:comment schema:UserReview "A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with [[CriticReview]].")
AnnotationAssertion(rdfs:label schema:UserReview "UserReview")
AnnotationAssertion(schema:isPartOf schema:UserReview <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UserReview <https://github.com/schemaorg/schemaorg/issues/1589>)
SubClassOf(schema:UserReview schema:Review)

# Class: schema:UserTweets (UserTweets)

AnnotationAssertion(rdfs:comment schema:UserTweets "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].")
AnnotationAssertion(rdfs:label schema:UserTweets "UserTweets")
AnnotationAssertion(schema:supersededBy schema:UserTweets schema:InteractionCounter)
SubClassOf(schema:UserTweets schema:UserInteraction)

# Class: schema:VacationRental (VacationRental)

AnnotationAssertion(rdfs:comment schema:VacationRental "A kind of lodging business that focuses on renting single properties for limited time.")
AnnotationAssertion(rdfs:label schema:VacationRental "VacationRental")
SubClassOf(schema:VacationRental schema:LodgingBusiness)

# Class: schema:Vehicle (Vehicle)

AnnotationAssertion(rdfs:comment schema:Vehicle "A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.")
AnnotationAssertion(rdfs:label schema:Vehicle "Vehicle")
SubClassOf(schema:Vehicle schema:Product)

# Class: schema:Vein (Vein)

AnnotationAssertion(rdfs:comment schema:Vein "A type of blood vessel that specifically carries blood to the heart.")
AnnotationAssertion(rdfs:label schema:Vein "Vein")
AnnotationAssertion(schema:isPartOf schema:Vein <https://health-lifesci.schema.org>)
SubClassOf(schema:Vein schema:Vessel)

# Class: schema:Vessel (Vessel)

AnnotationAssertion(rdfs:comment schema:Vessel "A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.")
AnnotationAssertion(rdfs:label schema:Vessel "Vessel")
AnnotationAssertion(schema:isPartOf schema:Vessel <https://health-lifesci.schema.org>)
SubClassOf(schema:Vessel schema:AnatomicalStructure)

# Class: schema:VeterinaryCare (VeterinaryCare)

AnnotationAssertion(rdfs:comment schema:VeterinaryCare "A vet's office.")
AnnotationAssertion(rdfs:label schema:VeterinaryCare "VeterinaryCare")
AnnotationAssertion(schema:isPartOf schema:VeterinaryCare <https://health-lifesci.schema.org>)
SubClassOf(schema:VeterinaryCare schema:MedicalOrganization)

# Class: schema:VideoGallery (VideoGallery)

AnnotationAssertion(rdfs:comment schema:VideoGallery "Web page type: Video gallery page.")
AnnotationAssertion(rdfs:label schema:VideoGallery "VideoGallery")
SubClassOf(schema:VideoGallery schema:MediaGallery)

# Class: schema:VideoGame (VideoGame)

AnnotationAssertion(rdfs:comment schema:VideoGame "A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.")
AnnotationAssertion(rdfs:label schema:VideoGame "VideoGame")
SubClassOf(schema:VideoGame schema:Game)
SubClassOf(schema:VideoGame schema:SoftwareApplication)

# Class: schema:VideoGameClip (VideoGameClip)

AnnotationAssertion(rdfs:comment schema:VideoGameClip "A short segment/part of a video game.")
AnnotationAssertion(rdfs:label schema:VideoGameClip "VideoGameClip")
SubClassOf(schema:VideoGameClip schema:Clip)

# Class: schema:VideoGameSeries (VideoGameSeries)

AnnotationAssertion(rdfs:comment schema:VideoGameSeries "A video game series.")
AnnotationAssertion(rdfs:label schema:VideoGameSeries "VideoGameSeries")
SubClassOf(schema:VideoGameSeries schema:CreativeWorkSeries)

# Class: schema:VideoObject (VideoObject)

AnnotationAssertion(rdfs:comment schema:VideoObject "A video file.")
AnnotationAssertion(rdfs:label schema:VideoObject "VideoObject")
AnnotationAssertion(schema:contributor schema:VideoObject <https://schema.org/docs/collab/rNews>)
SubClassOf(schema:VideoObject schema:MediaObject)

# Class: schema:VideoObjectSnapshot (VideoObjectSnapshot)

AnnotationAssertion(rdfs:comment schema:VideoObjectSnapshot "A specific and exact (byte-for-byte) version of a [[VideoObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.")
AnnotationAssertion(rdfs:label schema:VideoObjectSnapshot "VideoObjectSnapshot")
AnnotationAssertion(schema:isPartOf schema:VideoObjectSnapshot <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:VideoObjectSnapshot <https://github.com/schemaorg/schemaorg/issues/2450>)
SubClassOf(schema:VideoObjectSnapshot schema:VideoObject)

# Class: schema:ViewAction (ViewAction)

AnnotationAssertion(rdfs:comment schema:ViewAction "The act of consuming static visual content.")
AnnotationAssertion(rdfs:label schema:ViewAction "ViewAction")
SubClassOf(schema:ViewAction schema:ConsumeAction)

# Class: schema:VirtualLocation (VirtualLocation)

AnnotationAssertion(rdfs:comment schema:VirtualLocation "An online or virtual location for attending events. For example, one may attend an online seminar or educational event. While a virtual location may be used as the location of an event, virtual locations should not be confused with physical locations in the real world.")
AnnotationAssertion(rdfs:label schema:VirtualLocation "VirtualLocation")
AnnotationAssertion(schema:isPartOf schema:VirtualLocation <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:VirtualLocation <https://github.com/schemaorg/schemaorg/issues/1842>)
SubClassOf(schema:VirtualLocation schema:Intangible)

# Class: schema:VisualArtsEvent (VisualArtsEvent)

AnnotationAssertion(rdfs:comment schema:VisualArtsEvent "Event type: Visual arts event.")
AnnotationAssertion(rdfs:label schema:VisualArtsEvent "VisualArtsEvent")
SubClassOf(schema:VisualArtsEvent schema:Event)

# Class: schema:VisualArtwork (VisualArtwork)

AnnotationAssertion(rdfs:comment schema:VisualArtwork "A work of art that is primarily visual in character.")
AnnotationAssertion(rdfs:label schema:VisualArtwork "VisualArtwork")
SubClassOf(schema:VisualArtwork schema:CreativeWork)

# Class: schema:VitalSign (VitalSign)

AnnotationAssertion(rdfs:comment schema:VitalSign "Vital signs are measures of various physiological functions in order to assess the most basic body functions.")
AnnotationAssertion(rdfs:label schema:VitalSign "VitalSign")
AnnotationAssertion(schema:isPartOf schema:VitalSign <https://health-lifesci.schema.org>)
SubClassOf(schema:VitalSign schema:MedicalSign)

# Class: schema:Volcano (Volcano)

AnnotationAssertion(rdfs:comment schema:Volcano "A volcano, like Fujisan.")
AnnotationAssertion(rdfs:label schema:Volcano "Volcano")
SubClassOf(schema:Volcano schema:Landform)

# Class: schema:VoteAction (VoteAction)

AnnotationAssertion(rdfs:comment schema:VoteAction "The act of expressing a preference from a fixed/finite/structured set of choices/options.")
AnnotationAssertion(rdfs:label schema:VoteAction "VoteAction")
SubClassOf(schema:VoteAction schema:ChooseAction)

# Class: schema:WPAdBlock (WPAdBlock)

AnnotationAssertion(rdfs:comment schema:WPAdBlock "An advertising section of the page.")
AnnotationAssertion(rdfs:label schema:WPAdBlock "WPAdBlock")
SubClassOf(schema:WPAdBlock schema:WebPageElement)

# Class: schema:WPFooter (WPFooter)

AnnotationAssertion(rdfs:comment schema:WPFooter "The footer section of the page.")
AnnotationAssertion(rdfs:label schema:WPFooter "WPFooter")
SubClassOf(schema:WPFooter schema:WebPageElement)

# Class: schema:WPHeader (WPHeader)

AnnotationAssertion(rdfs:comment schema:WPHeader "The header section of the page.")
AnnotationAssertion(rdfs:label schema:WPHeader "WPHeader")
SubClassOf(schema:WPHeader schema:WebPageElement)

# Class: schema:WPSideBar (WPSideBar)

AnnotationAssertion(rdfs:comment schema:WPSideBar "A sidebar section of the page.")
AnnotationAssertion(rdfs:label schema:WPSideBar "WPSideBar")
SubClassOf(schema:WPSideBar schema:WebPageElement)

# Class: schema:WantAction (WantAction)

AnnotationAssertion(rdfs:comment schema:WantAction "The act of expressing a desire about the object. An agent wants an object.")
AnnotationAssertion(rdfs:label schema:WantAction "WantAction")
SubClassOf(schema:WantAction schema:ReactAction)

# Class: schema:WarrantyPromise (WarrantyPromise)

AnnotationAssertion(rdfs:comment schema:WarrantyPromise "A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.")
AnnotationAssertion(rdfs:label schema:WarrantyPromise "WarrantyPromise")
AnnotationAssertion(schema:contributor schema:WarrantyPromise <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:WarrantyPromise schema:StructuredValue)

# Class: schema:WarrantyScope (WarrantyScope)

AnnotationAssertion(rdfs:comment schema:WarrantyScope "A range of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#Labor-BringIn\\n* http://purl.org/goodrelations/v1#PartsAndLabor-BringIn\\n* http://purl.org/goodrelations/v1#PartsAndLabor-PickUp
      ")
AnnotationAssertion(rdfs:label schema:WarrantyScope "WarrantyScope")
AnnotationAssertion(schema:contributor schema:WarrantyScope <https://schema.org/docs/collab/GoodRelationsClass>)
SubClassOf(schema:WarrantyScope schema:Enumeration)

# Class: schema:WatchAction (WatchAction)

AnnotationAssertion(rdfs:comment schema:WatchAction "The act of consuming dynamic/moving visual content.")
AnnotationAssertion(rdfs:label schema:WatchAction "WatchAction")
SubClassOf(schema:WatchAction schema:ConsumeAction)

# Class: schema:Waterfall (Waterfall)

AnnotationAssertion(rdfs:comment schema:Waterfall "A waterfall, like Niagara.")
AnnotationAssertion(rdfs:label schema:Waterfall "Waterfall")
SubClassOf(schema:Waterfall schema:BodyOfWater)

# Class: schema:WearAction (WearAction)

AnnotationAssertion(rdfs:comment schema:WearAction "The act of dressing oneself in clothing.")
AnnotationAssertion(rdfs:label schema:WearAction "WearAction")
SubClassOf(schema:WearAction schema:UseAction)

# Class: schema:WearableMeasurementTypeEnumeration (WearableMeasurementTypeEnumeration)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementTypeEnumeration "Enumerates common types of measurement for wearables products.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementTypeEnumeration "WearableMeasurementTypeEnumeration")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementTypeEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementTypeEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:WearableMeasurementTypeEnumeration schema:MeasurementTypeEnumeration)

# Class: schema:WearableSizeGroupEnumeration (WearableSizeGroupEnumeration)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupEnumeration "Enumerates common size groups (also known as \"size types\") for wearable products.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupEnumeration "WearableSizeGroupEnumeration")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:WearableSizeGroupEnumeration schema:SizeGroupEnumeration)

# Class: schema:WearableSizeSystemEnumeration (WearableSizeSystemEnumeration)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemEnumeration "Enumerates common size systems specific for wearable products.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemEnumeration "WearableSizeSystemEnumeration")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemEnumeration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemEnumeration <https://github.com/schemaorg/schemaorg/issues/2811>)
SubClassOf(schema:WearableSizeSystemEnumeration schema:SizeSystemEnumeration)

# Class: schema:WebAPI (WebAPI)

AnnotationAssertion(rdfs:comment schema:WebAPI "An application programming interface accessible over Web/Internet technologies.")
AnnotationAssertion(rdfs:label schema:WebAPI "WebAPI")
AnnotationAssertion(schema:isPartOf schema:WebAPI <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WebAPI <https://github.com/schemaorg/schemaorg/issues/1423>)
SubClassOf(schema:WebAPI schema:Service)

# Class: schema:WebApplication (WebApplication)

AnnotationAssertion(rdfs:comment schema:WebApplication "Web applications.")
AnnotationAssertion(rdfs:label schema:WebApplication "WebApplication")
SubClassOf(schema:WebApplication schema:SoftwareApplication)

# Class: schema:WebContent (WebContent)

AnnotationAssertion(rdfs:comment schema:WebContent "WebContent is a type representing all [[WebPage]], [[WebSite]] and [[WebPageElement]] content. It is sometimes the case that detailed distinctions between Web pages, sites and their parts are not always important or obvious. The  [[WebContent]] type makes it easier to describe Web-addressable content without requiring such distinctions to always be stated. (The intent is that the existing types [[WebPage]], [[WebSite]] and [[WebPageElement]] will eventually be declared as subtypes of [[WebContent]].)")
AnnotationAssertion(rdfs:label schema:WebContent "WebContent")
AnnotationAssertion(schema:isPartOf schema:WebContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WebContent <https://github.com/schemaorg/schemaorg/issues/2358>)
SubClassOf(schema:WebContent schema:CreativeWork)

# Class: schema:WebPage (WebPage)

AnnotationAssertion(rdfs:comment schema:WebPage "A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.")
AnnotationAssertion(rdfs:label schema:WebPage "WebPage")
SubClassOf(schema:WebPage schema:CreativeWork)

# Class: schema:WebPageElement (WebPageElement)

AnnotationAssertion(rdfs:comment schema:WebPageElement "A web page element, like a table or an image.")
AnnotationAssertion(rdfs:label schema:WebPageElement "WebPageElement")
SubClassOf(schema:WebPageElement schema:CreativeWork)

# Class: schema:WebSite (WebSite)

AnnotationAssertion(rdfs:comment schema:WebSite "A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.")
AnnotationAssertion(rdfs:label schema:WebSite "WebSite")
SubClassOf(schema:WebSite schema:CreativeWork)

# Class: schema:WholesaleStore (WholesaleStore)

AnnotationAssertion(rdfs:comment schema:WholesaleStore "A wholesale store.")
AnnotationAssertion(rdfs:label schema:WholesaleStore "WholesaleStore")
SubClassOf(schema:WholesaleStore schema:Store)

# Class: schema:WinAction (WinAction)

AnnotationAssertion(rdfs:comment schema:WinAction "The act of achieving victory in a competitive activity.")
AnnotationAssertion(rdfs:label schema:WinAction "WinAction")
SubClassOf(schema:WinAction schema:AchieveAction)

# Class: schema:Winery (Winery)

AnnotationAssertion(rdfs:comment schema:Winery "A winery.")
AnnotationAssertion(rdfs:label schema:Winery "Winery")
SubClassOf(schema:Winery schema:FoodEstablishment)

# Class: schema:WorkBasedProgram (WorkBasedProgram)

AnnotationAssertion(rdfs:comment schema:WorkBasedProgram "A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.")
AnnotationAssertion(rdfs:label schema:WorkBasedProgram "WorkBasedProgram")
AnnotationAssertion(schema:isPartOf schema:WorkBasedProgram <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WorkBasedProgram <https://github.com/schemaorg/schemaorg/issues/2289>)
SubClassOf(schema:WorkBasedProgram schema:EducationalOccupationalProgram)

# Class: schema:WorkersUnion (WorkersUnion)

AnnotationAssertion(rdfs:comment schema:WorkersUnion "A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.")
AnnotationAssertion(rdfs:label schema:WorkersUnion "WorkersUnion")
AnnotationAssertion(schema:source schema:WorkersUnion <https://github.com/schemaorg/schemaorg/issues/243>)
SubClassOf(schema:WorkersUnion schema:Organization)

# Class: schema:WriteAction (WriteAction)

AnnotationAssertion(rdfs:comment schema:WriteAction "The act of authoring written creative content.")
AnnotationAssertion(rdfs:label schema:WriteAction "WriteAction")
SubClassOf(schema:WriteAction schema:CreateAction)

# Class: schema:XPathType (XPathType)

AnnotationAssertion(rdfs:comment schema:XPathType "Text representing an XPath (typically but not necessarily version 1.0).")
AnnotationAssertion(rdfs:label schema:XPathType "XPathType")
AnnotationAssertion(schema:isPartOf schema:XPathType <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:XPathType <https://github.com/schemaorg/schemaorg/issues/1672>)
SubClassOf(schema:XPathType schema:Text)

# Class: schema:Zoo (Zoo)

AnnotationAssertion(rdfs:comment schema:Zoo "A zoo.")
AnnotationAssertion(rdfs:label schema:Zoo "Zoo")
SubClassOf(schema:Zoo schema:CivicStructure)

# Class: <https://schema.org/3DModel> (3DModel)

AnnotationAssertion(rdfs:comment <https://schema.org/3DModel> "A 3D model represents some kind of 3D content, which may have [[encoding]]s in one or more [[MediaObject]]s. Many 3D formats are available (e.g. see [Wikipedia](https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats)); specific encoding formats can be represented using the [[encodingFormat]] property applied to the relevant [[MediaObject]]. For the
case of a single file published after Zip compression, the convention of appending '+zip' to the [[encodingFormat]] can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using [[3DModel]].")
AnnotationAssertion(rdfs:label <https://schema.org/3DModel> "3DModel")
AnnotationAssertion(schema:isPartOf <https://schema.org/3DModel> <https://pending.schema.org>)
AnnotationAssertion(schema:source <https://schema.org/3DModel> <https://github.com/schemaorg/schemaorg/issues/2140>)
SubClassOf(<https://schema.org/3DModel> schema:MediaObject)


############################
#   Named Individuals
############################

# Individual: schema:Abdomen (Abdomen)

AnnotationAssertion(rdfs:comment schema:Abdomen "Abdomen clinical examination.")
AnnotationAssertion(rdfs:label schema:Abdomen "Abdomen")
AnnotationAssertion(schema:isPartOf schema:Abdomen <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Abdomen)

# Individual: schema:ActivationFee (ActivationFee)

AnnotationAssertion(rdfs:comment schema:ActivationFee "Represents the activation fee part of the total price for an offered product, for example a cellphone contract.")
AnnotationAssertion(rdfs:label schema:ActivationFee "ActivationFee")
AnnotationAssertion(schema:isPartOf schema:ActivationFee <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ActivationFee <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:ActivationFee)

# Individual: schema:ActiveActionStatus (ActiveActionStatus)

AnnotationAssertion(rdfs:comment schema:ActiveActionStatus "An in-progress action (e.g., while watching the movie, or driving to a location).")
AnnotationAssertion(rdfs:label schema:ActiveActionStatus "ActiveActionStatus")
ClassAssertion(schema:ActionStatusType schema:ActiveActionStatus)

# Individual: schema:ActiveNotRecruiting (ActiveNotRecruiting)

AnnotationAssertion(rdfs:comment schema:ActiveNotRecruiting "Active, but not recruiting new participants.")
AnnotationAssertion(rdfs:label schema:ActiveNotRecruiting "ActiveNotRecruiting")
AnnotationAssertion(schema:isPartOf schema:ActiveNotRecruiting <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:ActiveNotRecruiting)

# Individual: schema:AerobicActivity (AerobicActivity)

AnnotationAssertion(rdfs:comment schema:AerobicActivity "Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.")
AnnotationAssertion(rdfs:label schema:AerobicActivity "AerobicActivity")
AnnotationAssertion(schema:isPartOf schema:AerobicActivity <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:AerobicActivity)

# Individual: schema:AlbumRelease (AlbumRelease)

AnnotationAssertion(rdfs:comment schema:AlbumRelease "AlbumRelease.")
AnnotationAssertion(rdfs:label schema:AlbumRelease "AlbumRelease")
AnnotationAssertion(schema:contributor schema:AlbumRelease <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumReleaseType schema:AlbumRelease)

# Individual: schema:AlcoholConsideration (AlcoholConsideration)

AnnotationAssertion(rdfs:comment schema:AlcoholConsideration "Item contains alcohol or promotes alcohol consumption.")
AnnotationAssertion(rdfs:label schema:AlcoholConsideration "AlcoholConsideration")
AnnotationAssertion(schema:isPartOf schema:AlcoholConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AlcoholConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:AlcoholConsideration)

# Individual: schema:AlgorithmicMediaDigitalSource (AlgorithmicMediaDigitalSource)

AnnotationAssertion(rdfs:comment schema:AlgorithmicMediaDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia\">algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:AlgorithmicMediaDigitalSource "AlgorithmicMediaDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:AlgorithmicMediaDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia>)
AnnotationAssertion(schema:isPartOf schema:AlgorithmicMediaDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AlgorithmicMediaDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:AlgorithmicMediaDigitalSource)

# Individual: schema:AlgorithmicallyEnhancedDigitalSource (AlgorithmicallyEnhancedDigitalSource)

AnnotationAssertion(rdfs:comment schema:AlgorithmicallyEnhancedDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicallyEnhanced\">algorithmically enhanced</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:AlgorithmicallyEnhancedDigitalSource "AlgorithmicallyEnhancedDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:AlgorithmicallyEnhancedDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/algorithmicallyEnhanced>)
AnnotationAssertion(schema:isPartOf schema:AlgorithmicallyEnhancedDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AlgorithmicallyEnhancedDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:AlgorithmicallyEnhancedDigitalSource)

# Individual: schema:AllWheelDriveConfiguration (AllWheelDriveConfiguration)

AnnotationAssertion(rdfs:comment schema:AllWheelDriveConfiguration "All-wheel Drive is a transmission layout where the engine drives all four wheels.")
AnnotationAssertion(rdfs:label schema:AllWheelDriveConfiguration "AllWheelDriveConfiguration")
AnnotationAssertion(schema:contributor schema:AllWheelDriveConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:DriveWheelConfigurationValue schema:AllWheelDriveConfiguration)

# Individual: schema:AllergiesHealthAspect (AllergiesHealthAspect)

AnnotationAssertion(rdfs:comment schema:AllergiesHealthAspect "Content about the allergy-related aspects of a health topic.")
AnnotationAssertion(rdfs:label schema:AllergiesHealthAspect "AllergiesHealthAspect")
AnnotationAssertion(schema:isPartOf schema:AllergiesHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AllergiesHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:AllergiesHealthAspect)

# Individual: schema:AnaerobicActivity (AnaerobicActivity)

AnnotationAssertion(rdfs:comment schema:AnaerobicActivity "Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.")
AnnotationAssertion(rdfs:label schema:AnaerobicActivity "AnaerobicActivity")
AnnotationAssertion(schema:isPartOf schema:AnaerobicActivity <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:AnaerobicActivity)

# Individual: schema:AndroidPlatform (AndroidPlatform)

AnnotationAssertion(rdfs:comment schema:AndroidPlatform "Represents the broad notion of Android-based operating systems.")
AnnotationAssertion(rdfs:label schema:AndroidPlatform "AndroidPlatform")
AnnotationAssertion(schema:isPartOf schema:AndroidPlatform <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AndroidPlatform <https://github.com/schemaorg/schemaorg/issues/3057>)
ClassAssertion(schema:DigitalPlatformEnumeration schema:AndroidPlatform)

# Individual: schema:Anesthesia (Anesthesia)

AnnotationAssertion(rdfs:comment schema:Anesthesia "A specific branch of medical science that pertains to study of anesthetics and their application.")
AnnotationAssertion(rdfs:label schema:Anesthesia "Anesthesia")
AnnotationAssertion(schema:isPartOf schema:Anesthesia <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Anesthesia)

# Individual: schema:Appearance (Appearance)

AnnotationAssertion(rdfs:comment schema:Appearance "Appearance assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Appearance "Appearance")
AnnotationAssertion(schema:isPartOf schema:Appearance <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Appearance)

# Individual: schema:AudiobookFormat (AudiobookFormat)

AnnotationAssertion(rdfs:comment schema:AudiobookFormat "Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.")
AnnotationAssertion(rdfs:label schema:AudiobookFormat "AudiobookFormat")
ClassAssertion(schema:BookFormatType schema:AudiobookFormat)

# Individual: schema:AuthoritativeLegalValue (AuthoritativeLegalValue)

AnnotationAssertion(rdfs:comment schema:AuthoritativeLegalValue "Indicates that the publisher gives some special status to the publication of the document. (\"The Queens Printer\" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications.) Something \"Authoritative\" is considered to be also [[OfficialLegalValue]].")
AnnotationAssertion(rdfs:label schema:AuthoritativeLegalValue "AuthoritativeLegalValue")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:AuthoritativeLegalValue <http://data.europa.eu/eli/ontology#LegalValue-authoritative>)
AnnotationAssertion(schema:contributor schema:AuthoritativeLegalValue <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:AuthoritativeLegalValue <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:AuthoritativeLegalValue <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalValueLevel schema:AuthoritativeLegalValue)

# Individual: schema:Ayurvedic (Ayurvedic)

AnnotationAssertion(rdfs:comment schema:Ayurvedic "A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.")
AnnotationAssertion(rdfs:label schema:Ayurvedic "Ayurvedic")
AnnotationAssertion(schema:isPartOf schema:Ayurvedic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:Ayurvedic)

# Individual: schema:BackOrder (BackOrder)

AnnotationAssertion(rdfs:comment schema:BackOrder "Indicates that the item is available on back order.")
AnnotationAssertion(rdfs:label schema:BackOrder "BackOrder")
ClassAssertion(schema:ItemAvailability schema:BackOrder)

# Individual: schema:Bacteria (Bacteria)

AnnotationAssertion(rdfs:comment schema:Bacteria "Pathogenic bacteria that cause bacterial infection.")
AnnotationAssertion(rdfs:label schema:Bacteria "Bacteria")
AnnotationAssertion(schema:isPartOf schema:Bacteria <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:Bacteria)

# Individual: schema:Balance (Balance)

AnnotationAssertion(rdfs:comment schema:Balance "Physical activity that is engaged to help maintain posture and balance.")
AnnotationAssertion(rdfs:label schema:Balance "Balance")
AnnotationAssertion(schema:isPartOf schema:Balance <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:Balance)

# Individual: schema:BasicIncome (BasicIncome)

AnnotationAssertion(rdfs:comment schema:BasicIncome "BasicIncome: this is a benefit for basic income.")
AnnotationAssertion(rdfs:label schema:BasicIncome "BasicIncome")
AnnotationAssertion(schema:isPartOf schema:BasicIncome <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BasicIncome <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:BasicIncome)

# Individual: schema:BenefitsHealthAspect (BenefitsHealthAspect)

AnnotationAssertion(rdfs:comment schema:BenefitsHealthAspect "Content about the benefits and advantages of usage or utilization of topic.")
AnnotationAssertion(rdfs:label schema:BenefitsHealthAspect "BenefitsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:BenefitsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BenefitsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:BenefitsHealthAspect)

# Individual: schema:BodyMeasurementArm (BodyMeasurementArm)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementArm "Arm length (measured between arms/shoulder line intersection and the prominent wrist bone). Used, for example, to fit shirts.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementArm "BodyMeasurementArm")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementArm <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementArm <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementArm)

# Individual: schema:BodyMeasurementBust (BodyMeasurementBust)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementBust "Maximum girth of bust. Used, for example, to fit women's suits.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementBust "BodyMeasurementBust")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementBust <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementBust <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementBust)

# Individual: schema:BodyMeasurementChest (BodyMeasurementChest)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementChest "Maximum girth of chest. Used, for example, to fit men's suits.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementChest "BodyMeasurementChest")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementChest <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementChest <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementChest)

# Individual: schema:BodyMeasurementFoot (BodyMeasurementFoot)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementFoot "Foot length (measured between end of the most prominent toe and the most prominent part of the heel). Used, for example, to measure socks.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementFoot "BodyMeasurementFoot")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementFoot <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementFoot <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementFoot)

# Individual: schema:BodyMeasurementHand (BodyMeasurementHand)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementHand "Maximum hand girth (measured over the knuckles of the open right hand excluding thumb, fingers together). Used, for example, to fit gloves.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementHand "BodyMeasurementHand")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementHand <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementHand <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementHand)

# Individual: schema:BodyMeasurementHead (BodyMeasurementHead)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementHead "Maximum girth of head above the ears. Used, for example, to fit hats.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementHead "BodyMeasurementHead")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementHead <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementHead <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementHead)

# Individual: schema:BodyMeasurementHeight (BodyMeasurementHeight)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementHeight "Body height (measured between crown of head and soles of feet). Used, for example, to fit jackets.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementHeight "BodyMeasurementHeight")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementHeight <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementHeight <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementHeight)

# Individual: schema:BodyMeasurementHips (BodyMeasurementHips)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementHips "Girth of hips (measured around the buttocks). Used, for example, to fit skirts.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementHips "BodyMeasurementHips")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementHips <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementHips <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementHips)

# Individual: schema:BodyMeasurementInsideLeg (BodyMeasurementInsideLeg)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementInsideLeg "Inside leg (measured between crotch and soles of feet). Used, for example, to fit pants.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementInsideLeg "BodyMeasurementInsideLeg")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementInsideLeg <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementInsideLeg <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementInsideLeg)

# Individual: schema:BodyMeasurementNeck (BodyMeasurementNeck)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementNeck "Girth of neck. Used, for example, to fit shirts.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementNeck "BodyMeasurementNeck")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementNeck <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementNeck <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementNeck)

# Individual: schema:BodyMeasurementUnderbust (BodyMeasurementUnderbust)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementUnderbust "Girth of body just below the bust. Used, for example, to fit women's swimwear.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementUnderbust "BodyMeasurementUnderbust")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementUnderbust <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementUnderbust <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementUnderbust)

# Individual: schema:BodyMeasurementWaist (BodyMeasurementWaist)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementWaist "Girth of natural waistline (between hip bones and lower ribs). Used, for example, to fit pants.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementWaist "BodyMeasurementWaist")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementWaist <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementWaist <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementWaist)

# Individual: schema:BodyMeasurementWeight (BodyMeasurementWeight)

AnnotationAssertion(rdfs:comment schema:BodyMeasurementWeight "Body weight. Used, for example, to measure pantyhose.")
AnnotationAssertion(rdfs:label schema:BodyMeasurementWeight "BodyMeasurementWeight")
AnnotationAssertion(schema:isPartOf schema:BodyMeasurementWeight <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BodyMeasurementWeight <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:BodyMeasurementTypeEnumeration schema:BodyMeasurementWeight)

# Individual: schema:Boolean (Boolean)

ClassAssertion(schema:DataType schema:Boolean)

# Individual: schema:BroadcastRelease (BroadcastRelease)

AnnotationAssertion(rdfs:comment schema:BroadcastRelease "BroadcastRelease.")
AnnotationAssertion(rdfs:label schema:BroadcastRelease "BroadcastRelease")
AnnotationAssertion(schema:contributor schema:BroadcastRelease <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumReleaseType schema:BroadcastRelease)

# Individual: schema:BusinessSupport (BusinessSupport)

AnnotationAssertion(rdfs:comment schema:BusinessSupport "BusinessSupport: this is a benefit for supporting businesses.")
AnnotationAssertion(rdfs:label schema:BusinessSupport "BusinessSupport")
AnnotationAssertion(schema:isPartOf schema:BusinessSupport <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:BusinessSupport <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:BusinessSupport)

# Individual: schema:ByBankTransferInAdvance (ByBankTransferInAdvance)

AnnotationAssertion(rdfs:comment schema:ByBankTransferInAdvance "Payment in advance by bank transfer, equivalent to <code>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</code>.")
AnnotationAssertion(rdfs:label schema:ByBankTransferInAdvance "ByBankTransferInAdvance")
ClassAssertion(schema:PaymentMethodType schema:ByBankTransferInAdvance)

# Individual: schema:ByInvoice (ByInvoice)

AnnotationAssertion(rdfs:comment schema:ByInvoice "Payment by invoice, typically after the goods were delivered, equivalent to <code>http://purl.org/goodrelations/v1#ByInvoice</code>.")
AnnotationAssertion(rdfs:label schema:ByInvoice "ByInvoice")
ClassAssertion(schema:PaymentMethodType schema:ByInvoice)

# Individual: schema:CDFormat (CDFormat)

AnnotationAssertion(rdfs:comment schema:CDFormat "CDFormat.")
AnnotationAssertion(rdfs:label schema:CDFormat "CDFormat")
AnnotationAssertion(schema:contributor schema:CDFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:CDFormat)

# Individual: schema:COD (COD)

AnnotationAssertion(rdfs:comment schema:COD "Cash on Delivery (COD) payment, equivalent to <code>http://purl.org/goodrelations/v1#COD</code>.")
AnnotationAssertion(rdfs:label schema:COD "COD")
ClassAssertion(schema:PaymentMethodType schema:COD)

# Individual: schema:CT (CT)

AnnotationAssertion(rdfs:comment schema:CT "X-ray computed tomography imaging.")
AnnotationAssertion(rdfs:label schema:CT "CT")
AnnotationAssertion(schema:isPartOf schema:CT <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:CT)

# Individual: schema:Cardiovascular (Cardiovascular)

AnnotationAssertion(rdfs:comment schema:Cardiovascular "A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.")
AnnotationAssertion(rdfs:label schema:Cardiovascular "Cardiovascular")
AnnotationAssertion(schema:isPartOf schema:Cardiovascular <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Cardiovascular)

# Individual: schema:CardiovascularExam (CardiovascularExam)

AnnotationAssertion(rdfs:comment schema:CardiovascularExam "Cardiovascular system assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:CardiovascularExam "CardiovascularExam")
AnnotationAssertion(schema:isPartOf schema:CardiovascularExam <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:CardiovascularExam)

# Individual: schema:CaseSeries (CaseSeries)

AnnotationAssertion(rdfs:comment schema:CaseSeries "A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.")
AnnotationAssertion(rdfs:label schema:CaseSeries "CaseSeries")
AnnotationAssertion(schema:isPartOf schema:CaseSeries <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:CaseSeries)

# Individual: schema:Cash (Cash)

AnnotationAssertion(rdfs:comment schema:Cash "Payment using cash, on premises, equivalent to <code>http://purl.org/goodrelations/v1#Cash</code>.")
AnnotationAssertion(rdfs:label schema:Cash "Cash")
ClassAssertion(schema:PaymentMethodType schema:Cash)

# Individual: schema:CassetteFormat (CassetteFormat)

AnnotationAssertion(rdfs:comment schema:CassetteFormat "CassetteFormat.")
AnnotationAssertion(rdfs:label schema:CassetteFormat "CassetteFormat")
AnnotationAssertion(schema:contributor schema:CassetteFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:CassetteFormat)

# Individual: schema:CausesHealthAspect (CausesHealthAspect)

AnnotationAssertion(rdfs:comment schema:CausesHealthAspect "Information about the causes and main actions that gave rise to the topic.")
AnnotationAssertion(rdfs:label schema:CausesHealthAspect "CausesHealthAspect")
AnnotationAssertion(schema:isPartOf schema:CausesHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CausesHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:CausesHealthAspect)

# Individual: schema:CertificationActive (CertificationActive)

AnnotationAssertion(rdfs:comment schema:CertificationActive "Specifies that a certification is active.")
AnnotationAssertion(rdfs:label schema:CertificationActive "CertificationActive")
AnnotationAssertion(schema:isPartOf schema:CertificationActive <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CertificationActive <https://github.com/schemaorg/schemaorg/issues/3230>)
ClassAssertion(schema:CertificationStatusEnumeration schema:CertificationActive)

# Individual: schema:CertificationInactive (CertificationInactive)

AnnotationAssertion(rdfs:comment schema:CertificationInactive "Specifies that a certification is inactive (no longer in effect).")
AnnotationAssertion(rdfs:label schema:CertificationInactive "CertificationInactive")
AnnotationAssertion(schema:isPartOf schema:CertificationInactive <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CertificationInactive <https://github.com/schemaorg/schemaorg/issues/3230>)
ClassAssertion(schema:CertificationStatusEnumeration schema:CertificationInactive)

# Individual: schema:CharitableIncorporatedOrganization (CharitableIncorporatedOrganization)

AnnotationAssertion(rdfs:comment schema:CharitableIncorporatedOrganization "CharitableIncorporatedOrganization: Non-profit type referring to a Charitable Incorporated Organization (UK).")
AnnotationAssertion(rdfs:label schema:CharitableIncorporatedOrganization "CharitableIncorporatedOrganization")
AnnotationAssertion(schema:isPartOf schema:CharitableIncorporatedOrganization <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CharitableIncorporatedOrganization <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:UKNonprofitType schema:CharitableIncorporatedOrganization)

# Individual: schema:CheckInAdvance (CheckInAdvance)

AnnotationAssertion(rdfs:comment schema:CheckInAdvance "Payment in advance by sending a check, equivalent to <code>http://purl.org/goodrelations/v1#CheckInAdvance</code>.")
AnnotationAssertion(rdfs:label schema:CheckInAdvance "CheckInAdvance")
ClassAssertion(schema:PaymentMethodType schema:CheckInAdvance)

# Individual: schema:Chiropractic (Chiropractic)

AnnotationAssertion(rdfs:comment schema:Chiropractic "A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.")
AnnotationAssertion(rdfs:label schema:Chiropractic "Chiropractic")
AnnotationAssertion(schema:isPartOf schema:Chiropractic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:Chiropractic)

# Individual: schema:CleaningFee (CleaningFee)

AnnotationAssertion(rdfs:comment schema:CleaningFee "Represents the cleaning fee part of the total price for an offered product, for example a vacation rental.")
AnnotationAssertion(rdfs:label schema:CleaningFee "CleaningFee")
AnnotationAssertion(schema:isPartOf schema:CleaningFee <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CleaningFee <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:CleaningFee)

# Individual: schema:Clinician (Clinician)

AnnotationAssertion(rdfs:comment schema:Clinician "Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.")
AnnotationAssertion(rdfs:label schema:Clinician "Clinician")
AnnotationAssertion(schema:isPartOf schema:Clinician <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalAudienceType schema:Clinician)

# Individual: schema:CoOp (CoOp)

AnnotationAssertion(rdfs:comment schema:CoOp "Play mode: CoOp. Co-operative games, where you play on the same team with friends.")
AnnotationAssertion(rdfs:label schema:CoOp "CoOp")
ClassAssertion(schema:GamePlayMode schema:CoOp)

# Individual: schema:CohortStudy (CohortStudy)

AnnotationAssertion(rdfs:comment schema:CohortStudy "Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.")
AnnotationAssertion(rdfs:label schema:CohortStudy "CohortStudy")
AnnotationAssertion(schema:isPartOf schema:CohortStudy <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:CohortStudy)

# Individual: schema:CommentPermission (CommentPermission)

AnnotationAssertion(rdfs:comment schema:CommentPermission "Permission to add comments to the document.")
AnnotationAssertion(rdfs:label schema:CommentPermission "CommentPermission")
ClassAssertion(schema:DigitalDocumentPermissionType schema:CommentPermission)

# Individual: schema:CommunityHealth (CommunityHealth)

ClassAssertion(schema:MedicalSpecialty schema:CommunityHealth)

# Individual: schema:CompilationAlbum (CompilationAlbum)

AnnotationAssertion(rdfs:comment schema:CompilationAlbum "CompilationAlbum.")
AnnotationAssertion(rdfs:label schema:CompilationAlbum "CompilationAlbum")
AnnotationAssertion(schema:contributor schema:CompilationAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:CompilationAlbum)

# Individual: schema:Completed (Completed)

AnnotationAssertion(rdfs:comment schema:Completed "Completed.")
AnnotationAssertion(rdfs:label schema:Completed "Completed")
AnnotationAssertion(schema:isPartOf schema:Completed <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:Completed)

# Individual: schema:CompletedActionStatus (CompletedActionStatus)

AnnotationAssertion(rdfs:comment schema:CompletedActionStatus "An action that has already taken place.")
AnnotationAssertion(rdfs:label schema:CompletedActionStatus "CompletedActionStatus")
ClassAssertion(schema:ActionStatusType schema:CompletedActionStatus)

# Individual: schema:CompositeCaptureDigitalSource (CompositeCaptureDigitalSource)

AnnotationAssertion(rdfs:comment schema:CompositeCaptureDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/compositeCapture\">composite capture</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:CompositeCaptureDigitalSource "CompositeCaptureDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:CompositeCaptureDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/compositeCapture>)
AnnotationAssertion(schema:isPartOf schema:CompositeCaptureDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CompositeCaptureDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:CompositeCaptureDigitalSource)

# Individual: schema:CompositeDigitalSource (CompositeDigitalSource)

AnnotationAssertion(rdfs:comment schema:CompositeDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia\">algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:CompositeDigitalSource "CompositeDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:CompositeDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/composite>)
AnnotationAssertion(schema:isPartOf schema:CompositeDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CompositeDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:CompositeDigitalSource)

# Individual: schema:CompositeSyntheticDigitalSource (CompositeSyntheticDigitalSource)

AnnotationAssertion(rdfs:comment schema:CompositeSyntheticDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/compositeSynthetic\">composite synthetic</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:CompositeSyntheticDigitalSource "CompositeSyntheticDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:CompositeSyntheticDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/compositeSynthetic>)
AnnotationAssertion(schema:isPartOf schema:CompositeSyntheticDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CompositeSyntheticDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:CompositeSyntheticDigitalSource)

# Individual: schema:CompositeWithTrainedAlgorithmicMediaDigitalSource (CompositeWithTrainedAlgorithmicMediaDigitalSource)

AnnotationAssertion(rdfs:comment schema:CompositeWithTrainedAlgorithmicMediaDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/compositeWithTrainedAlgorithmicMedia\">composite with trained algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:CompositeWithTrainedAlgorithmicMediaDigitalSource "CompositeWithTrainedAlgorithmicMediaDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:CompositeWithTrainedAlgorithmicMediaDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/compositeWithTrainedAlgorithmicMedia>)
AnnotationAssertion(schema:isPartOf schema:CompositeWithTrainedAlgorithmicMediaDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:CompositeWithTrainedAlgorithmicMediaDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:CompositeWithTrainedAlgorithmicMediaDigitalSource)

# Individual: schema:ContagiousnessHealthAspect (ContagiousnessHealthAspect)

AnnotationAssertion(rdfs:comment schema:ContagiousnessHealthAspect "Content about contagion mechanisms and contagiousness information over the topic.")
AnnotationAssertion(rdfs:label schema:ContagiousnessHealthAspect "ContagiousnessHealthAspect")
AnnotationAssertion(schema:isPartOf schema:ContagiousnessHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ContagiousnessHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:ContagiousnessHealthAspect)

# Individual: schema:CrossSectional (CrossSectional)

AnnotationAssertion(rdfs:comment schema:CrossSectional "Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.")
AnnotationAssertion(rdfs:label schema:CrossSectional "CrossSectional")
AnnotationAssertion(schema:isPartOf schema:CrossSectional <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:CrossSectional)

# Individual: schema:DJMixAlbum (DJMixAlbum)

AnnotationAssertion(rdfs:comment schema:DJMixAlbum "DJMixAlbum.")
AnnotationAssertion(rdfs:label schema:DJMixAlbum "DJMixAlbum")
AnnotationAssertion(schema:contributor schema:DJMixAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:DJMixAlbum)

# Individual: schema:DVDFormat (DVDFormat)

AnnotationAssertion(rdfs:comment schema:DVDFormat "DVDFormat.")
AnnotationAssertion(rdfs:label schema:DVDFormat "DVDFormat")
AnnotationAssertion(schema:contributor schema:DVDFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:DVDFormat)

# Individual: schema:DamagedCondition (DamagedCondition)

AnnotationAssertion(rdfs:comment schema:DamagedCondition "Indicates that the item is damaged.")
AnnotationAssertion(rdfs:label schema:DamagedCondition "DamagedCondition")
ClassAssertion(schema:OfferItemCondition schema:DamagedCondition)

# Individual: schema:DangerousGoodConsideration (DangerousGoodConsideration)

AnnotationAssertion(rdfs:comment schema:DangerousGoodConsideration "The item is dangerous and requires careful handling and/or special training of the user. See also the [UN Model Classification](https://unece.org/DAM/trans/danger/publi/unrec/rev17/English/02EREv17_Part2.pdf) defining the 9 classes of dangerous goods such as explosives, gases, flammables, and more.")
AnnotationAssertion(rdfs:label schema:DangerousGoodConsideration "DangerousGoodConsideration")
AnnotationAssertion(schema:isPartOf schema:DangerousGoodConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DangerousGoodConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:DangerousGoodConsideration)

# Individual: schema:DataDrivenMediaDigitalSource (DataDrivenMediaDigitalSource)

AnnotationAssertion(rdfs:comment schema:DataDrivenMediaDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/dataDrivenMedia\">data driven media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:DataDrivenMediaDigitalSource "DataDrivenMediaDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:DataDrivenMediaDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/dataDrivenMedia>)
AnnotationAssertion(schema:isPartOf schema:DataDrivenMediaDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DataDrivenMediaDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:DataDrivenMediaDigitalSource)

# Individual: schema:Date (Date)

ClassAssertion(schema:DataType schema:Date)

# Individual: schema:DateTime (DateTime)

ClassAssertion(schema:DataType schema:DateTime)

# Individual: schema:DecontextualizedContent (DecontextualizedContent)

AnnotationAssertion(rdfs:comment schema:DecontextualizedContent "Content coded 'missing context' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'missing context': Presenting unaltered video in an inaccurate manner that misrepresents the footage. For example, using incorrect dates or locations, altering the transcript or sharing brief clips from a longer video to mislead viewers. (A video rated 'original' can also be missing context.)

For an [[ImageObject]] to be 'missing context': Presenting unaltered images in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An image rated 'original' can also be missing context.)

For an [[ImageObject]] with embedded text to be 'missing context': An unaltered image presented in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An 'original' image with inaccurate text would generally fall in this category.)

For an [[AudioObject]] to be 'missing context': Unaltered audio presented in an inaccurate manner that misrepresents it. For example, using incorrect dates or locations, or sharing brief clips from a longer recording to mislead viewers. (Audio rated “original” can also be missing context.)
")
AnnotationAssertion(rdfs:label schema:DecontextualizedContent "DecontextualizedContent")
AnnotationAssertion(schema:isPartOf schema:DecontextualizedContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DecontextualizedContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:DecontextualizedContent)

# Individual: schema:DefinitiveLegalValue (DefinitiveLegalValue)

AnnotationAssertion(rdfs:comment schema:DefinitiveLegalValue "Indicates a document for which the text is conclusively what the law says and is legally binding. (E.g. the digitally signed version of an Official Journal.)
  Something \"Definitive\" is considered to be also [[AuthoritativeLegalValue]].")
AnnotationAssertion(rdfs:label schema:DefinitiveLegalValue "DefinitiveLegalValue")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:DefinitiveLegalValue <http://data.europa.eu/eli/ontology#LegalValue-definitive>)
AnnotationAssertion(schema:contributor schema:DefinitiveLegalValue <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:DefinitiveLegalValue <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DefinitiveLegalValue <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalValueLevel schema:DefinitiveLegalValue)

# Individual: schema:DemoAlbum (DemoAlbum)

AnnotationAssertion(rdfs:comment schema:DemoAlbum "DemoAlbum.")
AnnotationAssertion(rdfs:label schema:DemoAlbum "DemoAlbum")
AnnotationAssertion(schema:contributor schema:DemoAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:DemoAlbum)

# Individual: schema:DemoGameAvailability (DemoGameAvailability)

AnnotationAssertion(rdfs:comment schema:DemoGameAvailability "Indicates demo game availability, i.e. a somehow limited demonstration of the full game.")
AnnotationAssertion(rdfs:label schema:DemoGameAvailability "DemoGameAvailability")
AnnotationAssertion(schema:isPartOf schema:DemoGameAvailability <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DemoGameAvailability <https://github.com/schemaorg/schemaorg/issues/3058>)
ClassAssertion(schema:GameAvailabilityEnumeration schema:DemoGameAvailability)

# Individual: schema:Dentistry (Dentistry)

AnnotationAssertion(rdfs:comment schema:Dentistry "A branch of medicine that is involved in the dental care.")
AnnotationAssertion(rdfs:label schema:Dentistry "Dentistry")
AnnotationAssertion(schema:isPartOf schema:Dentistry <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Dentistry)

# Individual: schema:Dermatologic (Dermatologic)

AnnotationAssertion(rdfs:comment schema:Dermatologic "Something relating to or practicing dermatology.")
AnnotationAssertion(rdfs:label schema:Dermatologic "Dermatologic")
AnnotationAssertion(schema:isPartOf schema:Dermatologic <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:supersededBy schema:Dermatologic schema:Dermatology)
ClassAssertion(schema:MedicalSpecialty schema:Dermatologic)

# Individual: schema:Dermatology (Dermatology)

ClassAssertion(schema:MedicalSpecialty schema:Dermatology)

# Individual: schema:DesktopWebPlatform (DesktopWebPlatform)

AnnotationAssertion(rdfs:comment schema:DesktopWebPlatform "Represents the broad notion of 'desktop' browsers as a Web Platform.")
AnnotationAssertion(rdfs:label schema:DesktopWebPlatform "DesktopWebPlatform")
AnnotationAssertion(schema:isPartOf schema:DesktopWebPlatform <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DesktopWebPlatform <https://github.com/schemaorg/schemaorg/issues/3057>)
ClassAssertion(schema:DigitalPlatformEnumeration schema:DesktopWebPlatform)

# Individual: schema:DiabeticDiet (DiabeticDiet)

AnnotationAssertion(rdfs:comment schema:DiabeticDiet "A diet appropriate for people with diabetes.")
AnnotationAssertion(rdfs:label schema:DiabeticDiet "DiabeticDiet")
ClassAssertion(schema:RestrictedDiet schema:DiabeticDiet)

# Individual: schema:Diagnostic (Diagnostic)

AnnotationAssertion(rdfs:comment schema:Diagnostic "A medical device used for diagnostic purposes.")
AnnotationAssertion(rdfs:label schema:Diagnostic "Diagnostic")
AnnotationAssertion(schema:isPartOf schema:Diagnostic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalDevicePurpose schema:Diagnostic)

# Individual: schema:DietNutrition (DietNutrition)

ClassAssertion(schema:MedicalSpecialty schema:DietNutrition)

# Individual: schema:DigitalArtDigitalSource (DigitalArtDigitalSource)

AnnotationAssertion(rdfs:comment schema:DigitalArtDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/digitalArt\">digital art</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:DigitalArtDigitalSource "DigitalArtDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:DigitalArtDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/digitalArt>)
AnnotationAssertion(schema:isPartOf schema:DigitalArtDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DigitalArtDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:DigitalArtDigitalSource)

# Individual: schema:DigitalAudioTapeFormat (DigitalAudioTapeFormat)

AnnotationAssertion(rdfs:comment schema:DigitalAudioTapeFormat "DigitalAudioTapeFormat.")
AnnotationAssertion(rdfs:label schema:DigitalAudioTapeFormat "DigitalAudioTapeFormat")
AnnotationAssertion(schema:contributor schema:DigitalAudioTapeFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:DigitalAudioTapeFormat)

# Individual: schema:DigitalCaptureDigitalSource (DigitalCaptureDigitalSource)

AnnotationAssertion(rdfs:comment schema:DigitalCaptureDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture\">digital capture</a></a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:DigitalCaptureDigitalSource "DigitalCaptureDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:DigitalCaptureDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture>)
AnnotationAssertion(schema:isPartOf schema:DigitalCaptureDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DigitalCaptureDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:DigitalCaptureDigitalSource)

# Individual: schema:DigitalFormat (DigitalFormat)

AnnotationAssertion(rdfs:comment schema:DigitalFormat "DigitalFormat.")
AnnotationAssertion(rdfs:label schema:DigitalFormat "DigitalFormat")
AnnotationAssertion(schema:contributor schema:DigitalFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:DigitalFormat)

# Individual: schema:DirectDebit (DirectDebit)

AnnotationAssertion(rdfs:comment schema:DirectDebit "Payment in advance by direct debit from the bank, equivalent to <code>http://purl.org/goodrelations/v1#DirectDebit</code>.")
AnnotationAssertion(rdfs:label schema:DirectDebit "DirectDebit")
ClassAssertion(schema:PaymentMethodType schema:DirectDebit)

# Individual: schema:DisabilitySupport (DisabilitySupport)

AnnotationAssertion(rdfs:comment schema:DisabilitySupport "DisabilitySupport: this is a benefit for disability support.")
AnnotationAssertion(rdfs:label schema:DisabilitySupport "DisabilitySupport")
AnnotationAssertion(schema:isPartOf schema:DisabilitySupport <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DisabilitySupport <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:DisabilitySupport)

# Individual: schema:Discontinued (Discontinued)

AnnotationAssertion(rdfs:comment schema:Discontinued "Indicates that the item has been discontinued.")
AnnotationAssertion(rdfs:label schema:Discontinued "Discontinued")
ClassAssertion(schema:ItemAvailability schema:Discontinued)

# Individual: schema:DistanceFee (DistanceFee)

AnnotationAssertion(rdfs:comment schema:DistanceFee "Represents the distance fee (e.g., price per km or mile) part of the total price for an offered product, for example a car rental.")
AnnotationAssertion(rdfs:label schema:DistanceFee "DistanceFee")
AnnotationAssertion(schema:isPartOf schema:DistanceFee <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:DistanceFee <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:DistanceFee)

# Individual: schema:DoubleBlindedTrial (DoubleBlindedTrial)

AnnotationAssertion(rdfs:comment schema:DoubleBlindedTrial "A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.")
AnnotationAssertion(rdfs:label schema:DoubleBlindedTrial "DoubleBlindedTrial")
AnnotationAssertion(schema:isPartOf schema:DoubleBlindedTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:DoubleBlindedTrial)

# Individual: schema:Downpayment (Downpayment)

AnnotationAssertion(rdfs:comment schema:Downpayment "Represents the downpayment (up-front payment) price component of the total price for an offered product that has additional installment payments.")
AnnotationAssertion(rdfs:label schema:Downpayment "Downpayment")
AnnotationAssertion(schema:isPartOf schema:Downpayment <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Downpayment <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:Downpayment)

# Individual: schema:DrivingSchoolVehicleUsage (DrivingSchoolVehicleUsage)

AnnotationAssertion(rdfs:comment schema:DrivingSchoolVehicleUsage "Indicates the usage of the vehicle for driving school.")
AnnotationAssertion(rdfs:label schema:DrivingSchoolVehicleUsage "DrivingSchoolVehicleUsage")
AnnotationAssertion(schema:contributor schema:DrivingSchoolVehicleUsage <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:DrivingSchoolVehicleUsage <https://auto.schema.org>)
ClassAssertion(schema:CarUsageType schema:DrivingSchoolVehicleUsage)

# Individual: schema:EBook (EBook)

AnnotationAssertion(rdfs:comment schema:EBook "Book format: Ebook.")
AnnotationAssertion(rdfs:label schema:EBook "EBook")
ClassAssertion(schema:BookFormatType schema:EBook)

# Individual: schema:EPRelease (EPRelease)

AnnotationAssertion(rdfs:comment schema:EPRelease "EPRelease.")
AnnotationAssertion(rdfs:label schema:EPRelease "EPRelease")
AnnotationAssertion(schema:contributor schema:EPRelease <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumReleaseType schema:EPRelease)

# Individual: schema:EUEnergyEfficiencyCategoryA (EUEnergyEfficiencyCategoryA)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryA "Represents EU Energy Efficiency Class A as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryA "EUEnergyEfficiencyCategoryA")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryA <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryA <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryA)

# Individual: schema:EUEnergyEfficiencyCategoryA1Plus (EUEnergyEfficiencyCategoryA1Plus)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryA1Plus "Represents EU Energy Efficiency Class A+ as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryA1Plus "EUEnergyEfficiencyCategoryA1Plus")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryA1Plus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryA1Plus <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryA1Plus)

# Individual: schema:EUEnergyEfficiencyCategoryA2Plus (EUEnergyEfficiencyCategoryA2Plus)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryA2Plus "Represents EU Energy Efficiency Class A++ as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryA2Plus "EUEnergyEfficiencyCategoryA2Plus")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryA2Plus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryA2Plus <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryA2Plus)

# Individual: schema:EUEnergyEfficiencyCategoryA3Plus (EUEnergyEfficiencyCategoryA3Plus)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryA3Plus "Represents EU Energy Efficiency Class A+++ as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryA3Plus "EUEnergyEfficiencyCategoryA3Plus")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryA3Plus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryA3Plus <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryA3Plus)

# Individual: schema:EUEnergyEfficiencyCategoryB (EUEnergyEfficiencyCategoryB)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryB "Represents EU Energy Efficiency Class B as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryB "EUEnergyEfficiencyCategoryB")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryB <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryB <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryB)

# Individual: schema:EUEnergyEfficiencyCategoryC (EUEnergyEfficiencyCategoryC)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryC "Represents EU Energy Efficiency Class C as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryC "EUEnergyEfficiencyCategoryC")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryC <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryC <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryC)

# Individual: schema:EUEnergyEfficiencyCategoryD (EUEnergyEfficiencyCategoryD)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryD "Represents EU Energy Efficiency Class D as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryD "EUEnergyEfficiencyCategoryD")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryD <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryD <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryD)

# Individual: schema:EUEnergyEfficiencyCategoryE (EUEnergyEfficiencyCategoryE)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryE "Represents EU Energy Efficiency Class E as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryE "EUEnergyEfficiencyCategoryE")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryE <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryE <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryE)

# Individual: schema:EUEnergyEfficiencyCategoryF (EUEnergyEfficiencyCategoryF)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryF "Represents EU Energy Efficiency Class F as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryF "EUEnergyEfficiencyCategoryF")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryF <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryF <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryF)

# Individual: schema:EUEnergyEfficiencyCategoryG (EUEnergyEfficiencyCategoryG)

AnnotationAssertion(rdfs:comment schema:EUEnergyEfficiencyCategoryG "Represents EU Energy Efficiency Class G as defined in EU energy labeling regulations.")
AnnotationAssertion(rdfs:label schema:EUEnergyEfficiencyCategoryG "EUEnergyEfficiencyCategoryG")
AnnotationAssertion(schema:isPartOf schema:EUEnergyEfficiencyCategoryG <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EUEnergyEfficiencyCategoryG <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EUEnergyEfficiencyEnumeration schema:EUEnergyEfficiencyCategoryG)

# Individual: schema:Ear (Ear)

AnnotationAssertion(rdfs:comment schema:Ear "Ear function assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Ear "Ear")
AnnotationAssertion(schema:isPartOf schema:Ear <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Ear)

# Individual: schema:EditedOrCroppedContent (EditedOrCroppedContent)

AnnotationAssertion(rdfs:comment schema:EditedOrCroppedContent "Content coded 'edited or cropped content' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'edited or cropped content': The video has been edited or rearranged. This category applies to time edits, including editing multiple videos together to alter the story being told or editing out large portions from a video.

For an [[ImageObject]] to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.

For an [[ImageObject]] with embedded text to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.

For an [[AudioObject]] to be 'edited or cropped content': The audio has been edited or rearranged. This category applies to time edits, including editing multiple audio clips together to alter the story being told or editing out large portions from the recording.
")
AnnotationAssertion(rdfs:label schema:EditedOrCroppedContent "EditedOrCroppedContent")
AnnotationAssertion(schema:isPartOf schema:EditedOrCroppedContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EditedOrCroppedContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:EditedOrCroppedContent)

# Individual: schema:EffectivenessHealthAspect (EffectivenessHealthAspect)

AnnotationAssertion(rdfs:comment schema:EffectivenessHealthAspect "Content about the effectiveness-related aspects of a health topic.")
AnnotationAssertion(rdfs:label schema:EffectivenessHealthAspect "EffectivenessHealthAspect")
AnnotationAssertion(schema:isPartOf schema:EffectivenessHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EffectivenessHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:EffectivenessHealthAspect)

# Individual: schema:Emergency (Emergency)

ClassAssertion(schema:MedicalSpecialty schema:Emergency)

# Individual: schema:Endocrine (Endocrine)

AnnotationAssertion(rdfs:comment schema:Endocrine "A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.")
AnnotationAssertion(rdfs:label schema:Endocrine "Endocrine")
AnnotationAssertion(schema:isPartOf schema:Endocrine <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Endocrine)

# Individual: schema:EnergyStarCertified (EnergyStarCertified)

AnnotationAssertion(rdfs:comment schema:EnergyStarCertified "Represents EnergyStar certification.")
AnnotationAssertion(rdfs:label schema:EnergyStarCertified "EnergyStarCertified")
AnnotationAssertion(schema:isPartOf schema:EnergyStarCertified <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:EnergyStarCertified <https://github.com/schemaorg/schemaorg/issues/2670>)
ClassAssertion(schema:EnergyStarEnergyEfficiencyEnumeration schema:EnergyStarCertified)

# Individual: schema:EnrollingByInvitation (EnrollingByInvitation)

AnnotationAssertion(rdfs:comment schema:EnrollingByInvitation "Enrolling participants by invitation only.")
AnnotationAssertion(rdfs:label schema:EnrollingByInvitation "EnrollingByInvitation")
AnnotationAssertion(schema:isPartOf schema:EnrollingByInvitation <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:EnrollingByInvitation)

# Individual: schema:EventCancelled (EventCancelled)

AnnotationAssertion(rdfs:comment schema:EventCancelled "The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).")
AnnotationAssertion(rdfs:label schema:EventCancelled "EventCancelled")
ClassAssertion(schema:EventStatusType schema:EventCancelled)

# Individual: schema:EventMovedOnline (EventMovedOnline)

AnnotationAssertion(rdfs:comment schema:EventMovedOnline "Indicates that the event was changed to allow online participation. See [[eventAttendanceMode]] for specifics of whether it is now fully or partially online.")
AnnotationAssertion(rdfs:label schema:EventMovedOnline "EventMovedOnline")
ClassAssertion(schema:EventStatusType schema:EventMovedOnline)

# Individual: schema:EventPostponed (EventPostponed)

AnnotationAssertion(rdfs:comment schema:EventPostponed "The event has been postponed and no new date has been set. The event's previousStartDate should be set.")
AnnotationAssertion(rdfs:label schema:EventPostponed "EventPostponed")
ClassAssertion(schema:EventStatusType schema:EventPostponed)

# Individual: schema:EventRescheduled (EventRescheduled)

AnnotationAssertion(rdfs:comment schema:EventRescheduled "The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated.)")
AnnotationAssertion(rdfs:label schema:EventRescheduled "EventRescheduled")
ClassAssertion(schema:EventStatusType schema:EventRescheduled)

# Individual: schema:EventScheduled (EventScheduled)

AnnotationAssertion(rdfs:comment schema:EventScheduled "The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.")
AnnotationAssertion(rdfs:label schema:EventScheduled "EventScheduled")
ClassAssertion(schema:EventStatusType schema:EventScheduled)

# Individual: schema:EvidenceLevelA (EvidenceLevelA)

AnnotationAssertion(rdfs:comment schema:EvidenceLevelA "Data derived from multiple randomized clinical trials or meta-analyses.")
AnnotationAssertion(rdfs:label schema:EvidenceLevelA "EvidenceLevelA")
AnnotationAssertion(schema:isPartOf schema:EvidenceLevelA <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalEvidenceLevel schema:EvidenceLevelA)

# Individual: schema:EvidenceLevelB (EvidenceLevelB)

AnnotationAssertion(rdfs:comment schema:EvidenceLevelB "Data derived from a single randomized trial, or nonrandomized studies.")
AnnotationAssertion(rdfs:label schema:EvidenceLevelB "EvidenceLevelB")
AnnotationAssertion(schema:isPartOf schema:EvidenceLevelB <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalEvidenceLevel schema:EvidenceLevelB)

# Individual: schema:EvidenceLevelC (EvidenceLevelC)

AnnotationAssertion(rdfs:comment schema:EvidenceLevelC "Only consensus opinion of experts, case studies, or standard-of-care.")
AnnotationAssertion(rdfs:label schema:EvidenceLevelC "EvidenceLevelC")
AnnotationAssertion(schema:isPartOf schema:EvidenceLevelC <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalEvidenceLevel schema:EvidenceLevelC)

# Individual: schema:ExampleMeasurementMethodEnum (ExampleMeasurementMethodEnum)

AnnotationAssertion(rdfs:comment schema:ExampleMeasurementMethodEnum "An example [[MeasurementMethodEnum]] (to remove when real enums are added).")
AnnotationAssertion(rdfs:label schema:ExampleMeasurementMethodEnum "ExampleMeasurementMethodEnum")
AnnotationAssertion(schema:isPartOf schema:ExampleMeasurementMethodEnum <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ExampleMeasurementMethodEnum <https://github.com/schemaorg/schemaorg/issues/2564>)
ClassAssertion(schema:MeasurementMethodEnum schema:ExampleMeasurementMethodEnum)

# Individual: schema:ExchangeRefund (ExchangeRefund)

AnnotationAssertion(rdfs:comment schema:ExchangeRefund "Specifies that a refund can be done as an exchange for the same product.")
AnnotationAssertion(rdfs:label schema:ExchangeRefund "ExchangeRefund")
AnnotationAssertion(schema:isPartOf schema:ExchangeRefund <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ExchangeRefund <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:RefundTypeEnumeration schema:ExchangeRefund)

# Individual: schema:Eye (Eye)

AnnotationAssertion(rdfs:comment schema:Eye "Eye or ophthalmological function assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Eye "Eye")
AnnotationAssertion(schema:isPartOf schema:Eye <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Eye)

# Individual: schema:FDAcategoryA (FDAcategoryA)

AnnotationAssertion(rdfs:comment schema:FDAcategoryA "A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).")
AnnotationAssertion(rdfs:label schema:FDAcategoryA "FDAcategoryA")
AnnotationAssertion(schema:isPartOf schema:FDAcategoryA <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAcategoryA)

# Individual: schema:FDAcategoryB (FDAcategoryB)

AnnotationAssertion(rdfs:comment schema:FDAcategoryB "A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.")
AnnotationAssertion(rdfs:label schema:FDAcategoryB "FDAcategoryB")
AnnotationAssertion(schema:isPartOf schema:FDAcategoryB <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAcategoryB)

# Individual: schema:FDAcategoryC (FDAcategoryC)

AnnotationAssertion(rdfs:comment schema:FDAcategoryC "A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.")
AnnotationAssertion(rdfs:label schema:FDAcategoryC "FDAcategoryC")
AnnotationAssertion(schema:isPartOf schema:FDAcategoryC <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAcategoryC)

# Individual: schema:FDAcategoryD (FDAcategoryD)

AnnotationAssertion(rdfs:comment schema:FDAcategoryD "A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.")
AnnotationAssertion(rdfs:label schema:FDAcategoryD "FDAcategoryD")
AnnotationAssertion(schema:isPartOf schema:FDAcategoryD <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAcategoryD)

# Individual: schema:FDAcategoryX (FDAcategoryX)

AnnotationAssertion(rdfs:comment schema:FDAcategoryX "A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.")
AnnotationAssertion(rdfs:label schema:FDAcategoryX "FDAcategoryX")
AnnotationAssertion(schema:isPartOf schema:FDAcategoryX <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAcategoryX)

# Individual: schema:FDAnotEvaluated (FDAnotEvaluated)

AnnotationAssertion(rdfs:comment schema:FDAnotEvaluated "A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.")
AnnotationAssertion(rdfs:label schema:FDAnotEvaluated "FDAnotEvaluated")
AnnotationAssertion(schema:isPartOf schema:FDAnotEvaluated <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPregnancyCategory schema:FDAnotEvaluated)

# Individual: schema:FailedActionStatus (FailedActionStatus)

AnnotationAssertion(rdfs:comment schema:FailedActionStatus "An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.")
AnnotationAssertion(rdfs:label schema:FailedActionStatus "FailedActionStatus")
ClassAssertion(schema:ActionStatusType schema:FailedActionStatus)

# Individual: schema:False (False)

AnnotationAssertion(rdfs:comment schema:False "The boolean value false.")
AnnotationAssertion(rdfs:label schema:False "False")
ClassAssertion(schema:Boolean schema:False)

# Individual: schema:Female (Female)

AnnotationAssertion(rdfs:comment schema:Female "The female gender.")
AnnotationAssertion(rdfs:label schema:Female "Female")
ClassAssertion(schema:GenderType schema:Female)

# Individual: schema:Flexibility (Flexibility)

AnnotationAssertion(rdfs:comment schema:Flexibility "Physical activity that is engaged in to improve joint and muscle flexibility.")
AnnotationAssertion(rdfs:label schema:Flexibility "Flexibility")
AnnotationAssertion(schema:isPartOf schema:Flexibility <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:Flexibility)

# Individual: schema:FourWheelDriveConfiguration (FourWheelDriveConfiguration)

AnnotationAssertion(rdfs:comment schema:FourWheelDriveConfiguration "Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.")
AnnotationAssertion(rdfs:label schema:FourWheelDriveConfiguration "FourWheelDriveConfiguration")
AnnotationAssertion(schema:contributor schema:FourWheelDriveConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:DriveWheelConfigurationValue schema:FourWheelDriveConfiguration)

# Individual: schema:FreeReturn (FreeReturn)

AnnotationAssertion(rdfs:comment schema:FreeReturn "Specifies that product returns are free of charge for the customer.")
AnnotationAssertion(rdfs:label schema:FreeReturn "FreeReturn")
AnnotationAssertion(schema:isPartOf schema:FreeReturn <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FreeReturn <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnFeesEnumeration schema:FreeReturn)

# Individual: schema:Friday (Friday)

AnnotationAssertion(rdfs:comment schema:Friday "The day of the week between Thursday and Saturday.")
AnnotationAssertion(rdfs:label schema:Friday "Friday")
AnnotationAssertion(schema:sameAs schema:Friday <http://www.wikidata.org/entity/Q130>)
ClassAssertion(schema:DayOfWeek schema:Friday)

# Individual: schema:FrontWheelDriveConfiguration (FrontWheelDriveConfiguration)

AnnotationAssertion(rdfs:comment schema:FrontWheelDriveConfiguration "Front-wheel drive is a transmission layout where the engine drives the front wheels.")
AnnotationAssertion(rdfs:label schema:FrontWheelDriveConfiguration "FrontWheelDriveConfiguration")
AnnotationAssertion(schema:contributor schema:FrontWheelDriveConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:DriveWheelConfigurationValue schema:FrontWheelDriveConfiguration)

# Individual: schema:FullGameAvailability (FullGameAvailability)

AnnotationAssertion(rdfs:comment schema:FullGameAvailability "Indicates full game availability.")
AnnotationAssertion(rdfs:label schema:FullGameAvailability "FullGameAvailability")
AnnotationAssertion(schema:isPartOf schema:FullGameAvailability <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FullGameAvailability <https://github.com/schemaorg/schemaorg/issues/3058>)
ClassAssertion(schema:GameAvailabilityEnumeration schema:FullGameAvailability)

# Individual: schema:FullRefund (FullRefund)

AnnotationAssertion(rdfs:comment schema:FullRefund "Specifies that a refund can be done in the full amount the customer paid for the product.")
AnnotationAssertion(rdfs:label schema:FullRefund "FullRefund")
AnnotationAssertion(schema:isPartOf schema:FullRefund <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:FullRefund <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:RefundTypeEnumeration schema:FullRefund)

# Individual: schema:Fungus (Fungus)

AnnotationAssertion(rdfs:comment schema:Fungus "Pathogenic fungus.")
AnnotationAssertion(rdfs:label schema:Fungus "Fungus")
AnnotationAssertion(schema:isPartOf schema:Fungus <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:Fungus)

# Individual: schema:Gastroenterologic (Gastroenterologic)

AnnotationAssertion(rdfs:comment schema:Gastroenterologic "A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.")
AnnotationAssertion(rdfs:label schema:Gastroenterologic "Gastroenterologic")
AnnotationAssertion(schema:isPartOf schema:Gastroenterologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Gastroenterologic)

# Individual: schema:GenericWebPlatform (GenericWebPlatform)

AnnotationAssertion(rdfs:comment schema:GenericWebPlatform "Represents the generic notion of the Web Platform. More specific codes include [[MobileWebPlatform]] and [[DesktopWebPlatform]], as an incomplete list. ")
AnnotationAssertion(rdfs:label schema:GenericWebPlatform "GenericWebPlatform")
AnnotationAssertion(schema:isPartOf schema:GenericWebPlatform <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:GenericWebPlatform <https://github.com/schemaorg/schemaorg/issues/3057>)
ClassAssertion(schema:DigitalPlatformEnumeration schema:GenericWebPlatform)

# Individual: schema:Genetic (Genetic)

AnnotationAssertion(rdfs:comment schema:Genetic "A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.")
AnnotationAssertion(rdfs:label schema:Genetic "Genetic")
AnnotationAssertion(schema:isPartOf schema:Genetic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Genetic)

# Individual: schema:Genitourinary (Genitourinary)

AnnotationAssertion(rdfs:comment schema:Genitourinary "Genitourinary system function assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Genitourinary "Genitourinary")
AnnotationAssertion(schema:isPartOf schema:Genitourinary <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Genitourinary)

# Individual: schema:Geriatric (Geriatric)

ClassAssertion(schema:MedicalSpecialty schema:Geriatric)

# Individual: schema:GettingAccessHealthAspect (GettingAccessHealthAspect)

AnnotationAssertion(rdfs:comment schema:GettingAccessHealthAspect "Content that discusses practical and policy aspects for getting access to specific kinds of healthcare (e.g. distribution mechanisms for vaccines).")
AnnotationAssertion(rdfs:label schema:GettingAccessHealthAspect "GettingAccessHealthAspect")
AnnotationAssertion(schema:isPartOf schema:GettingAccessHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:GettingAccessHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:GettingAccessHealthAspect)

# Individual: schema:GlutenFreeDiet (GlutenFreeDiet)

AnnotationAssertion(rdfs:comment schema:GlutenFreeDiet "A diet exclusive of gluten.")
AnnotationAssertion(rdfs:label schema:GlutenFreeDiet "GlutenFreeDiet")
ClassAssertion(schema:RestrictedDiet schema:GlutenFreeDiet)

# Individual: schema:GraphicNovel (GraphicNovel)

AnnotationAssertion(rdfs:comment schema:GraphicNovel "Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.")
AnnotationAssertion(rdfs:label schema:GraphicNovel "GraphicNovel")
AnnotationAssertion(schema:isPartOf schema:GraphicNovel <https://bib.schema.org>)
ClassAssertion(schema:BookFormatType schema:GraphicNovel)

# Individual: schema:GroupBoardingPolicy (GroupBoardingPolicy)

AnnotationAssertion(rdfs:comment schema:GroupBoardingPolicy "The airline boards by groups based on check-in time, priority, etc.")
AnnotationAssertion(rdfs:label schema:GroupBoardingPolicy "GroupBoardingPolicy")
ClassAssertion(schema:BoardingPolicyType schema:GroupBoardingPolicy)

# Individual: schema:Gynecologic (Gynecologic)

ClassAssertion(schema:MedicalSpecialty schema:Gynecologic)

# Individual: schema:HalalDiet (HalalDiet)

AnnotationAssertion(rdfs:comment schema:HalalDiet "A diet conforming to Islamic dietary practices.")
AnnotationAssertion(rdfs:label schema:HalalDiet "HalalDiet")
ClassAssertion(schema:RestrictedDiet schema:HalalDiet)

# Individual: schema:Hardcover (Hardcover)

AnnotationAssertion(rdfs:comment schema:Hardcover "Book format: Hardcover.")
AnnotationAssertion(rdfs:label schema:Hardcover "Hardcover")
ClassAssertion(schema:BookFormatType schema:Hardcover)

# Individual: schema:Head (Head)

AnnotationAssertion(rdfs:comment schema:Head "Head assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Head "Head")
AnnotationAssertion(schema:isPartOf schema:Head <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Head)

# Individual: schema:HealthCare (HealthCare)

AnnotationAssertion(rdfs:comment schema:HealthCare "HealthCare: this is a benefit for health care.")
AnnotationAssertion(rdfs:label schema:HealthCare "HealthCare")
AnnotationAssertion(schema:isPartOf schema:HealthCare <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthCare <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:HealthCare)

# Individual: schema:HealthcareConsideration (HealthcareConsideration)

AnnotationAssertion(rdfs:comment schema:HealthcareConsideration "Item is a pharmaceutical (e.g., a prescription or OTC drug) or a restricted medical device.")
AnnotationAssertion(rdfs:label schema:HealthcareConsideration "HealthcareConsideration")
AnnotationAssertion(schema:isPartOf schema:HealthcareConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HealthcareConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:HealthcareConsideration)

# Individual: schema:HearingImpairedSupported (HearingImpairedSupported)

AnnotationAssertion(rdfs:comment schema:HearingImpairedSupported "Uses devices to support users with hearing impairments.")
AnnotationAssertion(rdfs:label schema:HearingImpairedSupported "HearingImpairedSupported")
ClassAssertion(schema:ContactPointOption schema:HearingImpairedSupported)

# Individual: schema:Hematologic (Hematologic)

AnnotationAssertion(rdfs:comment schema:Hematologic "A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.")
AnnotationAssertion(rdfs:label schema:Hematologic "Hematologic")
AnnotationAssertion(schema:isPartOf schema:Hematologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Hematologic)

# Individual: schema:HinduDiet (HinduDiet)

AnnotationAssertion(rdfs:comment schema:HinduDiet "A diet conforming to Hindu dietary practices, in particular, beef-free.")
AnnotationAssertion(rdfs:label schema:HinduDiet "HinduDiet")
ClassAssertion(schema:RestrictedDiet schema:HinduDiet)

# Individual: schema:Homeopathic (Homeopathic)

AnnotationAssertion(rdfs:comment schema:Homeopathic "A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.")
AnnotationAssertion(rdfs:label schema:Homeopathic "Homeopathic")
AnnotationAssertion(schema:isPartOf schema:Homeopathic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:Homeopathic)

# Individual: schema:HowItWorksHealthAspect (HowItWorksHealthAspect)

AnnotationAssertion(rdfs:comment schema:HowItWorksHealthAspect "Content that discusses and explains how a particular health-related topic works, e.g. in terms of mechanisms and underlying science.")
AnnotationAssertion(rdfs:label schema:HowItWorksHealthAspect "HowItWorksHealthAspect")
AnnotationAssertion(schema:isPartOf schema:HowItWorksHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HowItWorksHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:HowItWorksHealthAspect)

# Individual: schema:HowOrWhereHealthAspect (HowOrWhereHealthAspect)

AnnotationAssertion(rdfs:comment schema:HowOrWhereHealthAspect "Information about how or where to find a topic. Also may contain location data that can be used for where to look for help if the topic is observed.")
AnnotationAssertion(rdfs:label schema:HowOrWhereHealthAspect "HowOrWhereHealthAspect")
AnnotationAssertion(schema:isPartOf schema:HowOrWhereHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:HowOrWhereHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:HowOrWhereHealthAspect)

# Individual: schema:IOSPlatform (IOSPlatform)

AnnotationAssertion(rdfs:comment schema:IOSPlatform "Represents the broad notion of iOS-based operating systems.")
AnnotationAssertion(rdfs:label schema:IOSPlatform "IOSPlatform")
AnnotationAssertion(schema:isPartOf schema:IOSPlatform <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:IOSPlatform <https://github.com/schemaorg/schemaorg/issues/3057>)
ClassAssertion(schema:DigitalPlatformEnumeration schema:IOSPlatform)

# Individual: schema:InForce (InForce)

AnnotationAssertion(rdfs:comment schema:InForce "Indicates that a legislation is in force.")
AnnotationAssertion(rdfs:label schema:InForce "InForce")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:InForce <http://data.europa.eu/eli/ontology#InForce-inForce>)
AnnotationAssertion(schema:contributor schema:InForce <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:InForce <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:InForce <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalForceStatus schema:InForce)

# Individual: schema:InStock (InStock)

AnnotationAssertion(rdfs:comment schema:InStock "Indicates that the item is in stock.")
AnnotationAssertion(rdfs:label schema:InStock "InStock")
ClassAssertion(schema:ItemAvailability schema:InStock)

# Individual: schema:InStoreOnly (InStoreOnly)

AnnotationAssertion(rdfs:comment schema:InStoreOnly "Indicates that the item is available only at physical locations.")
AnnotationAssertion(rdfs:label schema:InStoreOnly "InStoreOnly")
ClassAssertion(schema:ItemAvailability schema:InStoreOnly)

# Individual: schema:InStorePrepay (InStorePrepay)

AnnotationAssertion(rdfs:comment schema:InStorePrepay "Payment in advance in some form of shop or kiosk for goods purchased online.")
AnnotationAssertion(rdfs:label schema:InStorePrepay "InStorePrepay")
ClassAssertion(schema:PaymentMethodType schema:InStorePrepay)

# Individual: schema:Infectious (Infectious)

AnnotationAssertion(rdfs:comment schema:Infectious "Something in medical science that pertains to infectious diseases, i.e. caused by bacterial, viral, fungal or parasitic infections.")
AnnotationAssertion(rdfs:label schema:Infectious "Infectious")
AnnotationAssertion(schema:isPartOf schema:Infectious <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Infectious)

# Individual: schema:IngredientsHealthAspect (IngredientsHealthAspect)

AnnotationAssertion(rdfs:comment schema:IngredientsHealthAspect "Content discussing ingredients-related aspects of a health topic.")
AnnotationAssertion(rdfs:label schema:IngredientsHealthAspect "IngredientsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:IngredientsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:IngredientsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:IngredientsHealthAspect)

# Individual: schema:Installment (Installment)

AnnotationAssertion(rdfs:comment schema:Installment "Represents the installment pricing component of the total price for an offered product.")
AnnotationAssertion(rdfs:label schema:Installment "Installment")
AnnotationAssertion(schema:isPartOf schema:Installment <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Installment <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:Installment)

# Individual: schema:InternationalTrial (InternationalTrial)

AnnotationAssertion(rdfs:comment schema:InternationalTrial "An international trial.")
AnnotationAssertion(rdfs:label schema:InternationalTrial "InternationalTrial")
AnnotationAssertion(schema:isPartOf schema:InternationalTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:InternationalTrial)

# Individual: schema:InvoicePrice (InvoicePrice)

AnnotationAssertion(rdfs:comment schema:InvoicePrice "Represents the invoice price of an offered product.")
AnnotationAssertion(rdfs:label schema:InvoicePrice "InvoicePrice")
AnnotationAssertion(schema:isPartOf schema:InvoicePrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:InvoicePrice <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:InvoicePrice)

# Individual: schema:ItemListOrderAscending (ItemListOrderAscending)

AnnotationAssertion(rdfs:comment schema:ItemListOrderAscending "An ItemList ordered with lower values listed first.")
AnnotationAssertion(rdfs:label schema:ItemListOrderAscending "ItemListOrderAscending")
ClassAssertion(schema:ItemListOrderType schema:ItemListOrderAscending)

# Individual: schema:ItemListOrderDescending (ItemListOrderDescending)

AnnotationAssertion(rdfs:comment schema:ItemListOrderDescending "An ItemList ordered with higher values listed first.")
AnnotationAssertion(rdfs:label schema:ItemListOrderDescending "ItemListOrderDescending")
ClassAssertion(schema:ItemListOrderType schema:ItemListOrderDescending)

# Individual: schema:ItemListUnordered (ItemListUnordered)

AnnotationAssertion(rdfs:comment schema:ItemListUnordered "An ItemList ordered with no explicit order.")
AnnotationAssertion(rdfs:label schema:ItemListUnordered "ItemListUnordered")
ClassAssertion(schema:ItemListOrderType schema:ItemListUnordered)

# Individual: schema:KeepProduct (KeepProduct)

AnnotationAssertion(rdfs:comment schema:KeepProduct "Specifies that the consumer can keep the product, even when receiving a refund or store credit.")
AnnotationAssertion(rdfs:label schema:KeepProduct "KeepProduct")
AnnotationAssertion(schema:isPartOf schema:KeepProduct <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:KeepProduct <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnMethodEnumeration schema:KeepProduct)

# Individual: schema:KosherDiet (KosherDiet)

AnnotationAssertion(rdfs:comment schema:KosherDiet "A diet conforming to Jewish dietary practices.")
AnnotationAssertion(rdfs:label schema:KosherDiet "KosherDiet")
ClassAssertion(schema:RestrictedDiet schema:KosherDiet)

# Individual: schema:LaboratoryScience (LaboratoryScience)

AnnotationAssertion(rdfs:comment schema:LaboratoryScience "A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research.")
AnnotationAssertion(rdfs:label schema:LaboratoryScience "LaboratoryScience")
AnnotationAssertion(schema:isPartOf schema:LaboratoryScience <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:LaboratoryScience)

# Individual: schema:LaserDiscFormat (LaserDiscFormat)

AnnotationAssertion(rdfs:comment schema:LaserDiscFormat "LaserDiscFormat.")
AnnotationAssertion(rdfs:label schema:LaserDiscFormat "LaserDiscFormat")
AnnotationAssertion(schema:contributor schema:LaserDiscFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:LaserDiscFormat)

# Individual: schema:LeftHandDriving (LeftHandDriving)

AnnotationAssertion(rdfs:comment schema:LeftHandDriving "The steering position is on the left side of the vehicle (viewed from the main direction of driving).")
AnnotationAssertion(rdfs:label schema:LeftHandDriving "LeftHandDriving")
AnnotationAssertion(schema:contributor schema:LeftHandDriving <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:SteeringPositionValue schema:LeftHandDriving)

# Individual: schema:LeisureTimeActivity (LeisureTimeActivity)

AnnotationAssertion(rdfs:comment schema:LeisureTimeActivity "Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.")
AnnotationAssertion(rdfs:label schema:LeisureTimeActivity "LeisureTimeActivity")
AnnotationAssertion(schema:isPartOf schema:LeisureTimeActivity <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:LeisureTimeActivity)

# Individual: schema:LimitedAvailability (LimitedAvailability)

AnnotationAssertion(rdfs:comment schema:LimitedAvailability "Indicates that the item has limited availability.")
AnnotationAssertion(rdfs:label schema:LimitedAvailability "LimitedAvailability")
ClassAssertion(schema:ItemAvailability schema:LimitedAvailability)

# Individual: schema:LimitedByGuaranteeCharity (LimitedByGuaranteeCharity)

AnnotationAssertion(rdfs:comment schema:LimitedByGuaranteeCharity "LimitedByGuaranteeCharity: Non-profit type referring to a charitable company that is limited by guarantee (UK).")
AnnotationAssertion(rdfs:label schema:LimitedByGuaranteeCharity "LimitedByGuaranteeCharity")
AnnotationAssertion(schema:isPartOf schema:LimitedByGuaranteeCharity <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LimitedByGuaranteeCharity <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:UKNonprofitType schema:LimitedByGuaranteeCharity)

# Individual: schema:ListPrice (ListPrice)

AnnotationAssertion(rdfs:comment schema:ListPrice "Represents the list price of an offered product. Typically the same as the [MSRP](https://schema.org/MSRP).")
AnnotationAssertion(rdfs:label schema:ListPrice "ListPrice")
AnnotationAssertion(schema:isPartOf schema:ListPrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ListPrice <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:ListPrice)

# Individual: schema:LiveAlbum (LiveAlbum)

AnnotationAssertion(rdfs:comment schema:LiveAlbum "LiveAlbum.")
AnnotationAssertion(rdfs:label schema:LiveAlbum "LiveAlbum")
AnnotationAssertion(schema:contributor schema:LiveAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:LiveAlbum)

# Individual: schema:LivingWithHealthAspect (LivingWithHealthAspect)

AnnotationAssertion(rdfs:comment schema:LivingWithHealthAspect "Information about coping or life related to the topic.")
AnnotationAssertion(rdfs:label schema:LivingWithHealthAspect "LivingWithHealthAspect")
AnnotationAssertion(schema:isPartOf schema:LivingWithHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:LivingWithHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:LivingWithHealthAspect)

# Individual: schema:LockerDelivery (LockerDelivery)

AnnotationAssertion(rdfs:comment schema:LockerDelivery "A DeliveryMethod in which an item is made available via locker.")
AnnotationAssertion(rdfs:label schema:LockerDelivery "LockerDelivery")
ClassAssertion(schema:DeliveryMethod schema:LockerDelivery)

# Individual: schema:Longitudinal (Longitudinal)

AnnotationAssertion(rdfs:comment schema:Longitudinal "Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.")
AnnotationAssertion(rdfs:label schema:Longitudinal "Longitudinal")
AnnotationAssertion(schema:isPartOf schema:Longitudinal <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:Longitudinal)

# Individual: schema:LowCalorieDiet (LowCalorieDiet)

AnnotationAssertion(rdfs:comment schema:LowCalorieDiet "A diet focused on reduced calorie intake.")
AnnotationAssertion(rdfs:label schema:LowCalorieDiet "LowCalorieDiet")
ClassAssertion(schema:RestrictedDiet schema:LowCalorieDiet)

# Individual: schema:LowFatDiet (LowFatDiet)

AnnotationAssertion(rdfs:comment schema:LowFatDiet "A diet focused on reduced fat and cholesterol intake.")
AnnotationAssertion(rdfs:label schema:LowFatDiet "LowFatDiet")
ClassAssertion(schema:RestrictedDiet schema:LowFatDiet)

# Individual: schema:LowLactoseDiet (LowLactoseDiet)

AnnotationAssertion(rdfs:comment schema:LowLactoseDiet "A diet appropriate for people with lactose intolerance.")
AnnotationAssertion(rdfs:label schema:LowLactoseDiet "LowLactoseDiet")
ClassAssertion(schema:RestrictedDiet schema:LowLactoseDiet)

# Individual: schema:LowSaltDiet (LowSaltDiet)

AnnotationAssertion(rdfs:comment schema:LowSaltDiet "A diet focused on reduced sodium intake.")
AnnotationAssertion(rdfs:label schema:LowSaltDiet "LowSaltDiet")
ClassAssertion(schema:RestrictedDiet schema:LowSaltDiet)

# Individual: schema:Lung (Lung)

AnnotationAssertion(rdfs:comment schema:Lung "Lung and respiratory system clinical examination.")
AnnotationAssertion(rdfs:label schema:Lung "Lung")
AnnotationAssertion(schema:isPartOf schema:Lung <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Lung)

# Individual: schema:MRI (MRI)

AnnotationAssertion(rdfs:comment schema:MRI "Magnetic resonance imaging.")
AnnotationAssertion(rdfs:label schema:MRI "MRI")
AnnotationAssertion(schema:isPartOf schema:MRI <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:MRI)

# Individual: schema:MSRP (MSRP)

AnnotationAssertion(rdfs:comment schema:MSRP "Represents the manufacturer suggested retail price (\"MSRP\") of an offered product.")
AnnotationAssertion(rdfs:label schema:MSRP "MSRP")
AnnotationAssertion(schema:isPartOf schema:MSRP <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MSRP <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:MSRP)

# Individual: schema:MadeToOrder (MadeToOrder)

AnnotationAssertion(rdfs:comment schema:MadeToOrder "Indicates that the item is made to order (custom made).")
AnnotationAssertion(rdfs:label schema:MadeToOrder "MadeToOrder")
ClassAssertion(schema:ItemAvailability schema:MadeToOrder)

# Individual: schema:Male (Male)

AnnotationAssertion(rdfs:comment schema:Male "The male gender.")
AnnotationAssertion(rdfs:label schema:Male "Male")
ClassAssertion(schema:GenderType schema:Male)

# Individual: schema:MayTreatHealthAspect (MayTreatHealthAspect)

AnnotationAssertion(rdfs:comment schema:MayTreatHealthAspect "Related topics may be treated by a Topic.")
AnnotationAssertion(rdfs:label schema:MayTreatHealthAspect "MayTreatHealthAspect")
AnnotationAssertion(schema:isPartOf schema:MayTreatHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MayTreatHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:MayTreatHealthAspect)

# Individual: schema:MedicalResearcher (MedicalResearcher)

AnnotationAssertion(rdfs:comment schema:MedicalResearcher "Medical researchers.")
AnnotationAssertion(rdfs:label schema:MedicalResearcher "MedicalResearcher")
AnnotationAssertion(schema:isPartOf schema:MedicalResearcher <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalAudienceType schema:MedicalResearcher)

# Individual: schema:MerchantReturnFiniteReturnWindow (MerchantReturnFiniteReturnWindow)

AnnotationAssertion(rdfs:comment schema:MerchantReturnFiniteReturnWindow "Specifies that there is a finite window for product returns.")
AnnotationAssertion(rdfs:label schema:MerchantReturnFiniteReturnWindow "MerchantReturnFiniteReturnWindow")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnFiniteReturnWindow <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnFiniteReturnWindow <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:MerchantReturnEnumeration schema:MerchantReturnFiniteReturnWindow)

# Individual: schema:MerchantReturnNotPermitted (MerchantReturnNotPermitted)

AnnotationAssertion(rdfs:comment schema:MerchantReturnNotPermitted "Specifies that product returns are not permitted.")
AnnotationAssertion(rdfs:label schema:MerchantReturnNotPermitted "MerchantReturnNotPermitted")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnNotPermitted <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnNotPermitted <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:MerchantReturnEnumeration schema:MerchantReturnNotPermitted)

# Individual: schema:MerchantReturnUnlimitedWindow (MerchantReturnUnlimitedWindow)

AnnotationAssertion(rdfs:comment schema:MerchantReturnUnlimitedWindow "Specifies that there is an unlimited window for product returns.")
AnnotationAssertion(rdfs:label schema:MerchantReturnUnlimitedWindow "MerchantReturnUnlimitedWindow")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnUnlimitedWindow <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnUnlimitedWindow <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:MerchantReturnEnumeration schema:MerchantReturnUnlimitedWindow)

# Individual: schema:MerchantReturnUnspecified (MerchantReturnUnspecified)

AnnotationAssertion(rdfs:comment schema:MerchantReturnUnspecified "Specifies that a product return policy is not provided.")
AnnotationAssertion(rdfs:label schema:MerchantReturnUnspecified "MerchantReturnUnspecified")
AnnotationAssertion(schema:isPartOf schema:MerchantReturnUnspecified <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MerchantReturnUnspecified <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:MerchantReturnEnumeration schema:MerchantReturnUnspecified)

# Individual: schema:Midwifery (Midwifery)

ClassAssertion(schema:MedicalSpecialty schema:Midwifery)

# Individual: schema:MinimumAdvertisedPrice (MinimumAdvertisedPrice)

AnnotationAssertion(rdfs:comment schema:MinimumAdvertisedPrice "Represents the minimum advertised price (\"MAP\") (as dictated by the manufacturer) of an offered product.")
AnnotationAssertion(rdfs:label schema:MinimumAdvertisedPrice "MinimumAdvertisedPrice")
AnnotationAssertion(schema:isPartOf schema:MinimumAdvertisedPrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MinimumAdvertisedPrice <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:MinimumAdvertisedPrice)

# Individual: schema:MinorHumanEditsDigitalSource (MinorHumanEditsDigitalSource)

AnnotationAssertion(rdfs:comment schema:MinorHumanEditsDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits\">minor human edits</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:MinorHumanEditsDigitalSource "MinorHumanEditsDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:MinorHumanEditsDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits>)
AnnotationAssertion(schema:isPartOf schema:MinorHumanEditsDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MinorHumanEditsDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:MinorHumanEditsDigitalSource)

# Individual: schema:MisconceptionsHealthAspect (MisconceptionsHealthAspect)

AnnotationAssertion(rdfs:comment schema:MisconceptionsHealthAspect "Content about common misconceptions and myths that are related to a topic.")
AnnotationAssertion(rdfs:label schema:MisconceptionsHealthAspect "MisconceptionsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:MisconceptionsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MisconceptionsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:MisconceptionsHealthAspect)

# Individual: schema:MixedEventAttendanceMode (MixedEventAttendanceMode)

AnnotationAssertion(rdfs:comment schema:MixedEventAttendanceMode "MixedEventAttendanceMode - an event that is conducted as a combination of both offline and online modes.")
AnnotationAssertion(rdfs:label schema:MixedEventAttendanceMode "MixedEventAttendanceMode")
AnnotationAssertion(schema:isPartOf schema:MixedEventAttendanceMode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MixedEventAttendanceMode <https://github.com/schemaorg/schemaorg/issues/1842>)
ClassAssertion(schema:EventAttendanceModeEnumeration schema:MixedEventAttendanceMode)

# Individual: schema:MixtapeAlbum (MixtapeAlbum)

AnnotationAssertion(rdfs:comment schema:MixtapeAlbum "MixtapeAlbum.")
AnnotationAssertion(rdfs:label schema:MixtapeAlbum "MixtapeAlbum")
AnnotationAssertion(schema:contributor schema:MixtapeAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:MixtapeAlbum)

# Individual: schema:MobileWebPlatform (MobileWebPlatform)

AnnotationAssertion(rdfs:comment schema:MobileWebPlatform "Represents the broad notion of 'mobile' browsers as a Web Platform.")
AnnotationAssertion(rdfs:label schema:MobileWebPlatform "MobileWebPlatform")
AnnotationAssertion(schema:isPartOf schema:MobileWebPlatform <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MobileWebPlatform <https://github.com/schemaorg/schemaorg/issues/3057>)
ClassAssertion(schema:DigitalPlatformEnumeration schema:MobileWebPlatform)

# Individual: schema:Monday (Monday)

AnnotationAssertion(rdfs:comment schema:Monday "The day of the week between Sunday and Tuesday.")
AnnotationAssertion(rdfs:label schema:Monday "Monday")
AnnotationAssertion(schema:sameAs schema:Monday <http://www.wikidata.org/entity/Q105>)
ClassAssertion(schema:DayOfWeek schema:Monday)

# Individual: schema:MultiCenterTrial (MultiCenterTrial)

AnnotationAssertion(rdfs:comment schema:MultiCenterTrial "A trial that takes place at multiple centers.")
AnnotationAssertion(rdfs:label schema:MultiCenterTrial "MultiCenterTrial")
AnnotationAssertion(schema:isPartOf schema:MultiCenterTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:MultiCenterTrial)

# Individual: schema:MultiFrameComputationalCaptureDigitalSource (MultiFrameComputationalCaptureDigitalSource)

AnnotationAssertion(rdfs:comment schema:MultiFrameComputationalCaptureDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia\">algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:MultiFrameComputationalCaptureDigitalSource "MultiFrameComputationalCaptureDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:MultiFrameComputationalCaptureDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/computationalCapture>)
AnnotationAssertion(schema:isPartOf schema:MultiFrameComputationalCaptureDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:MultiFrameComputationalCaptureDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:MultiFrameComputationalCaptureDigitalSource)

# Individual: schema:MultiPlayer (MultiPlayer)

AnnotationAssertion(rdfs:comment schema:MultiPlayer "Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.")
AnnotationAssertion(rdfs:label schema:MultiPlayer "MultiPlayer")
ClassAssertion(schema:GamePlayMode schema:MultiPlayer)

# Individual: schema:MulticellularParasite (MulticellularParasite)

AnnotationAssertion(rdfs:comment schema:MulticellularParasite "Multicellular parasite that causes an infection.")
AnnotationAssertion(rdfs:label schema:MulticellularParasite "MulticellularParasite")
AnnotationAssertion(schema:isPartOf schema:MulticellularParasite <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:MulticellularParasite)

# Individual: schema:Musculoskeletal (Musculoskeletal)

AnnotationAssertion(rdfs:comment schema:Musculoskeletal "A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.")
AnnotationAssertion(rdfs:label schema:Musculoskeletal "Musculoskeletal")
AnnotationAssertion(schema:isPartOf schema:Musculoskeletal <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Musculoskeletal)

# Individual: schema:MusculoskeletalExam (MusculoskeletalExam)

AnnotationAssertion(rdfs:comment schema:MusculoskeletalExam "Musculoskeletal system clinical examination.")
AnnotationAssertion(rdfs:label schema:MusculoskeletalExam "MusculoskeletalExam")
AnnotationAssertion(schema:isPartOf schema:MusculoskeletalExam <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:MusculoskeletalExam)

# Individual: schema:NarcoticConsideration (NarcoticConsideration)

AnnotationAssertion(rdfs:comment schema:NarcoticConsideration "Item is a narcotic as defined by the [1961 UN convention](https://www.incb.org/incb/en/narcotic-drugs/Yellowlist/yellow-list.html), for example marijuana or heroin.")
AnnotationAssertion(rdfs:label schema:NarcoticConsideration "NarcoticConsideration")
AnnotationAssertion(schema:isPartOf schema:NarcoticConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NarcoticConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:NarcoticConsideration)

# Individual: schema:Neck (Neck)

AnnotationAssertion(rdfs:comment schema:Neck "Neck assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Neck "Neck")
AnnotationAssertion(schema:isPartOf schema:Neck <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Neck)

# Individual: schema:NegativeFilmDigitalSource (NegativeFilmDigitalSource)

AnnotationAssertion(rdfs:comment schema:NegativeFilmDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/negativeFilm\">negative film</a></a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:NegativeFilmDigitalSource "NegativeFilmDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:NegativeFilmDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/negativeFilm>)
AnnotationAssertion(schema:isPartOf schema:NegativeFilmDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NegativeFilmDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:NegativeFilmDigitalSource)

# Individual: schema:Neuro (Neuro)

AnnotationAssertion(rdfs:comment schema:Neuro "Neurological system clinical examination.")
AnnotationAssertion(rdfs:label schema:Neuro "Neuro")
AnnotationAssertion(schema:isPartOf schema:Neuro <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Neuro)

# Individual: schema:Neurologic (Neurologic)

AnnotationAssertion(rdfs:comment schema:Neurologic "A specific branch of medical science that studies the nerves and nervous system and its respective disease states.")
AnnotationAssertion(rdfs:label schema:Neurologic "Neurologic")
AnnotationAssertion(schema:isPartOf schema:Neurologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Neurologic)

# Individual: schema:NewCondition (NewCondition)

AnnotationAssertion(rdfs:comment schema:NewCondition "Indicates that the item is new.")
AnnotationAssertion(rdfs:label schema:NewCondition "NewCondition")
ClassAssertion(schema:OfferItemCondition schema:NewCondition)

# Individual: schema:NoninvasiveProcedure (NoninvasiveProcedure)

AnnotationAssertion(rdfs:comment schema:NoninvasiveProcedure "A type of medical procedure that involves noninvasive techniques.")
AnnotationAssertion(rdfs:label schema:NoninvasiveProcedure "NoninvasiveProcedure")
AnnotationAssertion(schema:isPartOf schema:NoninvasiveProcedure <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalProcedureType schema:NoninvasiveProcedure)

# Individual: schema:Nonprofit501a (Nonprofit501a)

AnnotationAssertion(rdfs:comment schema:Nonprofit501a "Nonprofit501a: Non-profit type referring to Farmers’ Cooperative Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501a "Nonprofit501a")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501a <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501a <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501a)

# Individual: schema:Nonprofit501c1 (Nonprofit501c1)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c1 "Nonprofit501c1: Non-profit type referring to Corporations Organized Under Act of Congress, including Federal Credit Unions and National Farm Loan Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c1 "Nonprofit501c1")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c1 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c1 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c1)

# Individual: schema:Nonprofit501c10 (Nonprofit501c10)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c10 "Nonprofit501c10: Non-profit type referring to Domestic Fraternal Societies and Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c10 "Nonprofit501c10")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c10 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c10 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c10)

# Individual: schema:Nonprofit501c11 (Nonprofit501c11)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c11 "Nonprofit501c11: Non-profit type referring to Teachers' Retirement Fund Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c11 "Nonprofit501c11")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c11 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c11 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c11)

# Individual: schema:Nonprofit501c12 (Nonprofit501c12)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c12 "Nonprofit501c12: Non-profit type referring to Benevolent Life Insurance Associations, Mutual Ditch or Irrigation Companies, Mutual or Cooperative Telephone Companies.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c12 "Nonprofit501c12")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c12 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c12 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c12)

# Individual: schema:Nonprofit501c13 (Nonprofit501c13)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c13 "Nonprofit501c13: Non-profit type referring to Cemetery Companies.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c13 "Nonprofit501c13")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c13 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c13 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c13)

# Individual: schema:Nonprofit501c14 (Nonprofit501c14)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c14 "Nonprofit501c14: Non-profit type referring to State-Chartered Credit Unions, Mutual Reserve Funds.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c14 "Nonprofit501c14")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c14 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c14 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c14)

# Individual: schema:Nonprofit501c15 (Nonprofit501c15)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c15 "Nonprofit501c15: Non-profit type referring to Mutual Insurance Companies or Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c15 "Nonprofit501c15")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c15 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c15 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c15)

# Individual: schema:Nonprofit501c16 (Nonprofit501c16)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c16 "Nonprofit501c16: Non-profit type referring to Cooperative Organizations to Finance Crop Operations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c16 "Nonprofit501c16")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c16 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c16 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c16)

# Individual: schema:Nonprofit501c17 (Nonprofit501c17)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c17 "Nonprofit501c17: Non-profit type referring to Supplemental Unemployment Benefit Trusts.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c17 "Nonprofit501c17")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c17 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c17 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c17)

# Individual: schema:Nonprofit501c18 (Nonprofit501c18)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c18 "Nonprofit501c18: Non-profit type referring to Employee Funded Pension Trust (created before 25 June 1959).")
AnnotationAssertion(rdfs:label schema:Nonprofit501c18 "Nonprofit501c18")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c18 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c18 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c18)

# Individual: schema:Nonprofit501c19 (Nonprofit501c19)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c19 "Nonprofit501c19: Non-profit type referring to Post or Organization of Past or Present Members of the Armed Forces.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c19 "Nonprofit501c19")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c19 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c19 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c19)

# Individual: schema:Nonprofit501c2 (Nonprofit501c2)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c2 "Nonprofit501c2: Non-profit type referring to Title-holding Corporations for Exempt Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c2 "Nonprofit501c2")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c2 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c2 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c2)

# Individual: schema:Nonprofit501c20 (Nonprofit501c20)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c20 "Nonprofit501c20: Non-profit type referring to Group Legal Services Plan Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c20 "Nonprofit501c20")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c20 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c20 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c20)

# Individual: schema:Nonprofit501c21 (Nonprofit501c21)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c21 "Nonprofit501c21: Non-profit type referring to Black Lung Benefit Trusts.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c21 "Nonprofit501c21")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c21 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c21 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c21)

# Individual: schema:Nonprofit501c22 (Nonprofit501c22)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c22 "Nonprofit501c22: Non-profit type referring to Withdrawal Liability Payment Funds.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c22 "Nonprofit501c22")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c22 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c22 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c22)

# Individual: schema:Nonprofit501c23 (Nonprofit501c23)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c23 "Nonprofit501c23: Non-profit type referring to Veterans Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c23 "Nonprofit501c23")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c23 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c23 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c23)

# Individual: schema:Nonprofit501c24 (Nonprofit501c24)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c24 "Nonprofit501c24: Non-profit type referring to Section 4049 ERISA Trusts.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c24 "Nonprofit501c24")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c24 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c24 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c24)

# Individual: schema:Nonprofit501c25 (Nonprofit501c25)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c25 "Nonprofit501c25: Non-profit type referring to Real Property Title-Holding Corporations or Trusts with Multiple Parents.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c25 "Nonprofit501c25")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c25 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c25 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c25)

# Individual: schema:Nonprofit501c26 (Nonprofit501c26)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c26 "Nonprofit501c26: Non-profit type referring to State-Sponsored Organizations Providing Health Coverage for High-Risk Individuals.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c26 "Nonprofit501c26")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c26 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c26 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c26)

# Individual: schema:Nonprofit501c27 (Nonprofit501c27)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c27 "Nonprofit501c27: Non-profit type referring to State-Sponsored Workers' Compensation Reinsurance Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c27 "Nonprofit501c27")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c27 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c27 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c27)

# Individual: schema:Nonprofit501c28 (Nonprofit501c28)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c28 "Nonprofit501c28: Non-profit type referring to National Railroad Retirement Investment Trusts.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c28 "Nonprofit501c28")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c28 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c28 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c28)

# Individual: schema:Nonprofit501c3 (Nonprofit501c3)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c3 "Nonprofit501c3: Non-profit type referring to Religious, Educational, Charitable, Scientific, Literary, Testing for Public Safety, Fostering National or International Amateur Sports Competition, or Prevention of Cruelty to Children or Animals Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c3 "Nonprofit501c3")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c3 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c3 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c3)

# Individual: schema:Nonprofit501c4 (Nonprofit501c4)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c4 "Nonprofit501c4: Non-profit type referring to Civic Leagues, Social Welfare Organizations, and Local Associations of Employees.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c4 "Nonprofit501c4")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c4 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c4 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c4)

# Individual: schema:Nonprofit501c5 (Nonprofit501c5)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c5 "Nonprofit501c5: Non-profit type referring to Labor, Agricultural and Horticultural Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c5 "Nonprofit501c5")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c5 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c5 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c5)

# Individual: schema:Nonprofit501c6 (Nonprofit501c6)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c6 "Nonprofit501c6: Non-profit type referring to Business Leagues, Chambers of Commerce, Real Estate Boards.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c6 "Nonprofit501c6")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c6 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c6 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c6)

# Individual: schema:Nonprofit501c7 (Nonprofit501c7)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c7 "Nonprofit501c7: Non-profit type referring to Social and Recreational Clubs.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c7 "Nonprofit501c7")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c7 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c7 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c7)

# Individual: schema:Nonprofit501c8 (Nonprofit501c8)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c8 "Nonprofit501c8: Non-profit type referring to Fraternal Beneficiary Societies and Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c8 "Nonprofit501c8")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c8 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c8 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c8)

# Individual: schema:Nonprofit501c9 (Nonprofit501c9)

AnnotationAssertion(rdfs:comment schema:Nonprofit501c9 "Nonprofit501c9: Non-profit type referring to Voluntary Employee Beneficiary Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501c9 "Nonprofit501c9")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501c9 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501c9 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501c9)

# Individual: schema:Nonprofit501d (Nonprofit501d)

AnnotationAssertion(rdfs:comment schema:Nonprofit501d "Nonprofit501d: Non-profit type referring to Religious and Apostolic Associations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501d "Nonprofit501d")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501d <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501d <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501d)

# Individual: schema:Nonprofit501e (Nonprofit501e)

AnnotationAssertion(rdfs:comment schema:Nonprofit501e "Nonprofit501e: Non-profit type referring to Cooperative Hospital Service Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501e "Nonprofit501e")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501e <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501e <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501e)

# Individual: schema:Nonprofit501f (Nonprofit501f)

AnnotationAssertion(rdfs:comment schema:Nonprofit501f "Nonprofit501f: Non-profit type referring to Cooperative Service Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501f "Nonprofit501f")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501f <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501f <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501f)

# Individual: schema:Nonprofit501k (Nonprofit501k)

AnnotationAssertion(rdfs:comment schema:Nonprofit501k "Nonprofit501k: Non-profit type referring to Child Care Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501k "Nonprofit501k")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501k <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501k <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501k)

# Individual: schema:Nonprofit501n (Nonprofit501n)

AnnotationAssertion(rdfs:comment schema:Nonprofit501n "Nonprofit501n: Non-profit type referring to Charitable Risk Pools.")
AnnotationAssertion(rdfs:label schema:Nonprofit501n "Nonprofit501n")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501n <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501n <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501n)

# Individual: schema:Nonprofit501q (Nonprofit501q)

AnnotationAssertion(rdfs:comment schema:Nonprofit501q "Nonprofit501q: Non-profit type referring to Credit Counseling Organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit501q "Nonprofit501q")
AnnotationAssertion(schema:isPartOf schema:Nonprofit501q <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit501q <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit501q)

# Individual: schema:Nonprofit527 (Nonprofit527)

AnnotationAssertion(rdfs:comment schema:Nonprofit527 "Nonprofit527: Non-profit type referring to political organizations.")
AnnotationAssertion(rdfs:label schema:Nonprofit527 "Nonprofit527")
AnnotationAssertion(schema:isPartOf schema:Nonprofit527 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Nonprofit527 <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:USNonprofitType schema:Nonprofit527)

# Individual: schema:NonprofitANBI (NonprofitANBI)

AnnotationAssertion(rdfs:comment schema:NonprofitANBI "NonprofitANBI: Non-profit type referring to a Public Benefit Organization (NL).")
AnnotationAssertion(rdfs:label schema:NonprofitANBI "NonprofitANBI")
AnnotationAssertion(schema:isPartOf schema:NonprofitANBI <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NonprofitANBI <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:NLNonprofitType schema:NonprofitANBI)

# Individual: schema:NonprofitSBBI (NonprofitSBBI)

AnnotationAssertion(rdfs:comment schema:NonprofitSBBI "NonprofitSBBI: Non-profit type referring to a Social Interest Promoting Institution (NL).")
AnnotationAssertion(rdfs:label schema:NonprofitSBBI "NonprofitSBBI")
AnnotationAssertion(schema:isPartOf schema:NonprofitSBBI <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NonprofitSBBI <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:NLNonprofitType schema:NonprofitSBBI)

# Individual: schema:Nose (Nose)

AnnotationAssertion(rdfs:comment schema:Nose "Nose function assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Nose "Nose")
AnnotationAssertion(schema:isPartOf schema:Nose <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Nose)

# Individual: schema:NotInForce (NotInForce)

AnnotationAssertion(rdfs:comment schema:NotInForce "Indicates that a legislation is currently not in force.")
AnnotationAssertion(rdfs:label schema:NotInForce "NotInForce")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:NotInForce <http://data.europa.eu/eli/ontology#InForce-notInForce>)
AnnotationAssertion(schema:contributor schema:NotInForce <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:NotInForce <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:NotInForce <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalForceStatus schema:NotInForce)

# Individual: schema:NotYetRecruiting (NotYetRecruiting)

AnnotationAssertion(rdfs:comment schema:NotYetRecruiting "Not yet recruiting.")
AnnotationAssertion(rdfs:label schema:NotYetRecruiting "NotYetRecruiting")
AnnotationAssertion(schema:isPartOf schema:NotYetRecruiting <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:NotYetRecruiting)

# Individual: schema:Number (Number)

ClassAssertion(schema:DataType schema:Number)

# Individual: schema:Nursing (Nursing)

ClassAssertion(schema:MedicalSpecialty schema:Nursing)

# Individual: schema:OTC (OTC)

AnnotationAssertion(rdfs:comment schema:OTC "The character of a medical substance, typically a medicine, of being available over the counter or not.")
AnnotationAssertion(rdfs:label schema:OTC "OTC")
AnnotationAssertion(schema:isPartOf schema:OTC <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPrescriptionStatus schema:OTC)

# Individual: schema:Observational (Observational)

AnnotationAssertion(rdfs:comment schema:Observational "An observational study design.")
AnnotationAssertion(rdfs:label schema:Observational "Observational")
AnnotationAssertion(schema:isPartOf schema:Observational <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:Observational)

# Individual: schema:Obstetric (Obstetric)

ClassAssertion(schema:MedicalSpecialty schema:Obstetric)

# Individual: schema:OccupationalActivity (OccupationalActivity)

AnnotationAssertion(rdfs:comment schema:OccupationalActivity "Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.")
AnnotationAssertion(rdfs:label schema:OccupationalActivity "OccupationalActivity")
AnnotationAssertion(schema:isPartOf schema:OccupationalActivity <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:OccupationalActivity)

# Individual: schema:OfficialLegalValue (OfficialLegalValue)

AnnotationAssertion(rdfs:comment schema:OfficialLegalValue "All the documents published by an official publisher should have at least the legal value level \"OfficialLegalValue\". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of an EU directive published by the EU Office of Publications).")
AnnotationAssertion(rdfs:label schema:OfficialLegalValue "OfficialLegalValue")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:OfficialLegalValue <http://data.europa.eu/eli/ontology#LegalValue-official>)
AnnotationAssertion(schema:contributor schema:OfficialLegalValue <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:OfficialLegalValue <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OfficialLegalValue <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalValueLevel schema:OfficialLegalValue)

# Individual: schema:OfflineEventAttendanceMode (OfflineEventAttendanceMode)

AnnotationAssertion(rdfs:comment schema:OfflineEventAttendanceMode "OfflineEventAttendanceMode - an event that is primarily conducted offline. ")
AnnotationAssertion(rdfs:label schema:OfflineEventAttendanceMode "OfflineEventAttendanceMode")
AnnotationAssertion(schema:isPartOf schema:OfflineEventAttendanceMode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OfflineEventAttendanceMode <https://github.com/schemaorg/schemaorg/issues/1842>)
ClassAssertion(schema:EventAttendanceModeEnumeration schema:OfflineEventAttendanceMode)

# Individual: schema:OfflinePermanently (OfflinePermanently)

AnnotationAssertion(rdfs:comment schema:OfflinePermanently "Game server status: OfflinePermanently. Server is offline and not available.")
AnnotationAssertion(rdfs:label schema:OfflinePermanently "OfflinePermanently")
ClassAssertion(schema:GameServerStatus schema:OfflinePermanently)

# Individual: schema:OfflineTemporarily (OfflineTemporarily)

AnnotationAssertion(rdfs:comment schema:OfflineTemporarily "Game server status: OfflineTemporarily. Server is offline now but it can be online soon.")
AnnotationAssertion(rdfs:label schema:OfflineTemporarily "OfflineTemporarily")
ClassAssertion(schema:GameServerStatus schema:OfflineTemporarily)

# Individual: schema:OnSitePickup (OnSitePickup)

AnnotationAssertion(rdfs:comment schema:OnSitePickup "A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.")
AnnotationAssertion(rdfs:label schema:OnSitePickup "OnSitePickup")
ClassAssertion(schema:DeliveryMethod schema:OnSitePickup)

# Individual: schema:Oncologic (Oncologic)

ClassAssertion(schema:MedicalSpecialty schema:Oncologic)

# Individual: schema:OneTimePayments (OneTimePayments)

AnnotationAssertion(rdfs:comment schema:OneTimePayments "OneTimePayments: this is a benefit for one-time payments for individuals.")
AnnotationAssertion(rdfs:label schema:OneTimePayments "OneTimePayments")
AnnotationAssertion(schema:isPartOf schema:OneTimePayments <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OneTimePayments <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:OneTimePayments)

# Individual: schema:Online (Online)

AnnotationAssertion(rdfs:comment schema:Online "Game server status: Online. Server is available.")
AnnotationAssertion(rdfs:label schema:Online "Online")
ClassAssertion(schema:GameServerStatus schema:Online)

# Individual: schema:OnlineEventAttendanceMode (OnlineEventAttendanceMode)

AnnotationAssertion(rdfs:comment schema:OnlineEventAttendanceMode "OnlineEventAttendanceMode - an event that is primarily conducted online. ")
AnnotationAssertion(rdfs:label schema:OnlineEventAttendanceMode "OnlineEventAttendanceMode")
AnnotationAssertion(schema:isPartOf schema:OnlineEventAttendanceMode <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OnlineEventAttendanceMode <https://github.com/schemaorg/schemaorg/issues/1842>)
ClassAssertion(schema:EventAttendanceModeEnumeration schema:OnlineEventAttendanceMode)

# Individual: schema:OnlineFull (OnlineFull)

AnnotationAssertion(rdfs:comment schema:OnlineFull "Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.")
AnnotationAssertion(rdfs:label schema:OnlineFull "OnlineFull")
ClassAssertion(schema:GameServerStatus schema:OnlineFull)

# Individual: schema:OnlineOnly (OnlineOnly)

AnnotationAssertion(rdfs:comment schema:OnlineOnly "Indicates that the item is available only online.")
AnnotationAssertion(rdfs:label schema:OnlineOnly "OnlineOnly")
ClassAssertion(schema:ItemAvailability schema:OnlineOnly)

# Individual: schema:OpenTrial (OpenTrial)

AnnotationAssertion(rdfs:comment schema:OpenTrial "A trial design in which the researcher knows the full details of the treatment, and so does the patient.")
AnnotationAssertion(rdfs:label schema:OpenTrial "OpenTrial")
AnnotationAssertion(schema:isPartOf schema:OpenTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:OpenTrial)

# Individual: schema:Optometric (Optometric)

ClassAssertion(schema:MedicalSpecialty schema:Optometric)

# Individual: schema:OrderCancelled (OrderCancelled)

AnnotationAssertion(rdfs:comment schema:OrderCancelled "OrderStatus representing cancellation of an order.")
AnnotationAssertion(rdfs:label schema:OrderCancelled "OrderCancelled")
ClassAssertion(schema:OrderStatus schema:OrderCancelled)

# Individual: schema:OrderDelivered (OrderDelivered)

AnnotationAssertion(rdfs:comment schema:OrderDelivered "OrderStatus representing successful delivery of an order.")
AnnotationAssertion(rdfs:label schema:OrderDelivered "OrderDelivered")
ClassAssertion(schema:OrderStatus schema:OrderDelivered)

# Individual: schema:OrderInTransit (OrderInTransit)

AnnotationAssertion(rdfs:comment schema:OrderInTransit "OrderStatus representing that an order is in transit.")
AnnotationAssertion(rdfs:label schema:OrderInTransit "OrderInTransit")
ClassAssertion(schema:OrderStatus schema:OrderInTransit)

# Individual: schema:OrderPaymentDue (OrderPaymentDue)

AnnotationAssertion(rdfs:comment schema:OrderPaymentDue "OrderStatus representing that payment is due on an order.")
AnnotationAssertion(rdfs:label schema:OrderPaymentDue "OrderPaymentDue")
ClassAssertion(schema:OrderStatus schema:OrderPaymentDue)

# Individual: schema:OrderPickupAvailable (OrderPickupAvailable)

AnnotationAssertion(rdfs:comment schema:OrderPickupAvailable "OrderStatus representing availability of an order for pickup.")
AnnotationAssertion(rdfs:label schema:OrderPickupAvailable "OrderPickupAvailable")
ClassAssertion(schema:OrderStatus schema:OrderPickupAvailable)

# Individual: schema:OrderProblem (OrderProblem)

AnnotationAssertion(rdfs:comment schema:OrderProblem "OrderStatus representing that there is a problem with the order.")
AnnotationAssertion(rdfs:label schema:OrderProblem "OrderProblem")
ClassAssertion(schema:OrderStatus schema:OrderProblem)

# Individual: schema:OrderProcessing (OrderProcessing)

AnnotationAssertion(rdfs:comment schema:OrderProcessing "OrderStatus representing that an order is being processed.")
AnnotationAssertion(rdfs:label schema:OrderProcessing "OrderProcessing")
ClassAssertion(schema:OrderStatus schema:OrderProcessing)

# Individual: schema:OrderReturned (OrderReturned)

AnnotationAssertion(rdfs:comment schema:OrderReturned "OrderStatus representing that an order has been returned.")
AnnotationAssertion(rdfs:label schema:OrderReturned "OrderReturned")
ClassAssertion(schema:OrderStatus schema:OrderReturned)

# Individual: schema:OriginalMediaContent (OriginalMediaContent)

AnnotationAssertion(rdfs:comment schema:OriginalMediaContent "Content coded 'as original media content' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'original': No evidence the footage has been misleadingly altered or manipulated, though it may contain false or misleading claims.

For an [[ImageObject]] to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.

For an [[ImageObject]] with embedded text to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.

For an [[AudioObject]] to be 'original': No evidence the audio has been misleadingly altered or manipulated, though it may contain false or misleading claims.
")
AnnotationAssertion(rdfs:label schema:OriginalMediaContent "OriginalMediaContent")
AnnotationAssertion(schema:isPartOf schema:OriginalMediaContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OriginalMediaContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:OriginalMediaContent)

# Individual: schema:OriginalShippingFees (OriginalShippingFees)

AnnotationAssertion(rdfs:comment schema:OriginalShippingFees "Specifies that the customer must pay the original shipping costs when returning a product.")
AnnotationAssertion(rdfs:label schema:OriginalShippingFees "OriginalShippingFees")
AnnotationAssertion(schema:isPartOf schema:OriginalShippingFees <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OriginalShippingFees <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:ReturnFeesEnumeration schema:OriginalShippingFees)

# Individual: schema:Osteopathic (Osteopathic)

AnnotationAssertion(rdfs:comment schema:Osteopathic "A system of medicine focused on promoting the body's innate ability to heal itself.")
AnnotationAssertion(rdfs:label schema:Osteopathic "Osteopathic")
AnnotationAssertion(schema:isPartOf schema:Osteopathic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:Osteopathic)

# Individual: schema:Otolaryngologic (Otolaryngologic)

ClassAssertion(schema:MedicalSpecialty schema:Otolaryngologic)

# Individual: schema:OutOfStock (OutOfStock)

AnnotationAssertion(rdfs:comment schema:OutOfStock "Indicates that the item is out of stock.")
AnnotationAssertion(rdfs:label schema:OutOfStock "OutOfStock")
ClassAssertion(schema:ItemAvailability schema:OutOfStock)

# Individual: schema:OverviewHealthAspect (OverviewHealthAspect)

AnnotationAssertion(rdfs:comment schema:OverviewHealthAspect "Overview of the content. Contains a summarized view of the topic with the most relevant information for an introduction.")
AnnotationAssertion(rdfs:label schema:OverviewHealthAspect "OverviewHealthAspect")
AnnotationAssertion(schema:isPartOf schema:OverviewHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:OverviewHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:OverviewHealthAspect)

# Individual: schema:PET (PET)

AnnotationAssertion(rdfs:comment schema:PET "Positron emission tomography imaging.")
AnnotationAssertion(rdfs:label schema:PET "PET")
AnnotationAssertion(schema:isPartOf schema:PET <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:PET)

# Individual: schema:PaidLeave (PaidLeave)

AnnotationAssertion(rdfs:comment schema:PaidLeave "PaidLeave: this is a benefit for paid leave.")
AnnotationAssertion(rdfs:label schema:PaidLeave "PaidLeave")
AnnotationAssertion(schema:isPartOf schema:PaidLeave <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PaidLeave <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:PaidLeave)

# Individual: schema:Paperback (Paperback)

AnnotationAssertion(rdfs:comment schema:Paperback "Book format: Paperback.")
AnnotationAssertion(rdfs:label schema:Paperback "Paperback")
ClassAssertion(schema:BookFormatType schema:Paperback)

# Individual: schema:ParcelService (ParcelService)

AnnotationAssertion(rdfs:comment schema:ParcelService "A private parcel service as the delivery mode available for a certain offer.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#DHL\\n* http://purl.org/goodrelations/v1#FederalExpress\\n* http://purl.org/goodrelations/v1#UPS
      ")
AnnotationAssertion(rdfs:label schema:ParcelService "ParcelService")
AnnotationAssertion(schema:contributor schema:ParcelService <https://schema.org/docs/collab/GoodRelationsClass>)
ClassAssertion(schema:DeliveryMethod schema:ParcelService)

# Individual: schema:ParentalSupport (ParentalSupport)

AnnotationAssertion(rdfs:comment schema:ParentalSupport "ParentalSupport: this is a benefit for parental support.")
AnnotationAssertion(rdfs:label schema:ParentalSupport "ParentalSupport")
AnnotationAssertion(schema:isPartOf schema:ParentalSupport <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ParentalSupport <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:ParentalSupport)

# Individual: schema:ParkingMap (ParkingMap)

AnnotationAssertion(rdfs:comment schema:ParkingMap "A parking map.")
AnnotationAssertion(rdfs:label schema:ParkingMap "ParkingMap")
ClassAssertion(schema:MapCategoryType schema:ParkingMap)

# Individual: schema:PartiallyInForce (PartiallyInForce)

AnnotationAssertion(rdfs:comment schema:PartiallyInForce "Indicates that parts of the legislation are in force, and parts are not.")
AnnotationAssertion(rdfs:label schema:PartiallyInForce "PartiallyInForce")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:PartiallyInForce <http://data.europa.eu/eli/ontology#InForce-partiallyInForce>)
AnnotationAssertion(schema:contributor schema:PartiallyInForce <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:PartiallyInForce <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PartiallyInForce <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalForceStatus schema:PartiallyInForce)

# Individual: schema:Pathology (Pathology)

AnnotationAssertion(rdfs:comment schema:Pathology "A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.")
AnnotationAssertion(rdfs:label schema:Pathology "Pathology")
AnnotationAssertion(schema:isPartOf schema:Pathology <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Pathology)

# Individual: schema:PatientExperienceHealthAspect (PatientExperienceHealthAspect)

AnnotationAssertion(rdfs:comment schema:PatientExperienceHealthAspect "Content about the real life experience of patients or people that have lived a similar experience about the topic. May be forums, topics, Q-and-A and related material.")
AnnotationAssertion(rdfs:label schema:PatientExperienceHealthAspect "PatientExperienceHealthAspect")
AnnotationAssertion(schema:isPartOf schema:PatientExperienceHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PatientExperienceHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:PatientExperienceHealthAspect)

# Individual: schema:PaymentAutomaticallyApplied (PaymentAutomaticallyApplied)

AnnotationAssertion(rdfs:comment schema:PaymentAutomaticallyApplied "An automatic payment system is in place and will be used.")
AnnotationAssertion(rdfs:label schema:PaymentAutomaticallyApplied "PaymentAutomaticallyApplied")
ClassAssertion(schema:PaymentStatusType schema:PaymentAutomaticallyApplied)

# Individual: schema:PaymentComplete (PaymentComplete)

AnnotationAssertion(rdfs:comment schema:PaymentComplete "The payment has been received and processed.")
AnnotationAssertion(rdfs:label schema:PaymentComplete "PaymentComplete")
ClassAssertion(schema:PaymentStatusType schema:PaymentComplete)

# Individual: schema:PaymentDeclined (PaymentDeclined)

AnnotationAssertion(rdfs:comment schema:PaymentDeclined "The payee received the payment, but it was declined for some reason.")
AnnotationAssertion(rdfs:label schema:PaymentDeclined "PaymentDeclined")
ClassAssertion(schema:PaymentStatusType schema:PaymentDeclined)

# Individual: schema:PaymentDue (PaymentDue)

AnnotationAssertion(rdfs:comment schema:PaymentDue "The payment is due, but still within an acceptable time to be received.")
AnnotationAssertion(rdfs:label schema:PaymentDue "PaymentDue")
ClassAssertion(schema:PaymentStatusType schema:PaymentDue)

# Individual: schema:PaymentPastDue (PaymentPastDue)

AnnotationAssertion(rdfs:comment schema:PaymentPastDue "The payment is due and considered late.")
AnnotationAssertion(rdfs:label schema:PaymentPastDue "PaymentPastDue")
ClassAssertion(schema:PaymentStatusType schema:PaymentPastDue)

# Individual: schema:Pediatric (Pediatric)

ClassAssertion(schema:MedicalSpecialty schema:Pediatric)

# Individual: schema:PercutaneousProcedure (PercutaneousProcedure)

AnnotationAssertion(rdfs:comment schema:PercutaneousProcedure "A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.")
AnnotationAssertion(rdfs:label schema:PercutaneousProcedure "PercutaneousProcedure")
AnnotationAssertion(schema:isPartOf schema:PercutaneousProcedure <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalProcedureType schema:PercutaneousProcedure)

# Individual: schema:PharmacySpecialty (PharmacySpecialty)

AnnotationAssertion(rdfs:comment schema:PharmacySpecialty "The practice or art and science of preparing and dispensing drugs and medicines.")
AnnotationAssertion(rdfs:label schema:PharmacySpecialty "PharmacySpecialty")
AnnotationAssertion(schema:isPartOf schema:PharmacySpecialty <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:PharmacySpecialty)

# Individual: schema:PhoneCarrierPayment (PhoneCarrierPayment)

AnnotationAssertion(rdfs:comment schema:PhoneCarrierPayment "Payment by billing via the phone carrier.")
AnnotationAssertion(rdfs:label schema:PhoneCarrierPayment "PhoneCarrierPayment")
ClassAssertion(schema:PaymentMethodType schema:PhoneCarrierPayment)

# Individual: schema:Physiotherapy (Physiotherapy)

ClassAssertion(schema:MedicalSpecialty schema:Physiotherapy)

# Individual: schema:PlaceboControlledTrial (PlaceboControlledTrial)

AnnotationAssertion(rdfs:comment schema:PlaceboControlledTrial "A placebo-controlled trial design.")
AnnotationAssertion(rdfs:label schema:PlaceboControlledTrial "PlaceboControlledTrial")
AnnotationAssertion(schema:isPartOf schema:PlaceboControlledTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:PlaceboControlledTrial)

# Individual: schema:PlasticSurgery (PlasticSurgery)

ClassAssertion(schema:MedicalSpecialty schema:PlasticSurgery)

# Individual: schema:Podiatric (Podiatric)

ClassAssertion(schema:MedicalSpecialty schema:Podiatric)

# Individual: schema:PositiveFilmDigitalSource (PositiveFilmDigitalSource)

AnnotationAssertion(rdfs:comment schema:PositiveFilmDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/positiveFilm\">positive film</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:PositiveFilmDigitalSource "PositiveFilmDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:PositiveFilmDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/positiveFilm>)
AnnotationAssertion(schema:isPartOf schema:PositiveFilmDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PositiveFilmDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:PositiveFilmDigitalSource)

# Individual: schema:PotentialActionStatus (PotentialActionStatus)

AnnotationAssertion(rdfs:comment schema:PotentialActionStatus "A description of an action that is supported.")
AnnotationAssertion(rdfs:label schema:PotentialActionStatus "PotentialActionStatus")
ClassAssertion(schema:ActionStatusType schema:PotentialActionStatus)

# Individual: schema:PreOrder (PreOrder)

AnnotationAssertion(rdfs:comment schema:PreOrder "Indicates that the item is available for pre-order.")
AnnotationAssertion(rdfs:label schema:PreOrder "PreOrder")
ClassAssertion(schema:ItemAvailability schema:PreOrder)

# Individual: schema:PreSale (PreSale)

AnnotationAssertion(rdfs:comment schema:PreSale "Indicates that the item is available for ordering and delivery before general availability.")
AnnotationAssertion(rdfs:label schema:PreSale "PreSale")
ClassAssertion(schema:ItemAvailability schema:PreSale)

# Individual: schema:PregnancyHealthAspect (PregnancyHealthAspect)

AnnotationAssertion(rdfs:comment schema:PregnancyHealthAspect "Content discussing pregnancy-related aspects of a health topic.")
AnnotationAssertion(rdfs:label schema:PregnancyHealthAspect "PregnancyHealthAspect")
AnnotationAssertion(schema:isPartOf schema:PregnancyHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PregnancyHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:PregnancyHealthAspect)

# Individual: schema:PrescriptionOnly (PrescriptionOnly)

AnnotationAssertion(rdfs:comment schema:PrescriptionOnly "Available by prescription only.")
AnnotationAssertion(rdfs:label schema:PrescriptionOnly "PrescriptionOnly")
AnnotationAssertion(schema:isPartOf schema:PrescriptionOnly <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugPrescriptionStatus schema:PrescriptionOnly)

# Individual: schema:PreventionHealthAspect (PreventionHealthAspect)

AnnotationAssertion(rdfs:comment schema:PreventionHealthAspect "Information about actions or measures that can be taken to avoid getting the topic or reaching a critical situation related to the topic.")
AnnotationAssertion(rdfs:label schema:PreventionHealthAspect "PreventionHealthAspect")
AnnotationAssertion(schema:isPartOf schema:PreventionHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PreventionHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:PreventionHealthAspect)

# Individual: schema:PrimaryCare (PrimaryCare)

ClassAssertion(schema:MedicalSpecialty schema:PrimaryCare)

# Individual: schema:PrintDigitalSource (PrintDigitalSource)

AnnotationAssertion(rdfs:comment schema:PrintDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/print\">print</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:PrintDigitalSource "PrintDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:PrintDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/print>)
AnnotationAssertion(schema:isPartOf schema:PrintDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PrintDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:PrintDigitalSource)

# Individual: schema:Prion (Prion)

AnnotationAssertion(rdfs:comment schema:Prion "A prion is an infectious agent composed of protein in a misfolded form.")
AnnotationAssertion(rdfs:label schema:Prion "Prion")
AnnotationAssertion(schema:isPartOf schema:Prion <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:Prion)

# Individual: schema:PrognosisHealthAspect (PrognosisHealthAspect)

AnnotationAssertion(rdfs:comment schema:PrognosisHealthAspect "Typical progression and happenings of life course of the topic.")
AnnotationAssertion(rdfs:label schema:PrognosisHealthAspect "PrognosisHealthAspect")
AnnotationAssertion(schema:isPartOf schema:PrognosisHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:PrognosisHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:PrognosisHealthAspect)

# Individual: schema:Protozoa (Protozoa)

AnnotationAssertion(rdfs:comment schema:Protozoa "Single-celled organism that causes an infection.")
AnnotationAssertion(rdfs:label schema:Protozoa "Protozoa")
AnnotationAssertion(schema:isPartOf schema:Protozoa <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:Protozoa)

# Individual: schema:Psychiatric (Psychiatric)

ClassAssertion(schema:MedicalSpecialty schema:Psychiatric)

# Individual: schema:PublicHealth (PublicHealth)

ClassAssertion(schema:MedicalSpecialty schema:PublicHealth)

# Individual: schema:PublicHolidays (PublicHolidays)

AnnotationAssertion(rdfs:comment schema:PublicHolidays "This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a \"day of the week\", it can be used with [[OpeningHoursSpecification]]. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.")
AnnotationAssertion(rdfs:label schema:PublicHolidays "PublicHolidays")
AnnotationAssertion(schema:contributor schema:PublicHolidays <https://schema.org/docs/collab/GoodRelationsClass>)
ClassAssertion(schema:DayOfWeek schema:PublicHolidays)

# Individual: schema:Pulmonary (Pulmonary)

AnnotationAssertion(rdfs:comment schema:Pulmonary "A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.")
AnnotationAssertion(rdfs:label schema:Pulmonary "Pulmonary")
AnnotationAssertion(schema:isPartOf schema:Pulmonary <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Pulmonary)

# Individual: schema:Radiography (Radiography)

AnnotationAssertion(rdfs:comment schema:Radiography "Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.")
AnnotationAssertion(rdfs:label schema:Radiography "Radiography")
AnnotationAssertion(schema:isPartOf schema:Radiography <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:Radiography)
ClassAssertion(schema:MedicalSpecialty schema:Radiography)

# Individual: schema:RandomizedTrial (RandomizedTrial)

AnnotationAssertion(rdfs:comment schema:RandomizedTrial "A randomized trial design.")
AnnotationAssertion(rdfs:label schema:RandomizedTrial "RandomizedTrial")
AnnotationAssertion(schema:isPartOf schema:RandomizedTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:RandomizedTrial)

# Individual: schema:ReadPermission (ReadPermission)

AnnotationAssertion(rdfs:comment schema:ReadPermission "Permission to read or view the document.")
AnnotationAssertion(rdfs:label schema:ReadPermission "ReadPermission")
ClassAssertion(schema:DigitalDocumentPermissionType schema:ReadPermission)

# Individual: schema:RearWheelDriveConfiguration (RearWheelDriveConfiguration)

AnnotationAssertion(rdfs:comment schema:RearWheelDriveConfiguration "Real-wheel drive is a transmission layout where the engine drives the rear wheels.")
AnnotationAssertion(rdfs:label schema:RearWheelDriveConfiguration "RearWheelDriveConfiguration")
AnnotationAssertion(schema:contributor schema:RearWheelDriveConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:DriveWheelConfigurationValue schema:RearWheelDriveConfiguration)

# Individual: schema:Recruiting (Recruiting)

AnnotationAssertion(rdfs:comment schema:Recruiting "Recruiting participants.")
AnnotationAssertion(rdfs:label schema:Recruiting "Recruiting")
AnnotationAssertion(schema:isPartOf schema:Recruiting <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:Recruiting)

# Individual: schema:ReducedRelevanceForChildrenConsideration (ReducedRelevanceForChildrenConsideration)

AnnotationAssertion(rdfs:comment schema:ReducedRelevanceForChildrenConsideration "A general code for cases where relevance to children is reduced, e.g. adult education, mortgages, retirement-related products, etc.")
AnnotationAssertion(rdfs:label schema:ReducedRelevanceForChildrenConsideration "ReducedRelevanceForChildrenConsideration")
AnnotationAssertion(schema:isPartOf schema:ReducedRelevanceForChildrenConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReducedRelevanceForChildrenConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:ReducedRelevanceForChildrenConsideration)

# Individual: schema:RefurbishedCondition (RefurbishedCondition)

AnnotationAssertion(rdfs:comment schema:RefurbishedCondition "Indicates that the item is refurbished.")
AnnotationAssertion(rdfs:label schema:RefurbishedCondition "RefurbishedCondition")
ClassAssertion(schema:OfferItemCondition schema:RefurbishedCondition)

# Individual: schema:Registry (Registry)

AnnotationAssertion(rdfs:comment schema:Registry "A registry-based study design.")
AnnotationAssertion(rdfs:label schema:Registry "Registry")
AnnotationAssertion(schema:isPartOf schema:Registry <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalObservationalStudyDesign schema:Registry)

# Individual: schema:RegularPrice (RegularPrice)

AnnotationAssertion(rdfs:comment schema:RegularPrice "Represents the regular price of an offered product. This is usually the advertised price before a temporary sale. Once the sale period ends the advertised price will go back to the regular price.")
AnnotationAssertion(rdfs:label schema:RegularPrice "RegularPrice")
AnnotationAssertion(schema:isPartOf schema:RegularPrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RegularPrice <https://github.com/schemaorg/schemaorg/issues/3583>)
ClassAssertion(schema:PriceTypeEnumeration schema:RegularPrice)

# Individual: schema:ReimbursementCap (ReimbursementCap)

AnnotationAssertion(rdfs:comment schema:ReimbursementCap "The drug's cost represents the maximum reimbursement paid by an insurer for the drug.")
AnnotationAssertion(rdfs:label schema:ReimbursementCap "ReimbursementCap")
AnnotationAssertion(schema:isPartOf schema:ReimbursementCap <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugCostCategory schema:ReimbursementCap)

# Individual: schema:RelatedTopicsHealthAspect (RelatedTopicsHealthAspect)

AnnotationAssertion(rdfs:comment schema:RelatedTopicsHealthAspect "Other prominent or relevant topics tied to the main topic.")
AnnotationAssertion(rdfs:label schema:RelatedTopicsHealthAspect "RelatedTopicsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:RelatedTopicsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RelatedTopicsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:RelatedTopicsHealthAspect)

# Individual: schema:RemixAlbum (RemixAlbum)

AnnotationAssertion(rdfs:comment schema:RemixAlbum "RemixAlbum.")
AnnotationAssertion(rdfs:label schema:RemixAlbum "RemixAlbum")
AnnotationAssertion(schema:contributor schema:RemixAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:RemixAlbum)

# Individual: schema:Renal (Renal)

AnnotationAssertion(rdfs:comment schema:Renal "A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.")
AnnotationAssertion(rdfs:label schema:Renal "Renal")
AnnotationAssertion(schema:isPartOf schema:Renal <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Renal)

# Individual: schema:RentalVehicleUsage (RentalVehicleUsage)

AnnotationAssertion(rdfs:comment schema:RentalVehicleUsage "Indicates the usage of the vehicle as a rental car.")
AnnotationAssertion(rdfs:label schema:RentalVehicleUsage "RentalVehicleUsage")
AnnotationAssertion(schema:contributor schema:RentalVehicleUsage <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:RentalVehicleUsage <https://auto.schema.org>)
ClassAssertion(schema:CarUsageType schema:RentalVehicleUsage)

# Individual: schema:ReservationCancelled (ReservationCancelled)

AnnotationAssertion(rdfs:comment schema:ReservationCancelled "The status for a previously confirmed reservation that is now cancelled.")
AnnotationAssertion(rdfs:label schema:ReservationCancelled "ReservationCancelled")
ClassAssertion(schema:ReservationStatusType schema:ReservationCancelled)

# Individual: schema:ReservationConfirmed (ReservationConfirmed)

AnnotationAssertion(rdfs:comment schema:ReservationConfirmed "The status of a confirmed reservation.")
AnnotationAssertion(rdfs:label schema:ReservationConfirmed "ReservationConfirmed")
ClassAssertion(schema:ReservationStatusType schema:ReservationConfirmed)

# Individual: schema:ReservationHold (ReservationHold)

AnnotationAssertion(rdfs:comment schema:ReservationHold "The status of a reservation on hold pending an update like credit card number or flight changes.")
AnnotationAssertion(rdfs:label schema:ReservationHold "ReservationHold")
ClassAssertion(schema:ReservationStatusType schema:ReservationHold)

# Individual: schema:ReservationPending (ReservationPending)

AnnotationAssertion(rdfs:comment schema:ReservationPending "The status of a reservation when a request has been sent, but not confirmed.")
AnnotationAssertion(rdfs:label schema:ReservationPending "ReservationPending")
ClassAssertion(schema:ReservationStatusType schema:ReservationPending)

# Individual: schema:Reserved (Reserved)

AnnotationAssertion(rdfs:comment schema:Reserved "Indicates that the item is reserved and therefore not available.")
AnnotationAssertion(rdfs:label schema:Reserved "Reserved")
ClassAssertion(schema:ItemAvailability schema:Reserved)

# Individual: schema:RespiratoryTherapy (RespiratoryTherapy)

ClassAssertion(schema:MedicalSpecialty schema:RespiratoryTherapy)

# Individual: schema:RestockingFees (RestockingFees)

AnnotationAssertion(rdfs:comment schema:RestockingFees "Specifies that the customer must pay a restocking fee when returning a product.")
AnnotationAssertion(rdfs:label schema:RestockingFees "RestockingFees")
AnnotationAssertion(schema:isPartOf schema:RestockingFees <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RestockingFees <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:ReturnFeesEnumeration schema:RestockingFees)

# Individual: schema:ResultsAvailable (ResultsAvailable)

AnnotationAssertion(rdfs:comment schema:ResultsAvailable "Results are available.")
AnnotationAssertion(rdfs:label schema:ResultsAvailable "ResultsAvailable")
AnnotationAssertion(schema:isPartOf schema:ResultsAvailable <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:ResultsAvailable)

# Individual: schema:ResultsNotAvailable (ResultsNotAvailable)

AnnotationAssertion(rdfs:comment schema:ResultsNotAvailable "Results are not available.")
AnnotationAssertion(rdfs:label schema:ResultsNotAvailable "ResultsNotAvailable")
AnnotationAssertion(schema:isPartOf schema:ResultsNotAvailable <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:ResultsNotAvailable)

# Individual: schema:Retail (Retail)

AnnotationAssertion(rdfs:comment schema:Retail "The drug's cost represents the retail cost of the drug.")
AnnotationAssertion(rdfs:label schema:Retail "Retail")
AnnotationAssertion(schema:isPartOf schema:Retail <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugCostCategory schema:Retail)

# Individual: schema:ReturnAtKiosk (ReturnAtKiosk)

AnnotationAssertion(rdfs:comment schema:ReturnAtKiosk "Specifies that product returns must be made at a kiosk.")
AnnotationAssertion(rdfs:label schema:ReturnAtKiosk "ReturnAtKiosk")
AnnotationAssertion(schema:isPartOf schema:ReturnAtKiosk <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnAtKiosk <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnMethodEnumeration schema:ReturnAtKiosk)

# Individual: schema:ReturnByMail (ReturnByMail)

AnnotationAssertion(rdfs:comment schema:ReturnByMail "Specifies that product returns must be done by mail.")
AnnotationAssertion(rdfs:label schema:ReturnByMail "ReturnByMail")
AnnotationAssertion(schema:isPartOf schema:ReturnByMail <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnByMail <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnMethodEnumeration schema:ReturnByMail)

# Individual: schema:ReturnFeesCustomerResponsibility (ReturnFeesCustomerResponsibility)

AnnotationAssertion(rdfs:comment schema:ReturnFeesCustomerResponsibility "Specifies that product returns must be paid for, and are the responsibility of, the customer.")
AnnotationAssertion(rdfs:label schema:ReturnFeesCustomerResponsibility "ReturnFeesCustomerResponsibility")
AnnotationAssertion(schema:isPartOf schema:ReturnFeesCustomerResponsibility <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnFeesCustomerResponsibility <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnFeesEnumeration schema:ReturnFeesCustomerResponsibility)

# Individual: schema:ReturnInStore (ReturnInStore)

AnnotationAssertion(rdfs:comment schema:ReturnInStore "Specifies that product returns must be made in a store.")
AnnotationAssertion(rdfs:label schema:ReturnInStore "ReturnInStore")
AnnotationAssertion(schema:isPartOf schema:ReturnInStore <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnInStore <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnMethodEnumeration schema:ReturnInStore)

# Individual: schema:ReturnLabelCustomerResponsibility (ReturnLabelCustomerResponsibility)

AnnotationAssertion(rdfs:comment schema:ReturnLabelCustomerResponsibility "Indicated that creating a return label is the responsibility of the customer.")
AnnotationAssertion(rdfs:label schema:ReturnLabelCustomerResponsibility "ReturnLabelCustomerResponsibility")
AnnotationAssertion(schema:isPartOf schema:ReturnLabelCustomerResponsibility <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnLabelCustomerResponsibility <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnLabelSourceEnumeration schema:ReturnLabelCustomerResponsibility)

# Individual: schema:ReturnLabelDownloadAndPrint (ReturnLabelDownloadAndPrint)

AnnotationAssertion(rdfs:comment schema:ReturnLabelDownloadAndPrint "Indicated that a return label must be downloaded and printed by the customer.")
AnnotationAssertion(rdfs:label schema:ReturnLabelDownloadAndPrint "ReturnLabelDownloadAndPrint")
AnnotationAssertion(schema:isPartOf schema:ReturnLabelDownloadAndPrint <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnLabelDownloadAndPrint <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnLabelSourceEnumeration schema:ReturnLabelDownloadAndPrint)

# Individual: schema:ReturnLabelInBox (ReturnLabelInBox)

AnnotationAssertion(rdfs:comment schema:ReturnLabelInBox "Specifies that a return label will be provided by the seller in the shipping box.")
AnnotationAssertion(rdfs:label schema:ReturnLabelInBox "ReturnLabelInBox")
AnnotationAssertion(schema:isPartOf schema:ReturnLabelInBox <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnLabelInBox <https://github.com/schemaorg/schemaorg/issues/2880>)
ClassAssertion(schema:ReturnLabelSourceEnumeration schema:ReturnLabelInBox)

# Individual: schema:ReturnShippingFees (ReturnShippingFees)

AnnotationAssertion(rdfs:comment schema:ReturnShippingFees "Specifies that the customer must pay the return shipping costs when returning a product.")
AnnotationAssertion(rdfs:label schema:ReturnShippingFees "ReturnShippingFees")
AnnotationAssertion(schema:isPartOf schema:ReturnShippingFees <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ReturnShippingFees <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:ReturnFeesEnumeration schema:ReturnShippingFees)

# Individual: schema:Rheumatologic (Rheumatologic)

AnnotationAssertion(rdfs:comment schema:Rheumatologic "A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.")
AnnotationAssertion(rdfs:label schema:Rheumatologic "Rheumatologic")
AnnotationAssertion(schema:isPartOf schema:Rheumatologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Rheumatologic)

# Individual: schema:RightHandDriving (RightHandDriving)

AnnotationAssertion(rdfs:comment schema:RightHandDriving "The steering position is on the right side of the vehicle (viewed from the main direction of driving).")
AnnotationAssertion(rdfs:label schema:RightHandDriving "RightHandDriving")
AnnotationAssertion(schema:contributor schema:RightHandDriving <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
ClassAssertion(schema:SteeringPositionValue schema:RightHandDriving)

# Individual: schema:RisksOrComplicationsHealthAspect (RisksOrComplicationsHealthAspect)

AnnotationAssertion(rdfs:comment schema:RisksOrComplicationsHealthAspect "Information about the risk factors and possible complications that may follow a topic.")
AnnotationAssertion(rdfs:label schema:RisksOrComplicationsHealthAspect "RisksOrComplicationsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:RisksOrComplicationsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:RisksOrComplicationsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:RisksOrComplicationsHealthAspect)

# Individual: schema:RsvpResponseMaybe (RsvpResponseMaybe)

AnnotationAssertion(rdfs:comment schema:RsvpResponseMaybe "The invitee may or may not attend.")
AnnotationAssertion(rdfs:label schema:RsvpResponseMaybe "RsvpResponseMaybe")
ClassAssertion(schema:RsvpResponseType schema:RsvpResponseMaybe)

# Individual: schema:RsvpResponseNo (RsvpResponseNo)

AnnotationAssertion(rdfs:comment schema:RsvpResponseNo "The invitee will not attend.")
AnnotationAssertion(rdfs:label schema:RsvpResponseNo "RsvpResponseNo")
ClassAssertion(schema:RsvpResponseType schema:RsvpResponseNo)

# Individual: schema:RsvpResponseYes (RsvpResponseYes)

AnnotationAssertion(rdfs:comment schema:RsvpResponseYes "The invitee will attend.")
AnnotationAssertion(rdfs:label schema:RsvpResponseYes "RsvpResponseYes")
ClassAssertion(schema:RsvpResponseType schema:RsvpResponseYes)

# Individual: schema:SRP (SRP)

AnnotationAssertion(rdfs:comment schema:SRP "Represents the suggested retail price (\"SRP\") of an offered product.")
AnnotationAssertion(rdfs:label schema:SRP "SRP")
AnnotationAssertion(schema:isPartOf schema:SRP <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SRP <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:SRP)

# Individual: schema:SafetyHealthAspect (SafetyHealthAspect)

AnnotationAssertion(rdfs:comment schema:SafetyHealthAspect "Content about the safety-related aspects of a health topic.")
AnnotationAssertion(rdfs:label schema:SafetyHealthAspect "SafetyHealthAspect")
AnnotationAssertion(schema:isPartOf schema:SafetyHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SafetyHealthAspect <https://github.com/schemaorg/schemaorg/issues/2799>)
ClassAssertion(schema:HealthAspectEnumeration schema:SafetyHealthAspect)

# Individual: schema:SalePrice (SalePrice)

AnnotationAssertion(rdfs:comment schema:SalePrice "Represents a sale price (usually active for a limited period) of an offered product.")
AnnotationAssertion(rdfs:label schema:SalePrice "SalePrice")
AnnotationAssertion(schema:isPartOf schema:SalePrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SalePrice <https://github.com/schemaorg/schemaorg/issues/2712>)
ClassAssertion(schema:PriceTypeEnumeration schema:SalePrice)

# Individual: schema:SatireOrParodyContent (SatireOrParodyContent)

AnnotationAssertion(rdfs:comment schema:SatireOrParodyContent "Content coded 'satire or parody content' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'satire or parody content': A video that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)

For an [[ImageObject]] to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)

For an [[ImageObject]] with embedded text to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)

For an [[AudioObject]] to be 'satire or parody content': Audio that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)
")
AnnotationAssertion(rdfs:label schema:SatireOrParodyContent "SatireOrParodyContent")
AnnotationAssertion(schema:isPartOf schema:SatireOrParodyContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SatireOrParodyContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:SatireOrParodyContent)

# Individual: schema:Saturday (Saturday)

AnnotationAssertion(rdfs:comment schema:Saturday "The day of the week between Friday and Sunday.")
AnnotationAssertion(rdfs:label schema:Saturday "Saturday")
AnnotationAssertion(schema:sameAs schema:Saturday <http://www.wikidata.org/entity/Q131>)
ClassAssertion(schema:DayOfWeek schema:Saturday)

# Individual: schema:ScreenCaptureDigitalSource (ScreenCaptureDigitalSource)

AnnotationAssertion(rdfs:comment schema:ScreenCaptureDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia\">algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:ScreenCaptureDigitalSource "ScreenCaptureDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:ScreenCaptureDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/screenCapture>)
AnnotationAssertion(schema:isPartOf schema:ScreenCaptureDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ScreenCaptureDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:ScreenCaptureDigitalSource)

# Individual: schema:ScreeningHealthAspect (ScreeningHealthAspect)

AnnotationAssertion(rdfs:comment schema:ScreeningHealthAspect "Content about how to screen or further filter a topic.")
AnnotationAssertion(rdfs:label schema:ScreeningHealthAspect "ScreeningHealthAspect")
AnnotationAssertion(schema:isPartOf schema:ScreeningHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ScreeningHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:ScreeningHealthAspect)

# Individual: schema:SeatingMap (SeatingMap)

AnnotationAssertion(rdfs:comment schema:SeatingMap "A seating map.")
AnnotationAssertion(rdfs:label schema:SeatingMap "SeatingMap")
ClassAssertion(schema:MapCategoryType schema:SeatingMap)

# Individual: schema:SeeDoctorHealthAspect (SeeDoctorHealthAspect)

AnnotationAssertion(rdfs:comment schema:SeeDoctorHealthAspect "Information about questions that may be asked, when to see a professional, measures before seeing a doctor or content about the first consultation.")
AnnotationAssertion(rdfs:label schema:SeeDoctorHealthAspect "SeeDoctorHealthAspect")
AnnotationAssertion(schema:isPartOf schema:SeeDoctorHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SeeDoctorHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:SeeDoctorHealthAspect)

# Individual: schema:SelfCareHealthAspect (SelfCareHealthAspect)

AnnotationAssertion(rdfs:comment schema:SelfCareHealthAspect "Self care actions or measures that can be taken to sooth, health or avoid a topic. This may be carried at home and can be carried/managed by the person itself.")
AnnotationAssertion(rdfs:label schema:SelfCareHealthAspect "SelfCareHealthAspect")
AnnotationAssertion(schema:isPartOf schema:SelfCareHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SelfCareHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:SelfCareHealthAspect)

# Individual: schema:SexualContentConsideration (SexualContentConsideration)

AnnotationAssertion(rdfs:comment schema:SexualContentConsideration "The item contains sexually oriented content such as nudity, suggestive or explicit material, or related online services, or is intended to enhance sexual activity. Examples: Erotic videos or magazine, sexual enhancement devices, sex toys.")
AnnotationAssertion(rdfs:label schema:SexualContentConsideration "SexualContentConsideration")
AnnotationAssertion(schema:isPartOf schema:SexualContentConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SexualContentConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:SexualContentConsideration)

# Individual: schema:SideEffectsHealthAspect (SideEffectsHealthAspect)

AnnotationAssertion(rdfs:comment schema:SideEffectsHealthAspect "Side effects that can be observed from the usage of the topic.")
AnnotationAssertion(rdfs:label schema:SideEffectsHealthAspect "SideEffectsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:SideEffectsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SideEffectsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:SideEffectsHealthAspect)

# Individual: schema:SingleBlindedTrial (SingleBlindedTrial)

AnnotationAssertion(rdfs:comment schema:SingleBlindedTrial "A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.")
AnnotationAssertion(rdfs:label schema:SingleBlindedTrial "SingleBlindedTrial")
AnnotationAssertion(schema:isPartOf schema:SingleBlindedTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:SingleBlindedTrial)

# Individual: schema:SingleCenterTrial (SingleCenterTrial)

AnnotationAssertion(rdfs:comment schema:SingleCenterTrial "A trial that takes place at a single center.")
AnnotationAssertion(rdfs:label schema:SingleCenterTrial "SingleCenterTrial")
AnnotationAssertion(schema:isPartOf schema:SingleCenterTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:SingleCenterTrial)

# Individual: schema:SinglePlayer (SinglePlayer)

AnnotationAssertion(rdfs:comment schema:SinglePlayer "Play mode: SinglePlayer. Which is played by a lone player.")
AnnotationAssertion(rdfs:label schema:SinglePlayer "SinglePlayer")
ClassAssertion(schema:GamePlayMode schema:SinglePlayer)

# Individual: schema:SingleRelease (SingleRelease)

AnnotationAssertion(rdfs:comment schema:SingleRelease "SingleRelease.")
AnnotationAssertion(rdfs:label schema:SingleRelease "SingleRelease")
AnnotationAssertion(schema:contributor schema:SingleRelease <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumReleaseType schema:SingleRelease)

# Individual: schema:SizeSystemImperial (SizeSystemImperial)

AnnotationAssertion(rdfs:comment schema:SizeSystemImperial "Imperial size system.")
AnnotationAssertion(rdfs:label schema:SizeSystemImperial "SizeSystemImperial")
AnnotationAssertion(schema:isPartOf schema:SizeSystemImperial <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SizeSystemImperial <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:SizeSystemEnumeration schema:SizeSystemImperial)

# Individual: schema:SizeSystemMetric (SizeSystemMetric)

AnnotationAssertion(rdfs:comment schema:SizeSystemMetric "Metric size system.")
AnnotationAssertion(rdfs:label schema:SizeSystemMetric "SizeSystemMetric")
AnnotationAssertion(schema:isPartOf schema:SizeSystemMetric <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SizeSystemMetric <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:SizeSystemEnumeration schema:SizeSystemMetric)

# Individual: schema:Skin (Skin)

AnnotationAssertion(rdfs:comment schema:Skin "Skin assessment with clinical examination.")
AnnotationAssertion(rdfs:label schema:Skin "Skin")
AnnotationAssertion(schema:isPartOf schema:Skin <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Skin)

# Individual: schema:SoldOut (SoldOut)

AnnotationAssertion(rdfs:comment schema:SoldOut "Indicates that the item has sold out.")
AnnotationAssertion(rdfs:label schema:SoldOut "SoldOut")
ClassAssertion(schema:ItemAvailability schema:SoldOut)

# Individual: schema:SoundtrackAlbum (SoundtrackAlbum)

AnnotationAssertion(rdfs:comment schema:SoundtrackAlbum "SoundtrackAlbum.")
AnnotationAssertion(rdfs:label schema:SoundtrackAlbum "SoundtrackAlbum")
AnnotationAssertion(schema:contributor schema:SoundtrackAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:SoundtrackAlbum)

# Individual: schema:SpeechPathology (SpeechPathology)

AnnotationAssertion(rdfs:comment schema:SpeechPathology "The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.")
AnnotationAssertion(rdfs:label schema:SpeechPathology "SpeechPathology")
AnnotationAssertion(schema:isPartOf schema:SpeechPathology <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:SpeechPathology)

# Individual: schema:SpokenWordAlbum (SpokenWordAlbum)

AnnotationAssertion(rdfs:comment schema:SpokenWordAlbum "SpokenWordAlbum.")
AnnotationAssertion(rdfs:label schema:SpokenWordAlbum "SpokenWordAlbum")
AnnotationAssertion(schema:contributor schema:SpokenWordAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:SpokenWordAlbum)

# Individual: schema:StagedContent (StagedContent)

AnnotationAssertion(rdfs:comment schema:StagedContent "Content coded 'staged content' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'staged content': A video that has been created using actors or similarly contrived.

For an [[ImageObject]] to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.

For an [[ImageObject]] with embedded text to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.

For an [[AudioObject]] to be 'staged content': Audio that has been created using actors or similarly contrived.
")
AnnotationAssertion(rdfs:label schema:StagedContent "StagedContent")
AnnotationAssertion(schema:isPartOf schema:StagedContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StagedContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:StagedContent)

# Individual: schema:StagesHealthAspect (StagesHealthAspect)

AnnotationAssertion(rdfs:comment schema:StagesHealthAspect "Stages that can be observed from a topic.")
AnnotationAssertion(rdfs:label schema:StagesHealthAspect "StagesHealthAspect")
AnnotationAssertion(schema:isPartOf schema:StagesHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StagesHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:StagesHealthAspect)

# Individual: schema:StoreCreditRefund (StoreCreditRefund)

AnnotationAssertion(rdfs:comment schema:StoreCreditRefund "Specifies that the customer receives a store credit as refund when returning a product.")
AnnotationAssertion(rdfs:label schema:StoreCreditRefund "StoreCreditRefund")
AnnotationAssertion(schema:isPartOf schema:StoreCreditRefund <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StoreCreditRefund <https://github.com/schemaorg/schemaorg/issues/2288>)
ClassAssertion(schema:RefundTypeEnumeration schema:StoreCreditRefund)

# Individual: schema:StrengthTraining (StrengthTraining)

AnnotationAssertion(rdfs:comment schema:StrengthTraining "Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.")
AnnotationAssertion(rdfs:label schema:StrengthTraining "StrengthTraining")
AnnotationAssertion(schema:isPartOf schema:StrengthTraining <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalActivityCategory schema:StrengthTraining)

# Individual: schema:StrikethroughPrice (StrikethroughPrice)

AnnotationAssertion(rdfs:comment schema:StrikethroughPrice "Represents the strikethrough price (the previous advertised price) of an offered product.")
AnnotationAssertion(rdfs:label schema:StrikethroughPrice "StrikethroughPrice")
AnnotationAssertion(schema:isPartOf schema:StrikethroughPrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:StrikethroughPrice <https://github.com/schemaorg/schemaorg/issues/3583>)
ClassAssertion(schema:PriceTypeEnumeration schema:StrikethroughPrice)

# Individual: schema:StudioAlbum (StudioAlbum)

AnnotationAssertion(rdfs:comment schema:StudioAlbum "StudioAlbum.")
AnnotationAssertion(rdfs:label schema:StudioAlbum "StudioAlbum")
AnnotationAssertion(schema:contributor schema:StudioAlbum <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicAlbumProductionType schema:StudioAlbum)

# Individual: schema:Subscription (Subscription)

AnnotationAssertion(rdfs:comment schema:Subscription "Represents the subscription pricing component of the total price for an offered product.")
AnnotationAssertion(rdfs:label schema:Subscription "Subscription")
AnnotationAssertion(schema:isPartOf schema:Subscription <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:Subscription <https://github.com/schemaorg/schemaorg/issues/2689>)
ClassAssertion(schema:PriceComponentTypeEnumeration schema:Subscription)

# Individual: schema:Sunday (Sunday)

AnnotationAssertion(rdfs:comment schema:Sunday "The day of the week between Saturday and Monday.")
AnnotationAssertion(rdfs:label schema:Sunday "Sunday")
AnnotationAssertion(schema:sameAs schema:Sunday <http://www.wikidata.org/entity/Q132>)
ClassAssertion(schema:DayOfWeek schema:Sunday)

# Individual: schema:Surgical (Surgical)

AnnotationAssertion(rdfs:comment schema:Surgical "A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.")
AnnotationAssertion(rdfs:label schema:Surgical "Surgical")
AnnotationAssertion(schema:isPartOf schema:Surgical <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Surgical)

# Individual: schema:Suspended (Suspended)

AnnotationAssertion(rdfs:comment schema:Suspended "Suspended.")
AnnotationAssertion(rdfs:label schema:Suspended "Suspended")
AnnotationAssertion(schema:isPartOf schema:Suspended <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:Suspended)

# Individual: schema:SymptomsHealthAspect (SymptomsHealthAspect)

AnnotationAssertion(rdfs:comment schema:SymptomsHealthAspect "Symptoms or related symptoms of a Topic.")
AnnotationAssertion(rdfs:label schema:SymptomsHealthAspect "SymptomsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:SymptomsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:SymptomsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:SymptomsHealthAspect)

# Individual: schema:TaxiVehicleUsage (TaxiVehicleUsage)

AnnotationAssertion(rdfs:comment schema:TaxiVehicleUsage "Indicates the usage of the car as a taxi.")
AnnotationAssertion(rdfs:label schema:TaxiVehicleUsage "TaxiVehicleUsage")
AnnotationAssertion(schema:contributor schema:TaxiVehicleUsage <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:isPartOf schema:TaxiVehicleUsage <https://auto.schema.org>)
ClassAssertion(schema:CarUsageType schema:TaxiVehicleUsage)

# Individual: schema:Terminated (Terminated)

AnnotationAssertion(rdfs:comment schema:Terminated "Terminated.")
AnnotationAssertion(rdfs:label schema:Terminated "Terminated")
AnnotationAssertion(schema:isPartOf schema:Terminated <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:Terminated)

# Individual: schema:Text (Text)

ClassAssertion(schema:DataType schema:Text)

# Individual: schema:Therapeutic (Therapeutic)

AnnotationAssertion(rdfs:comment schema:Therapeutic "A medical device used for therapeutic purposes.")
AnnotationAssertion(rdfs:label schema:Therapeutic "Therapeutic")
AnnotationAssertion(schema:isPartOf schema:Therapeutic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalDevicePurpose schema:Therapeutic)

# Individual: schema:Throat (Throat)

AnnotationAssertion(rdfs:comment schema:Throat "Throat assessment with  clinical examination.")
AnnotationAssertion(rdfs:label schema:Throat "Throat")
AnnotationAssertion(schema:isPartOf schema:Throat <https://health-lifesci.schema.org>)
ClassAssertion(schema:PhysicalExam schema:Throat)

# Individual: schema:Thursday (Thursday)

AnnotationAssertion(rdfs:comment schema:Thursday "The day of the week between Wednesday and Friday.")
AnnotationAssertion(rdfs:label schema:Thursday "Thursday")
AnnotationAssertion(schema:sameAs schema:Thursday <http://www.wikidata.org/entity/Q129>)
ClassAssertion(schema:DayOfWeek schema:Thursday)

# Individual: schema:TierBenefitLoyaltyPoints (TierBenefitLoyaltyPoints)

AnnotationAssertion(rdfs:comment schema:TierBenefitLoyaltyPoints "Benefit of the tier is earning of loyalty points.")
AnnotationAssertion(rdfs:label schema:TierBenefitLoyaltyPoints "TierBenefitLoyaltyPoints")
AnnotationAssertion(schema:isPartOf schema:TierBenefitLoyaltyPoints <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TierBenefitLoyaltyPoints <https://github.com/schemaorg/schemaorg/issues/3563>)
ClassAssertion(schema:TierBenefitEnumeration schema:TierBenefitLoyaltyPoints)

# Individual: schema:TierBenefitLoyaltyPrice (TierBenefitLoyaltyPrice)

AnnotationAssertion(rdfs:comment schema:TierBenefitLoyaltyPrice "Benefit of the tier is a members-only price.")
AnnotationAssertion(rdfs:label schema:TierBenefitLoyaltyPrice "TierBenefitLoyaltyPrice")
AnnotationAssertion(schema:isPartOf schema:TierBenefitLoyaltyPrice <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TierBenefitLoyaltyPrice <https://github.com/schemaorg/schemaorg/issues/3563>)
ClassAssertion(schema:TierBenefitEnumeration schema:TierBenefitLoyaltyPrice)

# Individual: schema:TierBenefitLoyaltyReturns (TierBenefitLoyaltyReturns)

AnnotationAssertion(rdfs:comment schema:TierBenefitLoyaltyReturns "Benefit of the tier is members-only returns, for example free unlimited returns.")
AnnotationAssertion(rdfs:label schema:TierBenefitLoyaltyReturns "TierBenefitLoyaltyReturns")
AnnotationAssertion(schema:isPartOf schema:TierBenefitLoyaltyReturns <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TierBenefitLoyaltyReturns <https://github.com/schemaorg/schemaorg/issues/3563>)
ClassAssertion(schema:TierBenefitEnumeration schema:TierBenefitLoyaltyReturns)

# Individual: schema:TierBenefitLoyaltyShipping (TierBenefitLoyaltyShipping)

AnnotationAssertion(rdfs:comment schema:TierBenefitLoyaltyShipping "Benefit of the tier is a members-only shipping price or speed (for example free shipping or 1-day shipping).")
AnnotationAssertion(rdfs:label schema:TierBenefitLoyaltyShipping "TierBenefitLoyaltyShipping")
AnnotationAssertion(schema:isPartOf schema:TierBenefitLoyaltyShipping <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TierBenefitLoyaltyShipping <https://github.com/schemaorg/schemaorg/issues/3563>)
ClassAssertion(schema:TierBenefitEnumeration schema:TierBenefitLoyaltyShipping)

# Individual: schema:Time (Time)

ClassAssertion(schema:DataType schema:Time)

# Individual: schema:TobaccoNicotineConsideration (TobaccoNicotineConsideration)

AnnotationAssertion(rdfs:comment schema:TobaccoNicotineConsideration "Item contains tobacco and/or nicotine, for example cigars, cigarettes, chewing tobacco, e-cigarettes, or hookahs.")
AnnotationAssertion(rdfs:label schema:TobaccoNicotineConsideration "TobaccoNicotineConsideration")
AnnotationAssertion(schema:isPartOf schema:TobaccoNicotineConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TobaccoNicotineConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:TobaccoNicotineConsideration)

# Individual: schema:TollFree (TollFree)

AnnotationAssertion(rdfs:comment schema:TollFree "The associated telephone number is toll free.")
AnnotationAssertion(rdfs:label schema:TollFree "TollFree")
ClassAssertion(schema:ContactPointOption schema:TollFree)

# Individual: schema:Toxicologic (Toxicologic)

AnnotationAssertion(rdfs:comment schema:Toxicologic "A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.")
AnnotationAssertion(rdfs:label schema:Toxicologic "Toxicologic")
AnnotationAssertion(schema:isPartOf schema:Toxicologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Toxicologic)

# Individual: schema:TraditionalChinese (TraditionalChinese)

AnnotationAssertion(rdfs:comment schema:TraditionalChinese "A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.")
AnnotationAssertion(rdfs:label schema:TraditionalChinese "TraditionalChinese")
AnnotationAssertion(schema:isPartOf schema:TraditionalChinese <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:TraditionalChinese)

# Individual: schema:TrainedAlgorithmicMediaDigitalSource (TrainedAlgorithmicMediaDigitalSource)

AnnotationAssertion(rdfs:comment schema:TrainedAlgorithmicMediaDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/trainedAlgorithmicMedia\">trained algorithmic media</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:TrainedAlgorithmicMediaDigitalSource "TrainedAlgorithmicMediaDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:TrainedAlgorithmicMediaDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/trainedAlgorithmicMedia>)
AnnotationAssertion(schema:isPartOf schema:TrainedAlgorithmicMediaDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TrainedAlgorithmicMediaDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:TrainedAlgorithmicMediaDigitalSource)

# Individual: schema:TransformedContent (TransformedContent)

AnnotationAssertion(rdfs:comment schema:TransformedContent "Content coded 'transformed content' in a [[MediaReview]], considered in the context of how it was published or shared.

For a [[VideoObject]] to be 'transformed content':  or all of the video has been manipulated to transform the footage itself. This category includes using tools like the Adobe Suite to change the speed of the video, add or remove visual elements or dub audio. Deepfakes are also a subset of transformation.

For an [[ImageObject]] to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.

For an [[ImageObject]] with embedded text to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.

For an [[AudioObject]] to be 'transformed content': Part or all of the audio has been manipulated to alter the words or sounds, or the audio has been synthetically generated, such as to create a sound-alike voice.
")
AnnotationAssertion(rdfs:label schema:TransformedContent "TransformedContent")
AnnotationAssertion(schema:isPartOf schema:TransformedContent <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TransformedContent <https://github.com/schemaorg/schemaorg/issues/2450>)
ClassAssertion(schema:MediaManipulationRatingEnumeration schema:TransformedContent)

# Individual: schema:TransitMap (TransitMap)

AnnotationAssertion(rdfs:comment schema:TransitMap "A transit map.")
AnnotationAssertion(rdfs:label schema:TransitMap "TransitMap")
ClassAssertion(schema:MapCategoryType schema:TransitMap)

# Individual: schema:TreatmentsHealthAspect (TreatmentsHealthAspect)

AnnotationAssertion(rdfs:comment schema:TreatmentsHealthAspect "Treatments or related therapies for a Topic.")
AnnotationAssertion(rdfs:label schema:TreatmentsHealthAspect "TreatmentsHealthAspect")
AnnotationAssertion(schema:isPartOf schema:TreatmentsHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TreatmentsHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:TreatmentsHealthAspect)

# Individual: schema:TripleBlindedTrial (TripleBlindedTrial)

AnnotationAssertion(rdfs:comment schema:TripleBlindedTrial "A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.")
AnnotationAssertion(rdfs:label schema:TripleBlindedTrial "TripleBlindedTrial")
AnnotationAssertion(schema:isPartOf schema:TripleBlindedTrial <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalTrialDesign schema:TripleBlindedTrial)

# Individual: schema:True (True)

AnnotationAssertion(rdfs:comment schema:True "The boolean value true.")
AnnotationAssertion(rdfs:label schema:True "True")
ClassAssertion(schema:Boolean schema:True)

# Individual: schema:Tuesday (Tuesday)

AnnotationAssertion(rdfs:comment schema:Tuesday "The day of the week between Monday and Wednesday.")
AnnotationAssertion(rdfs:label schema:Tuesday "Tuesday")
AnnotationAssertion(schema:sameAs schema:Tuesday <http://www.wikidata.org/entity/Q127>)
ClassAssertion(schema:DayOfWeek schema:Tuesday)

# Individual: schema:TypesHealthAspect (TypesHealthAspect)

AnnotationAssertion(rdfs:comment schema:TypesHealthAspect "Categorization and other types related to a topic.")
AnnotationAssertion(rdfs:label schema:TypesHealthAspect "TypesHealthAspect")
AnnotationAssertion(schema:isPartOf schema:TypesHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:TypesHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:TypesHealthAspect)

# Individual: schema:UKTrust (UKTrust)

AnnotationAssertion(rdfs:comment schema:UKTrust "UKTrust: Non-profit type referring to a UK trust.")
AnnotationAssertion(rdfs:label schema:UKTrust "UKTrust")
AnnotationAssertion(schema:isPartOf schema:UKTrust <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UKTrust <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:UKNonprofitType schema:UKTrust)

# Individual: schema:Ultrasound (Ultrasound)

AnnotationAssertion(rdfs:comment schema:Ultrasound "Ultrasound imaging.")
AnnotationAssertion(rdfs:label schema:Ultrasound "Ultrasound")
AnnotationAssertion(schema:isPartOf schema:Ultrasound <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:Ultrasound)

# Individual: schema:UnclassifiedAdultConsideration (UnclassifiedAdultConsideration)

AnnotationAssertion(rdfs:comment schema:UnclassifiedAdultConsideration "The item is suitable only for adults, without indicating why. Due to widespread use of \"adult\" as a euphemism for \"sexual\", many such items are likely suited also for the SexualContentConsideration code.")
AnnotationAssertion(rdfs:label schema:UnclassifiedAdultConsideration "UnclassifiedAdultConsideration")
AnnotationAssertion(schema:isPartOf schema:UnclassifiedAdultConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UnclassifiedAdultConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:UnclassifiedAdultConsideration)

# Individual: schema:UnemploymentSupport (UnemploymentSupport)

AnnotationAssertion(rdfs:comment schema:UnemploymentSupport "UnemploymentSupport: this is a benefit for unemployment support.")
AnnotationAssertion(rdfs:label schema:UnemploymentSupport "UnemploymentSupport")
AnnotationAssertion(schema:isPartOf schema:UnemploymentSupport <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UnemploymentSupport <https://github.com/schemaorg/schemaorg/issues/2534>)
ClassAssertion(schema:GovernmentBenefitsType schema:UnemploymentSupport)

# Individual: schema:UnincorporatedAssociationCharity (UnincorporatedAssociationCharity)

AnnotationAssertion(rdfs:comment schema:UnincorporatedAssociationCharity "UnincorporatedAssociationCharity: Non-profit type referring to a charitable company that is not incorporated (UK).")
AnnotationAssertion(rdfs:label schema:UnincorporatedAssociationCharity "UnincorporatedAssociationCharity")
AnnotationAssertion(schema:isPartOf schema:UnincorporatedAssociationCharity <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UnincorporatedAssociationCharity <https://github.com/schemaorg/schemaorg/issues/2543>)
ClassAssertion(schema:UKNonprofitType schema:UnincorporatedAssociationCharity)

# Individual: schema:UnofficialLegalValue (UnofficialLegalValue)

AnnotationAssertion(rdfs:comment schema:UnofficialLegalValue "Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).")
AnnotationAssertion(rdfs:label schema:UnofficialLegalValue "UnofficialLegalValue")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:UnofficialLegalValue <http://data.europa.eu/eli/ontology#LegalValue-unofficial>)
AnnotationAssertion(schema:contributor schema:UnofficialLegalValue <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:isPartOf schema:UnofficialLegalValue <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UnofficialLegalValue <https://github.com/schemaorg/schemaorg/issues/1156>)
ClassAssertion(schema:LegalValueLevel schema:UnofficialLegalValue)

# Individual: schema:Urologic (Urologic)

AnnotationAssertion(rdfs:comment schema:Urologic "A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.")
AnnotationAssertion(rdfs:label schema:Urologic "Urologic")
AnnotationAssertion(schema:isPartOf schema:Urologic <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalSpecialty schema:Urologic)

# Individual: schema:UsageOrScheduleHealthAspect (UsageOrScheduleHealthAspect)

AnnotationAssertion(rdfs:comment schema:UsageOrScheduleHealthAspect "Content about how, when, frequency and dosage of a topic.")
AnnotationAssertion(rdfs:label schema:UsageOrScheduleHealthAspect "UsageOrScheduleHealthAspect")
AnnotationAssertion(schema:isPartOf schema:UsageOrScheduleHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:UsageOrScheduleHealthAspect <https://github.com/schemaorg/schemaorg/issues/2374>)
ClassAssertion(schema:HealthAspectEnumeration schema:UsageOrScheduleHealthAspect)

# Individual: schema:UsedCondition (UsedCondition)

AnnotationAssertion(rdfs:comment schema:UsedCondition "Indicates that the item is used.")
AnnotationAssertion(rdfs:label schema:UsedCondition "UsedCondition")
ClassAssertion(schema:OfferItemCondition schema:UsedCondition)

# Individual: schema:VeganDiet (VeganDiet)

AnnotationAssertion(rdfs:comment schema:VeganDiet "A diet exclusive of all animal products.")
AnnotationAssertion(rdfs:label schema:VeganDiet "VeganDiet")
ClassAssertion(schema:RestrictedDiet schema:VeganDiet)

# Individual: schema:VegetarianDiet (VegetarianDiet)

AnnotationAssertion(rdfs:comment schema:VegetarianDiet "A diet exclusive of animal meat.")
AnnotationAssertion(rdfs:label schema:VegetarianDiet "VegetarianDiet")
ClassAssertion(schema:RestrictedDiet schema:VegetarianDiet)

# Individual: schema:VenueMap (VenueMap)

AnnotationAssertion(rdfs:comment schema:VenueMap "A venue map (e.g. for malls, auditoriums, museums, etc.).")
AnnotationAssertion(rdfs:label schema:VenueMap "VenueMap")
ClassAssertion(schema:MapCategoryType schema:VenueMap)

# Individual: schema:VinylFormat (VinylFormat)

AnnotationAssertion(rdfs:comment schema:VinylFormat "VinylFormat.")
AnnotationAssertion(rdfs:label schema:VinylFormat "VinylFormat")
AnnotationAssertion(schema:contributor schema:VinylFormat <https://schema.org/docs/collab/MBZ>)
ClassAssertion(schema:MusicReleaseFormatType schema:VinylFormat)

# Individual: schema:ViolenceConsideration (ViolenceConsideration)

AnnotationAssertion(rdfs:comment schema:ViolenceConsideration "Item shows or promotes violence.")
AnnotationAssertion(rdfs:label schema:ViolenceConsideration "ViolenceConsideration")
AnnotationAssertion(schema:isPartOf schema:ViolenceConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:ViolenceConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:ViolenceConsideration)

# Individual: schema:VirtualRecordingDigitalSource (VirtualRecordingDigitalSource)

AnnotationAssertion(rdfs:comment schema:VirtualRecordingDigitalSource "Content coded as '<a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/virtualRecording\">virtual recording</a>' using the IPTC <a href=\"https://cv.iptc.org/newscodes/digitalsourcetype/\">digital source type</a> vocabulary.")
AnnotationAssertion(rdfs:label schema:VirtualRecordingDigitalSource "VirtualRecordingDigitalSource")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:VirtualRecordingDigitalSource <http://cv.iptc.org/newscodes/digitalsourcetype/virtualRecording>)
AnnotationAssertion(schema:isPartOf schema:VirtualRecordingDigitalSource <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:VirtualRecordingDigitalSource <https://github.com/schemaorg/schemaorg/issues/3392>)
ClassAssertion(schema:IPTCDigitalSourceEnumeration schema:VirtualRecordingDigitalSource)

# Individual: schema:Virus (Virus)

AnnotationAssertion(rdfs:comment schema:Virus "Pathogenic virus that causes viral infection.")
AnnotationAssertion(rdfs:label schema:Virus "Virus")
AnnotationAssertion(schema:isPartOf schema:Virus <https://health-lifesci.schema.org>)
ClassAssertion(schema:InfectiousAgentClass schema:Virus)

# Individual: schema:WeaponConsideration (WeaponConsideration)

AnnotationAssertion(rdfs:comment schema:WeaponConsideration "The item is intended to induce bodily harm, for example guns, mace, combat knives, brass knuckles, nail or other bombs, and spears.")
AnnotationAssertion(rdfs:label schema:WeaponConsideration "WeaponConsideration")
AnnotationAssertion(schema:isPartOf schema:WeaponConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WeaponConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
ClassAssertion(schema:AdultOrientedEnumeration schema:WeaponConsideration)

# Individual: schema:WearableMeasurementBack (WearableMeasurementBack)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementBack "Measurement of the back section, for example of a jacket.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementBack "WearableMeasurementBack")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementBack <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementBack <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementBack)

# Individual: schema:WearableMeasurementChestOrBust (WearableMeasurementChestOrBust)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementChestOrBust "Measurement of the chest/bust section, for example of a suit.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementChestOrBust "WearableMeasurementChestOrBust")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementChestOrBust <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementChestOrBust <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementChestOrBust)

# Individual: schema:WearableMeasurementCollar (WearableMeasurementCollar)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementCollar "Measurement of the collar, for example of a shirt.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementCollar "WearableMeasurementCollar")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementCollar <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementCollar <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementCollar)

# Individual: schema:WearableMeasurementCup (WearableMeasurementCup)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementCup "Measurement of the cup, for example of a bra.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementCup "WearableMeasurementCup")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementCup <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementCup <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementCup)

# Individual: schema:WearableMeasurementHeight (WearableMeasurementHeight)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementHeight "Measurement of the height, for example the heel height of a shoe.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementHeight "WearableMeasurementHeight")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementHeight <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementHeight <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementHeight)

# Individual: schema:WearableMeasurementHips (WearableMeasurementHips)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementHips "Measurement of the hip section, for example of a skirt.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementHips "WearableMeasurementHips")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementHips <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementHips <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementHips)

# Individual: schema:WearableMeasurementInseam (WearableMeasurementInseam)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementInseam "Measurement of the inseam, for example of pants.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementInseam "WearableMeasurementInseam")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementInseam <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementInseam <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementInseam)

# Individual: schema:WearableMeasurementLength (WearableMeasurementLength)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementLength "Represents the length, for example of a dress.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementLength "WearableMeasurementLength")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementLength <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementLength <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementLength)

# Individual: schema:WearableMeasurementOutsideLeg (WearableMeasurementOutsideLeg)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementOutsideLeg "Measurement of the outside leg, for example of pants.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementOutsideLeg "WearableMeasurementOutsideLeg")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementOutsideLeg <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementOutsideLeg <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementOutsideLeg)

# Individual: schema:WearableMeasurementSleeve (WearableMeasurementSleeve)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementSleeve "Measurement of the sleeve length, for example of a shirt.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementSleeve "WearableMeasurementSleeve")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementSleeve <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementSleeve <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementSleeve)

# Individual: schema:WearableMeasurementWaist (WearableMeasurementWaist)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementWaist "Measurement of the waist section, for example of pants.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementWaist "WearableMeasurementWaist")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementWaist <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementWaist <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementWaist)

# Individual: schema:WearableMeasurementWidth (WearableMeasurementWidth)

AnnotationAssertion(rdfs:comment schema:WearableMeasurementWidth "Measurement of the width, for example of shoes.")
AnnotationAssertion(rdfs:label schema:WearableMeasurementWidth "WearableMeasurementWidth")
AnnotationAssertion(schema:isPartOf schema:WearableMeasurementWidth <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableMeasurementWidth <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableMeasurementTypeEnumeration schema:WearableMeasurementWidth)

# Individual: schema:WearableSizeGroupBig (WearableSizeGroupBig)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupBig "Size group \"Big\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupBig "WearableSizeGroupBig")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupBig <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupBig <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupBig)

# Individual: schema:WearableSizeGroupBoys (WearableSizeGroupBoys)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupBoys "Size group \"Boys\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupBoys "WearableSizeGroupBoys")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupBoys <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupBoys <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupBoys)

# Individual: schema:WearableSizeGroupExtraShort (WearableSizeGroupExtraShort)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupExtraShort "Size group \"Extra Short\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupExtraShort "WearableSizeGroupExtraShort")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupExtraShort <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupExtraShort <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupExtraShort)

# Individual: schema:WearableSizeGroupExtraTall (WearableSizeGroupExtraTall)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupExtraTall "Size group \"Extra Tall\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupExtraTall "WearableSizeGroupExtraTall")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupExtraTall <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupExtraTall <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupExtraTall)

# Individual: schema:WearableSizeGroupGirls (WearableSizeGroupGirls)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupGirls "Size group \"Girls\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupGirls "WearableSizeGroupGirls")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupGirls <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupGirls <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupGirls)

# Individual: schema:WearableSizeGroupHusky (WearableSizeGroupHusky)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupHusky "Size group \"Husky\" (or \"Stocky\") for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupHusky "WearableSizeGroupHusky")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupHusky <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupHusky <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupHusky)

# Individual: schema:WearableSizeGroupInfants (WearableSizeGroupInfants)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupInfants "Size group \"Infants\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupInfants "WearableSizeGroupInfants")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupInfants <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupInfants <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupInfants)

# Individual: schema:WearableSizeGroupJuniors (WearableSizeGroupJuniors)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupJuniors "Size group \"Juniors\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupJuniors "WearableSizeGroupJuniors")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupJuniors <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupJuniors <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupJuniors)

# Individual: schema:WearableSizeGroupMaternity (WearableSizeGroupMaternity)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupMaternity "Size group \"Maternity\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupMaternity "WearableSizeGroupMaternity")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupMaternity <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupMaternity <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupMaternity)

# Individual: schema:WearableSizeGroupMens (WearableSizeGroupMens)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupMens "Size group \"Mens\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupMens "WearableSizeGroupMens")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupMens <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupMens <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupMens)

# Individual: schema:WearableSizeGroupMisses (WearableSizeGroupMisses)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupMisses "Size group \"Misses\" (also known as \"Missy\") for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupMisses "WearableSizeGroupMisses")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupMisses <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupMisses <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupMisses)

# Individual: schema:WearableSizeGroupPetite (WearableSizeGroupPetite)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupPetite "Size group \"Petite\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupPetite "WearableSizeGroupPetite")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupPetite <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupPetite <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupPetite)

# Individual: schema:WearableSizeGroupPlus (WearableSizeGroupPlus)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupPlus "Size group \"Plus\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupPlus "WearableSizeGroupPlus")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupPlus <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupPlus <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupPlus)

# Individual: schema:WearableSizeGroupRegular (WearableSizeGroupRegular)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupRegular "Size group \"Regular\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupRegular "WearableSizeGroupRegular")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupRegular <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupRegular <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupRegular)

# Individual: schema:WearableSizeGroupShort (WearableSizeGroupShort)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupShort "Size group \"Short\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupShort "WearableSizeGroupShort")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupShort <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupShort <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupShort)

# Individual: schema:WearableSizeGroupTall (WearableSizeGroupTall)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupTall "Size group \"Tall\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupTall "WearableSizeGroupTall")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupTall <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupTall <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupTall)

# Individual: schema:WearableSizeGroupWomens (WearableSizeGroupWomens)

AnnotationAssertion(rdfs:comment schema:WearableSizeGroupWomens "Size group \"Womens\" for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeGroupWomens "WearableSizeGroupWomens")
AnnotationAssertion(schema:isPartOf schema:WearableSizeGroupWomens <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeGroupWomens <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeGroupEnumeration schema:WearableSizeGroupWomens)

# Individual: schema:WearableSizeSystemAU (WearableSizeSystemAU)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemAU "Australian size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemAU "WearableSizeSystemAU")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemAU <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemAU <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemAU)

# Individual: schema:WearableSizeSystemBR (WearableSizeSystemBR)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemBR "Brazilian size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemBR "WearableSizeSystemBR")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemBR <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemBR <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemBR)

# Individual: schema:WearableSizeSystemCN (WearableSizeSystemCN)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemCN "Chinese size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemCN "WearableSizeSystemCN")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemCN <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemCN <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemCN)

# Individual: schema:WearableSizeSystemContinental (WearableSizeSystemContinental)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemContinental "Continental size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemContinental "WearableSizeSystemContinental")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemContinental <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemContinental <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemContinental)

# Individual: schema:WearableSizeSystemDE (WearableSizeSystemDE)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemDE "German size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemDE "WearableSizeSystemDE")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemDE <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemDE <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemDE)

# Individual: schema:WearableSizeSystemEN13402 (WearableSizeSystemEN13402)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemEN13402 "EN 13402 (joint European standard for size labelling of clothes).")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemEN13402 "WearableSizeSystemEN13402")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemEN13402 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemEN13402 <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemEN13402)

# Individual: schema:WearableSizeSystemEurope (WearableSizeSystemEurope)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemEurope "European size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemEurope "WearableSizeSystemEurope")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemEurope <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemEurope <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemEurope)

# Individual: schema:WearableSizeSystemFR (WearableSizeSystemFR)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemFR "French size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemFR "WearableSizeSystemFR")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemFR <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemFR <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemFR)

# Individual: schema:WearableSizeSystemGS1 (WearableSizeSystemGS1)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemGS1 "GS1 (formerly NRF) size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemGS1 "WearableSizeSystemGS1")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemGS1 <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemGS1 <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemGS1)

# Individual: schema:WearableSizeSystemIT (WearableSizeSystemIT)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemIT "Italian size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemIT "WearableSizeSystemIT")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemIT <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemIT <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemIT)

# Individual: schema:WearableSizeSystemJP (WearableSizeSystemJP)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemJP "Japanese size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemJP "WearableSizeSystemJP")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemJP <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemJP <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemJP)

# Individual: schema:WearableSizeSystemMX (WearableSizeSystemMX)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemMX "Mexican size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemMX "WearableSizeSystemMX")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemMX <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemMX <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemMX)

# Individual: schema:WearableSizeSystemUK (WearableSizeSystemUK)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemUK "United Kingdom size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemUK "WearableSizeSystemUK")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemUK <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemUK <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemUK)

# Individual: schema:WearableSizeSystemUS (WearableSizeSystemUS)

AnnotationAssertion(rdfs:comment schema:WearableSizeSystemUS "United States size system for wearables.")
AnnotationAssertion(rdfs:label schema:WearableSizeSystemUS "WearableSizeSystemUS")
AnnotationAssertion(schema:isPartOf schema:WearableSizeSystemUS <https://pending.schema.org>)
AnnotationAssertion(schema:source schema:WearableSizeSystemUS <https://github.com/schemaorg/schemaorg/issues/2811>)
ClassAssertion(schema:WearableSizeSystemEnumeration schema:WearableSizeSystemUS)

# Individual: schema:Wednesday (Wednesday)

AnnotationAssertion(rdfs:comment schema:Wednesday "The day of the week between Tuesday and Thursday.")
AnnotationAssertion(rdfs:label schema:Wednesday "Wednesday")
AnnotationAssertion(schema:sameAs schema:Wednesday <http://www.wikidata.org/entity/Q128>)
ClassAssertion(schema:DayOfWeek schema:Wednesday)

# Individual: schema:WesternConventional (WesternConventional)

AnnotationAssertion(rdfs:comment schema:WesternConventional "The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.")
AnnotationAssertion(rdfs:label schema:WesternConventional "WesternConventional")
AnnotationAssertion(schema:isPartOf schema:WesternConventional <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicineSystem schema:WesternConventional)

# Individual: schema:Wholesale (Wholesale)

AnnotationAssertion(rdfs:comment schema:Wholesale "The drug's cost represents the wholesale acquisition cost of the drug.")
AnnotationAssertion(rdfs:label schema:Wholesale "Wholesale")
AnnotationAssertion(schema:isPartOf schema:Wholesale <https://health-lifesci.schema.org>)
ClassAssertion(schema:DrugCostCategory schema:Wholesale)

# Individual: schema:Withdrawn (Withdrawn)

AnnotationAssertion(rdfs:comment schema:Withdrawn "Withdrawn.")
AnnotationAssertion(rdfs:label schema:Withdrawn "Withdrawn")
AnnotationAssertion(schema:isPartOf schema:Withdrawn <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalStudyStatus schema:Withdrawn)

# Individual: schema:WritePermission (WritePermission)

AnnotationAssertion(rdfs:comment schema:WritePermission "Permission to write or edit the document.")
AnnotationAssertion(rdfs:label schema:WritePermission "WritePermission")
ClassAssertion(schema:DigitalDocumentPermissionType schema:WritePermission)

# Individual: schema:XRay (XRay)

AnnotationAssertion(rdfs:comment schema:XRay "X-ray imaging.")
AnnotationAssertion(rdfs:label schema:XRay "XRay")
AnnotationAssertion(schema:isPartOf schema:XRay <https://health-lifesci.schema.org>)
ClassAssertion(schema:MedicalImagingTechnique schema:XRay)

# Individual: schema:ZoneBoardingPolicy (ZoneBoardingPolicy)

AnnotationAssertion(rdfs:comment schema:ZoneBoardingPolicy "The airline boards by zones of the plane.")
AnnotationAssertion(rdfs:label schema:ZoneBoardingPolicy "ZoneBoardingPolicy")
ClassAssertion(schema:BoardingPolicyType schema:ZoneBoardingPolicy)


AnnotationAssertion(rdfs:comment schema:abridged "Indicates whether the book is an abridged edition.")
AnnotationAssertion(rdfs:label schema:abridged "abridged")
AnnotationAssertion(schema:domainIncludes schema:abridged schema:Book)
AnnotationAssertion(schema:isPartOf schema:abridged <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:abridged schema:Boolean)
AnnotationAssertion(rdfs:comment schema:abstract "An abstract is a short description that summarizes a [[CreativeWork]].")
AnnotationAssertion(rdfs:label schema:abstract "abstract")
AnnotationAssertion(schema:domainIncludes schema:abstract schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:abstract <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:abstract schema:Text)
AnnotationAssertion(schema:source schema:abstract <https://github.com/schemaorg/schemaorg/issues/276>)
AnnotationAssertion(rdfs:comment schema:accelerationTime "The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\\n\\nTypical unit code(s): SEC for seconds\\n\\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use \"SEC\" for seconds and indicate the velocities in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference speeds.")
AnnotationAssertion(rdfs:label schema:accelerationTime "accelerationTime")
AnnotationAssertion(schema:contributor schema:accelerationTime <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:accelerationTime schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:accelerationTime <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:accelerationTime schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:acceptedOffer "The offer(s) -- e.g., product, quantity and price combinations -- included in the order.")
AnnotationAssertion(rdfs:label schema:acceptedOffer "acceptedOffer")
AnnotationAssertion(schema:domainIncludes schema:acceptedOffer schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:acceptedOffer schema:Offer)
AnnotationAssertion(rdfs:comment schema:acceptedPaymentMethod "The payment method(s) that are accepted in general by an organization, or for some specific demand or offer.")
AnnotationAssertion(rdfs:label schema:acceptedPaymentMethod "acceptedPaymentMethod")
AnnotationAssertion(schema:contributor schema:acceptedPaymentMethod <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:acceptedPaymentMethod schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:acceptedPaymentMethod schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:acceptedPaymentMethod schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:acceptedPaymentMethod schema:LoanOrCredit)
AnnotationAssertion(schema:rangeIncludes schema:acceptedPaymentMethod schema:PaymentMethod)
AnnotationAssertion(schema:rangeIncludes schema:acceptedPaymentMethod schema:Text)
AnnotationAssertion(schema:source schema:acceptedPaymentMethod <https://github.com/schemaorg/schemaorg/issues/3537>)
AnnotationAssertion(rdfs:comment schema:acceptsReservations "Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.")
AnnotationAssertion(rdfs:label schema:acceptsReservations "acceptsReservations")
AnnotationAssertion(schema:domainIncludes schema:acceptsReservations schema:FoodEstablishment)
AnnotationAssertion(schema:rangeIncludes schema:acceptsReservations schema:Boolean)
AnnotationAssertion(schema:rangeIncludes schema:acceptsReservations schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:acceptsReservations schema:URL)
AnnotationAssertion(rdfs:comment schema:accessCode "Password, PIN, or access code needed for delivery (e.g. from a locker).")
AnnotationAssertion(rdfs:label schema:accessCode "accessCode")
AnnotationAssertion(schema:domainIncludes schema:accessCode schema:DeliveryEvent)
AnnotationAssertion(schema:rangeIncludes schema:accessCode schema:Text)
AnnotationAssertion(rdfs:comment schema:accessMode "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessMode "accessMode")
AnnotationAssertion(schema:domainIncludes schema:accessMode schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessMode schema:Text)
AnnotationAssertion(schema:source schema:accessMode <https://github.com/schemaorg/schemaorg/issues/1100>)
AnnotationAssertion(rdfs:comment schema:accessModeSufficient "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessModeSufficient "accessModeSufficient")
AnnotationAssertion(schema:domainIncludes schema:accessModeSufficient schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessModeSufficient schema:ItemList)
AnnotationAssertion(schema:source schema:accessModeSufficient <https://github.com/schemaorg/schemaorg/issues/1100>)
AnnotationAssertion(rdfs:comment schema:accessibilityAPI "Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessibilityAPI "accessibilityAPI")
AnnotationAssertion(schema:domainIncludes schema:accessibilityAPI schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessibilityAPI schema:Text)
AnnotationAssertion(rdfs:comment schema:accessibilityControl "Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessibilityControl "accessibilityControl")
AnnotationAssertion(schema:domainIncludes schema:accessibilityControl schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessibilityControl schema:Text)
AnnotationAssertion(rdfs:comment schema:accessibilityFeature "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessibilityFeature "accessibilityFeature")
AnnotationAssertion(schema:domainIncludes schema:accessibilityFeature schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessibilityFeature schema:Text)
AnnotationAssertion(rdfs:comment schema:accessibilityHazard "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).")
AnnotationAssertion(rdfs:label schema:accessibilityHazard "accessibilityHazard")
AnnotationAssertion(schema:domainIncludes schema:accessibilityHazard schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessibilityHazard schema:Text)
AnnotationAssertion(rdfs:comment schema:accessibilitySummary "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed\".")
AnnotationAssertion(rdfs:label schema:accessibilitySummary "accessibilitySummary")
AnnotationAssertion(schema:domainIncludes schema:accessibilitySummary schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accessibilitySummary schema:Text)
AnnotationAssertion(schema:source schema:accessibilitySummary <https://github.com/schemaorg/schemaorg/issues/1100>)
AnnotationAssertion(rdfs:comment schema:accommodationFloorPlan "A floorplan of some [[Accommodation]].")
AnnotationAssertion(rdfs:label schema:accommodationFloorPlan "accommodationFloorPlan")
AnnotationAssertion(schema:domainIncludes schema:accommodationFloorPlan schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:accommodationFloorPlan schema:Residence)
AnnotationAssertion(schema:isPartOf schema:accommodationFloorPlan <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:accommodationFloorPlan schema:FloorPlan)
AnnotationAssertion(schema:source schema:accommodationFloorPlan <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:accountMinimumInflow "A minimum amount that has to be paid in every month.")
AnnotationAssertion(rdfs:label schema:accountMinimumInflow "accountMinimumInflow")
AnnotationAssertion(schema:contributor schema:accountMinimumInflow <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:accountMinimumInflow schema:BankAccount)
AnnotationAssertion(schema:isPartOf schema:accountMinimumInflow <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:accountMinimumInflow schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:accountMinimumInflow <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:accountOverdraftLimit "An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.")
AnnotationAssertion(rdfs:label schema:accountOverdraftLimit "accountOverdraftLimit")
AnnotationAssertion(schema:contributor schema:accountOverdraftLimit <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:accountOverdraftLimit schema:BankAccount)
AnnotationAssertion(schema:isPartOf schema:accountOverdraftLimit <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:accountOverdraftLimit schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:accountOverdraftLimit <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:accountablePerson "Specifies the Person that is legally accountable for the CreativeWork.")
AnnotationAssertion(rdfs:label schema:accountablePerson "accountablePerson")
AnnotationAssertion(schema:domainIncludes schema:accountablePerson schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:accountablePerson schema:Person)
AnnotationAssertion(rdfs:comment schema:acquiredFrom "The organization or person from which the product was acquired.")
AnnotationAssertion(rdfs:label schema:acquiredFrom "acquiredFrom")
AnnotationAssertion(schema:contributor schema:acquiredFrom <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:acquiredFrom schema:OwnershipInfo)
AnnotationAssertion(schema:rangeIncludes schema:acquiredFrom schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:acquiredFrom schema:Person)
AnnotationAssertion(rdfs:comment schema:acrissCode "The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.")
AnnotationAssertion(rdfs:label schema:acrissCode "acrissCode")
AnnotationAssertion(schema:contributor schema:acrissCode <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:acrissCode schema:BusOrCoach)
AnnotationAssertion(schema:domainIncludes schema:acrissCode schema:Car)
AnnotationAssertion(schema:isPartOf schema:acrissCode <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:acrissCode schema:Text)
AnnotationAssertion(rdfs:comment schema:actionAccessibilityRequirement "A set of requirements that must be fulfilled in order to perform an Action. If more than one value is specified, fulfilling one set of requirements will allow the Action to be performed.")
AnnotationAssertion(rdfs:label schema:actionAccessibilityRequirement "actionAccessibilityRequirement")
AnnotationAssertion(schema:domainIncludes schema:actionAccessibilityRequirement schema:ConsumeAction)
AnnotationAssertion(schema:rangeIncludes schema:actionAccessibilityRequirement schema:ActionAccessSpecification)
AnnotationAssertion(schema:source schema:actionAccessibilityRequirement <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:actionApplication "An application that can complete the request.")
AnnotationAssertion(rdfs:label schema:actionApplication "actionApplication")
AnnotationAssertion(schema:domainIncludes schema:actionApplication schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:actionApplication schema:SoftwareApplication)
AnnotationAssertion(rdfs:comment schema:actionPlatform "The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.")
AnnotationAssertion(rdfs:label schema:actionPlatform "actionPlatform")
AnnotationAssertion(schema:domainIncludes schema:actionPlatform schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:actionPlatform schema:DigitalPlatformEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:actionPlatform schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:actionPlatform schema:URL)
AnnotationAssertion(rdfs:comment schema:actionProcess "Description of the process by which the action was performed.")
AnnotationAssertion(rdfs:label schema:actionProcess "actionProcess")
AnnotationAssertion(schema:domainIncludes schema:actionProcess schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:actionProcess schema:HowTo)
AnnotationAssertion(rdfs:comment schema:actionStatus "Indicates the current disposition of the Action.")
AnnotationAssertion(rdfs:label schema:actionStatus "actionStatus")
AnnotationAssertion(schema:domainIncludes schema:actionStatus schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:actionStatus schema:ActionStatusType)
AnnotationAssertion(rdfs:comment schema:activeIngredient "An active ingredient, typically chemical compounds and/or biologic substances.")
AnnotationAssertion(rdfs:label schema:activeIngredient "activeIngredient")
AnnotationAssertion(schema:domainIncludes schema:activeIngredient schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:activeIngredient schema:Drug)
AnnotationAssertion(schema:domainIncludes schema:activeIngredient schema:DrugStrength)
AnnotationAssertion(schema:domainIncludes schema:activeIngredient schema:Substance)
AnnotationAssertion(schema:isPartOf schema:activeIngredient <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:activeIngredient schema:Text)
AnnotationAssertion(rdfs:comment schema:activityDuration "Length of time to engage in the activity.")
AnnotationAssertion(rdfs:label schema:activityDuration "activityDuration")
AnnotationAssertion(schema:domainIncludes schema:activityDuration schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:activityDuration <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:activityDuration schema:Duration)
AnnotationAssertion(schema:rangeIncludes schema:activityDuration schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:activityFrequency "How often one should engage in the activity.")
AnnotationAssertion(rdfs:label schema:activityFrequency "activityFrequency")
AnnotationAssertion(schema:domainIncludes schema:activityFrequency schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:activityFrequency <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:activityFrequency schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:activityFrequency schema:Text)
AnnotationAssertion(rdfs:comment schema:actors "An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.")
AnnotationAssertion(rdfs:label schema:actors "actors")
AnnotationAssertion(schema:domainIncludes schema:actors schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:actors schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:actors schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:actors schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:actors schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:actors schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:actors schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:actors schema:VideoGameSeries)
AnnotationAssertion(schema:domainIncludes schema:actors schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:actors schema:Person)
AnnotationAssertion(schema:supersededBy schema:actors schema:actor)
AnnotationAssertion(rdfs:comment schema:addOn "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).")
AnnotationAssertion(rdfs:label schema:addOn "addOn")
AnnotationAssertion(schema:contributor schema:addOn <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:addOn schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:addOn schema:Offer)
AnnotationAssertion(rdfs:comment schema:additionalNumberOfGuests "If responding yes, the number of guests who will attend in addition to the invitee.")
AnnotationAssertion(rdfs:label schema:additionalNumberOfGuests "additionalNumberOfGuests")
AnnotationAssertion(schema:domainIncludes schema:additionalNumberOfGuests schema:RsvpAction)
AnnotationAssertion(schema:rangeIncludes schema:additionalNumberOfGuests schema:Number)
AnnotationAssertion(rdfs:comment schema:additionalProperty "A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\\n\\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
")
AnnotationAssertion(rdfs:label schema:additionalProperty "additionalProperty")
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:Place)
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:Product)
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:QualitativeValue)
AnnotationAssertion(schema:domainIncludes schema:additionalProperty schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:additionalProperty schema:PropertyValue)
AnnotationAssertion(rdfs:comment schema:additionalVariable "Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.")
AnnotationAssertion(rdfs:label schema:additionalVariable "additionalVariable")
AnnotationAssertion(schema:domainIncludes schema:additionalVariable schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:additionalVariable <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:additionalVariable schema:Text)
AnnotationAssertion(rdfs:comment schema:address "Physical address of the item.")
AnnotationAssertion(rdfs:label schema:address "address")
AnnotationAssertion(schema:domainIncludes schema:address schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:address schema:GeoShape)
AnnotationAssertion(schema:domainIncludes schema:address schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:address schema:Person)
AnnotationAssertion(schema:domainIncludes schema:address schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:address schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:address schema:Text)
AnnotationAssertion(rdfs:comment schema:addressCountry "The country. Recommended to be in 2-letter [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1) format, for example \"US\". For backward compatibility, a 3-letter [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code such as \"SGP\" or a full country name such as \"Singapore\" can also be used.")
AnnotationAssertion(rdfs:label schema:addressCountry "addressCountry")
AnnotationAssertion(schema:domainIncludes schema:addressCountry schema:DefinedRegion)
AnnotationAssertion(schema:domainIncludes schema:addressCountry schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:addressCountry schema:GeoShape)
AnnotationAssertion(schema:domainIncludes schema:addressCountry schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:addressCountry schema:Country)
AnnotationAssertion(schema:rangeIncludes schema:addressCountry schema:Text)
AnnotationAssertion(schema:source schema:addressCountry <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:addressLocality "The locality in which the street address is, and which is in the region. For example, Mountain View.")
AnnotationAssertion(rdfs:label schema:addressLocality "addressLocality")
AnnotationAssertion(schema:domainIncludes schema:addressLocality schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:addressLocality schema:Text)
AnnotationAssertion(rdfs:comment schema:addressRegion "The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).")
AnnotationAssertion(rdfs:label schema:addressRegion "addressRegion")
AnnotationAssertion(schema:domainIncludes schema:addressRegion schema:DefinedRegion)
AnnotationAssertion(schema:domainIncludes schema:addressRegion schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:addressRegion schema:Text)
AnnotationAssertion(schema:source schema:addressRegion <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:administrationRoute "A route by which this drug may be administered, e.g. 'oral'.")
AnnotationAssertion(rdfs:label schema:administrationRoute "administrationRoute")
AnnotationAssertion(schema:domainIncludes schema:administrationRoute schema:Drug)
AnnotationAssertion(schema:isPartOf schema:administrationRoute <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:administrationRoute schema:Text)
AnnotationAssertion(rdfs:comment schema:advanceBookingRequirement "The amount of time that is required between accepting the offer and the actual usage of the resource or service.")
AnnotationAssertion(rdfs:label schema:advanceBookingRequirement "advanceBookingRequirement")
AnnotationAssertion(schema:contributor schema:advanceBookingRequirement <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:advanceBookingRequirement schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:advanceBookingRequirement schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:advanceBookingRequirement schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:adverseOutcome "A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or otherwise life-threatening or requiring immediate medical attention), tag it as a seriousAdverseOutcome instead.")
AnnotationAssertion(rdfs:label schema:adverseOutcome "adverseOutcome")
AnnotationAssertion(schema:domainIncludes schema:adverseOutcome schema:MedicalDevice)
AnnotationAssertion(schema:domainIncludes schema:adverseOutcome schema:TherapeuticProcedure)
AnnotationAssertion(schema:isPartOf schema:adverseOutcome <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:adverseOutcome schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:affectedBy "Drugs that affect the test's results.")
AnnotationAssertion(rdfs:label schema:affectedBy "affectedBy")
AnnotationAssertion(schema:domainIncludes schema:affectedBy schema:MedicalTest)
AnnotationAssertion(schema:isPartOf schema:affectedBy <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:affectedBy schema:Drug)
AnnotationAssertion(rdfs:comment schema:afterMedia "A media object representing the circumstances after performing this direction.")
AnnotationAssertion(rdfs:label schema:afterMedia "afterMedia")
AnnotationAssertion(schema:domainIncludes schema:afterMedia schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:afterMedia schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:afterMedia schema:URL)
AnnotationAssertion(rdfs:comment schema:agent "The direct performer or driver of the action (animate or inanimate). E.g. *John* wrote a book.")
AnnotationAssertion(rdfs:label schema:agent "agent")
AnnotationAssertion(schema:domainIncludes schema:agent schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:agent schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:agent schema:Person)
AnnotationAssertion(rdfs:comment schema:agentInteractionStatistic "The number of completed interactions for this entity, in a particular role (the 'agent'), in a particular action (indicated in the statistic), and in a particular context (i.e. interactionService).")
AnnotationAssertion(rdfs:label schema:agentInteractionStatistic "agentInteractionStatistic")
AnnotationAssertion(schema:domainIncludes schema:agentInteractionStatistic schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:agentInteractionStatistic schema:Person)
AnnotationAssertion(schema:isPartOf schema:agentInteractionStatistic <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:agentInteractionStatistic schema:InteractionCounter)
AnnotationAssertion(schema:source schema:agentInteractionStatistic <https://github.com/schemaorg/schemaorg/issues/2858>)
AnnotationAssertion(rdfs:comment schema:aggregateRating "The overall rating, based on a collection of reviews or ratings, of the item.")
AnnotationAssertion(rdfs:label schema:aggregateRating "aggregateRating")
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Brand)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Event)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Place)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Product)
AnnotationAssertion(schema:domainIncludes schema:aggregateRating schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:aggregateRating schema:AggregateRating)
AnnotationAssertion(rdfs:comment schema:aircraft "The kind of aircraft (e.g., \"Boeing 747\").")
AnnotationAssertion(rdfs:label schema:aircraft "aircraft")
AnnotationAssertion(schema:domainIncludes schema:aircraft schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:aircraft schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:aircraft schema:Vehicle)
AnnotationAssertion(rdfs:comment schema:album "A music album.")
AnnotationAssertion(rdfs:label schema:album "album")
AnnotationAssertion(schema:domainIncludes schema:album schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:album schema:MusicAlbum)
AnnotationAssertion(rdfs:comment schema:albumProductionType "Classification of the album by its type of content: soundtrack, live album, studio album, etc.")
AnnotationAssertion(rdfs:label schema:albumProductionType "albumProductionType")
AnnotationAssertion(schema:contributor schema:albumProductionType <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:albumProductionType schema:MusicAlbum)
AnnotationAssertion(schema:rangeIncludes schema:albumProductionType schema:MusicAlbumProductionType)
AnnotationAssertion(rdfs:comment schema:albumRelease "A release of this album.")
AnnotationAssertion(rdfs:label schema:albumRelease "albumRelease")
AnnotationAssertion(schema:domainIncludes schema:albumRelease schema:MusicAlbum)
AnnotationAssertion(schema:inverseOf schema:albumRelease schema:releaseOf)
AnnotationAssertion(schema:rangeIncludes schema:albumRelease schema:MusicRelease)
AnnotationAssertion(rdfs:comment schema:albumReleaseType "The kind of release which this album is: single, EP or album.")
AnnotationAssertion(rdfs:label schema:albumReleaseType "albumReleaseType")
AnnotationAssertion(schema:contributor schema:albumReleaseType <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:albumReleaseType schema:MusicAlbum)
AnnotationAssertion(schema:rangeIncludes schema:albumReleaseType schema:MusicAlbumReleaseType)
AnnotationAssertion(rdfs:comment schema:albums "A collection of music albums.")
AnnotationAssertion(rdfs:label schema:albums "albums")
AnnotationAssertion(schema:domainIncludes schema:albums schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:albums schema:MusicAlbum)
AnnotationAssertion(schema:supersededBy schema:albums schema:album)
AnnotationAssertion(rdfs:comment schema:alcoholWarning "Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.")
AnnotationAssertion(rdfs:label schema:alcoholWarning "alcoholWarning")
AnnotationAssertion(schema:domainIncludes schema:alcoholWarning schema:Drug)
AnnotationAssertion(schema:isPartOf schema:alcoholWarning <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:alcoholWarning schema:Text)
AnnotationAssertion(rdfs:comment schema:algorithm "The algorithm or rules to follow to compute the score.")
AnnotationAssertion(rdfs:label schema:algorithm "algorithm")
AnnotationAssertion(schema:domainIncludes schema:algorithm schema:MedicalRiskScore)
AnnotationAssertion(schema:isPartOf schema:algorithm <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:algorithm schema:Text)
AnnotationAssertion(rdfs:comment schema:alignmentType "A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.")
AnnotationAssertion(rdfs:label schema:alignmentType "alignmentType")
AnnotationAssertion(schema:domainIncludes schema:alignmentType schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:alignmentType schema:Text)
AnnotationAssertion(rdfs:comment schema:alternativeHeadline "A secondary title of the CreativeWork.")
AnnotationAssertion(rdfs:label schema:alternativeHeadline "alternativeHeadline")
AnnotationAssertion(schema:domainIncludes schema:alternativeHeadline schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:alternativeHeadline schema:Text)
AnnotationAssertion(rdfs:comment schema:alternativeOf "Another gene which is a variation of this one.")
AnnotationAssertion(rdfs:label schema:alternativeOf "alternativeOf")
AnnotationAssertion(schema:domainIncludes schema:alternativeOf schema:Gene)
AnnotationAssertion(schema:isPartOf schema:alternativeOf <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:alternativeOf schema:Gene)
AnnotationAssertion(schema:source schema:alternativeOf <http://www.bioschemas.org/Gene>)
AnnotationAssertion(rdfs:comment schema:alumni "Alumni of an organization.")
AnnotationAssertion(rdfs:label schema:alumni "alumni")
AnnotationAssertion(schema:domainIncludes schema:alumni schema:EducationalOrganization)
AnnotationAssertion(schema:domainIncludes schema:alumni schema:Organization)
AnnotationAssertion(schema:inverseOf schema:alumni schema:alumniOf)
AnnotationAssertion(schema:rangeIncludes schema:alumni schema:Person)
AnnotationAssertion(rdfs:comment schema:alumniOf "An organization that the person is an alumni of.")
AnnotationAssertion(rdfs:label schema:alumniOf "alumniOf")
AnnotationAssertion(schema:domainIncludes schema:alumniOf schema:Person)
AnnotationAssertion(schema:inverseOf schema:alumniOf schema:alumni)
AnnotationAssertion(schema:rangeIncludes schema:alumniOf schema:EducationalOrganization)
AnnotationAssertion(schema:rangeIncludes schema:alumniOf schema:Organization)
AnnotationAssertion(rdfs:comment schema:amenityFeature "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.")
AnnotationAssertion(rdfs:label schema:amenityFeature "amenityFeature")
AnnotationAssertion(schema:contributor schema:amenityFeature <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:amenityFeature schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:amenityFeature schema:FloorPlan)
AnnotationAssertion(schema:domainIncludes schema:amenityFeature schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:amenityFeature schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:amenityFeature schema:LocationFeatureSpecification)
AnnotationAssertion(rdfs:comment schema:amount "The amount of money.")
AnnotationAssertion(rdfs:label schema:amount "amount")
AnnotationAssertion(schema:domainIncludes schema:amount schema:DatedMoneySpecification)
AnnotationAssertion(schema:domainIncludes schema:amount schema:InvestmentOrDeposit)
AnnotationAssertion(schema:domainIncludes schema:amount schema:LoanOrCredit)
AnnotationAssertion(schema:domainIncludes schema:amount schema:MonetaryGrant)
AnnotationAssertion(schema:domainIncludes schema:amount schema:MoneyTransfer)
AnnotationAssertion(schema:rangeIncludes schema:amount schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:amount schema:Number)
AnnotationAssertion(schema:source schema:amount <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(schema:source schema:amount <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:amountOfThisGood "The quantity of the goods included in the offer.")
AnnotationAssertion(rdfs:label schema:amountOfThisGood "amountOfThisGood")
AnnotationAssertion(schema:contributor schema:amountOfThisGood <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:amountOfThisGood schema:TypeAndQuantityNode)
AnnotationAssertion(schema:rangeIncludes schema:amountOfThisGood schema:Number)
AnnotationAssertion(rdfs:comment schema:annualPercentageRate "The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.")
AnnotationAssertion(rdfs:label schema:annualPercentageRate "annualPercentageRate")
AnnotationAssertion(schema:contributor schema:annualPercentageRate <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:annualPercentageRate schema:FinancialProduct)
AnnotationAssertion(schema:rangeIncludes schema:annualPercentageRate schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:annualPercentageRate schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:answerCount "The number of answers this question has received.")
AnnotationAssertion(rdfs:label schema:answerCount "answerCount")
AnnotationAssertion(schema:domainIncludes schema:answerCount schema:Question)
AnnotationAssertion(schema:rangeIncludes schema:answerCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:answerExplanation "A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it. ")
AnnotationAssertion(rdfs:label schema:answerExplanation "answerExplanation")
AnnotationAssertion(schema:domainIncludes schema:answerExplanation schema:Answer)
AnnotationAssertion(schema:isPartOf schema:answerExplanation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:answerExplanation schema:Comment)
AnnotationAssertion(schema:rangeIncludes schema:answerExplanation schema:WebContent)
AnnotationAssertion(schema:source schema:answerExplanation <https://github.com/schemaorg/schemaorg/issues/2636>)
AnnotationAssertion(rdfs:comment schema:antagonist "The muscle whose action counteracts the specified muscle.")
AnnotationAssertion(rdfs:label schema:antagonist "antagonist")
AnnotationAssertion(schema:domainIncludes schema:antagonist schema:Muscle)
AnnotationAssertion(schema:isPartOf schema:antagonist <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:antagonist schema:Muscle)
AnnotationAssertion(rdfs:comment schema:applicableCountry "A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label schema:applicableCountry "applicableCountry")
AnnotationAssertion(schema:domainIncludes schema:applicableCountry schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:applicableCountry <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicableCountry schema:Country)
AnnotationAssertion(schema:rangeIncludes schema:applicableCountry schema:Text)
AnnotationAssertion(schema:source schema:applicableCountry <https://github.com/schemaorg/schemaorg/issues/3001>)
AnnotationAssertion(rdfs:comment schema:applicableLocation "The location in which the status applies.")
AnnotationAssertion(rdfs:label schema:applicableLocation "applicableLocation")
AnnotationAssertion(schema:domainIncludes schema:applicableLocation schema:DrugCost)
AnnotationAssertion(schema:domainIncludes schema:applicableLocation schema:DrugLegalStatus)
AnnotationAssertion(schema:isPartOf schema:applicableLocation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicableLocation schema:AdministrativeArea)
AnnotationAssertion(rdfs:comment schema:applicantLocationRequirements "The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.")
AnnotationAssertion(rdfs:label schema:applicantLocationRequirements "applicantLocationRequirements")
AnnotationAssertion(schema:domainIncludes schema:applicantLocationRequirements schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:applicantLocationRequirements <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicantLocationRequirements schema:AdministrativeArea)
AnnotationAssertion(schema:source schema:applicantLocationRequirements <https://github.com/schemaorg/schemaorg/issues/2083>)
AnnotationAssertion(rdfs:comment schema:application "An application that can complete the request.")
AnnotationAssertion(rdfs:label schema:application "application")
AnnotationAssertion(schema:domainIncludes schema:application schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:application schema:SoftwareApplication)
AnnotationAssertion(schema:supersededBy schema:application schema:actionApplication)
AnnotationAssertion(rdfs:comment schema:applicationCategory "Type of software application, e.g. 'Game, Multimedia'.")
AnnotationAssertion(rdfs:label schema:applicationCategory "applicationCategory")
AnnotationAssertion(schema:domainIncludes schema:applicationCategory schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:applicationCategory schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:applicationCategory schema:URL)
AnnotationAssertion(rdfs:comment schema:applicationContact "Contact details for further information relevant to this job posting.")
AnnotationAssertion(rdfs:label schema:applicationContact "applicationContact")
AnnotationAssertion(schema:domainIncludes schema:applicationContact schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:applicationContact <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicationContact schema:ContactPoint)
AnnotationAssertion(schema:source schema:applicationContact <https://github.com/schemaorg/schemaorg/issues/2396>)
AnnotationAssertion(rdfs:comment schema:applicationDeadline "The date on which the program stops collecting applications for the next enrollment cycle. Flexible application deadlines (for example, a program with rolling admissions) can be described in a textual string, rather than as a DateTime.")
AnnotationAssertion(rdfs:label schema:applicationDeadline "applicationDeadline")
AnnotationAssertion(schema:domainIncludes schema:applicationDeadline schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:applicationDeadline <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicationDeadline schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:applicationDeadline schema:Text)
AnnotationAssertion(schema:source schema:applicationDeadline <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:applicationStartDate "The date at which the program begins collecting applications for the next enrollment cycle.")
AnnotationAssertion(rdfs:label schema:applicationStartDate "applicationStartDate")
AnnotationAssertion(schema:domainIncludes schema:applicationStartDate schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:applicationStartDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:applicationStartDate schema:Date)
AnnotationAssertion(schema:source schema:applicationStartDate <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:applicationSubCategory "Subcategory of the application, e.g. 'Arcade Game'.")
AnnotationAssertion(rdfs:label schema:applicationSubCategory "applicationSubCategory")
AnnotationAssertion(schema:domainIncludes schema:applicationSubCategory schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:applicationSubCategory schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:applicationSubCategory schema:URL)
AnnotationAssertion(rdfs:comment schema:applicationSuite "The name of the application suite to which the application belongs (e.g. Excel belongs to Office).")
AnnotationAssertion(rdfs:label schema:applicationSuite "applicationSuite")
AnnotationAssertion(schema:domainIncludes schema:applicationSuite schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:applicationSuite schema:Text)
AnnotationAssertion(rdfs:comment schema:appliesToDeliveryMethod "The delivery method(s) to which the delivery charge or payment charge specification applies.")
AnnotationAssertion(rdfs:label schema:appliesToDeliveryMethod "appliesToDeliveryMethod")
AnnotationAssertion(schema:contributor schema:appliesToDeliveryMethod <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:appliesToDeliveryMethod schema:DeliveryChargeSpecification)
AnnotationAssertion(schema:domainIncludes schema:appliesToDeliveryMethod schema:PaymentChargeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:appliesToDeliveryMethod schema:DeliveryMethod)
AnnotationAssertion(rdfs:comment schema:appliesToPaymentMethod "The payment method(s) to which the payment charge specification applies.")
AnnotationAssertion(rdfs:label schema:appliesToPaymentMethod "appliesToPaymentMethod")
AnnotationAssertion(schema:contributor schema:appliesToPaymentMethod <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:appliesToPaymentMethod schema:PaymentChargeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:appliesToPaymentMethod schema:PaymentMethod)
AnnotationAssertion(rdfs:comment schema:archiveHeld "Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept or maintained by an [[ArchiveOrganization]]."@en)
AnnotationAssertion(rdfs:label schema:archiveHeld "archiveHeld"@en)
AnnotationAssertion(schema:domainIncludes schema:archiveHeld schema:ArchiveOrganization)
AnnotationAssertion(schema:inverseOf schema:archiveHeld schema:holdingArchive)
AnnotationAssertion(schema:isPartOf schema:archiveHeld <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:archiveHeld schema:ArchiveComponent)
AnnotationAssertion(schema:source schema:archiveHeld <https://github.com/schemaorg/schemaorg/issues/1758>)
AnnotationAssertion(rdfs:comment schema:archivedAt "Indicates a page or other link involved in archival of a [[CreativeWork]]. In the case of [[MediaReview]], the items in a [[MediaReviewItem]] may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.")
AnnotationAssertion(rdfs:label schema:archivedAt "archivedAt")
AnnotationAssertion(schema:domainIncludes schema:archivedAt schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:archivedAt <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:archivedAt schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:archivedAt schema:WebPage)
AnnotationAssertion(schema:source schema:archivedAt <https://github.com/schemaorg/schemaorg/issues/2450>)
AnnotationAssertion(rdfs:comment schema:area "The area within which users can expect to reach the broadcast service.")
AnnotationAssertion(rdfs:label schema:area "area")
AnnotationAssertion(schema:domainIncludes schema:area schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:area schema:Place)
AnnotationAssertion(schema:supersededBy schema:area schema:serviceArea)
AnnotationAssertion(rdfs:comment schema:arrivalAirport "The airport where the flight terminates.")
AnnotationAssertion(rdfs:label schema:arrivalAirport "arrivalAirport")
AnnotationAssertion(schema:domainIncludes schema:arrivalAirport schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:arrivalAirport schema:Airport)
AnnotationAssertion(rdfs:comment schema:arrivalBoatTerminal "The terminal or port from which the boat arrives.")
AnnotationAssertion(rdfs:label schema:arrivalBoatTerminal "arrivalBoatTerminal")
AnnotationAssertion(schema:domainIncludes schema:arrivalBoatTerminal schema:BoatTrip)
AnnotationAssertion(schema:isPartOf schema:arrivalBoatTerminal <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:arrivalBoatTerminal schema:BoatTerminal)
AnnotationAssertion(schema:source schema:arrivalBoatTerminal <https://github.com/schemaorg/schemaorg/issues/1755>)
AnnotationAssertion(rdfs:comment schema:arrivalBusStop "The stop or station from which the bus arrives.")
AnnotationAssertion(rdfs:label schema:arrivalBusStop "arrivalBusStop")
AnnotationAssertion(schema:domainIncludes schema:arrivalBusStop schema:BusTrip)
AnnotationAssertion(schema:rangeIncludes schema:arrivalBusStop schema:BusStation)
AnnotationAssertion(schema:rangeIncludes schema:arrivalBusStop schema:BusStop)
AnnotationAssertion(rdfs:comment schema:arrivalGate "Identifier of the flight's arrival gate.")
AnnotationAssertion(rdfs:label schema:arrivalGate "arrivalGate")
AnnotationAssertion(schema:domainIncludes schema:arrivalGate schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:arrivalGate schema:Text)
AnnotationAssertion(rdfs:comment schema:arrivalPlatform "The platform where the train arrives.")
AnnotationAssertion(rdfs:label schema:arrivalPlatform "arrivalPlatform")
AnnotationAssertion(schema:domainIncludes schema:arrivalPlatform schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:arrivalPlatform schema:Text)
AnnotationAssertion(rdfs:comment schema:arrivalStation "The station where the train trip ends.")
AnnotationAssertion(rdfs:label schema:arrivalStation "arrivalStation")
AnnotationAssertion(schema:domainIncludes schema:arrivalStation schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:arrivalStation schema:TrainStation)
AnnotationAssertion(rdfs:comment schema:arrivalTerminal "Identifier of the flight's arrival terminal.")
AnnotationAssertion(rdfs:label schema:arrivalTerminal "arrivalTerminal")
AnnotationAssertion(schema:domainIncludes schema:arrivalTerminal schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:arrivalTerminal schema:Text)
AnnotationAssertion(rdfs:comment schema:arrivalTime "The expected arrival time.")
AnnotationAssertion(rdfs:label schema:arrivalTime "arrivalTime")
AnnotationAssertion(schema:domainIncludes schema:arrivalTime schema:Trip)
AnnotationAssertion(schema:rangeIncludes schema:arrivalTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:arrivalTime schema:Time)
AnnotationAssertion(rdfs:comment schema:artEdition "The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \"20\").")
AnnotationAssertion(rdfs:label schema:artEdition "artEdition")
AnnotationAssertion(schema:domainIncludes schema:artEdition schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:artEdition schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:artEdition schema:Text)
AnnotationAssertion(rdfs:comment schema:arterialBranch "The branches that comprise the arterial structure.")
AnnotationAssertion(rdfs:label schema:arterialBranch "arterialBranch")
AnnotationAssertion(schema:domainIncludes schema:arterialBranch schema:Artery)
AnnotationAssertion(schema:isPartOf schema:arterialBranch <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:arterialBranch schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:artform "e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.")
AnnotationAssertion(rdfs:label schema:artform "artform")
AnnotationAssertion(schema:domainIncludes schema:artform schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:artform schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:artform schema:URL)
AnnotationAssertion(rdfs:comment schema:articleBody "The actual body of the article.")
AnnotationAssertion(rdfs:label schema:articleBody "articleBody")
AnnotationAssertion(schema:domainIncludes schema:articleBody schema:Article)
AnnotationAssertion(schema:rangeIncludes schema:articleBody schema:Text)
AnnotationAssertion(rdfs:comment schema:articleSection "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.")
AnnotationAssertion(rdfs:label schema:articleSection "articleSection")
AnnotationAssertion(schema:domainIncludes schema:articleSection schema:Article)
AnnotationAssertion(schema:rangeIncludes schema:articleSection schema:Text)
AnnotationAssertion(rdfs:comment schema:artist "The primary artist for a work
    	in a medium other than pencils or digital line art--for example, if the
    	primary artwork is done in watercolors or digital paints.")
AnnotationAssertion(rdfs:label schema:artist "artist")
AnnotationAssertion(schema:domainIncludes schema:artist schema:ComicIssue)
AnnotationAssertion(schema:domainIncludes schema:artist schema:ComicStory)
AnnotationAssertion(schema:domainIncludes schema:artist schema:VisualArtwork)
AnnotationAssertion(schema:isPartOf schema:artist <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:artist schema:Person)
AnnotationAssertion(rdfs:comment schema:artworkSurface "The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.")
AnnotationAssertion(rdfs:label schema:artworkSurface "artworkSurface")
AnnotationAssertion(schema:domainIncludes schema:artworkSurface schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:artworkSurface schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:artworkSurface schema:URL)
AnnotationAssertion(rdfs:comment schema:aspect "An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.")
AnnotationAssertion(rdfs:label schema:aspect "aspect")
AnnotationAssertion(schema:domainIncludes schema:aspect schema:MedicalWebPage)
AnnotationAssertion(schema:isPartOf schema:aspect <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:aspect schema:Text)
AnnotationAssertion(schema:supersededBy schema:aspect schema:mainContentOfPage)
AnnotationAssertion(rdfs:comment schema:assembly "Library file name, e.g., mscorlib.dll, system.web.dll.")
AnnotationAssertion(rdfs:label schema:assembly "assembly")
AnnotationAssertion(schema:domainIncludes schema:assembly schema:APIReference)
AnnotationAssertion(schema:rangeIncludes schema:assembly schema:Text)
AnnotationAssertion(schema:supersededBy schema:assembly schema:executableLibraryName)
AnnotationAssertion(rdfs:comment schema:assemblyVersion "Associated product/technology version. E.g., .NET Framework 4.5.")
AnnotationAssertion(rdfs:label schema:assemblyVersion "assemblyVersion")
AnnotationAssertion(schema:domainIncludes schema:assemblyVersion schema:APIReference)
AnnotationAssertion(schema:rangeIncludes schema:assemblyVersion schema:Text)
AnnotationAssertion(rdfs:comment schema:assesses "The item being described is intended to assess the competency or learning outcome defined by the referenced term.")
AnnotationAssertion(rdfs:label schema:assesses "assesses")
AnnotationAssertion(schema:domainIncludes schema:assesses schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:assesses schema:EducationEvent)
AnnotationAssertion(schema:domainIncludes schema:assesses schema:LearningResource)
AnnotationAssertion(schema:isPartOf schema:assesses <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:assesses schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:assesses schema:Text)
AnnotationAssertion(schema:source schema:assesses <https://github.com/schemaorg/schemaorg/issues/2427>)
AnnotationAssertion(rdfs:comment schema:associatedAnatomy "The anatomy of the underlying organ system or structures associated with this entity.")
AnnotationAssertion(rdfs:label schema:associatedAnatomy "associatedAnatomy")
AnnotationAssertion(schema:domainIncludes schema:associatedAnatomy schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:associatedAnatomy schema:PhysicalActivity)
AnnotationAssertion(schema:isPartOf schema:associatedAnatomy <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedAnatomy schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:associatedAnatomy schema:AnatomicalSystem)
AnnotationAssertion(schema:rangeIncludes schema:associatedAnatomy schema:SuperficialAnatomy)
AnnotationAssertion(rdfs:comment schema:associatedArticle "A NewsArticle associated with the Media Object.")
AnnotationAssertion(rdfs:label schema:associatedArticle "associatedArticle")
AnnotationAssertion(schema:domainIncludes schema:associatedArticle schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:associatedArticle schema:NewsArticle)
AnnotationAssertion(rdfs:comment schema:associatedDisease "Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.")
AnnotationAssertion(rdfs:label schema:associatedDisease "associatedDisease")
AnnotationAssertion(schema:domainIncludes schema:associatedDisease schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:associatedDisease <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedDisease schema:MedicalCondition)
AnnotationAssertion(schema:rangeIncludes schema:associatedDisease schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:associatedDisease schema:URL)
AnnotationAssertion(schema:source schema:associatedDisease <http://www.bioschemas.org/BioChemEntity>)
AnnotationAssertion(rdfs:comment schema:associatedMedia "A media object that encodes this CreativeWork. This property is a synonym for encoding.")
AnnotationAssertion(rdfs:label schema:associatedMedia "associatedMedia")
AnnotationAssertion(schema:domainIncludes schema:associatedMedia schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:associatedMedia schema:HyperToc)
AnnotationAssertion(schema:domainIncludes schema:associatedMedia schema:HyperTocEntry)
AnnotationAssertion(schema:rangeIncludes schema:associatedMedia schema:MediaObject)
AnnotationAssertion(rdfs:comment schema:associatedPathophysiology "If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.")
AnnotationAssertion(rdfs:label schema:associatedPathophysiology "associatedPathophysiology")
AnnotationAssertion(schema:domainIncludes schema:associatedPathophysiology schema:AnatomicalStructure)
AnnotationAssertion(schema:domainIncludes schema:associatedPathophysiology schema:AnatomicalSystem)
AnnotationAssertion(schema:domainIncludes schema:associatedPathophysiology schema:SuperficialAnatomy)
AnnotationAssertion(schema:isPartOf schema:associatedPathophysiology <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:associatedPathophysiology schema:Text)
AnnotationAssertion(rdfs:comment schema:athlete "A person that acts as performing member of a sports team; a player as opposed to a coach.")
AnnotationAssertion(rdfs:label schema:athlete "athlete")
AnnotationAssertion(schema:domainIncludes schema:athlete schema:SportsTeam)
AnnotationAssertion(schema:rangeIncludes schema:athlete schema:Person)
AnnotationAssertion(rdfs:comment schema:attendee "A person or organization attending the event.")
AnnotationAssertion(rdfs:label schema:attendee "attendee")
AnnotationAssertion(schema:domainIncludes schema:attendee schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:attendee schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:attendee schema:Person)
AnnotationAssertion(rdfs:comment schema:attendees "A person attending the event.")
AnnotationAssertion(rdfs:label schema:attendees "attendees")
AnnotationAssertion(schema:domainIncludes schema:attendees schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:attendees schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:attendees schema:Person)
AnnotationAssertion(schema:supersededBy schema:attendees schema:attendee)
AnnotationAssertion(rdfs:comment schema:audience "An intended audience, i.e. a group for whom something was created.")
AnnotationAssertion(rdfs:label schema:audience "audience")
AnnotationAssertion(schema:domainIncludes schema:audience schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:audience schema:Event)
AnnotationAssertion(schema:domainIncludes schema:audience schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:audience schema:PlayAction)
AnnotationAssertion(schema:domainIncludes schema:audience schema:Product)
AnnotationAssertion(schema:domainIncludes schema:audience schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:audience schema:Audience)
AnnotationAssertion(rdfs:comment schema:audienceType "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).")
AnnotationAssertion(rdfs:label schema:audienceType "audienceType")
AnnotationAssertion(schema:domainIncludes schema:audienceType schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:audienceType schema:Text)
AnnotationAssertion(rdfs:comment schema:audio "An embedded audio object.")
AnnotationAssertion(rdfs:label schema:audio "audio")
AnnotationAssertion(schema:domainIncludes schema:audio schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:audio schema:AudioObject)
AnnotationAssertion(schema:rangeIncludes schema:audio schema:Clip)
AnnotationAssertion(schema:rangeIncludes schema:audio schema:MusicRecording)
AnnotationAssertion(schema:source schema:audio <https://github.com/schemaorg/schemaorg/issues/2420>)
AnnotationAssertion(rdfs:comment schema:auditDate "Date when a certification was last audited. See also  [gs1:certificationAuditDate](https://www.gs1.org/voc/certificationAuditDate).")
AnnotationAssertion(rdfs:label schema:auditDate "auditDate")
AnnotationAssertion(schema:domainIncludes schema:auditDate schema:Certification)
AnnotationAssertion(schema:rangeIncludes schema:auditDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:auditDate schema:DateTime)
AnnotationAssertion(schema:source schema:auditDate <https://github.com/schemaorg/schemaorg/issues/3230>)
AnnotationAssertion(rdfs:comment schema:authenticator "The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.")
AnnotationAssertion(rdfs:label schema:authenticator "authenticator")
AnnotationAssertion(schema:domainIncludes schema:authenticator schema:MediaSubscription)
AnnotationAssertion(schema:rangeIncludes schema:authenticator schema:Organization)
AnnotationAssertion(schema:source schema:authenticator <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:author "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.")
AnnotationAssertion(rdfs:label schema:author "author")
AnnotationAssertion(schema:domainIncludes schema:author schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:author schema:Rating)
AnnotationAssertion(schema:rangeIncludes schema:author schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:author schema:Person)
AnnotationAssertion(rdfs:comment schema:availability "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.")
AnnotationAssertion(rdfs:label schema:availability "availability")
AnnotationAssertion(schema:domainIncludes schema:availability schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:availability schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:availability schema:ItemAvailability)
AnnotationAssertion(rdfs:comment schema:availabilityEnds "The end of the availability of the product or service included in the offer.")
AnnotationAssertion(rdfs:label schema:availabilityEnds "availabilityEnds")
AnnotationAssertion(schema:contributor schema:availabilityEnds <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:availabilityEnds schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:availabilityEnds schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:availabilityEnds schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:availabilityEnds schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:availabilityEnds schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:availabilityEnds schema:Time)
AnnotationAssertion(schema:source schema:availabilityEnds <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:availabilityStarts "The beginning of the availability of the product or service included in the offer.")
AnnotationAssertion(rdfs:label schema:availabilityStarts "availabilityStarts")
AnnotationAssertion(schema:contributor schema:availabilityStarts <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:availabilityStarts schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:availabilityStarts schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:availabilityStarts schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:availabilityStarts schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:availabilityStarts schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:availabilityStarts schema:Time)
AnnotationAssertion(schema:source schema:availabilityStarts <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:availableChannel "A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).")
AnnotationAssertion(rdfs:label schema:availableChannel "availableChannel")
AnnotationAssertion(schema:domainIncludes schema:availableChannel schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:availableChannel schema:ServiceChannel)
AnnotationAssertion(rdfs:comment schema:availableDeliveryMethod "The delivery method(s) available for this offer.")
AnnotationAssertion(rdfs:label schema:availableDeliveryMethod "availableDeliveryMethod")
AnnotationAssertion(schema:contributor schema:availableDeliveryMethod <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:availableDeliveryMethod schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:availableDeliveryMethod schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:availableDeliveryMethod schema:DeliveryMethod)
AnnotationAssertion(rdfs:comment schema:availableFrom "When the item is available for pickup from the store, locker, etc.")
AnnotationAssertion(rdfs:label schema:availableFrom "availableFrom")
AnnotationAssertion(schema:domainIncludes schema:availableFrom schema:DeliveryEvent)
AnnotationAssertion(schema:rangeIncludes schema:availableFrom schema:DateTime)
AnnotationAssertion(rdfs:comment schema:availableIn "The location in which the strength is available.")
AnnotationAssertion(rdfs:label schema:availableIn "availableIn")
AnnotationAssertion(schema:domainIncludes schema:availableIn schema:DrugStrength)
AnnotationAssertion(schema:isPartOf schema:availableIn <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:availableIn schema:AdministrativeArea)
AnnotationAssertion(rdfs:comment schema:availableLanguage "A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[inLanguage]].")
AnnotationAssertion(rdfs:label schema:availableLanguage "availableLanguage")
AnnotationAssertion(schema:domainIncludes schema:availableLanguage schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:availableLanguage schema:Course)
AnnotationAssertion(schema:domainIncludes schema:availableLanguage schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:availableLanguage schema:ServiceChannel)
AnnotationAssertion(schema:domainIncludes schema:availableLanguage schema:TouristAttraction)
AnnotationAssertion(schema:rangeIncludes schema:availableLanguage schema:Language)
AnnotationAssertion(schema:rangeIncludes schema:availableLanguage schema:Text)
AnnotationAssertion(rdfs:comment schema:availableOnDevice "Device required to run the application. Used in cases where a specific make/model is required to run the application.")
AnnotationAssertion(rdfs:label schema:availableOnDevice "availableOnDevice")
AnnotationAssertion(schema:domainIncludes schema:availableOnDevice schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:availableOnDevice schema:Text)
AnnotationAssertion(rdfs:comment schema:availableService "A medical service available from this provider.")
AnnotationAssertion(rdfs:label schema:availableService "availableService")
AnnotationAssertion(schema:domainIncludes schema:availableService schema:Hospital)
AnnotationAssertion(schema:domainIncludes schema:availableService schema:MedicalClinic)
AnnotationAssertion(schema:domainIncludes schema:availableService schema:Physician)
AnnotationAssertion(schema:isPartOf schema:availableService <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:availableService schema:MedicalProcedure)
AnnotationAssertion(schema:rangeIncludes schema:availableService schema:MedicalTest)
AnnotationAssertion(schema:rangeIncludes schema:availableService schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:availableStrength "An available dosage strength for the drug.")
AnnotationAssertion(rdfs:label schema:availableStrength "availableStrength")
AnnotationAssertion(schema:domainIncludes schema:availableStrength schema:Drug)
AnnotationAssertion(schema:isPartOf schema:availableStrength <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:availableStrength schema:DrugStrength)
AnnotationAssertion(rdfs:comment schema:availableTest "A diagnostic test or procedure offered by this lab.")
AnnotationAssertion(rdfs:label schema:availableTest "availableTest")
AnnotationAssertion(schema:domainIncludes schema:availableTest schema:DiagnosticLab)
AnnotationAssertion(schema:isPartOf schema:availableTest <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:availableTest schema:MedicalTest)
AnnotationAssertion(rdfs:comment schema:availableThrough "After this date, the item will no longer be available for pickup.")
AnnotationAssertion(rdfs:label schema:availableThrough "availableThrough")
AnnotationAssertion(schema:domainIncludes schema:availableThrough schema:DeliveryEvent)
AnnotationAssertion(schema:rangeIncludes schema:availableThrough schema:DateTime)
AnnotationAssertion(rdfs:comment schema:award "An award won by or for this item.")
AnnotationAssertion(rdfs:label schema:award "award")
AnnotationAssertion(schema:domainIncludes schema:award schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:award schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:award schema:Person)
AnnotationAssertion(schema:domainIncludes schema:award schema:Product)
AnnotationAssertion(schema:domainIncludes schema:award schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:award schema:Text)
AnnotationAssertion(rdfs:comment schema:awards "Awards won by or for this item.")
AnnotationAssertion(rdfs:label schema:awards "awards")
AnnotationAssertion(schema:domainIncludes schema:awards schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:awards schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:awards schema:Person)
AnnotationAssertion(schema:domainIncludes schema:awards schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:awards schema:Text)
AnnotationAssertion(schema:supersededBy schema:awards schema:award)
AnnotationAssertion(rdfs:comment schema:backstory "For an [[Article]], typically a [[NewsArticle]], the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.")
AnnotationAssertion(rdfs:label schema:backstory "backstory")
AnnotationAssertion(schema:contributor schema:backstory <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:backstory schema:Article)
AnnotationAssertion(schema:isPartOf schema:backstory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:backstory schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:backstory schema:Text)
AnnotationAssertion(schema:source schema:backstory <https://github.com/schemaorg/schemaorg/issues/1688>)
AnnotationAssertion(rdfs:comment schema:bankAccountType "The type of a bank account.")
AnnotationAssertion(rdfs:label schema:bankAccountType "bankAccountType")
AnnotationAssertion(schema:contributor schema:bankAccountType <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:bankAccountType schema:BankAccount)
AnnotationAssertion(schema:isPartOf schema:bankAccountType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bankAccountType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:bankAccountType schema:URL)
AnnotationAssertion(schema:source schema:bankAccountType <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:baseSalary "The base salary of the job or of an employee in an EmployeeRole.")
AnnotationAssertion(rdfs:label schema:baseSalary "baseSalary")
AnnotationAssertion(schema:domainIncludes schema:baseSalary schema:EmployeeRole)
AnnotationAssertion(schema:domainIncludes schema:baseSalary schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:baseSalary schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:baseSalary schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:baseSalary schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:bed "The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.")
AnnotationAssertion(rdfs:label schema:bed "bed")
AnnotationAssertion(schema:contributor schema:bed <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:bed schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:bed schema:HotelRoom)
AnnotationAssertion(schema:domainIncludes schema:bed schema:Suite)
AnnotationAssertion(schema:rangeIncludes schema:bed schema:BedDetails)
AnnotationAssertion(schema:rangeIncludes schema:bed schema:BedType)
AnnotationAssertion(schema:rangeIncludes schema:bed schema:Text)
AnnotationAssertion(rdfs:comment schema:beforeMedia "A media object representing the circumstances before performing this direction.")
AnnotationAssertion(rdfs:label schema:beforeMedia "beforeMedia")
AnnotationAssertion(schema:domainIncludes schema:beforeMedia schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:beforeMedia schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:beforeMedia schema:URL)
AnnotationAssertion(rdfs:comment schema:beneficiaryBank "A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary.")
AnnotationAssertion(rdfs:label schema:beneficiaryBank "beneficiaryBank")
AnnotationAssertion(schema:contributor schema:beneficiaryBank <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:beneficiaryBank schema:MoneyTransfer)
AnnotationAssertion(schema:isPartOf schema:beneficiaryBank <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:beneficiaryBank schema:BankOrCreditUnion)
AnnotationAssertion(schema:rangeIncludes schema:beneficiaryBank schema:Text)
AnnotationAssertion(schema:source schema:beneficiaryBank <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:benefits "Description of benefits associated with the job.")
AnnotationAssertion(rdfs:label schema:benefits "benefits")
AnnotationAssertion(schema:domainIncludes schema:benefits schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:benefits schema:Text)
AnnotationAssertion(schema:supersededBy schema:benefits schema:jobBenefits)
AnnotationAssertion(rdfs:comment schema:benefitsSummaryUrl "The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.")
AnnotationAssertion(rdfs:label schema:benefitsSummaryUrl "benefitsSummaryUrl")
AnnotationAssertion(schema:domainIncludes schema:benefitsSummaryUrl schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:benefitsSummaryUrl <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:benefitsSummaryUrl schema:URL)
AnnotationAssertion(schema:source schema:benefitsSummaryUrl <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:bestRating "The highest value allowed in this rating system.")
AnnotationAssertion(rdfs:label schema:bestRating "bestRating")
AnnotationAssertion(schema:domainIncludes schema:bestRating schema:Rating)
AnnotationAssertion(schema:rangeIncludes schema:bestRating schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:bestRating schema:Text)
AnnotationAssertion(rdfs:comment schema:billingAddress "The billing address for the order.")
AnnotationAssertion(rdfs:label schema:billingAddress "billingAddress")
AnnotationAssertion(schema:domainIncludes schema:billingAddress schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:billingAddress schema:PostalAddress)
AnnotationAssertion(rdfs:comment schema:billingDuration "Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).")
AnnotationAssertion(rdfs:label schema:billingDuration "billingDuration")
AnnotationAssertion(schema:domainIncludes schema:billingDuration schema:UnitPriceSpecification)
AnnotationAssertion(schema:isPartOf schema:billingDuration <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:billingDuration schema:Duration)
AnnotationAssertion(schema:rangeIncludes schema:billingDuration schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:billingDuration schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:billingDuration <https://github.com/schemaorg/schemaorg/issues/2689>)
AnnotationAssertion(rdfs:comment schema:billingIncrement "This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.")
AnnotationAssertion(rdfs:label schema:billingIncrement "billingIncrement")
AnnotationAssertion(schema:contributor schema:billingIncrement <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:billingIncrement schema:UnitPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:billingIncrement schema:Number)
AnnotationAssertion(rdfs:comment schema:billingPeriod "The time interval used to compute the invoice.")
AnnotationAssertion(rdfs:label schema:billingPeriod "billingPeriod")
AnnotationAssertion(schema:domainIncludes schema:billingPeriod schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:billingPeriod schema:Duration)
AnnotationAssertion(rdfs:comment schema:billingStart "Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.")
AnnotationAssertion(rdfs:label schema:billingStart "billingStart")
AnnotationAssertion(schema:domainIncludes schema:billingStart schema:UnitPriceSpecification)
AnnotationAssertion(schema:isPartOf schema:billingStart <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:billingStart schema:Number)
AnnotationAssertion(schema:source schema:billingStart <https://github.com/schemaorg/schemaorg/issues/2689>)
AnnotationAssertion(rdfs:comment schema:bioChemInteraction "A BioChemEntity that is known to interact with this item.")
AnnotationAssertion(rdfs:label schema:bioChemInteraction "bioChemInteraction")
AnnotationAssertion(schema:domainIncludes schema:bioChemInteraction schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:bioChemInteraction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bioChemInteraction schema:BioChemEntity)
AnnotationAssertion(schema:source schema:bioChemInteraction <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:bioChemSimilarity "A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.")
AnnotationAssertion(rdfs:label schema:bioChemSimilarity "bioChemSimilarity")
AnnotationAssertion(schema:domainIncludes schema:bioChemSimilarity schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:bioChemSimilarity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bioChemSimilarity schema:BioChemEntity)
AnnotationAssertion(schema:source schema:bioChemSimilarity <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:biologicalRole "A role played by the BioChemEntity within a biological context.")
AnnotationAssertion(rdfs:label schema:biologicalRole "biologicalRole")
AnnotationAssertion(schema:domainIncludes schema:biologicalRole schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:biologicalRole <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:biologicalRole schema:DefinedTerm)
AnnotationAssertion(schema:source schema:biologicalRole <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:biomechnicalClass "The biomechanical properties of the bone.")
AnnotationAssertion(rdfs:label schema:biomechnicalClass "biomechnicalClass")
AnnotationAssertion(schema:domainIncludes schema:biomechnicalClass schema:Joint)
AnnotationAssertion(schema:isPartOf schema:biomechnicalClass <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:biomechnicalClass schema:Text)
AnnotationAssertion(rdfs:comment schema:birthDate "Date of birth.")
AnnotationAssertion(rdfs:label schema:birthDate "birthDate")
AnnotationAssertion(schema:domainIncludes schema:birthDate schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:birthDate schema:Date)
AnnotationAssertion(rdfs:comment schema:birthPlace "The place where the person was born.")
AnnotationAssertion(rdfs:label schema:birthPlace "birthPlace")
AnnotationAssertion(schema:domainIncludes schema:birthPlace schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:birthPlace schema:Place)
AnnotationAssertion(rdfs:comment schema:bitrate "The bitrate of the media object.")
AnnotationAssertion(rdfs:label schema:bitrate "bitrate")
AnnotationAssertion(schema:domainIncludes schema:bitrate schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:bitrate schema:Text)
AnnotationAssertion(rdfs:comment schema:blogPost "A posting that is part of this blog.")
AnnotationAssertion(rdfs:label schema:blogPost "blogPost")
AnnotationAssertion(schema:domainIncludes schema:blogPost schema:Blog)
AnnotationAssertion(schema:rangeIncludes schema:blogPost schema:BlogPosting)
AnnotationAssertion(rdfs:comment schema:blogPosts "Indicates a post that is part of a [[Blog]]. Note that historically, what we term a \"Blog\" was once known as a \"weblog\", and that what we term a \"BlogPosting\" is now often colloquially referred to as a \"blog\".")
AnnotationAssertion(rdfs:label schema:blogPosts "blogPosts")
AnnotationAssertion(schema:domainIncludes schema:blogPosts schema:Blog)
AnnotationAssertion(schema:rangeIncludes schema:blogPosts schema:BlogPosting)
AnnotationAssertion(schema:supersededBy schema:blogPosts schema:blogPost)
AnnotationAssertion(rdfs:comment schema:bloodSupply "The blood vessel that carries blood from the heart to the muscle.")
AnnotationAssertion(rdfs:label schema:bloodSupply "bloodSupply")
AnnotationAssertion(schema:domainIncludes schema:bloodSupply schema:Muscle)
AnnotationAssertion(schema:isPartOf schema:bloodSupply <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bloodSupply schema:Vessel)
AnnotationAssertion(rdfs:comment schema:boardingGroup "The airline-specific indicator of boarding order / preference.")
AnnotationAssertion(rdfs:label schema:boardingGroup "boardingGroup")
AnnotationAssertion(schema:domainIncludes schema:boardingGroup schema:FlightReservation)
AnnotationAssertion(schema:rangeIncludes schema:boardingGroup schema:Text)
AnnotationAssertion(rdfs:comment schema:boardingPolicy "The type of boarding policy used by the airline (e.g. zone-based or group-based).")
AnnotationAssertion(rdfs:label schema:boardingPolicy "boardingPolicy")
AnnotationAssertion(schema:domainIncludes schema:boardingPolicy schema:Airline)
AnnotationAssertion(schema:domainIncludes schema:boardingPolicy schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:boardingPolicy schema:BoardingPolicyType)
AnnotationAssertion(rdfs:comment schema:bodyLocation "Location in the body of the anatomical structure.")
AnnotationAssertion(rdfs:label schema:bodyLocation "bodyLocation")
AnnotationAssertion(schema:domainIncludes schema:bodyLocation schema:AnatomicalStructure)
AnnotationAssertion(schema:domainIncludes schema:bodyLocation schema:MedicalProcedure)
AnnotationAssertion(schema:isPartOf schema:bodyLocation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bodyLocation schema:Text)
AnnotationAssertion(rdfs:comment schema:bodyType "Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).")
AnnotationAssertion(rdfs:label schema:bodyType "bodyType")
AnnotationAssertion(schema:contributor schema:bodyType <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:bodyType schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:bodyType <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:bodyType schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:bodyType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:bodyType schema:URL)
AnnotationAssertion(rdfs:comment schema:bookEdition "The edition of the book.")
AnnotationAssertion(rdfs:label schema:bookEdition "bookEdition")
AnnotationAssertion(schema:domainIncludes schema:bookEdition schema:Book)
AnnotationAssertion(schema:rangeIncludes schema:bookEdition schema:Text)
AnnotationAssertion(rdfs:comment schema:bookFormat "The format of the book.")
AnnotationAssertion(rdfs:label schema:bookFormat "bookFormat")
AnnotationAssertion(schema:domainIncludes schema:bookFormat schema:Book)
AnnotationAssertion(schema:rangeIncludes schema:bookFormat schema:BookFormatType)
AnnotationAssertion(rdfs:comment schema:bookingAgent "'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.")
AnnotationAssertion(rdfs:label schema:bookingAgent "bookingAgent")
AnnotationAssertion(schema:domainIncludes schema:bookingAgent schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:bookingAgent schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:bookingAgent schema:Person)
AnnotationAssertion(schema:supersededBy schema:bookingAgent schema:broker)
AnnotationAssertion(rdfs:comment schema:bookingTime "The date and time the reservation was booked.")
AnnotationAssertion(rdfs:label schema:bookingTime "bookingTime")
AnnotationAssertion(schema:domainIncludes schema:bookingTime schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:bookingTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:box "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.")
AnnotationAssertion(rdfs:label schema:box "box")
AnnotationAssertion(schema:domainIncludes schema:box schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:box schema:Text)
AnnotationAssertion(rdfs:comment schema:branch "The branches that delineate from the nerve bundle. Not to be confused with [[branchOf]].")
AnnotationAssertion(rdfs:label schema:branch "branch")
AnnotationAssertion(schema:domainIncludes schema:branch schema:Nerve)
AnnotationAssertion(schema:isPartOf schema:branch <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:branch schema:AnatomicalStructure)
AnnotationAssertion(schema:supersededBy schema:branch schema:arterialBranch)
AnnotationAssertion(rdfs:comment schema:branchCode "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\\n\\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.
      ")
AnnotationAssertion(rdfs:label schema:branchCode "branchCode")
AnnotationAssertion(schema:domainIncludes schema:branchCode schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:branchCode schema:Text)
AnnotationAssertion(rdfs:comment schema:branchOf "The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical) [[branch]].")
AnnotationAssertion(rdfs:label schema:branchOf "branchOf")
AnnotationAssertion(schema:domainIncludes schema:branchOf schema:LocalBusiness)
AnnotationAssertion(schema:rangeIncludes schema:branchOf schema:Organization)
AnnotationAssertion(schema:supersededBy schema:branchOf schema:parentOrganization)
AnnotationAssertion(rdfs:comment schema:brand "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.")
AnnotationAssertion(rdfs:label schema:brand "brand")
AnnotationAssertion(schema:domainIncludes schema:brand schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:brand schema:Person)
AnnotationAssertion(schema:domainIncludes schema:brand schema:Product)
AnnotationAssertion(schema:domainIncludes schema:brand schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:brand schema:Brand)
AnnotationAssertion(schema:rangeIncludes schema:brand schema:Organization)
AnnotationAssertion(rdfs:comment schema:breadcrumb "A set of links that can help a user understand and navigate a website hierarchy.")
AnnotationAssertion(rdfs:label schema:breadcrumb "breadcrumb")
AnnotationAssertion(schema:domainIncludes schema:breadcrumb schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:breadcrumb schema:BreadcrumbList)
AnnotationAssertion(schema:rangeIncludes schema:breadcrumb schema:Text)
AnnotationAssertion(rdfs:comment schema:breastfeedingWarning "Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.")
AnnotationAssertion(rdfs:label schema:breastfeedingWarning "breastfeedingWarning")
AnnotationAssertion(schema:domainIncludes schema:breastfeedingWarning schema:Drug)
AnnotationAssertion(schema:isPartOf schema:breastfeedingWarning <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:breastfeedingWarning schema:Text)
AnnotationAssertion(rdfs:comment schema:broadcastAffiliateOf "The media network(s) whose content is broadcast on this station.")
AnnotationAssertion(rdfs:label schema:broadcastAffiliateOf "broadcastAffiliateOf")
AnnotationAssertion(schema:domainIncludes schema:broadcastAffiliateOf schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:broadcastAffiliateOf schema:Organization)
AnnotationAssertion(rdfs:comment schema:broadcastChannelId "The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.")
AnnotationAssertion(rdfs:label schema:broadcastChannelId "broadcastChannelId")
AnnotationAssertion(schema:domainIncludes schema:broadcastChannelId schema:BroadcastChannel)
AnnotationAssertion(schema:rangeIncludes schema:broadcastChannelId schema:Text)
AnnotationAssertion(rdfs:comment schema:broadcastDisplayName "The name displayed in the channel guide. For many US affiliates, it is the network name.")
AnnotationAssertion(rdfs:label schema:broadcastDisplayName "broadcastDisplayName")
AnnotationAssertion(schema:domainIncludes schema:broadcastDisplayName schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:broadcastDisplayName schema:Text)
AnnotationAssertion(rdfs:comment schema:broadcastFrequency "The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequencies of AM and FM radio channels, e.g. \"87 FM\".")
AnnotationAssertion(rdfs:label schema:broadcastFrequency "broadcastFrequency")
AnnotationAssertion(schema:domainIncludes schema:broadcastFrequency schema:BroadcastChannel)
AnnotationAssertion(schema:domainIncludes schema:broadcastFrequency schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:broadcastFrequency schema:BroadcastFrequencySpecification)
AnnotationAssertion(schema:rangeIncludes schema:broadcastFrequency schema:Text)
AnnotationAssertion(schema:source schema:broadcastFrequency <https://github.com/schemaorg/schemaorg/issues/1004>)
AnnotationAssertion(rdfs:comment schema:broadcastFrequencyValue "The frequency in MHz for a particular broadcast.")
AnnotationAssertion(rdfs:label schema:broadcastFrequencyValue "broadcastFrequencyValue")
AnnotationAssertion(schema:domainIncludes schema:broadcastFrequencyValue schema:BroadcastFrequencySpecification)
AnnotationAssertion(schema:rangeIncludes schema:broadcastFrequencyValue schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:broadcastFrequencyValue schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:broadcastFrequencyValue <https://github.com/schemaorg/schemaorg/issues/1004>)
AnnotationAssertion(rdfs:comment schema:broadcastOfEvent "The event being broadcast such as a sporting event or awards ceremony.")
AnnotationAssertion(rdfs:label schema:broadcastOfEvent "broadcastOfEvent")
AnnotationAssertion(schema:domainIncludes schema:broadcastOfEvent schema:BroadcastEvent)
AnnotationAssertion(schema:rangeIncludes schema:broadcastOfEvent schema:Event)
AnnotationAssertion(rdfs:comment schema:broadcastServiceTier "The type of service required to have access to the channel (e.g. Standard or Premium).")
AnnotationAssertion(rdfs:label schema:broadcastServiceTier "broadcastServiceTier")
AnnotationAssertion(schema:domainIncludes schema:broadcastServiceTier schema:BroadcastChannel)
AnnotationAssertion(schema:rangeIncludes schema:broadcastServiceTier schema:Text)
AnnotationAssertion(rdfs:comment schema:broadcastSignalModulation "The modulation (e.g. FM, AM, etc) used by a particular broadcast service.")
AnnotationAssertion(rdfs:label schema:broadcastSignalModulation "broadcastSignalModulation")
AnnotationAssertion(schema:domainIncludes schema:broadcastSignalModulation schema:BroadcastFrequencySpecification)
AnnotationAssertion(schema:isPartOf schema:broadcastSignalModulation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:broadcastSignalModulation schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:broadcastSignalModulation schema:Text)
AnnotationAssertion(schema:source schema:broadcastSignalModulation <https://github.com/schemaorg/schemaorg/issues/2111>)
AnnotationAssertion(rdfs:comment schema:broadcastSubChannel "The subchannel used for the broadcast.")
AnnotationAssertion(rdfs:label schema:broadcastSubChannel "broadcastSubChannel")
AnnotationAssertion(schema:domainIncludes schema:broadcastSubChannel schema:BroadcastFrequencySpecification)
AnnotationAssertion(schema:isPartOf schema:broadcastSubChannel <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:broadcastSubChannel schema:Text)
AnnotationAssertion(schema:source schema:broadcastSubChannel <https://github.com/schemaorg/schemaorg/issues/2111>)
AnnotationAssertion(rdfs:comment schema:broadcastTimezone "The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts.")
AnnotationAssertion(rdfs:label schema:broadcastTimezone "broadcastTimezone")
AnnotationAssertion(schema:domainIncludes schema:broadcastTimezone schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:broadcastTimezone schema:Text)
AnnotationAssertion(rdfs:comment schema:broadcaster "The organization owning or operating the broadcast service.")
AnnotationAssertion(rdfs:label schema:broadcaster "broadcaster")
AnnotationAssertion(schema:domainIncludes schema:broadcaster schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:broadcaster schema:Organization)
AnnotationAssertion(rdfs:comment schema:broker "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.")
AnnotationAssertion(rdfs:label schema:broker "broker")
AnnotationAssertion(schema:domainIncludes schema:broker schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:broker schema:Order)
AnnotationAssertion(schema:domainIncludes schema:broker schema:Reservation)
AnnotationAssertion(schema:domainIncludes schema:broker schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:broker schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:broker schema:Person)
AnnotationAssertion(rdfs:comment schema:browserRequirements "Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.")
AnnotationAssertion(rdfs:label schema:browserRequirements "browserRequirements")
AnnotationAssertion(schema:domainIncludes schema:browserRequirements schema:WebApplication)
AnnotationAssertion(schema:rangeIncludes schema:browserRequirements schema:Text)
AnnotationAssertion(rdfs:comment schema:busName "The name of the bus (e.g. Bolt Express).")
AnnotationAssertion(rdfs:label schema:busName "busName")
AnnotationAssertion(schema:domainIncludes schema:busName schema:BusTrip)
AnnotationAssertion(schema:rangeIncludes schema:busName schema:Text)
AnnotationAssertion(rdfs:comment schema:busNumber "The unique identifier for the bus.")
AnnotationAssertion(rdfs:label schema:busNumber "busNumber")
AnnotationAssertion(schema:domainIncludes schema:busNumber schema:BusTrip)
AnnotationAssertion(schema:rangeIncludes schema:busNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:businessDays "Days of the week when the merchant typically operates, indicated via opening hours markup.")
AnnotationAssertion(rdfs:label schema:businessDays "businessDays")
AnnotationAssertion(schema:domainIncludes schema:businessDays schema:ShippingDeliveryTime)
AnnotationAssertion(schema:rangeIncludes schema:businessDays schema:OpeningHoursSpecification)
AnnotationAssertion(schema:source schema:businessDays <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:businessFunction "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.")
AnnotationAssertion(rdfs:label schema:businessFunction "businessFunction")
AnnotationAssertion(schema:contributor schema:businessFunction <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:businessFunction schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:businessFunction schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:businessFunction schema:TypeAndQuantityNode)
AnnotationAssertion(schema:rangeIncludes schema:businessFunction schema:BusinessFunction)
AnnotationAssertion(rdfs:comment schema:byArtist "The artist that performed this album or recording.")
AnnotationAssertion(rdfs:label schema:byArtist "byArtist")
AnnotationAssertion(schema:domainIncludes schema:byArtist schema:MusicAlbum)
AnnotationAssertion(schema:domainIncludes schema:byArtist schema:MusicRecording)
AnnotationAssertion(schema:rangeIncludes schema:byArtist schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:byArtist schema:Person)
AnnotationAssertion(rdfs:comment schema:byDay "Defines the day(s) of the week on which a recurring [[Event]] takes place. May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming to iCal's syntax for byDay recurrence rules.")
AnnotationAssertion(rdfs:label schema:byDay "byDay")
AnnotationAssertion(schema:domainIncludes schema:byDay schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:byDay <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:byDay schema:DayOfWeek)
AnnotationAssertion(schema:rangeIncludes schema:byDay schema:Text)
AnnotationAssertion(schema:source schema:byDay <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:byMonth "Defines the month(s) of the year on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-12. January is 1.")
AnnotationAssertion(rdfs:label schema:byMonth "byMonth")
AnnotationAssertion(schema:domainIncludes schema:byMonth schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:byMonth <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:byMonth schema:Integer)
AnnotationAssertion(schema:source schema:byMonth <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:byMonthDay "Defines the day(s) of the month on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-31.")
AnnotationAssertion(rdfs:label schema:byMonthDay "byMonthDay")
AnnotationAssertion(schema:domainIncludes schema:byMonthDay schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:byMonthDay <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:byMonthDay schema:Integer)
AnnotationAssertion(schema:source schema:byMonthDay <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:byMonthWeek "Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.")
AnnotationAssertion(rdfs:label schema:byMonthWeek "byMonthWeek")
AnnotationAssertion(schema:domainIncludes schema:byMonthWeek schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:byMonthWeek <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:byMonthWeek schema:Integer)
AnnotationAssertion(schema:source schema:byMonthWeek <https://github.com/schemaorg/schemaorg/issues/2599>)
AnnotationAssertion(rdfs:comment schema:calories "The number of calories.")
AnnotationAssertion(rdfs:label schema:calories "calories")
AnnotationAssertion(schema:domainIncludes schema:calories schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:calories schema:Energy)
AnnotationAssertion(rdfs:comment schema:carbohydrateContent "The number of grams of carbohydrates.")
AnnotationAssertion(rdfs:label schema:carbohydrateContent "carbohydrateContent")
AnnotationAssertion(schema:domainIncludes schema:carbohydrateContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:carbohydrateContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:cargoVolume "The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\\n\\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\\n\\nNote: You can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:cargoVolume "cargoVolume")
AnnotationAssertion(schema:contributor schema:cargoVolume <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:cargoVolume schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:cargoVolume schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:carrier "'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.")
AnnotationAssertion(rdfs:label schema:carrier "carrier")
AnnotationAssertion(schema:domainIncludes schema:carrier schema:Flight)
AnnotationAssertion(schema:domainIncludes schema:carrier schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:carrier schema:Organization)
AnnotationAssertion(schema:supersededBy schema:carrier schema:provider)
AnnotationAssertion(rdfs:comment schema:carrierRequirements "Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).")
AnnotationAssertion(rdfs:label schema:carrierRequirements "carrierRequirements")
AnnotationAssertion(schema:domainIncludes schema:carrierRequirements schema:MobileApplication)
AnnotationAssertion(schema:rangeIncludes schema:carrierRequirements schema:Text)
AnnotationAssertion(rdfs:comment schema:cashBack "A cardholder benefit that pays the cardholder a small percentage of their net expenditures.")
AnnotationAssertion(rdfs:label schema:cashBack "cashBack")
AnnotationAssertion(schema:contributor schema:cashBack <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:cashBack schema:PaymentCard)
AnnotationAssertion(schema:isPartOf schema:cashBack <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cashBack schema:Boolean)
AnnotationAssertion(schema:rangeIncludes schema:cashBack schema:Number)
AnnotationAssertion(schema:source schema:cashBack <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:catalog "A data catalog which contains this dataset.")
AnnotationAssertion(rdfs:label schema:catalog "catalog")
AnnotationAssertion(schema:domainIncludes schema:catalog schema:Dataset)
AnnotationAssertion(schema:rangeIncludes schema:catalog schema:DataCatalog)
AnnotationAssertion(schema:supersededBy schema:catalog schema:includedInDataCatalog)
AnnotationAssertion(rdfs:comment schema:catalogNumber "The catalog number for the release.")
AnnotationAssertion(rdfs:label schema:catalogNumber "catalogNumber")
AnnotationAssertion(schema:contributor schema:catalogNumber <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:catalogNumber schema:MusicRelease)
AnnotationAssertion(schema:rangeIncludes schema:catalogNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:causeOf "The condition, complication, symptom, sign, etc. caused.")
AnnotationAssertion(rdfs:label schema:causeOf "causeOf")
AnnotationAssertion(schema:domainIncludes schema:causeOf schema:MedicalCause)
AnnotationAssertion(schema:isPartOf schema:causeOf <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:causeOf schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:certificationIdentification "Identifier of a certification instance (as registered with an independent certification body). Typically this identifier can be used to consult and verify the certification instance. See also [gs1:certificationIdentification](https://www.gs1.org/voc/certificationIdentification).")
AnnotationAssertion(rdfs:label schema:certificationIdentification "certificationIdentification")
AnnotationAssertion(schema:domainIncludes schema:certificationIdentification schema:Certification)
AnnotationAssertion(schema:isPartOf schema:certificationIdentification <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:certificationIdentification schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:certificationIdentification schema:Text)
AnnotationAssertion(schema:source schema:certificationIdentification <https://github.com/schemaorg/schemaorg/issues/3230>)
AnnotationAssertion(rdfs:comment schema:certificationRating "Rating of a certification instance (as defined by an independent certification body). Typically this rating can be used to rate the level to which the requirements of the certification instance are fulfilled. See also [gs1:certificationValue](https://www.gs1.org/voc/certificationValue).")
AnnotationAssertion(rdfs:label schema:certificationRating "certificationRating")
AnnotationAssertion(schema:domainIncludes schema:certificationRating schema:Certification)
AnnotationAssertion(schema:isPartOf schema:certificationRating <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:certificationRating schema:Rating)
AnnotationAssertion(schema:source schema:certificationRating <https://github.com/schemaorg/schemaorg/issues/3230>)
AnnotationAssertion(rdfs:comment schema:certificationStatus "Indicates the current status of a certification: active or inactive. See also  [gs1:certificationStatus](https://www.gs1.org/voc/certificationStatus).")
AnnotationAssertion(rdfs:label schema:certificationStatus "certificationStatus")
AnnotationAssertion(schema:domainIncludes schema:certificationStatus schema:Certification)
AnnotationAssertion(schema:rangeIncludes schema:certificationStatus schema:CertificationStatusEnumeration)
AnnotationAssertion(schema:source schema:certificationStatus <https://github.com/schemaorg/schemaorg/issues/3230>)
AnnotationAssertion(rdfs:comment schema:character "Fictional person connected with a creative work.")
AnnotationAssertion(rdfs:label schema:character "character")
AnnotationAssertion(schema:domainIncludes schema:character schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:character schema:Person)
AnnotationAssertion(rdfs:comment schema:characterAttribute "A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).")
AnnotationAssertion(rdfs:label schema:characterAttribute "characterAttribute")
AnnotationAssertion(schema:domainIncludes schema:characterAttribute schema:Game)
AnnotationAssertion(schema:domainIncludes schema:characterAttribute schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:characterAttribute schema:Thing)
AnnotationAssertion(rdfs:comment schema:characterName "The name of a character played in some acting or performing role, i.e. in a PerformanceRole.")
AnnotationAssertion(rdfs:label schema:characterName "characterName")
AnnotationAssertion(schema:domainIncludes schema:characterName schema:PerformanceRole)
AnnotationAssertion(schema:rangeIncludes schema:characterName schema:Text)
AnnotationAssertion(rdfs:comment schema:cheatCode "Cheat codes to the game.")
AnnotationAssertion(rdfs:label schema:cheatCode "cheatCode")
AnnotationAssertion(schema:domainIncludes schema:cheatCode schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:cheatCode schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:cheatCode schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:checkinTime "The earliest someone may check into a lodging establishment.")
AnnotationAssertion(rdfs:label schema:checkinTime "checkinTime")
AnnotationAssertion(schema:domainIncludes schema:checkinTime schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:checkinTime schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:checkinTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:checkinTime schema:Time)
AnnotationAssertion(rdfs:comment schema:checkoutPageURLTemplate "A URL template (RFC 6570) for a checkout page for an offer. This approach allows merchants to specify a URL for online checkout of the offered product, by interpolating parameters such as the logged in user ID, product ID, quantity, discount code etc. Parameter naming and standardization are not specified here.")
AnnotationAssertion(rdfs:label schema:checkoutPageURLTemplate "checkoutPageURLTemplate")
AnnotationAssertion(schema:domainIncludes schema:checkoutPageURLTemplate schema:Offer)
AnnotationAssertion(schema:isPartOf schema:checkoutPageURLTemplate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:checkoutPageURLTemplate schema:Text)
AnnotationAssertion(schema:source schema:checkoutPageURLTemplate <https://github.com/schemaorg/schemaorg/issues/3135>)
AnnotationAssertion(rdfs:comment schema:checkoutTime "The latest someone may check out of a lodging establishment.")
AnnotationAssertion(rdfs:label schema:checkoutTime "checkoutTime")
AnnotationAssertion(schema:domainIncludes schema:checkoutTime schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:checkoutTime schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:checkoutTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:checkoutTime schema:Time)
AnnotationAssertion(rdfs:comment schema:chemicalComposition "The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.")
AnnotationAssertion(rdfs:label schema:chemicalComposition "chemicalComposition")
AnnotationAssertion(schema:domainIncludes schema:chemicalComposition schema:ChemicalSubstance)
AnnotationAssertion(schema:isPartOf schema:chemicalComposition <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:chemicalComposition schema:Text)
AnnotationAssertion(schema:source schema:chemicalComposition <http://www.bioschemas.org/ChemicalSubstance>)
AnnotationAssertion(rdfs:comment schema:chemicalRole "A role played by the BioChemEntity within a chemical context.")
AnnotationAssertion(rdfs:label schema:chemicalRole "chemicalRole")
AnnotationAssertion(schema:domainIncludes schema:chemicalRole schema:ChemicalSubstance)
AnnotationAssertion(schema:domainIncludes schema:chemicalRole schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:chemicalRole <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:chemicalRole schema:DefinedTerm)
AnnotationAssertion(schema:source schema:chemicalRole <http://www.bioschemas.org/ChemicalSubstance>)
AnnotationAssertion(rdfs:comment schema:childMaxAge "Maximal age of the child.")
AnnotationAssertion(rdfs:label schema:childMaxAge "childMaxAge")
AnnotationAssertion(schema:domainIncludes schema:childMaxAge schema:ParentAudience)
AnnotationAssertion(schema:rangeIncludes schema:childMaxAge schema:Number)
AnnotationAssertion(rdfs:comment schema:childMinAge "Minimal age of the child.")
AnnotationAssertion(rdfs:label schema:childMinAge "childMinAge")
AnnotationAssertion(schema:domainIncludes schema:childMinAge schema:ParentAudience)
AnnotationAssertion(schema:rangeIncludes schema:childMinAge schema:Number)
AnnotationAssertion(rdfs:comment schema:childTaxon "Closest child taxa of the taxon in question.")
AnnotationAssertion(rdfs:label schema:childTaxon "childTaxon")
AnnotationAssertion(schema:domainIncludes schema:childTaxon schema:Taxon)
AnnotationAssertion(schema:inverseOf schema:childTaxon schema:parentTaxon)
AnnotationAssertion(schema:isPartOf schema:childTaxon <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:childTaxon schema:Taxon)
AnnotationAssertion(schema:rangeIncludes schema:childTaxon schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:childTaxon schema:URL)
AnnotationAssertion(schema:source schema:childTaxon <http://www.bioschemas.org/Taxon>)
AnnotationAssertion(rdfs:comment schema:children "A child of the person.")
AnnotationAssertion(rdfs:label schema:children "children")
AnnotationAssertion(schema:domainIncludes schema:children schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:children schema:Person)
AnnotationAssertion(rdfs:comment schema:cholesterolContent "The number of milligrams of cholesterol.")
AnnotationAssertion(rdfs:label schema:cholesterolContent "cholesterolContent")
AnnotationAssertion(schema:domainIncludes schema:cholesterolContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:cholesterolContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:circle "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.")
AnnotationAssertion(rdfs:label schema:circle "circle")
AnnotationAssertion(schema:domainIncludes schema:circle schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:circle schema:Text)
AnnotationAssertion(rdfs:comment schema:citation "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.")
AnnotationAssertion(rdfs:label schema:citation "citation")
AnnotationAssertion(schema:domainIncludes schema:citation schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:citation schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:citation schema:Text)
AnnotationAssertion(rdfs:comment schema:claimInterpreter "For a [[Claim]] interpreted from [[MediaObject]] content, the [[interpretedAsClaim]] property can be used to indicate a claim contained, implied or refined from the content of a [[MediaObject]].")
AnnotationAssertion(rdfs:label schema:claimInterpreter "claimInterpreter")
AnnotationAssertion(schema:domainIncludes schema:claimInterpreter schema:Claim)
AnnotationAssertion(schema:isPartOf schema:claimInterpreter <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:claimInterpreter schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:claimInterpreter schema:Person)
AnnotationAssertion(schema:source schema:claimInterpreter <https://github.com/schemaorg/schemaorg/issues/2450>)
AnnotationAssertion(rdfs:comment schema:claimReviewed "A short summary of the specific claims reviewed in a ClaimReview.")
AnnotationAssertion(rdfs:label schema:claimReviewed "claimReviewed")
AnnotationAssertion(schema:domainIncludes schema:claimReviewed schema:ClaimReview)
AnnotationAssertion(schema:rangeIncludes schema:claimReviewed schema:Text)
AnnotationAssertion(schema:source schema:claimReviewed <https://github.com/schemaorg/schemaorg/issues/1061>)
AnnotationAssertion(rdfs:comment schema:clincalPharmacology "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).")
AnnotationAssertion(rdfs:label schema:clincalPharmacology "clincalPharmacology")
AnnotationAssertion(schema:domainIncludes schema:clincalPharmacology schema:Drug)
AnnotationAssertion(schema:isPartOf schema:clincalPharmacology <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:clincalPharmacology schema:Text)
AnnotationAssertion(schema:supersededBy schema:clincalPharmacology schema:clinicalPharmacology)
AnnotationAssertion(rdfs:comment schema:clinicalPharmacology "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).")
AnnotationAssertion(rdfs:label schema:clinicalPharmacology "clinicalPharmacology")
AnnotationAssertion(schema:domainIncludes schema:clinicalPharmacology schema:Drug)
AnnotationAssertion(schema:isPartOf schema:clinicalPharmacology <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:clinicalPharmacology schema:Text)
AnnotationAssertion(rdfs:comment schema:closes "The closing hour of the place or service on the given day(s) of the week.")
AnnotationAssertion(rdfs:label schema:closes "closes")
AnnotationAssertion(schema:contributor schema:closes <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:closes schema:OpeningHoursSpecification)
AnnotationAssertion(schema:rangeIncludes schema:closes schema:Time)
AnnotationAssertion(rdfs:comment schema:coach "A person that acts in a coaching role for a sports team.")
AnnotationAssertion(rdfs:label schema:coach "coach")
AnnotationAssertion(schema:domainIncludes schema:coach schema:SportsTeam)
AnnotationAssertion(schema:rangeIncludes schema:coach schema:Person)
AnnotationAssertion(rdfs:comment schema:code "A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.")
AnnotationAssertion(rdfs:label schema:code "code")
AnnotationAssertion(schema:domainIncludes schema:code schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:code <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:code schema:MedicalCode)
AnnotationAssertion(rdfs:comment schema:codeRepository "Link to the repository where the un-compiled, human readable code and related code is located (SVN, GitHub, CodePlex).")
AnnotationAssertion(rdfs:label schema:codeRepository "codeRepository")
AnnotationAssertion(schema:domainIncludes schema:codeRepository schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:codeRepository schema:URL)
AnnotationAssertion(rdfs:comment schema:codeSampleType "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.")
AnnotationAssertion(rdfs:label schema:codeSampleType "codeSampleType")
AnnotationAssertion(schema:domainIncludes schema:codeSampleType schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:codeSampleType schema:Text)
AnnotationAssertion(rdfs:comment schema:codingSystem "The coding system, e.g. 'ICD-10'.")
AnnotationAssertion(rdfs:label schema:codingSystem "codingSystem")
AnnotationAssertion(schema:domainIncludes schema:codingSystem schema:MedicalCode)
AnnotationAssertion(schema:isPartOf schema:codingSystem <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:codingSystem schema:Text)
AnnotationAssertion(rdfs:comment schema:colleague "A colleague of the person.")
AnnotationAssertion(rdfs:label schema:colleague "colleague")
AnnotationAssertion(schema:domainIncludes schema:colleague schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:colleague schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:colleague schema:URL)
AnnotationAssertion(rdfs:comment schema:colleagues "A colleague of the person.")
AnnotationAssertion(rdfs:label schema:colleagues "colleagues")
AnnotationAssertion(schema:domainIncludes schema:colleagues schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:colleagues schema:Person)
AnnotationAssertion(schema:supersededBy schema:colleagues schema:colleague)
AnnotationAssertion(rdfs:comment schema:collectionSize "The number of items in the [[Collection]]."@en)
AnnotationAssertion(rdfs:label schema:collectionSize "collectionSize"@en)
AnnotationAssertion(schema:domainIncludes schema:collectionSize schema:Collection)
AnnotationAssertion(schema:isPartOf schema:collectionSize <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:collectionSize schema:Integer)
AnnotationAssertion(schema:source schema:collectionSize <https://github.com/schemaorg/schemaorg/issues/1759>)
AnnotationAssertion(rdfs:comment schema:color "The color of the product.")
AnnotationAssertion(rdfs:label schema:color "color")
AnnotationAssertion(schema:contributor schema:color <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:color schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:color schema:Text)
AnnotationAssertion(rdfs:comment schema:colorist "The individual who adds color to inked drawings.")
AnnotationAssertion(rdfs:label schema:colorist "colorist")
AnnotationAssertion(schema:domainIncludes schema:colorist schema:ComicIssue)
AnnotationAssertion(schema:domainIncludes schema:colorist schema:ComicStory)
AnnotationAssertion(schema:domainIncludes schema:colorist schema:VisualArtwork)
AnnotationAssertion(schema:isPartOf schema:colorist <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:colorist schema:Person)
AnnotationAssertion(rdfs:comment schema:comment "Comments, typically from users.")
AnnotationAssertion(rdfs:label schema:comment "comment")
AnnotationAssertion(schema:domainIncludes schema:comment schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:comment schema:RsvpAction)
AnnotationAssertion(schema:rangeIncludes schema:comment schema:Comment)
AnnotationAssertion(rdfs:comment schema:commentCount "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.")
AnnotationAssertion(rdfs:label schema:commentCount "commentCount")
AnnotationAssertion(schema:domainIncludes schema:commentCount schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:commentCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:commentText "The text of the UserComment.")
AnnotationAssertion(rdfs:label schema:commentText "commentText")
AnnotationAssertion(schema:domainIncludes schema:commentText schema:UserComments)
AnnotationAssertion(schema:rangeIncludes schema:commentText schema:Text)
AnnotationAssertion(rdfs:comment schema:commentTime "The time at which the UserComment was made.")
AnnotationAssertion(rdfs:label schema:commentTime "commentTime")
AnnotationAssertion(schema:domainIncludes schema:commentTime schema:UserComments)
AnnotationAssertion(schema:rangeIncludes schema:commentTime schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:commentTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:competencyRequired "Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.")
AnnotationAssertion(rdfs:label schema:competencyRequired "competencyRequired")
AnnotationAssertion(schema:domainIncludes schema:competencyRequired schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:domainIncludes schema:competencyRequired schema:LearningResource)
AnnotationAssertion(schema:isPartOf schema:competencyRequired <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:competencyRequired schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:competencyRequired schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:competencyRequired schema:URL)
AnnotationAssertion(schema:source schema:competencyRequired <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:composer "The person or organization who wrote a composition, or who is the composer of a work performed at some event.")
AnnotationAssertion(rdfs:label schema:composer "composer")
AnnotationAssertion(schema:contributor schema:composer <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:composer schema:Event)
AnnotationAssertion(schema:domainIncludes schema:composer schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:composer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:composer schema:Person)
AnnotationAssertion(rdfs:comment schema:comprisedOf "Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.")
AnnotationAssertion(rdfs:label schema:comprisedOf "comprisedOf")
AnnotationAssertion(schema:domainIncludes schema:comprisedOf schema:AnatomicalSystem)
AnnotationAssertion(schema:isPartOf schema:comprisedOf <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:comprisedOf schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:comprisedOf schema:AnatomicalSystem)
AnnotationAssertion(rdfs:comment schema:conditionsOfAccess "Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an [[ArchiveComponent]] held by an [[ArchiveOrganization]]. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\\n\\nFor example \"Available by appointment from the Reading Room\" or \"Accessible only from logged-in accounts \". ")
AnnotationAssertion(rdfs:label schema:conditionsOfAccess "conditionsOfAccess")
AnnotationAssertion(schema:domainIncludes schema:conditionsOfAccess schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:conditionsOfAccess <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:conditionsOfAccess schema:Text)
AnnotationAssertion(schema:source schema:conditionsOfAccess <https://github.com/schemaorg/schemaorg/issues/2173>)
AnnotationAssertion(rdfs:comment schema:connectedTo "Other anatomical structures to which this structure is connected.")
AnnotationAssertion(rdfs:label schema:connectedTo "connectedTo")
AnnotationAssertion(schema:domainIncludes schema:connectedTo schema:AnatomicalStructure)
AnnotationAssertion(schema:isPartOf schema:connectedTo <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:connectedTo schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:constraintProperty "Indicates a property used as a constraint. For example, in the definition of a [[StatisticalVariable]]. The value is a property, either from within Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ")
AnnotationAssertion(rdfs:label schema:constraintProperty "constraintProperty")
AnnotationAssertion(schema:domainIncludes schema:constraintProperty schema:ConstraintNode)
AnnotationAssertion(schema:isPartOf schema:constraintProperty <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:constraintProperty schema:Property)
AnnotationAssertion(schema:rangeIncludes schema:constraintProperty schema:URL)
AnnotationAssertion(schema:source schema:constraintProperty <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:contactOption "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).")
AnnotationAssertion(rdfs:label schema:contactOption "contactOption")
AnnotationAssertion(schema:domainIncludes schema:contactOption schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:contactOption schema:ContactPointOption)
AnnotationAssertion(rdfs:comment schema:contactPoint "A contact point for a person or organization.")
AnnotationAssertion(rdfs:label schema:contactPoint "contactPoint")
AnnotationAssertion(schema:domainIncludes schema:contactPoint schema:HealthInsurancePlan)
AnnotationAssertion(schema:domainIncludes schema:contactPoint schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:contactPoint schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:contactPoint schema:ContactPoint)
AnnotationAssertion(rdfs:comment schema:contactPoints "A contact point for a person or organization.")
AnnotationAssertion(rdfs:label schema:contactPoints "contactPoints")
AnnotationAssertion(schema:domainIncludes schema:contactPoints schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:contactPoints schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:contactPoints schema:ContactPoint)
AnnotationAssertion(schema:supersededBy schema:contactPoints schema:contactPoint)
AnnotationAssertion(rdfs:comment schema:contactType "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.")
AnnotationAssertion(rdfs:label schema:contactType "contactType")
AnnotationAssertion(schema:domainIncludes schema:contactType schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:contactType schema:Text)
AnnotationAssertion(rdfs:comment schema:contactlessPayment "A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.")
AnnotationAssertion(rdfs:label schema:contactlessPayment "contactlessPayment")
AnnotationAssertion(schema:contributor schema:contactlessPayment <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:contactlessPayment schema:PaymentCard)
AnnotationAssertion(schema:isPartOf schema:contactlessPayment <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:contactlessPayment schema:Boolean)
AnnotationAssertion(schema:source schema:contactlessPayment <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:containedIn "The basic containment relation between a place and one that contains it.")
AnnotationAssertion(rdfs:label schema:containedIn "containedIn")
AnnotationAssertion(schema:domainIncludes schema:containedIn schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:containedIn schema:Place)
AnnotationAssertion(schema:supersededBy schema:containedIn schema:containedInPlace)
AnnotationAssertion(rdfs:comment schema:containedInPlace "The basic containment relation between a place and one that contains it.")
AnnotationAssertion(rdfs:label schema:containedInPlace "containedInPlace")
AnnotationAssertion(schema:domainIncludes schema:containedInPlace schema:Place)
AnnotationAssertion(schema:inverseOf schema:containedInPlace schema:containsPlace)
AnnotationAssertion(schema:rangeIncludes schema:containedInPlace schema:Place)
AnnotationAssertion(rdfs:comment schema:containsPlace "The basic containment relation between a place and another that it contains.")
AnnotationAssertion(rdfs:label schema:containsPlace "containsPlace")
AnnotationAssertion(schema:domainIncludes schema:containsPlace schema:Place)
AnnotationAssertion(schema:inverseOf schema:containsPlace schema:containedInPlace)
AnnotationAssertion(schema:rangeIncludes schema:containsPlace schema:Place)
AnnotationAssertion(rdfs:comment schema:contentRating "Official rating of a piece of content&#x2014;for example, 'MPAA PG-13'.")
AnnotationAssertion(rdfs:label schema:contentRating "contentRating")
AnnotationAssertion(schema:domainIncludes schema:contentRating schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:contentRating schema:Rating)
AnnotationAssertion(schema:rangeIncludes schema:contentRating schema:Text)
AnnotationAssertion(rdfs:comment schema:contentReferenceTime "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.")
AnnotationAssertion(rdfs:label schema:contentReferenceTime "contentReferenceTime")
AnnotationAssertion(schema:domainIncludes schema:contentReferenceTime schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:contentReferenceTime <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:contentReferenceTime schema:DateTime)
AnnotationAssertion(schema:source schema:contentReferenceTime <https://github.com/schemaorg/schemaorg/issues/1050>)
AnnotationAssertion(rdfs:comment schema:contentSize "File size in (mega/kilo)bytes.")
AnnotationAssertion(rdfs:label schema:contentSize "contentSize")
AnnotationAssertion(schema:domainIncludes schema:contentSize schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:contentSize schema:Text)
AnnotationAssertion(rdfs:comment schema:contentType "The supported content type(s) for an EntryPoint response.")
AnnotationAssertion(rdfs:label schema:contentType "contentType")
AnnotationAssertion(schema:domainIncludes schema:contentType schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:contentType schema:Text)
AnnotationAssertion(rdfs:comment schema:contentUrl "Actual bytes of the media object, for example the image file or video file.")
AnnotationAssertion(rdfs:label schema:contentUrl "contentUrl")
AnnotationAssertion(schema:domainIncludes schema:contentUrl schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:contentUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:contraindication "A contraindication for this therapy.")
AnnotationAssertion(rdfs:label schema:contraindication "contraindication")
AnnotationAssertion(schema:domainIncludes schema:contraindication schema:MedicalDevice)
AnnotationAssertion(schema:domainIncludes schema:contraindication schema:MedicalTherapy)
AnnotationAssertion(schema:isPartOf schema:contraindication <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:contraindication schema:MedicalContraindication)
AnnotationAssertion(schema:rangeIncludes schema:contraindication schema:Text)
AnnotationAssertion(rdfs:comment schema:cookingMethod "The method of cooking, such as Frying, Steaming, ...")
AnnotationAssertion(rdfs:label schema:cookingMethod "cookingMethod")
AnnotationAssertion(schema:domainIncludes schema:cookingMethod schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:cookingMethod schema:Text)
AnnotationAssertion(rdfs:comment schema:copyrightHolder "The party holding the legal copyright to the CreativeWork.")
AnnotationAssertion(rdfs:label schema:copyrightHolder "copyrightHolder")
AnnotationAssertion(schema:domainIncludes schema:copyrightHolder schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:copyrightHolder schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:copyrightHolder schema:Person)
AnnotationAssertion(rdfs:comment schema:copyrightNotice "Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.")
AnnotationAssertion(rdfs:label schema:copyrightNotice "copyrightNotice")
AnnotationAssertion(schema:domainIncludes schema:copyrightNotice schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:copyrightNotice <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:copyrightNotice schema:Text)
AnnotationAssertion(schema:source schema:copyrightNotice <https://github.com/schemaorg/schemaorg/issues/2659>)
AnnotationAssertion(rdfs:comment schema:copyrightYear "The year during which the claimed copyright for the CreativeWork was first asserted.")
AnnotationAssertion(rdfs:label schema:copyrightYear "copyrightYear")
AnnotationAssertion(schema:domainIncludes schema:copyrightYear schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:copyrightYear schema:Number)
AnnotationAssertion(rdfs:comment schema:correction "Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], textually or in another document.")
AnnotationAssertion(rdfs:label schema:correction "correction")
AnnotationAssertion(schema:contributor schema:correction <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:correction schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:correction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:correction schema:CorrectionComment)
AnnotationAssertion(schema:rangeIncludes schema:correction schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:correction schema:URL)
AnnotationAssertion(schema:source schema:correction <https://github.com/schemaorg/schemaorg/issues/1950>)
AnnotationAssertion(rdfs:comment schema:costCategory "The category of cost, such as wholesale, retail, reimbursement cap, etc.")
AnnotationAssertion(rdfs:label schema:costCategory "costCategory")
AnnotationAssertion(schema:domainIncludes schema:costCategory schema:DrugCost)
AnnotationAssertion(schema:isPartOf schema:costCategory <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:costCategory schema:DrugCostCategory)
AnnotationAssertion(rdfs:comment schema:costCurrency "The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217. ")
AnnotationAssertion(rdfs:label schema:costCurrency "costCurrency")
AnnotationAssertion(schema:domainIncludes schema:costCurrency schema:DrugCost)
AnnotationAssertion(schema:isPartOf schema:costCurrency <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:costCurrency schema:Text)
AnnotationAssertion(rdfs:comment schema:costOrigin "Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.")
AnnotationAssertion(rdfs:label schema:costOrigin "costOrigin")
AnnotationAssertion(schema:domainIncludes schema:costOrigin schema:DrugCost)
AnnotationAssertion(schema:isPartOf schema:costOrigin <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:costOrigin schema:Text)
AnnotationAssertion(rdfs:comment schema:costPerUnit "The cost per unit of the drug.")
AnnotationAssertion(rdfs:label schema:costPerUnit "costPerUnit")
AnnotationAssertion(schema:domainIncludes schema:costPerUnit schema:DrugCost)
AnnotationAssertion(schema:isPartOf schema:costPerUnit <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:costPerUnit schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:costPerUnit schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:costPerUnit schema:Text)
AnnotationAssertion(rdfs:comment schema:countriesNotSupported "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label schema:countriesNotSupported "countriesNotSupported")
AnnotationAssertion(schema:domainIncludes schema:countriesNotSupported schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:countriesNotSupported schema:Text)
AnnotationAssertion(rdfs:comment schema:countriesSupported "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.")
AnnotationAssertion(rdfs:label schema:countriesSupported "countriesSupported")
AnnotationAssertion(schema:domainIncludes schema:countriesSupported schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:countriesSupported schema:Text)
AnnotationAssertion(rdfs:comment schema:countryOfAssembly "The place where the product was assembled.")
AnnotationAssertion(rdfs:label schema:countryOfAssembly "countryOfAssembly")
AnnotationAssertion(schema:domainIncludes schema:countryOfAssembly schema:Product)
AnnotationAssertion(schema:isPartOf schema:countryOfAssembly <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:countryOfAssembly schema:Text)
AnnotationAssertion(schema:source schema:countryOfAssembly <https://github.com/schemaorg/schemaorg/issues/991>)
AnnotationAssertion(rdfs:comment schema:countryOfLastProcessing "The place where the item (typically [[Product]]) was last processed and tested before importation.")
AnnotationAssertion(rdfs:label schema:countryOfLastProcessing "countryOfLastProcessing")
AnnotationAssertion(schema:domainIncludes schema:countryOfLastProcessing schema:Product)
AnnotationAssertion(schema:isPartOf schema:countryOfLastProcessing <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:countryOfLastProcessing schema:Text)
AnnotationAssertion(schema:source schema:countryOfLastProcessing <https://github.com/schemaorg/schemaorg/issues/991>)
AnnotationAssertion(rdfs:comment schema:countryOfOrigin "The country of origin of something, including products as well as creative  works such as movie and TV content.

In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.

In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.")
AnnotationAssertion(rdfs:label schema:countryOfOrigin "countryOfOrigin")
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:Product)
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:TVEpisode)
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:TVSeason)
AnnotationAssertion(schema:domainIncludes schema:countryOfOrigin schema:TVSeries)
AnnotationAssertion(schema:rangeIncludes schema:countryOfOrigin schema:Country)
AnnotationAssertion(rdfs:comment schema:courseCode "The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 or 6.001).")
AnnotationAssertion(rdfs:label schema:courseCode "courseCode")
AnnotationAssertion(schema:domainIncludes schema:courseCode schema:Course)
AnnotationAssertion(schema:rangeIncludes schema:courseCode schema:Text)
AnnotationAssertion(rdfs:comment schema:courseMode "The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).")
AnnotationAssertion(rdfs:label schema:courseMode "courseMode")
AnnotationAssertion(schema:domainIncludes schema:courseMode schema:CourseInstance)
AnnotationAssertion(schema:rangeIncludes schema:courseMode schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:courseMode schema:URL)
AnnotationAssertion(rdfs:comment schema:coursePrerequisites "Requirements for taking the Course. May be completion of another [[Course]] or a textual description like \"permission of instructor\". Requirements may be a pre-requisite competency, referenced using [[AlignmentObject]].")
AnnotationAssertion(rdfs:label schema:coursePrerequisites "coursePrerequisites")
AnnotationAssertion(schema:domainIncludes schema:coursePrerequisites schema:Course)
AnnotationAssertion(schema:rangeIncludes schema:coursePrerequisites schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:coursePrerequisites schema:Course)
AnnotationAssertion(schema:rangeIncludes schema:coursePrerequisites schema:Text)
AnnotationAssertion(rdfs:comment schema:courseSchedule "Represents the length and pace of a course, expressed as a [[Schedule]].")
AnnotationAssertion(rdfs:label schema:courseSchedule "courseSchedule")
AnnotationAssertion(schema:domainIncludes schema:courseSchedule schema:CourseInstance)
AnnotationAssertion(schema:isPartOf schema:courseSchedule <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:courseSchedule schema:Schedule)
AnnotationAssertion(schema:source schema:courseSchedule <https://github.com/schemaorg/schemaorg/issues/3281>)
AnnotationAssertion(rdfs:comment schema:courseWorkload "The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, \"2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week\".")
AnnotationAssertion(rdfs:label schema:courseWorkload "courseWorkload")
AnnotationAssertion(schema:domainIncludes schema:courseWorkload schema:CourseInstance)
AnnotationAssertion(schema:isPartOf schema:courseWorkload <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:courseWorkload schema:Text)
AnnotationAssertion(schema:source schema:courseWorkload <https://github.com/schemaorg/schemaorg/issues/1909>)
AnnotationAssertion(rdfs:comment schema:coverageEndTime "The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.")
AnnotationAssertion(rdfs:label schema:coverageEndTime "coverageEndTime")
AnnotationAssertion(schema:domainIncludes schema:coverageEndTime schema:LiveBlogPosting)
AnnotationAssertion(schema:rangeIncludes schema:coverageEndTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:coverageStartTime "The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.")
AnnotationAssertion(rdfs:label schema:coverageStartTime "coverageStartTime")
AnnotationAssertion(schema:domainIncludes schema:coverageStartTime schema:LiveBlogPosting)
AnnotationAssertion(schema:rangeIncludes schema:coverageStartTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:creativeWorkStatus "The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.")
AnnotationAssertion(rdfs:label schema:creativeWorkStatus "creativeWorkStatus")
AnnotationAssertion(schema:domainIncludes schema:creativeWorkStatus schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:creativeWorkStatus <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:creativeWorkStatus schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:creativeWorkStatus schema:Text)
AnnotationAssertion(schema:source schema:creativeWorkStatus <https://github.com/schemaorg/schemaorg/issues/987>)
AnnotationAssertion(rdfs:comment schema:credentialCategory "The category or type of credential being described, for example \"degree”, “certificate”, “badge”, or more specific term.")
AnnotationAssertion(rdfs:label schema:credentialCategory "credentialCategory")
AnnotationAssertion(schema:domainIncludes schema:credentialCategory schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:isPartOf schema:credentialCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:credentialCategory schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:credentialCategory schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:credentialCategory schema:URL)
AnnotationAssertion(schema:source schema:credentialCategory <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:creditText "Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.")
AnnotationAssertion(rdfs:label schema:creditText "creditText")
AnnotationAssertion(schema:domainIncludes schema:creditText schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:creditText <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:creditText schema:Text)
AnnotationAssertion(schema:source schema:creditText <https://github.com/schemaorg/schemaorg/issues/2659>)
AnnotationAssertion(rdfs:comment schema:creditedTo "The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \"Stefani Germanotta Band\", but by Lady Gaga.")
AnnotationAssertion(rdfs:label schema:creditedTo "creditedTo")
AnnotationAssertion(schema:contributor schema:creditedTo <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:creditedTo schema:MusicRelease)
AnnotationAssertion(schema:rangeIncludes schema:creditedTo schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:creditedTo schema:Person)
AnnotationAssertion(rdfs:comment schema:cssSelector "A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".")
AnnotationAssertion(rdfs:label schema:cssSelector "cssSelector")
AnnotationAssertion(schema:domainIncludes schema:cssSelector schema:SpeakableSpecification)
AnnotationAssertion(schema:domainIncludes schema:cssSelector schema:WebPageElement)
AnnotationAssertion(schema:rangeIncludes schema:cssSelector schema:CssSelectorType)
AnnotationAssertion(schema:source schema:cssSelector <https://github.com/schemaorg/schemaorg/issues/1389>)
AnnotationAssertion(rdfs:comment schema:currenciesAccepted "The currency accepted.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".")
AnnotationAssertion(rdfs:label schema:currenciesAccepted "currenciesAccepted")
AnnotationAssertion(schema:domainIncludes schema:currenciesAccepted schema:LocalBusiness)
AnnotationAssertion(schema:rangeIncludes schema:currenciesAccepted schema:Text)
AnnotationAssertion(rdfs:comment schema:currency "The currency in which the monetary amount is expressed.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".")
AnnotationAssertion(rdfs:label schema:currency "currency")
AnnotationAssertion(schema:domainIncludes schema:currency schema:DatedMoneySpecification)
AnnotationAssertion(schema:domainIncludes schema:currency schema:ExchangeRateSpecification)
AnnotationAssertion(schema:domainIncludes schema:currency schema:LoanOrCredit)
AnnotationAssertion(schema:domainIncludes schema:currency schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:currency schema:MonetaryAmountDistribution)
AnnotationAssertion(schema:rangeIncludes schema:currency schema:Text)
AnnotationAssertion(schema:source schema:currency <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:currentExchangeRate "The current price of a currency.")
AnnotationAssertion(rdfs:label schema:currentExchangeRate "currentExchangeRate")
AnnotationAssertion(schema:contributor schema:currentExchangeRate <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:currentExchangeRate schema:ExchangeRateSpecification)
AnnotationAssertion(schema:isPartOf schema:currentExchangeRate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:currentExchangeRate schema:UnitPriceSpecification)
AnnotationAssertion(schema:source schema:currentExchangeRate <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:customer "Party placing the order or paying the invoice.")
AnnotationAssertion(rdfs:label schema:customer "customer")
AnnotationAssertion(schema:domainIncludes schema:customer schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:customer schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:customer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:customer schema:Person)
AnnotationAssertion(rdfs:comment schema:customerRemorseReturnFees "The type of return fees if the product is returned due to customer remorse.")
AnnotationAssertion(rdfs:label schema:customerRemorseReturnFees "customerRemorseReturnFees")
AnnotationAssertion(schema:domainIncludes schema:customerRemorseReturnFees schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:customerRemorseReturnFees <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:customerRemorseReturnFees schema:ReturnFeesEnumeration)
AnnotationAssertion(schema:source schema:customerRemorseReturnFees <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:customerRemorseReturnLabelSource "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.")
AnnotationAssertion(rdfs:label schema:customerRemorseReturnLabelSource "customerRemorseReturnLabelSource")
AnnotationAssertion(schema:domainIncludes schema:customerRemorseReturnLabelSource schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:customerRemorseReturnLabelSource <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:customerRemorseReturnLabelSource schema:ReturnLabelSourceEnumeration)
AnnotationAssertion(schema:source schema:customerRemorseReturnLabelSource <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:customerRemorseReturnShippingFeesAmount "The amount of shipping costs if a product is returned due to customer remorse. Applicable when property [[customerRemorseReturnFees]] equals [[ReturnShippingFees]].")
AnnotationAssertion(rdfs:label schema:customerRemorseReturnShippingFeesAmount "customerRemorseReturnShippingFeesAmount")
AnnotationAssertion(schema:domainIncludes schema:customerRemorseReturnShippingFeesAmount schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:customerRemorseReturnShippingFeesAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:customerRemorseReturnShippingFeesAmount schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:customerRemorseReturnShippingFeesAmount <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:cutoffTime "Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the [[ShippingRateSettings]] publication pattern. The time is indicated using the ISO-8601 Time format, e.g. \"23:30:00-05:00\" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).")
AnnotationAssertion(rdfs:label schema:cutoffTime "cutoffTime")
AnnotationAssertion(schema:domainIncludes schema:cutoffTime schema:ShippingDeliveryTime)
AnnotationAssertion(schema:rangeIncludes schema:cutoffTime schema:Time)
AnnotationAssertion(schema:source schema:cutoffTime <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:cvdCollectionDate "collectiondate - Date for which patient counts are reported.")
AnnotationAssertion(rdfs:label schema:cvdCollectionDate "cvdCollectionDate")
AnnotationAssertion(schema:domainIncludes schema:cvdCollectionDate schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdCollectionDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdCollectionDate schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:cvdCollectionDate schema:Text)
AnnotationAssertion(schema:source schema:cvdCollectionDate <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdFacilityCounty "Name of the County of the NHSN facility that this data record applies to. Use [[cvdFacilityId]] to identify the facility. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.")
AnnotationAssertion(rdfs:label schema:cvdFacilityCounty "cvdFacilityCounty")
AnnotationAssertion(schema:domainIncludes schema:cvdFacilityCounty schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdFacilityCounty <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdFacilityCounty schema:Text)
AnnotationAssertion(schema:source schema:cvdFacilityCounty <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdFacilityId "Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] to indicate the county. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.")
AnnotationAssertion(rdfs:label schema:cvdFacilityId "cvdFacilityId")
AnnotationAssertion(schema:domainIncludes schema:cvdFacilityId schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdFacilityId <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdFacilityId schema:Text)
AnnotationAssertion(schema:source schema:cvdFacilityId <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumBeds "numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.")
AnnotationAssertion(rdfs:label schema:cvdNumBeds "cvdNumBeds")
AnnotationAssertion(schema:domainIncludes schema:cvdNumBeds schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumBeds <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumBeds schema:Number)
AnnotationAssertion(schema:source schema:cvdNumBeds <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumBedsOcc "numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.")
AnnotationAssertion(rdfs:label schema:cvdNumBedsOcc "cvdNumBedsOcc")
AnnotationAssertion(schema:domainIncludes schema:cvdNumBedsOcc schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumBedsOcc <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumBedsOcc schema:Number)
AnnotationAssertion(schema:source schema:cvdNumBedsOcc <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19Died "numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.")
AnnotationAssertion(rdfs:label schema:cvdNumC19Died "cvdNumC19Died")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19Died schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19Died <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19Died schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19Died <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19HOPats "numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.")
AnnotationAssertion(rdfs:label schema:cvdNumC19HOPats "cvdNumC19HOPats")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19HOPats schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19HOPats <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19HOPats schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19HOPats <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19HospPats "numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.")
AnnotationAssertion(rdfs:label schema:cvdNumC19HospPats "cvdNumC19HospPats")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19HospPats schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19HospPats <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19HospPats schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19HospPats <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19MechVentPats "numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.")
AnnotationAssertion(rdfs:label schema:cvdNumC19MechVentPats "cvdNumC19MechVentPats")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19MechVentPats schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19MechVentPats <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19MechVentPats schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19MechVentPats <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19OFMechVentPats "numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.")
AnnotationAssertion(rdfs:label schema:cvdNumC19OFMechVentPats "cvdNumC19OFMechVentPats")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19OFMechVentPats schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19OFMechVentPats <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19OFMechVentPats schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19OFMechVentPats <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumC19OverflowPats "numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.")
AnnotationAssertion(rdfs:label schema:cvdNumC19OverflowPats "cvdNumC19OverflowPats")
AnnotationAssertion(schema:domainIncludes schema:cvdNumC19OverflowPats schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumC19OverflowPats <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumC19OverflowPats schema:Number)
AnnotationAssertion(schema:source schema:cvdNumC19OverflowPats <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumICUBeds "numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.")
AnnotationAssertion(rdfs:label schema:cvdNumICUBeds "cvdNumICUBeds")
AnnotationAssertion(schema:domainIncludes schema:cvdNumICUBeds schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumICUBeds <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumICUBeds schema:Number)
AnnotationAssertion(schema:source schema:cvdNumICUBeds <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumICUBedsOcc "numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.")
AnnotationAssertion(rdfs:label schema:cvdNumICUBedsOcc "cvdNumICUBedsOcc")
AnnotationAssertion(schema:domainIncludes schema:cvdNumICUBedsOcc schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumICUBedsOcc <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumICUBedsOcc schema:Number)
AnnotationAssertion(schema:source schema:cvdNumICUBedsOcc <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumTotBeds "numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.")
AnnotationAssertion(rdfs:label schema:cvdNumTotBeds "cvdNumTotBeds")
AnnotationAssertion(schema:domainIncludes schema:cvdNumTotBeds schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumTotBeds <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumTotBeds schema:Number)
AnnotationAssertion(schema:source schema:cvdNumTotBeds <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumVent "numvent - MECHANICAL VENTILATORS: Total number of ventilators available.")
AnnotationAssertion(rdfs:label schema:cvdNumVent "cvdNumVent")
AnnotationAssertion(schema:domainIncludes schema:cvdNumVent schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumVent <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumVent schema:Number)
AnnotationAssertion(schema:source schema:cvdNumVent <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:cvdNumVentUse "numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.")
AnnotationAssertion(rdfs:label schema:cvdNumVentUse "cvdNumVentUse")
AnnotationAssertion(schema:domainIncludes schema:cvdNumVentUse schema:CDCPMDRecord)
AnnotationAssertion(schema:isPartOf schema:cvdNumVentUse <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:cvdNumVentUse schema:Number)
AnnotationAssertion(schema:source schema:cvdNumVentUse <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:dataFeedElement "An item within a data feed. Data feeds may have many elements.")
AnnotationAssertion(rdfs:label schema:dataFeedElement "dataFeedElement")
AnnotationAssertion(schema:domainIncludes schema:dataFeedElement schema:DataFeed)
AnnotationAssertion(schema:rangeIncludes schema:dataFeedElement schema:DataFeedItem)
AnnotationAssertion(schema:rangeIncludes schema:dataFeedElement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:dataFeedElement schema:Thing)
AnnotationAssertion(rdfs:comment schema:dataset "A dataset contained in this catalog.")
AnnotationAssertion(rdfs:label schema:dataset "dataset")
AnnotationAssertion(schema:domainIncludes schema:dataset schema:DataCatalog)
AnnotationAssertion(schema:inverseOf schema:dataset schema:includedInDataCatalog)
AnnotationAssertion(schema:rangeIncludes schema:dataset schema:Dataset)
AnnotationAssertion(rdfs:comment schema:datasetTimeInterval "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).")
AnnotationAssertion(rdfs:label schema:datasetTimeInterval "datasetTimeInterval")
AnnotationAssertion(schema:domainIncludes schema:datasetTimeInterval schema:Dataset)
AnnotationAssertion(schema:rangeIncludes schema:datasetTimeInterval schema:DateTime)
AnnotationAssertion(schema:supersededBy schema:datasetTimeInterval schema:temporalCoverage)
AnnotationAssertion(rdfs:comment schema:dateDeleted "The datetime the item was removed from the DataFeed.")
AnnotationAssertion(rdfs:label schema:dateDeleted "dateDeleted")
AnnotationAssertion(schema:domainIncludes schema:dateDeleted schema:DataFeedItem)
AnnotationAssertion(schema:rangeIncludes schema:dateDeleted schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:dateDeleted schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateIssued "The date the ticket was issued.")
AnnotationAssertion(rdfs:label schema:dateIssued "dateIssued")
AnnotationAssertion(schema:domainIncludes schema:dateIssued schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:dateIssued schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:dateIssued schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateModified "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.")
AnnotationAssertion(rdfs:label schema:dateModified "dateModified")
AnnotationAssertion(schema:domainIncludes schema:dateModified schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:dateModified schema:DataFeedItem)
AnnotationAssertion(schema:rangeIncludes schema:dateModified schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:dateModified schema:DateTime)
AnnotationAssertion(rdfs:comment schema:datePosted "Publication date of an online listing.")
AnnotationAssertion(rdfs:label schema:datePosted "datePosted")
AnnotationAssertion(schema:domainIncludes schema:datePosted schema:CDCPMDRecord)
AnnotationAssertion(schema:domainIncludes schema:datePosted schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:datePosted schema:RealEstateListing)
AnnotationAssertion(schema:domainIncludes schema:datePosted schema:SpecialAnnouncement)
AnnotationAssertion(schema:rangeIncludes schema:datePosted schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:datePosted schema:DateTime)
AnnotationAssertion(schema:source schema:datePosted <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(schema:source schema:datePosted <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:datePublished "Date of first publication or broadcast. For example the date a [[CreativeWork]] was broadcast or a [[Certification]] was issued.")
AnnotationAssertion(rdfs:label schema:datePublished "datePublished")
AnnotationAssertion(schema:domainIncludes schema:datePublished schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:datePublished schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:datePublished schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:datePublished schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateRead "The date/time at which the message has been read by the recipient if a single recipient exists.")
AnnotationAssertion(rdfs:label schema:dateRead "dateRead")
AnnotationAssertion(schema:domainIncludes schema:dateRead schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:dateRead schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:dateRead schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateReceived "The date/time the message was received if a single recipient exists.")
AnnotationAssertion(rdfs:label schema:dateReceived "dateReceived")
AnnotationAssertion(schema:domainIncludes schema:dateReceived schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:dateReceived schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateSent "The date/time at which the message was sent.")
AnnotationAssertion(rdfs:label schema:dateSent "dateSent")
AnnotationAssertion(schema:domainIncludes schema:dateSent schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:dateSent schema:DateTime)
AnnotationAssertion(rdfs:comment schema:dateVehicleFirstRegistered "The date of the first registration of the vehicle with the respective public authorities.")
AnnotationAssertion(rdfs:label schema:dateVehicleFirstRegistered "dateVehicleFirstRegistered")
AnnotationAssertion(schema:contributor schema:dateVehicleFirstRegistered <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:dateVehicleFirstRegistered schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:dateVehicleFirstRegistered schema:Date)
AnnotationAssertion(rdfs:comment schema:dateline "A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.

Structured representations of dateline-related information can also be expressed more explicitly using [[locationCreated]] (which represents where a work was created, e.g. where a news report was written).  For location depicted or described in the content, use [[contentLocation]].

Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \"BEIRUT, Lebanon, June 2.\", \"Paris, France\", \"December 19, 2017 11:43AM Reporting from Washington\", \"Beijing/Moscow\", \"QUEZON CITY, Philippines\".
      ")
AnnotationAssertion(rdfs:label schema:dateline "dateline")
AnnotationAssertion(schema:domainIncludes schema:dateline schema:NewsArticle)
AnnotationAssertion(schema:rangeIncludes schema:dateline schema:Text)
AnnotationAssertion(rdfs:comment schema:dayOfWeek "The day of the week for which these opening hours are valid.")
AnnotationAssertion(rdfs:label schema:dayOfWeek "dayOfWeek")
AnnotationAssertion(schema:contributor schema:dayOfWeek <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:dayOfWeek schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:dayOfWeek schema:OpeningHoursSpecification)
AnnotationAssertion(schema:rangeIncludes schema:dayOfWeek schema:DayOfWeek)
AnnotationAssertion(rdfs:comment schema:deathDate "Date of death.")
AnnotationAssertion(rdfs:label schema:deathDate "deathDate")
AnnotationAssertion(schema:domainIncludes schema:deathDate schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:deathDate schema:Date)
AnnotationAssertion(rdfs:comment schema:deathPlace "The place where the person died.")
AnnotationAssertion(rdfs:label schema:deathPlace "deathPlace")
AnnotationAssertion(schema:domainIncludes schema:deathPlace schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:deathPlace schema:Place)
AnnotationAssertion(rdfs:comment schema:defaultValue "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.")
AnnotationAssertion(rdfs:label schema:defaultValue "defaultValue")
AnnotationAssertion(schema:domainIncludes schema:defaultValue schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:defaultValue schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:defaultValue schema:Thing)
AnnotationAssertion(rdfs:comment schema:deliveryAddress "Destination address.")
AnnotationAssertion(rdfs:label schema:deliveryAddress "deliveryAddress")
AnnotationAssertion(schema:domainIncludes schema:deliveryAddress schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:deliveryAddress schema:PostalAddress)
AnnotationAssertion(rdfs:comment schema:deliveryLeadTime "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.")
AnnotationAssertion(rdfs:label schema:deliveryLeadTime "deliveryLeadTime")
AnnotationAssertion(schema:contributor schema:deliveryLeadTime <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:deliveryLeadTime schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:deliveryLeadTime schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:deliveryLeadTime schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:deliveryStatus "New entry added as the package passes through each leg of its journey (from shipment to final delivery).")
AnnotationAssertion(rdfs:label schema:deliveryStatus "deliveryStatus")
AnnotationAssertion(schema:domainIncludes schema:deliveryStatus schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:deliveryStatus schema:DeliveryEvent)
AnnotationAssertion(rdfs:comment schema:deliveryTime "The total delay between the receipt of the order and the goods reaching the final customer.")
AnnotationAssertion(rdfs:label schema:deliveryTime "deliveryTime")
AnnotationAssertion(schema:domainIncludes schema:deliveryTime schema:DeliveryTimeSettings)
AnnotationAssertion(schema:domainIncludes schema:deliveryTime schema:OfferShippingDetails)
AnnotationAssertion(schema:rangeIncludes schema:deliveryTime schema:ShippingDeliveryTime)
AnnotationAssertion(schema:source schema:deliveryTime <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:department "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.")
AnnotationAssertion(rdfs:label schema:department "department")
AnnotationAssertion(schema:domainIncludes schema:department schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:department schema:Organization)
AnnotationAssertion(rdfs:comment schema:departureAirport "The airport where the flight originates.")
AnnotationAssertion(rdfs:label schema:departureAirport "departureAirport")
AnnotationAssertion(schema:domainIncludes schema:departureAirport schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:departureAirport schema:Airport)
AnnotationAssertion(rdfs:comment schema:departureBoatTerminal "The terminal or port from which the boat departs.")
AnnotationAssertion(rdfs:label schema:departureBoatTerminal "departureBoatTerminal")
AnnotationAssertion(schema:domainIncludes schema:departureBoatTerminal schema:BoatTrip)
AnnotationAssertion(schema:isPartOf schema:departureBoatTerminal <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:departureBoatTerminal schema:BoatTerminal)
AnnotationAssertion(schema:source schema:departureBoatTerminal <https://github.com/schemaorg/schemaorg/issues/1755>)
AnnotationAssertion(rdfs:comment schema:departureBusStop "The stop or station from which the bus departs.")
AnnotationAssertion(rdfs:label schema:departureBusStop "departureBusStop")
AnnotationAssertion(schema:domainIncludes schema:departureBusStop schema:BusTrip)
AnnotationAssertion(schema:rangeIncludes schema:departureBusStop schema:BusStation)
AnnotationAssertion(schema:rangeIncludes schema:departureBusStop schema:BusStop)
AnnotationAssertion(rdfs:comment schema:departureGate "Identifier of the flight's departure gate.")
AnnotationAssertion(rdfs:label schema:departureGate "departureGate")
AnnotationAssertion(schema:domainIncludes schema:departureGate schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:departureGate schema:Text)
AnnotationAssertion(rdfs:comment schema:departurePlatform "The platform from which the train departs.")
AnnotationAssertion(rdfs:label schema:departurePlatform "departurePlatform")
AnnotationAssertion(schema:domainIncludes schema:departurePlatform schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:departurePlatform schema:Text)
AnnotationAssertion(rdfs:comment schema:departureStation "The station from which the train departs.")
AnnotationAssertion(rdfs:label schema:departureStation "departureStation")
AnnotationAssertion(schema:domainIncludes schema:departureStation schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:departureStation schema:TrainStation)
AnnotationAssertion(rdfs:comment schema:departureTerminal "Identifier of the flight's departure terminal.")
AnnotationAssertion(rdfs:label schema:departureTerminal "departureTerminal")
AnnotationAssertion(schema:domainIncludes schema:departureTerminal schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:departureTerminal schema:Text)
AnnotationAssertion(rdfs:comment schema:departureTime "The expected departure time.")
AnnotationAssertion(rdfs:label schema:departureTime "departureTime")
AnnotationAssertion(schema:domainIncludes schema:departureTime schema:Trip)
AnnotationAssertion(schema:rangeIncludes schema:departureTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:departureTime schema:Time)
AnnotationAssertion(rdfs:comment schema:dependencies "Prerequisites needed to fulfill steps in article.")
AnnotationAssertion(rdfs:label schema:dependencies "dependencies")
AnnotationAssertion(schema:domainIncludes schema:dependencies schema:TechArticle)
AnnotationAssertion(schema:rangeIncludes schema:dependencies schema:Text)
AnnotationAssertion(rdfs:comment schema:depth "The depth of the item.")
AnnotationAssertion(rdfs:label schema:depth "depth")
AnnotationAssertion(schema:contributor schema:depth <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:depth schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:depth schema:Product)
AnnotationAssertion(schema:domainIncludes schema:depth schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:depth schema:Distance)
AnnotationAssertion(schema:rangeIncludes schema:depth schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:device "Device required to run the application. Used in cases where a specific make/model is required to run the application.")
AnnotationAssertion(rdfs:label schema:device "device")
AnnotationAssertion(schema:domainIncludes schema:device schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:device schema:Text)
AnnotationAssertion(schema:supersededBy schema:device schema:availableOnDevice)
AnnotationAssertion(rdfs:comment schema:diagnosis "One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.")
AnnotationAssertion(rdfs:label schema:diagnosis "diagnosis")
AnnotationAssertion(schema:domainIncludes schema:diagnosis schema:DDxElement)
AnnotationAssertion(schema:domainIncludes schema:diagnosis schema:Patient)
AnnotationAssertion(schema:isPartOf schema:diagnosis <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diagnosis schema:MedicalCondition)
AnnotationAssertion(rdfs:comment schema:diagram "An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.")
AnnotationAssertion(rdfs:label schema:diagram "diagram")
AnnotationAssertion(schema:domainIncludes schema:diagram schema:AnatomicalStructure)
AnnotationAssertion(schema:isPartOf schema:diagram <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diagram schema:ImageObject)
AnnotationAssertion(rdfs:comment schema:dietFeatures "Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.")
AnnotationAssertion(rdfs:label schema:dietFeatures "dietFeatures")
AnnotationAssertion(schema:domainIncludes schema:dietFeatures schema:Diet)
AnnotationAssertion(schema:isPartOf schema:dietFeatures <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:dietFeatures schema:Text)
AnnotationAssertion(rdfs:comment schema:differentialDiagnosis "One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.")
AnnotationAssertion(rdfs:label schema:differentialDiagnosis "differentialDiagnosis")
AnnotationAssertion(schema:domainIncludes schema:differentialDiagnosis schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:differentialDiagnosis <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:differentialDiagnosis schema:DDxElement)
AnnotationAssertion(rdfs:comment schema:digitalSourceType "Indicates an IPTCDigitalSourceEnumeration code indicating the nature of the digital source(s) for some [[CreativeWork]].")
AnnotationAssertion(rdfs:label schema:digitalSourceType "digitalSourceType")
AnnotationAssertion(schema:domainIncludes schema:digitalSourceType schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:digitalSourceType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:digitalSourceType schema:IPTCDigitalSourceEnumeration)
AnnotationAssertion(schema:source schema:digitalSourceType <https://github.com/schemaorg/schemaorg/issues/3392>)
AnnotationAssertion(rdfs:comment schema:directApply "Indicates whether an [[url]] that is associated with a [[JobPosting]] enables direct application for the job, via the posting website. A job posting is considered to have directApply of [[True]] if an application process for the specified job can be directly initiated via the url(s) given (noting that e.g. multiple internet domains might nevertheless be involved at an implementation level). A value of [[False]] is appropriate if there is no clear path to applying directly online for the specified job, navigating directly from the JobPosting url(s) supplied.")
AnnotationAssertion(rdfs:label schema:directApply "directApply")
AnnotationAssertion(schema:domainIncludes schema:directApply schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:directApply <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:directApply schema:Boolean)
AnnotationAssertion(schema:source schema:directApply <https://github.com/schemaorg/schemaorg/issues/2907>)
AnnotationAssertion(rdfs:comment schema:director "A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.")
AnnotationAssertion(rdfs:label schema:director "director")
AnnotationAssertion(schema:domainIncludes schema:director schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:director schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:director schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:director schema:Event)
AnnotationAssertion(schema:domainIncludes schema:director schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:director schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:director schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:director schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:director schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:director schema:VideoGameSeries)
AnnotationAssertion(schema:domainIncludes schema:director schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:director schema:Person)
AnnotationAssertion(rdfs:comment schema:directors "A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.")
AnnotationAssertion(rdfs:label schema:directors "directors")
AnnotationAssertion(schema:domainIncludes schema:directors schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:directors schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:directors schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:directors schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:directors schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:directors schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:directors schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:directors schema:VideoGameSeries)
AnnotationAssertion(schema:domainIncludes schema:directors schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:directors schema:Person)
AnnotationAssertion(schema:supersededBy schema:directors schema:director)
AnnotationAssertion(rdfs:comment schema:discount "Any discount applied (to an Order).")
AnnotationAssertion(rdfs:label schema:discount "discount")
AnnotationAssertion(schema:domainIncludes schema:discount schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:discount schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:discount schema:Text)
AnnotationAssertion(rdfs:comment schema:discountCode "Code used to redeem a discount.")
AnnotationAssertion(rdfs:label schema:discountCode "discountCode")
AnnotationAssertion(schema:domainIncludes schema:discountCode schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:discountCode schema:Text)
AnnotationAssertion(rdfs:comment schema:discountCurrency "The currency of the discount.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".")
AnnotationAssertion(rdfs:label schema:discountCurrency "discountCurrency")
AnnotationAssertion(schema:domainIncludes schema:discountCurrency schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:discountCurrency schema:Text)
AnnotationAssertion(rdfs:comment schema:discusses "Specifies the CreativeWork associated with the UserComment.")
AnnotationAssertion(rdfs:label schema:discusses "discusses")
AnnotationAssertion(schema:domainIncludes schema:discusses schema:UserComments)
AnnotationAssertion(schema:rangeIncludes schema:discusses schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:discussionUrl "A link to the page containing the comments of the CreativeWork.")
AnnotationAssertion(rdfs:label schema:discussionUrl "discussionUrl")
AnnotationAssertion(schema:domainIncludes schema:discussionUrl schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:discussionUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:diseasePreventionInfo "Information about disease prevention.")
AnnotationAssertion(rdfs:label schema:diseasePreventionInfo "diseasePreventionInfo")
AnnotationAssertion(schema:domainIncludes schema:diseasePreventionInfo schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:diseasePreventionInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diseasePreventionInfo schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:diseasePreventionInfo schema:WebContent)
AnnotationAssertion(schema:source schema:diseasePreventionInfo <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:diseaseSpreadStatistics "Statistical information about the spread of a disease, either as [[WebContent]], or
  described directly as a [[Dataset]], or the specific [[Observation]]s in the dataset. When a [[WebContent]] URL is
  provided, the page indicated might also contain more such markup.")
AnnotationAssertion(rdfs:label schema:diseaseSpreadStatistics "diseaseSpreadStatistics")
AnnotationAssertion(schema:domainIncludes schema:diseaseSpreadStatistics schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:diseaseSpreadStatistics <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diseaseSpreadStatistics schema:Dataset)
AnnotationAssertion(schema:rangeIncludes schema:diseaseSpreadStatistics schema:Observation)
AnnotationAssertion(schema:rangeIncludes schema:diseaseSpreadStatistics schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:diseaseSpreadStatistics schema:WebContent)
AnnotationAssertion(schema:source schema:diseaseSpreadStatistics <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:dissolutionDate "The date that this organization was dissolved.")
AnnotationAssertion(rdfs:label schema:dissolutionDate "dissolutionDate")
AnnotationAssertion(schema:domainIncludes schema:dissolutionDate schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:dissolutionDate schema:Date)
AnnotationAssertion(rdfs:comment schema:distance "The distance travelled, e.g. exercising or travelling.")
AnnotationAssertion(rdfs:label schema:distance "distance")
AnnotationAssertion(schema:domainIncludes schema:distance schema:ExerciseAction)
AnnotationAssertion(schema:domainIncludes schema:distance schema:TravelAction)
AnnotationAssertion(schema:rangeIncludes schema:distance schema:Distance)
AnnotationAssertion(rdfs:comment schema:distinguishingSign "One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.")
AnnotationAssertion(rdfs:label schema:distinguishingSign "distinguishingSign")
AnnotationAssertion(schema:domainIncludes schema:distinguishingSign schema:DDxElement)
AnnotationAssertion(schema:isPartOf schema:distinguishingSign <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:distinguishingSign schema:MedicalSignOrSymptom)
AnnotationAssertion(rdfs:comment schema:distribution "A downloadable form of this dataset, at a specific location, in a specific format. This property can be repeated if different variations are available. There is no expectation that different downloadable distributions must contain exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) on this point). Different distributions might include or exclude different subsets of the entire dataset, for example.")
AnnotationAssertion(rdfs:label schema:distribution "distribution")
AnnotationAssertion(schema:domainIncludes schema:distribution schema:Dataset)
AnnotationAssertion(schema:rangeIncludes schema:distribution schema:DataDownload)
AnnotationAssertion(rdfs:comment schema:diversityPolicy "Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.")
AnnotationAssertion(rdfs:label schema:diversityPolicy "diversityPolicy")
AnnotationAssertion(schema:contributor schema:diversityPolicy <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:diversityPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:diversityPolicy schema:Organization)
AnnotationAssertion(schema:isPartOf schema:diversityPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:diversityPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:diversityPolicy schema:URL)
AnnotationAssertion(schema:source schema:diversityPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
AnnotationAssertion(rdfs:comment schema:documentation "Further documentation describing the Web API in more detail.")
AnnotationAssertion(rdfs:label schema:documentation "documentation")
AnnotationAssertion(schema:domainIncludes schema:documentation schema:WebAPI)
AnnotationAssertion(schema:isPartOf schema:documentation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:documentation schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:documentation schema:URL)
AnnotationAssertion(schema:source schema:documentation <https://github.com/schemaorg/schemaorg/issues/1423>)
AnnotationAssertion(rdfs:comment schema:doesNotShip "Indicates when shipping to a particular [[shippingDestination]] is not available.")
AnnotationAssertion(rdfs:label schema:doesNotShip "doesNotShip")
AnnotationAssertion(schema:domainIncludes schema:doesNotShip schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:doesNotShip schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:doesNotShip schema:Boolean)
AnnotationAssertion(schema:source schema:doesNotShip <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:domiciledMortgage "Whether borrower is a resident of the jurisdiction where the property is located.")
AnnotationAssertion(rdfs:label schema:domiciledMortgage "domiciledMortgage")
AnnotationAssertion(schema:contributor schema:domiciledMortgage <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:domiciledMortgage schema:MortgageLoan)
AnnotationAssertion(schema:isPartOf schema:domiciledMortgage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:domiciledMortgage schema:Boolean)
AnnotationAssertion(schema:source schema:domiciledMortgage <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:doorTime "The time admission will commence.")
AnnotationAssertion(rdfs:label schema:doorTime "doorTime")
AnnotationAssertion(schema:domainIncludes schema:doorTime schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:doorTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:doorTime schema:Time)
AnnotationAssertion(rdfs:comment schema:dosageForm "A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.")
AnnotationAssertion(rdfs:label schema:dosageForm "dosageForm")
AnnotationAssertion(schema:domainIncludes schema:dosageForm schema:Drug)
AnnotationAssertion(schema:isPartOf schema:dosageForm <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:dosageForm schema:Text)
AnnotationAssertion(rdfs:comment schema:doseSchedule "A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.")
AnnotationAssertion(rdfs:label schema:doseSchedule "doseSchedule")
AnnotationAssertion(schema:domainIncludes schema:doseSchedule schema:Drug)
AnnotationAssertion(schema:domainIncludes schema:doseSchedule schema:TherapeuticProcedure)
AnnotationAssertion(schema:isPartOf schema:doseSchedule <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:doseSchedule schema:DoseSchedule)
AnnotationAssertion(rdfs:comment schema:doseUnit "The unit of the dose, e.g. 'mg'.")
AnnotationAssertion(rdfs:label schema:doseUnit "doseUnit")
AnnotationAssertion(schema:domainIncludes schema:doseUnit schema:DoseSchedule)
AnnotationAssertion(schema:isPartOf schema:doseUnit <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:doseUnit schema:Text)
AnnotationAssertion(rdfs:comment schema:doseValue "The value of the dose, e.g. 500.")
AnnotationAssertion(rdfs:label schema:doseValue "doseValue")
AnnotationAssertion(schema:domainIncludes schema:doseValue schema:DoseSchedule)
AnnotationAssertion(schema:isPartOf schema:doseValue <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:doseValue schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:doseValue schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:downPayment "a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.")
AnnotationAssertion(rdfs:label schema:downPayment "downPayment")
AnnotationAssertion(schema:contributor schema:downPayment <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:downPayment schema:RepaymentSpecification)
AnnotationAssertion(schema:isPartOf schema:downPayment <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:downPayment schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:downPayment schema:Number)
AnnotationAssertion(schema:source schema:downPayment <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:downloadUrl "If the file can be downloaded, URL to download the binary.")
AnnotationAssertion(rdfs:label schema:downloadUrl "downloadUrl")
AnnotationAssertion(schema:domainIncludes schema:downloadUrl schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:downloadUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:downvoteCount "The number of downvotes this question, answer or comment has received from the community.")
AnnotationAssertion(rdfs:label schema:downvoteCount "downvoteCount")
AnnotationAssertion(schema:domainIncludes schema:downvoteCount schema:Comment)
AnnotationAssertion(schema:rangeIncludes schema:downvoteCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:drainsTo "The vasculature that the vein drains into.")
AnnotationAssertion(rdfs:label schema:drainsTo "drainsTo")
AnnotationAssertion(schema:domainIncludes schema:drainsTo schema:Vein)
AnnotationAssertion(schema:isPartOf schema:drainsTo <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:drainsTo schema:Vessel)
AnnotationAssertion(rdfs:comment schema:driveWheelConfiguration "The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.")
AnnotationAssertion(rdfs:label schema:driveWheelConfiguration "driveWheelConfiguration")
AnnotationAssertion(schema:contributor schema:driveWheelConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:driveWheelConfiguration schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:driveWheelConfiguration schema:DriveWheelConfigurationValue)
AnnotationAssertion(schema:rangeIncludes schema:driveWheelConfiguration schema:Text)
AnnotationAssertion(rdfs:comment schema:dropoffLocation "Where a rental car can be dropped off.")
AnnotationAssertion(rdfs:label schema:dropoffLocation "dropoffLocation")
AnnotationAssertion(schema:domainIncludes schema:dropoffLocation schema:RentalCarReservation)
AnnotationAssertion(schema:rangeIncludes schema:dropoffLocation schema:Place)
AnnotationAssertion(rdfs:comment schema:dropoffTime "When a rental car can be dropped off.")
AnnotationAssertion(rdfs:label schema:dropoffTime "dropoffTime")
AnnotationAssertion(schema:domainIncludes schema:dropoffTime schema:RentalCarReservation)
AnnotationAssertion(schema:rangeIncludes schema:dropoffTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:drug "Specifying a drug or medicine used in a medication procedure.")
AnnotationAssertion(rdfs:label schema:drug "drug")
AnnotationAssertion(schema:domainIncludes schema:drug schema:DrugClass)
AnnotationAssertion(schema:domainIncludes schema:drug schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:drug schema:Patient)
AnnotationAssertion(schema:domainIncludes schema:drug schema:TherapeuticProcedure)
AnnotationAssertion(schema:isPartOf schema:drug <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:drug schema:Drug)
AnnotationAssertion(rdfs:comment schema:drugClass "The class of drug this belongs to (e.g., statins).")
AnnotationAssertion(rdfs:label schema:drugClass "drugClass")
AnnotationAssertion(schema:domainIncludes schema:drugClass schema:Drug)
AnnotationAssertion(schema:isPartOf schema:drugClass <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:drugClass schema:DrugClass)
AnnotationAssertion(rdfs:comment schema:drugUnit "The unit in which the drug is measured, e.g. '5 mg tablet'.")
AnnotationAssertion(rdfs:label schema:drugUnit "drugUnit")
AnnotationAssertion(schema:domainIncludes schema:drugUnit schema:Drug)
AnnotationAssertion(schema:domainIncludes schema:drugUnit schema:DrugCost)
AnnotationAssertion(schema:isPartOf schema:drugUnit <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:drugUnit schema:Text)
AnnotationAssertion(rdfs:comment schema:duplicateTherapy "A therapy that duplicates or overlaps this one.")
AnnotationAssertion(rdfs:label schema:duplicateTherapy "duplicateTherapy")
AnnotationAssertion(schema:domainIncludes schema:duplicateTherapy schema:MedicalTherapy)
AnnotationAssertion(schema:isPartOf schema:duplicateTherapy <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:duplicateTherapy schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:durationOfWarranty "The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.")
AnnotationAssertion(rdfs:label schema:durationOfWarranty "durationOfWarranty")
AnnotationAssertion(schema:contributor schema:durationOfWarranty <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:durationOfWarranty schema:WarrantyPromise)
AnnotationAssertion(schema:rangeIncludes schema:durationOfWarranty schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:duringMedia "A media object representing the circumstances while performing this direction.")
AnnotationAssertion(rdfs:label schema:duringMedia "duringMedia")
AnnotationAssertion(schema:domainIncludes schema:duringMedia schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:duringMedia schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:duringMedia schema:URL)
AnnotationAssertion(rdfs:comment schema:earlyPrepaymentPenalty "The amount to be paid as a penalty in the event of early payment of the loan.")
AnnotationAssertion(rdfs:label schema:earlyPrepaymentPenalty "earlyPrepaymentPenalty")
AnnotationAssertion(schema:contributor schema:earlyPrepaymentPenalty <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:earlyPrepaymentPenalty schema:RepaymentSpecification)
AnnotationAssertion(schema:isPartOf schema:earlyPrepaymentPenalty <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:earlyPrepaymentPenalty schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:earlyPrepaymentPenalty <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:editor "Specifies the Person who edited the CreativeWork.")
AnnotationAssertion(rdfs:label schema:editor "editor")
AnnotationAssertion(schema:domainIncludes schema:editor schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:editor schema:Person)
AnnotationAssertion(rdfs:comment schema:eduQuestionType "For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: \"Multiple choice\", \"Open ended\", \"Flashcard\".")
AnnotationAssertion(rdfs:label schema:eduQuestionType "eduQuestionType")
AnnotationAssertion(schema:domainIncludes schema:eduQuestionType schema:Question)
AnnotationAssertion(schema:domainIncludes schema:eduQuestionType schema:SolveMathAction)
AnnotationAssertion(schema:isPartOf schema:eduQuestionType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:eduQuestionType schema:Text)
AnnotationAssertion(schema:source schema:eduQuestionType <https://github.com/schemaorg/schemaorg/issues/2636>)
AnnotationAssertion(rdfs:comment schema:educationRequirements "Educational background needed for the position or Occupation.")
AnnotationAssertion(rdfs:label schema:educationRequirements "educationRequirements")
AnnotationAssertion(schema:domainIncludes schema:educationRequirements schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:educationRequirements schema:Occupation)
AnnotationAssertion(schema:isPartOf schema:educationRequirements <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:educationRequirements schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:rangeIncludes schema:educationRequirements schema:Text)
AnnotationAssertion(schema:source schema:educationRequirements <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(schema:source schema:educationRequirements <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:educationalAlignment "An alignment to an established educational framework.

This property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.")
AnnotationAssertion(rdfs:label schema:educationalAlignment "educationalAlignment")
AnnotationAssertion(schema:domainIncludes schema:educationalAlignment schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:educationalAlignment schema:LearningResource)
AnnotationAssertion(schema:rangeIncludes schema:educationalAlignment schema:AlignmentObject)
AnnotationAssertion(rdfs:comment schema:educationalCredentialAwarded "A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.")
AnnotationAssertion(rdfs:label schema:educationalCredentialAwarded "educationalCredentialAwarded")
AnnotationAssertion(schema:domainIncludes schema:educationalCredentialAwarded schema:Course)
AnnotationAssertion(schema:domainIncludes schema:educationalCredentialAwarded schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:rangeIncludes schema:educationalCredentialAwarded schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:rangeIncludes schema:educationalCredentialAwarded schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:educationalCredentialAwarded schema:URL)
AnnotationAssertion(schema:source schema:educationalCredentialAwarded <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:educationalFramework "The framework to which the resource being described is aligned.")
AnnotationAssertion(rdfs:label schema:educationalFramework "educationalFramework")
AnnotationAssertion(schema:domainIncludes schema:educationalFramework schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:educationalFramework schema:Text)
AnnotationAssertion(rdfs:comment schema:educationalLevel "The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.")
AnnotationAssertion(rdfs:label schema:educationalLevel "educationalLevel")
AnnotationAssertion(schema:domainIncludes schema:educationalLevel schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:educationalLevel schema:EducationEvent)
AnnotationAssertion(schema:domainIncludes schema:educationalLevel schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:domainIncludes schema:educationalLevel schema:LearningResource)
AnnotationAssertion(schema:isPartOf schema:educationalLevel <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:educationalLevel schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:educationalLevel schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:educationalLevel schema:URL)
AnnotationAssertion(schema:source schema:educationalLevel <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:educationalProgramMode "Similar to courseMode, the medium or means of delivery of the program as a whole. The value may either be a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).")
AnnotationAssertion(rdfs:label schema:educationalProgramMode "educationalProgramMode")
AnnotationAssertion(schema:domainIncludes schema:educationalProgramMode schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:educationalProgramMode <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:educationalProgramMode schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:educationalProgramMode schema:URL)
AnnotationAssertion(schema:source schema:educationalProgramMode <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:educationalRole "An educationalRole of an EducationalAudience.")
AnnotationAssertion(rdfs:label schema:educationalRole "educationalRole")
AnnotationAssertion(schema:domainIncludes schema:educationalRole schema:EducationalAudience)
AnnotationAssertion(schema:rangeIncludes schema:educationalRole schema:Text)
AnnotationAssertion(rdfs:comment schema:educationalUse "The purpose of a work in the context of education; for example, 'assignment', 'group work'.")
AnnotationAssertion(rdfs:label schema:educationalUse "educationalUse")
AnnotationAssertion(schema:domainIncludes schema:educationalUse schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:educationalUse schema:LearningResource)
AnnotationAssertion(schema:rangeIncludes schema:educationalUse schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:educationalUse schema:Text)
AnnotationAssertion(rdfs:comment schema:elevation "The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT\\_OF\\_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.")
AnnotationAssertion(rdfs:label schema:elevation "elevation")
AnnotationAssertion(schema:domainIncludes schema:elevation schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:elevation schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:elevation schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:elevation schema:Text)
AnnotationAssertion(rdfs:comment schema:eligibilityToWorkRequirement "The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.")
AnnotationAssertion(rdfs:label schema:eligibilityToWorkRequirement "eligibilityToWorkRequirement")
AnnotationAssertion(schema:domainIncludes schema:eligibilityToWorkRequirement schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:eligibilityToWorkRequirement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:eligibilityToWorkRequirement schema:Text)
AnnotationAssertion(schema:source schema:eligibilityToWorkRequirement <https://github.com/schemaorg/schemaorg/issues/2384>)
AnnotationAssertion(rdfs:comment schema:eligibleCustomerType "The type(s) of customers for which the given offer is valid.")
AnnotationAssertion(rdfs:label schema:eligibleCustomerType "eligibleCustomerType")
AnnotationAssertion(schema:contributor schema:eligibleCustomerType <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:eligibleCustomerType schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:eligibleCustomerType schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:eligibleCustomerType schema:BusinessEntityType)
AnnotationAssertion(rdfs:comment schema:eligibleDuration "The duration for which the given offer is valid.")
AnnotationAssertion(rdfs:label schema:eligibleDuration "eligibleDuration")
AnnotationAssertion(schema:contributor schema:eligibleDuration <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:eligibleDuration schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:eligibleDuration schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:eligibleDuration schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:eligibleQuantity "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.")
AnnotationAssertion(rdfs:label schema:eligibleQuantity "eligibleQuantity")
AnnotationAssertion(schema:contributor schema:eligibleQuantity <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:eligibleQuantity schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:eligibleQuantity schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:eligibleQuantity schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:eligibleQuantity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:eligibleTransactionVolume "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.")
AnnotationAssertion(rdfs:label schema:eligibleTransactionVolume "eligibleTransactionVolume")
AnnotationAssertion(schema:contributor schema:eligibleTransactionVolume <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:eligibleTransactionVolume schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:eligibleTransactionVolume schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:eligibleTransactionVolume schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:eligibleTransactionVolume schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:email "Email address.")
AnnotationAssertion(rdfs:label schema:email "email")
AnnotationAssertion(schema:domainIncludes schema:email schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:email schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:email schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:email schema:Text)
AnnotationAssertion(rdfs:comment schema:embedUrl "A URL pointing to a player for a specific video. In general, this is the information in the ```src``` element of an ```embed``` tag and should not be the same as the content of the ```loc``` tag.")
AnnotationAssertion(rdfs:label schema:embedUrl "embedUrl")
AnnotationAssertion(schema:domainIncludes schema:embedUrl schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:embedUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:emissionsCO2 "The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put \"g/km\" into the unitText property of that value, since there is no UN/CEFACT Common Code for \"g/km\".")
AnnotationAssertion(rdfs:label schema:emissionsCO2 "emissionsCO2")
AnnotationAssertion(schema:contributor schema:emissionsCO2 <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:emissionsCO2 schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:emissionsCO2 <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:emissionsCO2 schema:Number)
AnnotationAssertion(rdfs:comment schema:employee "Someone working for this organization.")
AnnotationAssertion(rdfs:label schema:employee "employee")
AnnotationAssertion(schema:domainIncludes schema:employee schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:employee schema:Person)
AnnotationAssertion(rdfs:comment schema:employees "People working for this organization.")
AnnotationAssertion(rdfs:label schema:employees "employees")
AnnotationAssertion(schema:domainIncludes schema:employees schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:employees schema:Person)
AnnotationAssertion(schema:supersededBy schema:employees schema:employee)
AnnotationAssertion(rdfs:comment schema:employerOverview "A description of the employer, career opportunities and work environment for this position.")
AnnotationAssertion(rdfs:label schema:employerOverview "employerOverview")
AnnotationAssertion(schema:domainIncludes schema:employerOverview schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:employerOverview <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:employerOverview schema:Text)
AnnotationAssertion(schema:source schema:employerOverview <https://github.com/schemaorg/schemaorg/issues/2396>)
AnnotationAssertion(rdfs:comment schema:employmentType "Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).")
AnnotationAssertion(rdfs:label schema:employmentType "employmentType")
AnnotationAssertion(schema:domainIncludes schema:employmentType schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:employmentType schema:Text)
AnnotationAssertion(rdfs:comment schema:employmentUnit "Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.")
AnnotationAssertion(rdfs:label schema:employmentUnit "employmentUnit")
AnnotationAssertion(schema:domainIncludes schema:employmentUnit schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:employmentUnit <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:employmentUnit schema:Organization)
AnnotationAssertion(schema:source schema:employmentUnit <https://github.com/schemaorg/schemaorg/issues/2296>)
AnnotationAssertion(rdfs:comment schema:encodesBioChemEntity "Another BioChemEntity encoded by this one. ")
AnnotationAssertion(rdfs:label schema:encodesBioChemEntity "encodesBioChemEntity")
AnnotationAssertion(schema:domainIncludes schema:encodesBioChemEntity schema:Gene)
AnnotationAssertion(schema:inverseOf schema:encodesBioChemEntity schema:isEncodedByBioChemEntity)
AnnotationAssertion(schema:isPartOf schema:encodesBioChemEntity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:encodesBioChemEntity schema:BioChemEntity)
AnnotationAssertion(schema:source schema:encodesBioChemEntity <http://www.bioschemas.org/Gene>)
AnnotationAssertion(rdfs:comment schema:encodesCreativeWork "The CreativeWork encoded by this media object.")
AnnotationAssertion(rdfs:label schema:encodesCreativeWork "encodesCreativeWork")
AnnotationAssertion(schema:domainIncludes schema:encodesCreativeWork schema:MediaObject)
AnnotationAssertion(schema:inverseOf schema:encodesCreativeWork schema:encoding)
AnnotationAssertion(schema:rangeIncludes schema:encodesCreativeWork schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:encoding "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.")
AnnotationAssertion(rdfs:label schema:encoding "encoding")
AnnotationAssertion(schema:domainIncludes schema:encoding schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:encoding schema:encodesCreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:encoding schema:MediaObject)
AnnotationAssertion(rdfs:comment schema:encodingFormat "Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.

In cases where a [[CreativeWork]] has several media type representations, [[encoding]] can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]] information.

Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.")
AnnotationAssertion(rdfs:label schema:encodingFormat "encodingFormat")
AnnotationAssertion(schema:domainIncludes schema:encodingFormat schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:encodingFormat schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:encodingFormat schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:encodingFormat schema:URL)
AnnotationAssertion(rdfs:comment schema:encodingType "The supported encoding type(s) for an EntryPoint request.")
AnnotationAssertion(rdfs:label schema:encodingType "encodingType")
AnnotationAssertion(schema:domainIncludes schema:encodingType schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:encodingType schema:Text)
AnnotationAssertion(rdfs:comment schema:encodings "A media object that encodes this CreativeWork.")
AnnotationAssertion(rdfs:label schema:encodings "encodings")
AnnotationAssertion(schema:domainIncludes schema:encodings schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:encodings schema:MediaObject)
AnnotationAssertion(schema:supersededBy schema:encodings schema:encoding)
AnnotationAssertion(rdfs:comment schema:endDate "The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).")
AnnotationAssertion(rdfs:label schema:endDate "endDate")
AnnotationAssertion(schema:domainIncludes schema:endDate schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:CreativeWorkSeries)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:DatedMoneySpecification)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:Event)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:Role)
AnnotationAssertion(schema:domainIncludes schema:endDate schema:Schedule)
AnnotationAssertion(schema:rangeIncludes schema:endDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:endDate schema:DateTime)
AnnotationAssertion(schema:source schema:endDate <https://github.com/schemaorg/schemaorg/issues/2486>)
AnnotationAssertion(rdfs:comment schema:endOffset "The end time of the clip expressed as the number of seconds from the beginning of the work.")
AnnotationAssertion(rdfs:label schema:endOffset "endOffset")
AnnotationAssertion(schema:domainIncludes schema:endOffset schema:Clip)
AnnotationAssertion(schema:isPartOf schema:endOffset <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:endOffset schema:HyperTocEntry)
AnnotationAssertion(schema:rangeIncludes schema:endOffset schema:Number)
AnnotationAssertion(schema:source schema:endOffset <https://github.com/schemaorg/schemaorg/issues/2021>)
AnnotationAssertion(rdfs:comment schema:endTime "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. E.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.")
AnnotationAssertion(rdfs:label schema:endTime "endTime")
AnnotationAssertion(schema:domainIncludes schema:endTime schema:Action)
AnnotationAssertion(schema:domainIncludes schema:endTime schema:FoodEstablishmentReservation)
AnnotationAssertion(schema:domainIncludes schema:endTime schema:InteractionCounter)
AnnotationAssertion(schema:domainIncludes schema:endTime schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:endTime schema:Schedule)
AnnotationAssertion(schema:rangeIncludes schema:endTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:endTime schema:Time)
AnnotationAssertion(schema:source schema:endTime <https://github.com/schemaorg/schemaorg/issues/2493>)
AnnotationAssertion(rdfs:comment schema:endorsers "People or organizations that endorse the plan.")
AnnotationAssertion(rdfs:label schema:endorsers "endorsers")
AnnotationAssertion(schema:domainIncludes schema:endorsers schema:Diet)
AnnotationAssertion(schema:isPartOf schema:endorsers <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:endorsers schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:endorsers schema:Person)
AnnotationAssertion(rdfs:comment schema:energyEfficiencyScaleMax "Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.")
AnnotationAssertion(rdfs:label schema:energyEfficiencyScaleMax "energyEfficiencyScaleMax")
AnnotationAssertion(schema:domainIncludes schema:energyEfficiencyScaleMax schema:EnergyConsumptionDetails)
AnnotationAssertion(schema:isPartOf schema:energyEfficiencyScaleMax <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:energyEfficiencyScaleMax schema:EUEnergyEfficiencyEnumeration)
AnnotationAssertion(schema:source schema:energyEfficiencyScaleMax <https://github.com/schemaorg/schemaorg/issues/2670>)
AnnotationAssertion(rdfs:comment schema:energyEfficiencyScaleMin "Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.")
AnnotationAssertion(rdfs:label schema:energyEfficiencyScaleMin "energyEfficiencyScaleMin")
AnnotationAssertion(schema:domainIncludes schema:energyEfficiencyScaleMin schema:EnergyConsumptionDetails)
AnnotationAssertion(schema:isPartOf schema:energyEfficiencyScaleMin <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:energyEfficiencyScaleMin schema:EUEnergyEfficiencyEnumeration)
AnnotationAssertion(schema:source schema:energyEfficiencyScaleMin <https://github.com/schemaorg/schemaorg/issues/2670>)
AnnotationAssertion(rdfs:comment schema:engineDisplacement "The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \\n\\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\\n* Note 1: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:engineDisplacement "engineDisplacement")
AnnotationAssertion(schema:contributor schema:engineDisplacement <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:engineDisplacement schema:EngineSpecification)
AnnotationAssertion(schema:isPartOf schema:engineDisplacement <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:engineDisplacement schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:enginePower "The power of the vehicle's engine.
    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\\n\\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine\\_power\\_test\\_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\\n* Note 2: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:enginePower "enginePower")
AnnotationAssertion(schema:contributor schema:enginePower <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:enginePower schema:EngineSpecification)
AnnotationAssertion(schema:isPartOf schema:enginePower <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:enginePower schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:engineType "The type of engine or engines powering the vehicle.")
AnnotationAssertion(rdfs:label schema:engineType "engineType")
AnnotationAssertion(schema:contributor schema:engineType <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:engineType schema:EngineSpecification)
AnnotationAssertion(schema:isPartOf schema:engineType <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:engineType schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:engineType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:engineType schema:URL)
AnnotationAssertion(rdfs:comment schema:epidemiology "The characteristics of associated patients, such as age, gender, race etc.")
AnnotationAssertion(rdfs:label schema:epidemiology "epidemiology")
AnnotationAssertion(schema:domainIncludes schema:epidemiology schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:epidemiology schema:PhysicalActivity)
AnnotationAssertion(schema:isPartOf schema:epidemiology <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:epidemiology schema:Text)
AnnotationAssertion(rdfs:comment schema:episodes "An episode of a TV/radio series or season.")
AnnotationAssertion(rdfs:label schema:episodes "episodes")
AnnotationAssertion(schema:domainIncludes schema:episodes schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:episodes schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:episodes schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:episodes schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:episodes schema:Episode)
AnnotationAssertion(schema:supersededBy schema:episodes schema:episode)
AnnotationAssertion(rdfs:comment schema:equal "This ordering relation for qualitative values indicates that the subject is equal to the object.")
AnnotationAssertion(rdfs:label schema:equal "equal")
AnnotationAssertion(schema:contributor schema:equal <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:equal schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:equal schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:error "For failed actions, more information on the cause of the failure.")
AnnotationAssertion(rdfs:label schema:error "error")
AnnotationAssertion(schema:domainIncludes schema:error schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:error schema:Thing)
AnnotationAssertion(rdfs:comment schema:estimatedCost "The estimated cost of the supply or supplies consumed when performing instructions.")
AnnotationAssertion(rdfs:label schema:estimatedCost "estimatedCost")
AnnotationAssertion(schema:domainIncludes schema:estimatedCost schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:estimatedCost schema:HowToSupply)
AnnotationAssertion(schema:rangeIncludes schema:estimatedCost schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:estimatedCost schema:Text)
AnnotationAssertion(rdfs:comment schema:estimatedFlightDuration "The estimated time the flight will take.")
AnnotationAssertion(rdfs:label schema:estimatedFlightDuration "estimatedFlightDuration")
AnnotationAssertion(schema:domainIncludes schema:estimatedFlightDuration schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:estimatedFlightDuration schema:Duration)
AnnotationAssertion(schema:rangeIncludes schema:estimatedFlightDuration schema:Text)
AnnotationAssertion(rdfs:comment schema:estimatedSalary "An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.")
AnnotationAssertion(rdfs:label schema:estimatedSalary "estimatedSalary")
AnnotationAssertion(schema:domainIncludes schema:estimatedSalary schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:estimatedSalary schema:Occupation)
AnnotationAssertion(schema:rangeIncludes schema:estimatedSalary schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:estimatedSalary schema:MonetaryAmountDistribution)
AnnotationAssertion(schema:rangeIncludes schema:estimatedSalary schema:Number)
AnnotationAssertion(schema:source schema:estimatedSalary <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:estimatesRiskOf "The condition, complication, or symptom whose risk is being estimated.")
AnnotationAssertion(rdfs:label schema:estimatesRiskOf "estimatesRiskOf")
AnnotationAssertion(schema:domainIncludes schema:estimatesRiskOf schema:MedicalRiskEstimator)
AnnotationAssertion(schema:isPartOf schema:estimatesRiskOf <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:estimatesRiskOf schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:ethicsPolicy "Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.")
AnnotationAssertion(rdfs:label schema:ethicsPolicy "ethicsPolicy")
AnnotationAssertion(schema:domainIncludes schema:ethicsPolicy schema:NewsMediaOrganization)
AnnotationAssertion(schema:domainIncludes schema:ethicsPolicy schema:Organization)
AnnotationAssertion(schema:isPartOf schema:ethicsPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:ethicsPolicy schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:ethicsPolicy schema:URL)
AnnotationAssertion(schema:source schema:ethicsPolicy <https://github.com/schemaorg/schemaorg/issues/1525>)
AnnotationAssertion(rdfs:comment schema:event "Upcoming or past event associated with this place, organization, or action.")
AnnotationAssertion(rdfs:label schema:event "event")
AnnotationAssertion(schema:domainIncludes schema:event schema:InformAction)
AnnotationAssertion(schema:domainIncludes schema:event schema:InviteAction)
AnnotationAssertion(schema:domainIncludes schema:event schema:JoinAction)
AnnotationAssertion(schema:domainIncludes schema:event schema:LeaveAction)
AnnotationAssertion(schema:domainIncludes schema:event schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:event schema:Place)
AnnotationAssertion(schema:domainIncludes schema:event schema:PlayAction)
AnnotationAssertion(schema:rangeIncludes schema:event schema:Event)
AnnotationAssertion(rdfs:comment schema:eventAttendanceMode "The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.")
AnnotationAssertion(rdfs:label schema:eventAttendanceMode "eventAttendanceMode")
AnnotationAssertion(schema:domainIncludes schema:eventAttendanceMode schema:Event)
AnnotationAssertion(schema:isPartOf schema:eventAttendanceMode <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:eventAttendanceMode schema:EventAttendanceModeEnumeration)
AnnotationAssertion(schema:source schema:eventAttendanceMode <https://github.com/schemaorg/schemaorg/issues/1842>)
AnnotationAssertion(rdfs:comment schema:eventSchedule "Associates an [[Event]] with a [[Schedule]]. There are circumstances where it is preferable to share a schedule for a series of
      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An [[Event]] that
      is associated with a [[Schedule]] using this property should not have [[startDate]] or [[endDate]] properties. These are instead defined within the associated
      [[Schedule]], this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months
      or seasons.")
AnnotationAssertion(rdfs:label schema:eventSchedule "eventSchedule")
AnnotationAssertion(schema:domainIncludes schema:eventSchedule schema:Event)
AnnotationAssertion(schema:isPartOf schema:eventSchedule <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:eventSchedule schema:Schedule)
AnnotationAssertion(schema:source schema:eventSchedule <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:eventStatus "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.")
AnnotationAssertion(rdfs:label schema:eventStatus "eventStatus")
AnnotationAssertion(schema:domainIncludes schema:eventStatus schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:eventStatus schema:EventStatusType)
AnnotationAssertion(rdfs:comment schema:events "Upcoming or past events associated with this place or organization.")
AnnotationAssertion(rdfs:label schema:events "events")
AnnotationAssertion(schema:domainIncludes schema:events schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:events schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:events schema:Event)
AnnotationAssertion(schema:supersededBy schema:events schema:event)
AnnotationAssertion(rdfs:comment schema:evidenceLevel "Strength of evidence of the data used to formulate the guideline (enumerated).")
AnnotationAssertion(rdfs:label schema:evidenceLevel "evidenceLevel")
AnnotationAssertion(schema:domainIncludes schema:evidenceLevel schema:MedicalGuideline)
AnnotationAssertion(schema:isPartOf schema:evidenceLevel <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:evidenceLevel schema:MedicalEvidenceLevel)
AnnotationAssertion(rdfs:comment schema:evidenceOrigin "Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.")
AnnotationAssertion(rdfs:label schema:evidenceOrigin "evidenceOrigin")
AnnotationAssertion(schema:domainIncludes schema:evidenceOrigin schema:MedicalGuideline)
AnnotationAssertion(schema:isPartOf schema:evidenceOrigin <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:evidenceOrigin schema:Text)
AnnotationAssertion(rdfs:comment schema:exampleOfWork "A creative work that this work is an example/instance/realization/derivation of.")
AnnotationAssertion(rdfs:label schema:exampleOfWork "exampleOfWork")
AnnotationAssertion(schema:contributor schema:exampleOfWork <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:exampleOfWork schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:exampleOfWork schema:workExample)
AnnotationAssertion(schema:rangeIncludes schema:exampleOfWork schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:exceptDate "Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will not take place. The property allows exceptions to
      a [[Schedule]] to be specified. If an exception is specified as a [[DateTime]] then only the event that would have started at that specific date and time
      should be excluded from the schedule. If an exception is specified as a [[Date]] then any event that is scheduled for that 24 hour period should be
      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.")
AnnotationAssertion(rdfs:label schema:exceptDate "exceptDate")
AnnotationAssertion(schema:domainIncludes schema:exceptDate schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:exceptDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:exceptDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:exceptDate schema:DateTime)
AnnotationAssertion(schema:source schema:exceptDate <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:exchangeRateSpread "The difference between the price at which a broker or other intermediary buys and sells foreign currency.")
AnnotationAssertion(rdfs:label schema:exchangeRateSpread "exchangeRateSpread")
AnnotationAssertion(schema:contributor schema:exchangeRateSpread <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:exchangeRateSpread schema:ExchangeRateSpecification)
AnnotationAssertion(schema:isPartOf schema:exchangeRateSpread <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:exchangeRateSpread schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:exchangeRateSpread schema:Number)
AnnotationAssertion(schema:source schema:exchangeRateSpread <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:executableLibraryName "Library file name, e.g., mscorlib.dll, system.web.dll.")
AnnotationAssertion(rdfs:label schema:executableLibraryName "executableLibraryName")
AnnotationAssertion(schema:domainIncludes schema:executableLibraryName schema:APIReference)
AnnotationAssertion(schema:rangeIncludes schema:executableLibraryName schema:Text)
AnnotationAssertion(rdfs:comment schema:exerciseType "Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.")
AnnotationAssertion(rdfs:label schema:exerciseType "exerciseType")
AnnotationAssertion(schema:domainIncludes schema:exerciseType schema:ExerciseAction)
AnnotationAssertion(schema:domainIncludes schema:exerciseType schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:exerciseType <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:exerciseType schema:Text)
AnnotationAssertion(rdfs:comment schema:exifData "exif data for this object.")
AnnotationAssertion(rdfs:label schema:exifData "exifData")
AnnotationAssertion(schema:domainIncludes schema:exifData schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:exifData schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:exifData schema:Text)
AnnotationAssertion(rdfs:comment schema:expectedArrivalFrom "The earliest date the package may arrive.")
AnnotationAssertion(rdfs:label schema:expectedArrivalFrom "expectedArrivalFrom")
AnnotationAssertion(schema:domainIncludes schema:expectedArrivalFrom schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:expectedArrivalFrom schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:expectedArrivalFrom schema:DateTime)
AnnotationAssertion(rdfs:comment schema:expectedArrivalUntil "The latest date the package may arrive.")
AnnotationAssertion(rdfs:label schema:expectedArrivalUntil "expectedArrivalUntil")
AnnotationAssertion(schema:domainIncludes schema:expectedArrivalUntil schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:expectedArrivalUntil schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:expectedArrivalUntil schema:DateTime)
AnnotationAssertion(rdfs:comment schema:expectedPrognosis "The likely outcome in either the short term or long term of the medical condition.")
AnnotationAssertion(rdfs:label schema:expectedPrognosis "expectedPrognosis")
AnnotationAssertion(schema:domainIncludes schema:expectedPrognosis schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:expectedPrognosis <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:expectedPrognosis schema:Text)
AnnotationAssertion(rdfs:comment schema:expectsAcceptanceOf "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.")
AnnotationAssertion(rdfs:label schema:expectsAcceptanceOf "expectsAcceptanceOf")
AnnotationAssertion(schema:domainIncludes schema:expectsAcceptanceOf schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:expectsAcceptanceOf schema:ConsumeAction)
AnnotationAssertion(schema:domainIncludes schema:expectsAcceptanceOf schema:MediaSubscription)
AnnotationAssertion(schema:rangeIncludes schema:expectsAcceptanceOf schema:Offer)
AnnotationAssertion(schema:source schema:expectsAcceptanceOf <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:experienceInPlaceOfEducation "Indicates whether a [[JobPosting]] will accept experience (as indicated by [[OccupationalExperienceRequirements]]) in place of its formal educational qualifications (as indicated by [[educationRequirements]]). If true, indicates that satisfying one of these requirements is sufficient.")
AnnotationAssertion(rdfs:label schema:experienceInPlaceOfEducation "experienceInPlaceOfEducation")
AnnotationAssertion(schema:domainIncludes schema:experienceInPlaceOfEducation schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:experienceInPlaceOfEducation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:experienceInPlaceOfEducation schema:Boolean)
AnnotationAssertion(schema:source schema:experienceInPlaceOfEducation <https://github.com/schemaorg/schemaorg/issues/2681>)
AnnotationAssertion(rdfs:comment schema:experienceRequirements "Description of skills and experience needed for the position or Occupation.")
AnnotationAssertion(rdfs:label schema:experienceRequirements "experienceRequirements")
AnnotationAssertion(schema:domainIncludes schema:experienceRequirements schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:experienceRequirements schema:Occupation)
AnnotationAssertion(schema:rangeIncludes schema:experienceRequirements schema:OccupationalExperienceRequirements)
AnnotationAssertion(schema:rangeIncludes schema:experienceRequirements schema:Text)
AnnotationAssertion(schema:source schema:experienceRequirements <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:expertConsiderations "Medical expert advice related to the plan.")
AnnotationAssertion(rdfs:label schema:expertConsiderations "expertConsiderations")
AnnotationAssertion(schema:domainIncludes schema:expertConsiderations schema:Diet)
AnnotationAssertion(schema:isPartOf schema:expertConsiderations <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:expertConsiderations schema:Text)
AnnotationAssertion(rdfs:comment schema:expires "Date the content expires and is no longer useful or available. For example a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, a [[ClaimReview]] fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date, or a [[Certification]] the validity has expired.")
AnnotationAssertion(rdfs:label schema:expires "expires")
AnnotationAssertion(schema:domainIncludes schema:expires schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:expires schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:expires schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:expires schema:DateTime)
AnnotationAssertion(rdfs:comment schema:expressedIn "Tissue, organ, biological sample, etc in which activity of this gene has been observed experimentally. For example brain, digestive system.")
AnnotationAssertion(rdfs:label schema:expressedIn "expressedIn")
AnnotationAssertion(schema:domainIncludes schema:expressedIn schema:Gene)
AnnotationAssertion(schema:isPartOf schema:expressedIn <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:expressedIn schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:expressedIn schema:AnatomicalSystem)
AnnotationAssertion(schema:rangeIncludes schema:expressedIn schema:BioChemEntity)
AnnotationAssertion(schema:rangeIncludes schema:expressedIn schema:DefinedTerm)
AnnotationAssertion(schema:source schema:expressedIn <http://www.bioschemas.org/Gene>)
AnnotationAssertion(rdfs:comment schema:familyName "Family name. In the U.S., the last name of a Person.")
AnnotationAssertion(rdfs:label schema:familyName "familyName")
AnnotationAssertion(schema:domainIncludes schema:familyName schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:familyName schema:Text)
AnnotationAssertion(rdfs:comment schema:fatContent "The number of grams of fat.")
AnnotationAssertion(rdfs:label schema:fatContent "fatContent")
AnnotationAssertion(schema:domainIncludes schema:fatContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:fatContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:faxNumber "The fax number.")
AnnotationAssertion(rdfs:label schema:faxNumber "faxNumber")
AnnotationAssertion(schema:domainIncludes schema:faxNumber schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:faxNumber schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:faxNumber schema:Person)
AnnotationAssertion(schema:domainIncludes schema:faxNumber schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:faxNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:featureList "Features or modules provided by this application (and possibly required by other applications).")
AnnotationAssertion(rdfs:label schema:featureList "featureList")
AnnotationAssertion(schema:domainIncludes schema:featureList schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:featureList schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:featureList schema:URL)
AnnotationAssertion(rdfs:comment schema:feesAndCommissionsSpecification "Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.")
AnnotationAssertion(rdfs:label schema:feesAndCommissionsSpecification "feesAndCommissionsSpecification")
AnnotationAssertion(schema:contributor schema:feesAndCommissionsSpecification <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:feesAndCommissionsSpecification schema:FinancialProduct)
AnnotationAssertion(schema:domainIncludes schema:feesAndCommissionsSpecification schema:FinancialService)
AnnotationAssertion(schema:rangeIncludes schema:feesAndCommissionsSpecification schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:feesAndCommissionsSpecification schema:URL)
AnnotationAssertion(rdfs:comment schema:fiberContent "The number of grams of fiber.")
AnnotationAssertion(rdfs:label schema:fiberContent "fiberContent")
AnnotationAssertion(schema:domainIncludes schema:fiberContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:fiberContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:fileFormat "Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content, e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.")
AnnotationAssertion(rdfs:label schema:fileFormat "fileFormat")
AnnotationAssertion(schema:domainIncludes schema:fileFormat schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:fileFormat schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:fileFormat schema:URL)
AnnotationAssertion(schema:supersededBy schema:fileFormat schema:encodingFormat)
AnnotationAssertion(rdfs:comment schema:fileSize "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.")
AnnotationAssertion(rdfs:label schema:fileSize "fileSize")
AnnotationAssertion(schema:domainIncludes schema:fileSize schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:fileSize schema:Text)
AnnotationAssertion(rdfs:comment schema:financialAidEligible "A financial aid type or program which students may use to pay for tuition or fees associated with the program.")
AnnotationAssertion(rdfs:label schema:financialAidEligible "financialAidEligible")
AnnotationAssertion(schema:domainIncludes schema:financialAidEligible schema:Course)
AnnotationAssertion(schema:domainIncludes schema:financialAidEligible schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:financialAidEligible <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:financialAidEligible schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:financialAidEligible schema:Text)
AnnotationAssertion(schema:source schema:financialAidEligible <https://github.com/schemaorg/schemaorg/issues/2418>)
AnnotationAssertion(rdfs:comment schema:firstPerformance "The date and place the work was first performed.")
AnnotationAssertion(rdfs:label schema:firstPerformance "firstPerformance")
AnnotationAssertion(schema:contributor schema:firstPerformance <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:firstPerformance schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:firstPerformance schema:Event)
AnnotationAssertion(rdfs:comment schema:flightDistance "The distance of the flight.")
AnnotationAssertion(rdfs:label schema:flightDistance "flightDistance")
AnnotationAssertion(schema:domainIncludes schema:flightDistance schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:flightDistance schema:Distance)
AnnotationAssertion(schema:rangeIncludes schema:flightDistance schema:Text)
AnnotationAssertion(rdfs:comment schema:floorLevel "The floor level for an [[Accommodation]] in a multi-storey building. Since counting
  systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.")
AnnotationAssertion(rdfs:label schema:floorLevel "floorLevel")
AnnotationAssertion(schema:domainIncludes schema:floorLevel schema:Accommodation)
AnnotationAssertion(schema:isPartOf schema:floorLevel <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:floorLevel schema:Text)
AnnotationAssertion(schema:source schema:floorLevel <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:floorLimit "A floor limit is the amount of money above which credit card transactions must be authorized.")
AnnotationAssertion(rdfs:label schema:floorLimit "floorLimit")
AnnotationAssertion(schema:contributor schema:floorLimit <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:floorLimit schema:PaymentCard)
AnnotationAssertion(schema:isPartOf schema:floorLimit <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:floorLimit schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:floorLimit <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:floorSize "The size of the accommodation, e.g. in square meter or squarefoot.
Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard.")
AnnotationAssertion(rdfs:label schema:floorSize "floorSize")
AnnotationAssertion(schema:contributor schema:floorSize <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:floorSize schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:floorSize schema:FloorPlan)
AnnotationAssertion(schema:rangeIncludes schema:floorSize schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:follows "The most generic uni-directional social relation.")
AnnotationAssertion(rdfs:label schema:follows "follows")
AnnotationAssertion(schema:domainIncludes schema:follows schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:follows schema:Person)
AnnotationAssertion(rdfs:comment schema:followup "Typical or recommended followup care after the procedure is performed.")
AnnotationAssertion(rdfs:label schema:followup "followup")
AnnotationAssertion(schema:domainIncludes schema:followup schema:MedicalProcedure)
AnnotationAssertion(schema:isPartOf schema:followup <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:followup schema:Text)
AnnotationAssertion(rdfs:comment schema:foodWarning "Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.")
AnnotationAssertion(rdfs:label schema:foodWarning "foodWarning")
AnnotationAssertion(schema:domainIncludes schema:foodWarning schema:Drug)
AnnotationAssertion(schema:isPartOf schema:foodWarning <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:foodWarning schema:Text)
AnnotationAssertion(rdfs:comment schema:founder "A person or organization who founded this organization.")
AnnotationAssertion(rdfs:label schema:founder "founder")
AnnotationAssertion(schema:domainIncludes schema:founder schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:founder schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:founder schema:Person)
AnnotationAssertion(rdfs:comment schema:founders "A person who founded this organization.")
AnnotationAssertion(rdfs:label schema:founders "founders")
AnnotationAssertion(schema:domainIncludes schema:founders schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:founders schema:Person)
AnnotationAssertion(schema:supersededBy schema:founders schema:founder)
AnnotationAssertion(rdfs:comment schema:foundingDate "The date that this organization was founded.")
AnnotationAssertion(rdfs:label schema:foundingDate "foundingDate")
AnnotationAssertion(schema:domainIncludes schema:foundingDate schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:foundingDate schema:Date)
AnnotationAssertion(rdfs:comment schema:foundingLocation "The place where the Organization was founded.")
AnnotationAssertion(rdfs:label schema:foundingLocation "foundingLocation")
AnnotationAssertion(schema:domainIncludes schema:foundingLocation schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:foundingLocation schema:Place)
AnnotationAssertion(rdfs:comment schema:free "A flag to signal that the item, event, or place is accessible for free.")
AnnotationAssertion(rdfs:label schema:free "free")
AnnotationAssertion(schema:domainIncludes schema:free schema:PublicationEvent)
AnnotationAssertion(schema:rangeIncludes schema:free schema:Boolean)
AnnotationAssertion(schema:supersededBy schema:free schema:isAccessibleForFree)
AnnotationAssertion(rdfs:comment schema:freeShippingThreshold "A monetary value above (or at) which the shipping rate becomes free. Intended to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching this [[ShippingRateSettings]].")
AnnotationAssertion(rdfs:label schema:freeShippingThreshold "freeShippingThreshold")
AnnotationAssertion(schema:domainIncludes schema:freeShippingThreshold schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:freeShippingThreshold schema:DeliveryChargeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:freeShippingThreshold schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:freeShippingThreshold <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:fuelCapacity "The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\\n\\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).")
AnnotationAssertion(rdfs:label schema:fuelCapacity "fuelCapacity")
AnnotationAssertion(schema:contributor schema:fuelCapacity <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:fuelCapacity schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:fuelCapacity <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:fuelCapacity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:fuelConsumption "The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\\n\\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel consumption to another value.")
AnnotationAssertion(rdfs:label schema:fuelConsumption "fuelConsumption")
AnnotationAssertion(schema:contributor schema:fuelConsumption <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:fuelConsumption schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:fuelConsumption schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:fuelEfficiency "The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\\n\\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, e.g. mpg or km/L.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel economy to another value.")
AnnotationAssertion(rdfs:label schema:fuelEfficiency "fuelEfficiency")
AnnotationAssertion(schema:contributor schema:fuelEfficiency <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:fuelEfficiency schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:fuelEfficiency schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:fuelType "The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.")
AnnotationAssertion(rdfs:label schema:fuelType "fuelType")
AnnotationAssertion(schema:contributor schema:fuelType <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:fuelType schema:EngineSpecification)
AnnotationAssertion(schema:domainIncludes schema:fuelType schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:fuelType schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:fuelType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:fuelType schema:URL)
AnnotationAssertion(rdfs:comment schema:functionalClass "The degree of mobility the joint allows.")
AnnotationAssertion(rdfs:label schema:functionalClass "functionalClass")
AnnotationAssertion(schema:domainIncludes schema:functionalClass schema:Joint)
AnnotationAssertion(schema:isPartOf schema:functionalClass <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:functionalClass schema:MedicalEntity)
AnnotationAssertion(schema:rangeIncludes schema:functionalClass schema:Text)
AnnotationAssertion(rdfs:comment schema:fundedItem "Indicates something directly or indirectly funded or sponsored through a [[Grant]]. See also [[ownershipFundingInfo]].")
AnnotationAssertion(rdfs:label schema:fundedItem "fundedItem")
AnnotationAssertion(schema:contributor schema:fundedItem <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:fundedItem schema:Grant)
AnnotationAssertion(schema:inverseOf schema:fundedItem schema:funding)
AnnotationAssertion(schema:isPartOf schema:fundedItem <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:BioChemEntity)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:MedicalEntity)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:fundedItem schema:Product)
AnnotationAssertion(schema:source schema:fundedItem <https://github.com/schemaorg/schemaorg/issues/1950>)
AnnotationAssertion(schema:source schema:fundedItem <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(rdfs:comment schema:funding "A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].")
AnnotationAssertion(rdfs:label schema:funding "funding")
AnnotationAssertion(schema:contributor schema:funding <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:funding schema:BioChemEntity)
AnnotationAssertion(schema:domainIncludes schema:funding schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:funding schema:Event)
AnnotationAssertion(schema:domainIncludes schema:funding schema:MedicalEntity)
AnnotationAssertion(schema:domainIncludes schema:funding schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:funding schema:Person)
AnnotationAssertion(schema:domainIncludes schema:funding schema:Product)
AnnotationAssertion(schema:inverseOf schema:funding schema:fundedItem)
AnnotationAssertion(schema:isPartOf schema:funding <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:funding schema:Grant)
AnnotationAssertion(schema:source schema:funding <https://github.com/schemaorg/schemaorg/issues/383>)
AnnotationAssertion(rdfs:comment schema:game "Video game which is played on this server.")
AnnotationAssertion(rdfs:label schema:game "game")
AnnotationAssertion(schema:domainIncludes schema:game schema:GameServer)
AnnotationAssertion(schema:inverseOf schema:game schema:gameServer)
AnnotationAssertion(schema:rangeIncludes schema:game schema:VideoGame)
AnnotationAssertion(rdfs:comment schema:gameAvailabilityType "Indicates the availability type of the game content associated with this action, such as whether it is a full version or a demo.")
AnnotationAssertion(rdfs:label schema:gameAvailabilityType "gameAvailabilityType")
AnnotationAssertion(schema:domainIncludes schema:gameAvailabilityType schema:PlayGameAction)
AnnotationAssertion(schema:isPartOf schema:gameAvailabilityType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:gameAvailabilityType schema:GameAvailabilityEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:gameAvailabilityType schema:Text)
AnnotationAssertion(schema:source schema:gameAvailabilityType <https://github.com/schemaorg/schemaorg/issues/3058>)
AnnotationAssertion(rdfs:comment schema:gameEdition "The edition of a video game.")
AnnotationAssertion(rdfs:label schema:gameEdition "gameEdition")
AnnotationAssertion(schema:domainIncludes schema:gameEdition schema:VideoGame)
AnnotationAssertion(schema:rangeIncludes schema:gameEdition schema:Text)
AnnotationAssertion(rdfs:comment schema:gameItem "An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.")
AnnotationAssertion(rdfs:label schema:gameItem "gameItem")
AnnotationAssertion(schema:domainIncludes schema:gameItem schema:Game)
AnnotationAssertion(schema:domainIncludes schema:gameItem schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:gameItem schema:Thing)
AnnotationAssertion(rdfs:comment schema:gameLocation "Real or fictional location of the game (or part of game).")
AnnotationAssertion(rdfs:label schema:gameLocation "gameLocation")
AnnotationAssertion(schema:domainIncludes schema:gameLocation schema:Game)
AnnotationAssertion(schema:domainIncludes schema:gameLocation schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:gameLocation schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:gameLocation schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:gameLocation schema:URL)
AnnotationAssertion(rdfs:comment schema:gamePlatform "The electronic systems used to play <a href=\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\">video games</a>.")
AnnotationAssertion(rdfs:label schema:gamePlatform "gamePlatform")
AnnotationAssertion(schema:domainIncludes schema:gamePlatform schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:gamePlatform schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:gamePlatform schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:gamePlatform schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:gamePlatform schema:URL)
AnnotationAssertion(rdfs:comment schema:gameServer "The server on which  it is possible to play the game.")
AnnotationAssertion(rdfs:label schema:gameServer "gameServer")
AnnotationAssertion(schema:domainIncludes schema:gameServer schema:VideoGame)
AnnotationAssertion(schema:inverseOf schema:gameServer schema:game)
AnnotationAssertion(schema:rangeIncludes schema:gameServer schema:GameServer)
AnnotationAssertion(rdfs:comment schema:gameTip "Links to tips, tactics, etc.")
AnnotationAssertion(rdfs:label schema:gameTip "gameTip")
AnnotationAssertion(schema:domainIncludes schema:gameTip schema:VideoGame)
AnnotationAssertion(schema:rangeIncludes schema:gameTip schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:gender "Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of \"Mixed\".")
AnnotationAssertion(rdfs:label schema:gender "gender")
AnnotationAssertion(schema:domainIncludes schema:gender schema:Person)
AnnotationAssertion(schema:domainIncludes schema:gender schema:SportsTeam)
AnnotationAssertion(schema:isPartOf schema:gender <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:gender schema:GenderType)
AnnotationAssertion(schema:rangeIncludes schema:gender schema:Text)
AnnotationAssertion(schema:source schema:gender <https://github.com/schemaorg/schemaorg/issues/2341>)
AnnotationAssertion(rdfs:comment schema:geo "The geo coordinates of the place.")
AnnotationAssertion(rdfs:label schema:geo "geo")
AnnotationAssertion(schema:domainIncludes schema:geo schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geo schema:GeoCoordinates)
AnnotationAssertion(schema:rangeIncludes schema:geo schema:GeoShape)
AnnotationAssertion(rdfs:comment schema:geoContains "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoContains "geoContains")
AnnotationAssertion(schema:domainIncludes schema:geoContains schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoContains schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoContains schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoContains schema:Place)
AnnotationAssertion(rdfs:comment schema:geoCoveredBy "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoCoveredBy "geoCoveredBy")
AnnotationAssertion(schema:domainIncludes schema:geoCoveredBy schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoCoveredBy schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoCoveredBy schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoCoveredBy schema:Place)
AnnotationAssertion(rdfs:comment schema:geoCovers "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoCovers "geoCovers")
AnnotationAssertion(schema:domainIncludes schema:geoCovers schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoCovers schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoCovers schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoCovers schema:Place)
AnnotationAssertion(rdfs:comment schema:geoCrosses "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoCrosses "geoCrosses")
AnnotationAssertion(schema:domainIncludes schema:geoCrosses schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoCrosses schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoCrosses schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoCrosses schema:Place)
AnnotationAssertion(rdfs:comment schema:geoDisjoint "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: \"they have no point in common. They form a set of disconnected geometries.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)")
AnnotationAssertion(rdfs:label schema:geoDisjoint "geoDisjoint")
AnnotationAssertion(schema:domainIncludes schema:geoDisjoint schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoDisjoint schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoDisjoint schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoDisjoint schema:Place)
AnnotationAssertion(rdfs:comment schema:geoEquals "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship).")
AnnotationAssertion(rdfs:label schema:geoEquals "geoEquals")
AnnotationAssertion(schema:domainIncludes schema:geoEquals schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoEquals schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoEquals schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoEquals schema:Place)
AnnotationAssertion(rdfs:comment schema:geoIntersects "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoIntersects "geoIntersects")
AnnotationAssertion(schema:domainIncludes schema:geoIntersects schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoIntersects schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoIntersects schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoIntersects schema:Place)
AnnotationAssertion(rdfs:comment schema:geoMidpoint "Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.")
AnnotationAssertion(rdfs:label schema:geoMidpoint "geoMidpoint")
AnnotationAssertion(schema:domainIncludes schema:geoMidpoint schema:GeoCircle)
AnnotationAssertion(schema:rangeIncludes schema:geoMidpoint schema:GeoCoordinates)
AnnotationAssertion(rdfs:comment schema:geoOverlaps "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoOverlaps "geoOverlaps")
AnnotationAssertion(schema:domainIncludes schema:geoOverlaps schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoOverlaps schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoOverlaps schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoOverlaps schema:Place)
AnnotationAssertion(rdfs:comment schema:geoRadius "Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).")
AnnotationAssertion(rdfs:label schema:geoRadius "geoRadius")
AnnotationAssertion(schema:domainIncludes schema:geoRadius schema:GeoCircle)
AnnotationAssertion(schema:rangeIncludes schema:geoRadius schema:Distance)
AnnotationAssertion(schema:rangeIncludes schema:geoRadius schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:geoRadius schema:Text)
AnnotationAssertion(rdfs:comment schema:geoTouches "Represents spatial relations in which two geometries (or the places they represent) touch: \"they have at least one boundary point in common, but no interior points.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)")
AnnotationAssertion(rdfs:label schema:geoTouches "geoTouches")
AnnotationAssertion(schema:domainIncludes schema:geoTouches schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoTouches schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoTouches schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoTouches schema:Place)
AnnotationAssertion(rdfs:comment schema:geoWithin "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).")
AnnotationAssertion(rdfs:label schema:geoWithin "geoWithin")
AnnotationAssertion(schema:domainIncludes schema:geoWithin schema:GeospatialGeometry)
AnnotationAssertion(schema:domainIncludes schema:geoWithin schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:geoWithin schema:GeospatialGeometry)
AnnotationAssertion(schema:rangeIncludes schema:geoWithin schema:Place)
AnnotationAssertion(rdfs:comment schema:geographicArea "The geographic area associated with the audience.")
AnnotationAssertion(rdfs:label schema:geographicArea "geographicArea")
AnnotationAssertion(schema:domainIncludes schema:geographicArea schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:geographicArea schema:AdministrativeArea)
AnnotationAssertion(rdfs:comment schema:gettingTestedInfo "Information about getting tested (for a [[MedicalCondition]]), e.g. in the context of a pandemic.")
AnnotationAssertion(rdfs:label schema:gettingTestedInfo "gettingTestedInfo")
AnnotationAssertion(schema:domainIncludes schema:gettingTestedInfo schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:gettingTestedInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:gettingTestedInfo schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:gettingTestedInfo schema:WebContent)
AnnotationAssertion(schema:source schema:gettingTestedInfo <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:givenName "Given name. In the U.S., the first name of a Person.")
AnnotationAssertion(rdfs:label schema:givenName "givenName")
AnnotationAssertion(schema:domainIncludes schema:givenName schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:givenName schema:Text)
AnnotationAssertion(rdfs:comment schema:governmentBenefitsInfo "governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.")
AnnotationAssertion(rdfs:label schema:governmentBenefitsInfo "governmentBenefitsInfo")
AnnotationAssertion(schema:domainIncludes schema:governmentBenefitsInfo schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:governmentBenefitsInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:governmentBenefitsInfo schema:GovernmentService)
AnnotationAssertion(schema:source schema:governmentBenefitsInfo <https://github.com/schemaorg/schemaorg/issues/2534>)
AnnotationAssertion(rdfs:comment schema:gracePeriod "The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.")
AnnotationAssertion(rdfs:label schema:gracePeriod "gracePeriod")
AnnotationAssertion(schema:contributor schema:gracePeriod <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:gracePeriod schema:LoanOrCredit)
AnnotationAssertion(schema:isPartOf schema:gracePeriod <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:gracePeriod schema:Duration)
AnnotationAssertion(schema:source schema:gracePeriod <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:grantee "The person, organization, contact point, or audience that has been granted this permission.")
AnnotationAssertion(rdfs:label schema:grantee "grantee")
AnnotationAssertion(schema:domainIncludes schema:grantee schema:DigitalDocumentPermission)
AnnotationAssertion(schema:rangeIncludes schema:grantee schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:grantee schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:grantee schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:grantee schema:Person)
AnnotationAssertion(rdfs:comment schema:greater "This ordering relation for qualitative values indicates that the subject is greater than the object.")
AnnotationAssertion(rdfs:label schema:greater "greater")
AnnotationAssertion(schema:contributor schema:greater <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:greater schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:greater schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:greaterOrEqual "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.")
AnnotationAssertion(rdfs:label schema:greaterOrEqual "greaterOrEqual")
AnnotationAssertion(schema:contributor schema:greaterOrEqual <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:greaterOrEqual schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:greaterOrEqual schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:guideline "A medical guideline related to this entity.")
AnnotationAssertion(rdfs:label schema:guideline "guideline")
AnnotationAssertion(schema:domainIncludes schema:guideline schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:guideline <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:guideline schema:MedicalGuideline)
AnnotationAssertion(rdfs:comment schema:guidelineDate "Date on which this guideline's recommendation was made.")
AnnotationAssertion(rdfs:label schema:guidelineDate "guidelineDate")
AnnotationAssertion(schema:domainIncludes schema:guidelineDate schema:MedicalGuideline)
AnnotationAssertion(schema:isPartOf schema:guidelineDate <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:guidelineDate schema:Date)
AnnotationAssertion(rdfs:comment schema:guidelineSubject "The medical conditions, treatments, etc. that are the subject of the guideline.")
AnnotationAssertion(rdfs:label schema:guidelineSubject "guidelineSubject")
AnnotationAssertion(schema:domainIncludes schema:guidelineSubject schema:MedicalGuideline)
AnnotationAssertion(schema:isPartOf schema:guidelineSubject <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:guidelineSubject schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:handlingTime "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as \"d\"), i.e. only counting days when the business normally operates.")
AnnotationAssertion(rdfs:label schema:handlingTime "handlingTime")
AnnotationAssertion(schema:domainIncludes schema:handlingTime schema:ShippingDeliveryTime)
AnnotationAssertion(schema:rangeIncludes schema:handlingTime schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:handlingTime <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:hasAdultConsideration "Used to tag an item to be intended or suitable for consumption or use by adults only.")
AnnotationAssertion(rdfs:label schema:hasAdultConsideration "hasAdultConsideration")
AnnotationAssertion(schema:domainIncludes schema:hasAdultConsideration schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:hasAdultConsideration schema:Product)
AnnotationAssertion(schema:isPartOf schema:hasAdultConsideration <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasAdultConsideration schema:AdultOrientedEnumeration)
AnnotationAssertion(schema:source schema:hasAdultConsideration <https://github.com/schemaorg/schemaorg/issues/2989>)
AnnotationAssertion(rdfs:comment schema:hasBioChemEntityPart "Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. ")
AnnotationAssertion(rdfs:label schema:hasBioChemEntityPart "hasBioChemEntityPart")
AnnotationAssertion(schema:domainIncludes schema:hasBioChemEntityPart schema:BioChemEntity)
AnnotationAssertion(schema:inverseOf schema:hasBioChemEntityPart schema:isPartOfBioChemEntity)
AnnotationAssertion(schema:isPartOf schema:hasBioChemEntityPart <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasBioChemEntityPart schema:BioChemEntity)
AnnotationAssertion(schema:source schema:hasBioChemEntityPart <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:hasBroadcastChannel "A broadcast channel of a broadcast service.")
AnnotationAssertion(rdfs:label schema:hasBroadcastChannel "hasBroadcastChannel")
AnnotationAssertion(schema:domainIncludes schema:hasBroadcastChannel schema:BroadcastService)
AnnotationAssertion(schema:inverseOf schema:hasBroadcastChannel schema:providesBroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:hasBroadcastChannel schema:BroadcastChannel)
AnnotationAssertion(schema:source schema:hasBroadcastChannel <https://github.com/schemaorg/schemaorg/issues/1004>)
AnnotationAssertion(rdfs:comment schema:hasCertification "Certification information about a product, organization, service, place, or person.")
AnnotationAssertion(rdfs:label schema:hasCertification "hasCertification")
AnnotationAssertion(schema:domainIncludes schema:hasCertification schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasCertification schema:Person)
AnnotationAssertion(schema:domainIncludes schema:hasCertification schema:Place)
AnnotationAssertion(schema:domainIncludes schema:hasCertification schema:Product)
AnnotationAssertion(schema:domainIncludes schema:hasCertification schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:hasCertification schema:Certification)
AnnotationAssertion(schema:source schema:hasCertification <https://github.com/schemaorg/schemaorg/issues/3230>)
AnnotationAssertion(rdfs:comment schema:hasCourse "A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.")
AnnotationAssertion(rdfs:label schema:hasCourse "hasCourse")
AnnotationAssertion(schema:domainIncludes schema:hasCourse schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:hasCourse <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasCourse schema:Course)
AnnotationAssertion(schema:source schema:hasCourse <https://github.com/schemaorg/schemaorg/issues/2483>)
AnnotationAssertion(rdfs:comment schema:hasCourseInstance "An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.")
AnnotationAssertion(rdfs:label schema:hasCourseInstance "hasCourseInstance")
AnnotationAssertion(schema:domainIncludes schema:hasCourseInstance schema:Course)
AnnotationAssertion(schema:rangeIncludes schema:hasCourseInstance schema:CourseInstance)
AnnotationAssertion(rdfs:comment schema:hasCredential "A credential awarded to the Person or Organization.")
AnnotationAssertion(rdfs:label schema:hasCredential "hasCredential")
AnnotationAssertion(schema:domainIncludes schema:hasCredential schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasCredential schema:Person)
AnnotationAssertion(schema:isPartOf schema:hasCredential <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasCredential schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:source schema:hasCredential <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:hasDeliveryMethod "Method used for delivery or shipping.")
AnnotationAssertion(rdfs:label schema:hasDeliveryMethod "hasDeliveryMethod")
AnnotationAssertion(schema:domainIncludes schema:hasDeliveryMethod schema:DeliveryEvent)
AnnotationAssertion(schema:domainIncludes schema:hasDeliveryMethod schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:hasDeliveryMethod schema:DeliveryMethod)
AnnotationAssertion(rdfs:comment schema:hasDigitalDocumentPermission "A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \"public\".")
AnnotationAssertion(rdfs:label schema:hasDigitalDocumentPermission "hasDigitalDocumentPermission")
AnnotationAssertion(schema:domainIncludes schema:hasDigitalDocumentPermission schema:DigitalDocument)
AnnotationAssertion(schema:rangeIncludes schema:hasDigitalDocumentPermission schema:DigitalDocumentPermission)
AnnotationAssertion(rdfs:comment schema:hasDriveThroughService "Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.")
AnnotationAssertion(rdfs:label schema:hasDriveThroughService "hasDriveThroughService")
AnnotationAssertion(schema:domainIncludes schema:hasDriveThroughService schema:Place)
AnnotationAssertion(schema:isPartOf schema:hasDriveThroughService <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasDriveThroughService schema:Boolean)
AnnotationAssertion(schema:source schema:hasDriveThroughService <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:hasEnergyConsumptionDetails "Defines the energy efficiency Category (also known as \"class\" or \"rating\") for a product according to an international energy efficiency standard.")
AnnotationAssertion(rdfs:label schema:hasEnergyConsumptionDetails "hasEnergyConsumptionDetails")
AnnotationAssertion(schema:domainIncludes schema:hasEnergyConsumptionDetails schema:Product)
AnnotationAssertion(schema:isPartOf schema:hasEnergyConsumptionDetails <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasEnergyConsumptionDetails schema:EnergyConsumptionDetails)
AnnotationAssertion(schema:source schema:hasEnergyConsumptionDetails <https://github.com/schemaorg/schemaorg/issues/2670>)
AnnotationAssertion(rdfs:comment schema:hasEnergyEfficiencyCategory "Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.")
AnnotationAssertion(rdfs:label schema:hasEnergyEfficiencyCategory "hasEnergyEfficiencyCategory")
AnnotationAssertion(schema:domainIncludes schema:hasEnergyEfficiencyCategory schema:EnergyConsumptionDetails)
AnnotationAssertion(schema:isPartOf schema:hasEnergyEfficiencyCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasEnergyEfficiencyCategory schema:EnergyEfficiencyEnumeration)
AnnotationAssertion(schema:source schema:hasEnergyEfficiencyCategory <https://github.com/schemaorg/schemaorg/issues/2670>)
AnnotationAssertion(rdfs:comment schema:hasHealthAspect "Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.")
AnnotationAssertion(rdfs:label schema:hasHealthAspect "hasHealthAspect")
AnnotationAssertion(schema:domainIncludes schema:hasHealthAspect schema:HealthTopicContent)
AnnotationAssertion(schema:isPartOf schema:hasHealthAspect <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasHealthAspect schema:HealthAspectEnumeration)
AnnotationAssertion(schema:source schema:hasHealthAspect <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:hasMap "A URL to a map of the place.")
AnnotationAssertion(rdfs:label schema:hasMap "hasMap")
AnnotationAssertion(schema:domainIncludes schema:hasMap schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:hasMap schema:Map)
AnnotationAssertion(schema:rangeIncludes schema:hasMap schema:URL)
AnnotationAssertion(rdfs:comment schema:hasMeasurement "A measurement of an item, For example, the inseam of pants, the wheel size of a bicycle, the gauge of a screw, or the carbon footprint measured for certification by an authority. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.")
AnnotationAssertion(rdfs:label schema:hasMeasurement "hasMeasurement")
AnnotationAssertion(schema:domainIncludes schema:hasMeasurement schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:hasMeasurement schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:hasMeasurement schema:Product)
AnnotationAssertion(schema:domainIncludes schema:hasMeasurement schema:SizeSpecification)
AnnotationAssertion(schema:isPartOf schema:hasMeasurement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasMeasurement schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:hasMeasurement <https://github.com/schemaorg/schemaorg/issues/2811>)
AnnotationAssertion(rdfs:comment schema:hasMemberProgram "MemberProgram offered by an Organization, for example an eCommerce merchant or an airline.")
AnnotationAssertion(rdfs:label schema:hasMemberProgram "hasMemberProgram")
AnnotationAssertion(schema:domainIncludes schema:hasMemberProgram schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:hasMemberProgram schema:MemberProgram)
AnnotationAssertion(schema:source schema:hasMemberProgram <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:hasMenu "Either the actual menu as a structured representation, as text, or a URL of the menu.")
AnnotationAssertion(rdfs:label schema:hasMenu "hasMenu")
AnnotationAssertion(schema:domainIncludes schema:hasMenu schema:FoodEstablishment)
AnnotationAssertion(schema:rangeIncludes schema:hasMenu schema:Menu)
AnnotationAssertion(schema:rangeIncludes schema:hasMenu schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:hasMenu schema:URL)
AnnotationAssertion(rdfs:comment schema:hasMenuItem "A food or drink item contained in a menu or menu section.")
AnnotationAssertion(rdfs:label schema:hasMenuItem "hasMenuItem")
AnnotationAssertion(schema:domainIncludes schema:hasMenuItem schema:Menu)
AnnotationAssertion(schema:domainIncludes schema:hasMenuItem schema:MenuSection)
AnnotationAssertion(schema:rangeIncludes schema:hasMenuItem schema:MenuItem)
AnnotationAssertion(rdfs:comment schema:hasMenuSection "A subgrouping of the menu (by dishes, course, serving time period, etc.).")
AnnotationAssertion(rdfs:label schema:hasMenuSection "hasMenuSection")
AnnotationAssertion(schema:domainIncludes schema:hasMenuSection schema:Menu)
AnnotationAssertion(schema:domainIncludes schema:hasMenuSection schema:MenuSection)
AnnotationAssertion(schema:rangeIncludes schema:hasMenuSection schema:MenuSection)
AnnotationAssertion(rdfs:comment schema:hasMerchantReturnPolicy "Specifies a MerchantReturnPolicy that may be applicable.")
AnnotationAssertion(rdfs:label schema:hasMerchantReturnPolicy "hasMerchantReturnPolicy")
AnnotationAssertion(schema:domainIncludes schema:hasMerchantReturnPolicy schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:hasMerchantReturnPolicy schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasMerchantReturnPolicy schema:Product)
AnnotationAssertion(schema:isPartOf schema:hasMerchantReturnPolicy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasMerchantReturnPolicy schema:MerchantReturnPolicy)
AnnotationAssertion(schema:source schema:hasMerchantReturnPolicy <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:hasMolecularFunction "Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.")
AnnotationAssertion(rdfs:label schema:hasMolecularFunction "hasMolecularFunction")
AnnotationAssertion(schema:domainIncludes schema:hasMolecularFunction schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:hasMolecularFunction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasMolecularFunction schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:hasMolecularFunction schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:hasMolecularFunction schema:URL)
AnnotationAssertion(schema:source schema:hasMolecularFunction <http://www.bioschemas.org/BioChemEntity>)
AnnotationAssertion(rdfs:comment schema:hasOccupation "The Person's occupation. For past professions, use Role for expressing dates.")
AnnotationAssertion(rdfs:label schema:hasOccupation "hasOccupation")
AnnotationAssertion(schema:domainIncludes schema:hasOccupation schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:hasOccupation schema:Occupation)
AnnotationAssertion(schema:source schema:hasOccupation <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:hasOfferCatalog "Indicates an OfferCatalog listing for this Organization, Person, or Service.")
AnnotationAssertion(rdfs:label schema:hasOfferCatalog "hasOfferCatalog")
AnnotationAssertion(schema:domainIncludes schema:hasOfferCatalog schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasOfferCatalog schema:Person)
AnnotationAssertion(schema:domainIncludes schema:hasOfferCatalog schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:hasOfferCatalog schema:OfferCatalog)
AnnotationAssertion(rdfs:comment schema:hasPOS "Points-of-Sales operated by the organization or person.")
AnnotationAssertion(rdfs:label schema:hasPOS "hasPOS")
AnnotationAssertion(schema:contributor schema:hasPOS <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:hasPOS schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:hasPOS schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:hasPOS schema:Place)
AnnotationAssertion(rdfs:comment schema:hasTierBenefit "A member benefit for a particular tier of a loyalty program.")
AnnotationAssertion(rdfs:label schema:hasTierBenefit "hasTierBenefit")
AnnotationAssertion(schema:domainIncludes schema:hasTierBenefit schema:MemberProgramTier)
AnnotationAssertion(schema:rangeIncludes schema:hasTierBenefit schema:TierBenefitEnumeration)
AnnotationAssertion(schema:source schema:hasTierBenefit <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:hasTierRequirement "A requirement for a user to join a membership tier, for example: a CreditCard if the tier requires sign up for a credit card, A UnitPriceSpecification if the user is required to pay a (periodic) fee, or a MonetaryAmount if the user needs to spend a minimum amount to join the tier. If a tier is free to join then this property does not need to be specified.")
AnnotationAssertion(rdfs:label schema:hasTierRequirement "hasTierRequirement")
AnnotationAssertion(schema:domainIncludes schema:hasTierRequirement schema:MemberProgramTier)
AnnotationAssertion(schema:rangeIncludes schema:hasTierRequirement schema:CreditCard)
AnnotationAssertion(schema:rangeIncludes schema:hasTierRequirement schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:hasTierRequirement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:hasTierRequirement schema:UnitPriceSpecification)
AnnotationAssertion(schema:source schema:hasTierRequirement <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:hasTiers "The tiers of a member program.")
AnnotationAssertion(rdfs:label schema:hasTiers "hasTiers")
AnnotationAssertion(schema:domainIncludes schema:hasTiers schema:MemberProgram)
AnnotationAssertion(schema:inverseOf schema:hasTiers schema:isTierOf)
AnnotationAssertion(schema:rangeIncludes schema:hasTiers schema:MemberProgramTier)
AnnotationAssertion(schema:source schema:hasTiers <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:hasVariant "Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).")
AnnotationAssertion(rdfs:label schema:hasVariant "hasVariant")
AnnotationAssertion(schema:domainIncludes schema:hasVariant schema:ProductGroup)
AnnotationAssertion(schema:inverseOf schema:hasVariant schema:isVariantOf)
AnnotationAssertion(schema:isPartOf schema:hasVariant <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hasVariant schema:Product)
AnnotationAssertion(schema:source schema:hasVariant <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:headline "Headline of the article.")
AnnotationAssertion(rdfs:label schema:headline "headline")
AnnotationAssertion(schema:domainIncludes schema:headline schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:headline schema:Text)
AnnotationAssertion(rdfs:comment schema:healthCondition "Specifying the health condition(s) of a patient, medical study, or other target audience.")
AnnotationAssertion(rdfs:label schema:healthCondition "healthCondition")
AnnotationAssertion(schema:domainIncludes schema:healthCondition schema:MedicalStudy)
AnnotationAssertion(schema:domainIncludes schema:healthCondition schema:Patient)
AnnotationAssertion(schema:domainIncludes schema:healthCondition schema:PeopleAudience)
AnnotationAssertion(schema:isPartOf schema:healthCondition <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthCondition schema:MedicalCondition)
AnnotationAssertion(rdfs:comment schema:healthPlanCoinsuranceOption "Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?")
AnnotationAssertion(rdfs:label schema:healthPlanCoinsuranceOption "healthPlanCoinsuranceOption")
AnnotationAssertion(schema:domainIncludes schema:healthPlanCoinsuranceOption schema:HealthPlanCostSharingSpecification)
AnnotationAssertion(schema:isPartOf schema:healthPlanCoinsuranceOption <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanCoinsuranceOption schema:Text)
AnnotationAssertion(schema:source schema:healthPlanCoinsuranceOption <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanCoinsuranceRate "The rate of coinsurance expressed as a number between 0.0 and 1.0.")
AnnotationAssertion(rdfs:label schema:healthPlanCoinsuranceRate "healthPlanCoinsuranceRate")
AnnotationAssertion(schema:domainIncludes schema:healthPlanCoinsuranceRate schema:HealthPlanCostSharingSpecification)
AnnotationAssertion(schema:isPartOf schema:healthPlanCoinsuranceRate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanCoinsuranceRate schema:Number)
AnnotationAssertion(schema:source schema:healthPlanCoinsuranceRate <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanCopay "The copay amount.")
AnnotationAssertion(rdfs:label schema:healthPlanCopay "healthPlanCopay")
AnnotationAssertion(schema:domainIncludes schema:healthPlanCopay schema:HealthPlanCostSharingSpecification)
AnnotationAssertion(schema:isPartOf schema:healthPlanCopay <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanCopay schema:PriceSpecification)
AnnotationAssertion(schema:source schema:healthPlanCopay <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanCopayOption "Whether the copay is before or after deductible, etc. TODO: Is this a closed set?")
AnnotationAssertion(rdfs:label schema:healthPlanCopayOption "healthPlanCopayOption")
AnnotationAssertion(schema:domainIncludes schema:healthPlanCopayOption schema:HealthPlanCostSharingSpecification)
AnnotationAssertion(schema:isPartOf schema:healthPlanCopayOption <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanCopayOption schema:Text)
AnnotationAssertion(schema:source schema:healthPlanCopayOption <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanCostSharing "The costs to the patient for services under this network or formulary.")
AnnotationAssertion(rdfs:label schema:healthPlanCostSharing "healthPlanCostSharing")
AnnotationAssertion(schema:domainIncludes schema:healthPlanCostSharing schema:HealthPlanFormulary)
AnnotationAssertion(schema:domainIncludes schema:healthPlanCostSharing schema:HealthPlanNetwork)
AnnotationAssertion(schema:isPartOf schema:healthPlanCostSharing <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanCostSharing schema:Boolean)
AnnotationAssertion(schema:source schema:healthPlanCostSharing <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanDrugOption "TODO.")
AnnotationAssertion(rdfs:label schema:healthPlanDrugOption "healthPlanDrugOption")
AnnotationAssertion(schema:domainIncludes schema:healthPlanDrugOption schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:healthPlanDrugOption <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanDrugOption schema:Text)
AnnotationAssertion(schema:source schema:healthPlanDrugOption <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanDrugTier "The tier(s) of drugs offered by this formulary or insurance plan.")
AnnotationAssertion(rdfs:label schema:healthPlanDrugTier "healthPlanDrugTier")
AnnotationAssertion(schema:domainIncludes schema:healthPlanDrugTier schema:HealthInsurancePlan)
AnnotationAssertion(schema:domainIncludes schema:healthPlanDrugTier schema:HealthPlanFormulary)
AnnotationAssertion(schema:isPartOf schema:healthPlanDrugTier <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanDrugTier schema:Text)
AnnotationAssertion(schema:source schema:healthPlanDrugTier <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanId "The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)")
AnnotationAssertion(rdfs:label schema:healthPlanId "healthPlanId")
AnnotationAssertion(schema:domainIncludes schema:healthPlanId schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:healthPlanId <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanId schema:Text)
AnnotationAssertion(schema:source schema:healthPlanId <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanMarketingUrl "The URL that goes directly to the plan brochure for the specific standard plan or plan variation.")
AnnotationAssertion(rdfs:label schema:healthPlanMarketingUrl "healthPlanMarketingUrl")
AnnotationAssertion(schema:domainIncludes schema:healthPlanMarketingUrl schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:healthPlanMarketingUrl <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanMarketingUrl schema:URL)
AnnotationAssertion(schema:source schema:healthPlanMarketingUrl <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanNetworkId "Name or unique ID of network. (Networks are often reused across different insurance plans.)")
AnnotationAssertion(rdfs:label schema:healthPlanNetworkId "healthPlanNetworkId")
AnnotationAssertion(schema:domainIncludes schema:healthPlanNetworkId schema:HealthPlanNetwork)
AnnotationAssertion(schema:domainIncludes schema:healthPlanNetworkId schema:MedicalOrganization)
AnnotationAssertion(schema:isPartOf schema:healthPlanNetworkId <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanNetworkId schema:Text)
AnnotationAssertion(schema:source schema:healthPlanNetworkId <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanNetworkTier "The tier(s) for this network.")
AnnotationAssertion(rdfs:label schema:healthPlanNetworkTier "healthPlanNetworkTier")
AnnotationAssertion(schema:domainIncludes schema:healthPlanNetworkTier schema:HealthPlanNetwork)
AnnotationAssertion(schema:isPartOf schema:healthPlanNetworkTier <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanNetworkTier schema:Text)
AnnotationAssertion(schema:source schema:healthPlanNetworkTier <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthPlanPharmacyCategory "The category or type of pharmacy associated with this cost sharing.")
AnnotationAssertion(rdfs:label schema:healthPlanPharmacyCategory "healthPlanPharmacyCategory")
AnnotationAssertion(schema:domainIncludes schema:healthPlanPharmacyCategory schema:HealthPlanCostSharingSpecification)
AnnotationAssertion(schema:isPartOf schema:healthPlanPharmacyCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthPlanPharmacyCategory schema:Text)
AnnotationAssertion(schema:source schema:healthPlanPharmacyCategory <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:healthcareReportingData "Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some kind of [[Dataset]].")
AnnotationAssertion(rdfs:label schema:healthcareReportingData "healthcareReportingData")
AnnotationAssertion(schema:domainIncludes schema:healthcareReportingData schema:Hospital)
AnnotationAssertion(schema:isPartOf schema:healthcareReportingData <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:healthcareReportingData schema:CDCPMDRecord)
AnnotationAssertion(schema:rangeIncludes schema:healthcareReportingData schema:Dataset)
AnnotationAssertion(schema:source schema:healthcareReportingData <https://github.com/schemaorg/schemaorg/issues/2521>)
AnnotationAssertion(rdfs:comment schema:height "The height of the item.")
AnnotationAssertion(rdfs:label schema:height "height")
AnnotationAssertion(schema:domainIncludes schema:height schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:height schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:height schema:Person)
AnnotationAssertion(schema:domainIncludes schema:height schema:Product)
AnnotationAssertion(schema:domainIncludes schema:height schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:height schema:Distance)
AnnotationAssertion(schema:rangeIncludes schema:height schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:highPrice "The highest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:highPrice "highPrice")
AnnotationAssertion(schema:domainIncludes schema:highPrice schema:AggregateOffer)
AnnotationAssertion(schema:rangeIncludes schema:highPrice schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:highPrice schema:Text)
AnnotationAssertion(rdfs:comment schema:hiringOrganization "Organization or Person offering the job position.")
AnnotationAssertion(rdfs:label schema:hiringOrganization "hiringOrganization")
AnnotationAssertion(schema:domainIncludes schema:hiringOrganization schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:hiringOrganization schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:hiringOrganization schema:Person)
AnnotationAssertion(rdfs:comment schema:holdingArchive "[[ArchiveOrganization]] that holds, keeps or maintains the [[ArchiveComponent]]."@en)
AnnotationAssertion(rdfs:label schema:holdingArchive "holdingArchive"@en)
AnnotationAssertion(schema:domainIncludes schema:holdingArchive schema:ArchiveComponent)
AnnotationAssertion(schema:inverseOf schema:holdingArchive schema:archiveHeld)
AnnotationAssertion(schema:isPartOf schema:holdingArchive <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:holdingArchive schema:ArchiveOrganization)
AnnotationAssertion(schema:source schema:holdingArchive <https://github.com/schemaorg/schemaorg/issues/1758>)
AnnotationAssertion(rdfs:comment schema:honorificPrefix "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.")
AnnotationAssertion(rdfs:label schema:honorificPrefix "honorificPrefix")
AnnotationAssertion(schema:domainIncludes schema:honorificPrefix schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:honorificPrefix schema:Text)
AnnotationAssertion(rdfs:comment schema:honorificSuffix "An honorific suffix following a Person's name such as M.D./PhD/MSCSW.")
AnnotationAssertion(rdfs:label schema:honorificSuffix "honorificSuffix")
AnnotationAssertion(schema:domainIncludes schema:honorificSuffix schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:honorificSuffix schema:Text)
AnnotationAssertion(rdfs:comment schema:hospitalAffiliation "A hospital with which the physician or office is affiliated.")
AnnotationAssertion(rdfs:label schema:hospitalAffiliation "hospitalAffiliation")
AnnotationAssertion(schema:domainIncludes schema:hospitalAffiliation schema:Physician)
AnnotationAssertion(schema:isPartOf schema:hospitalAffiliation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:hospitalAffiliation schema:Hospital)
AnnotationAssertion(rdfs:comment schema:hostingOrganization "The Organization (airline, travelers' club, retailer, etc.) the membership is made with or which offers the  MemberProgram.")
AnnotationAssertion(rdfs:label schema:hostingOrganization "hostingOrganization")
AnnotationAssertion(schema:domainIncludes schema:hostingOrganization schema:MemberProgram)
AnnotationAssertion(schema:domainIncludes schema:hostingOrganization schema:ProgramMembership)
AnnotationAssertion(schema:rangeIncludes schema:hostingOrganization schema:Organization)
AnnotationAssertion(rdfs:comment schema:hoursAvailable "The hours during which this service or contact is available.")
AnnotationAssertion(rdfs:label schema:hoursAvailable "hoursAvailable")
AnnotationAssertion(schema:domainIncludes schema:hoursAvailable schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:hoursAvailable schema:LocationFeatureSpecification)
AnnotationAssertion(schema:domainIncludes schema:hoursAvailable schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:hoursAvailable schema:OpeningHoursSpecification)
AnnotationAssertion(rdfs:comment schema:howPerformed "How the procedure is performed.")
AnnotationAssertion(rdfs:label schema:howPerformed "howPerformed")
AnnotationAssertion(schema:domainIncludes schema:howPerformed schema:MedicalProcedure)
AnnotationAssertion(schema:isPartOf schema:howPerformed <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:howPerformed schema:Text)
AnnotationAssertion(rdfs:comment schema:httpMethod "An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.")
AnnotationAssertion(rdfs:label schema:httpMethod "httpMethod")
AnnotationAssertion(schema:domainIncludes schema:httpMethod schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:httpMethod schema:Text)
AnnotationAssertion(rdfs:comment schema:iataCode "IATA identifier for an airline or airport.")
AnnotationAssertion(rdfs:label schema:iataCode "iataCode")
AnnotationAssertion(schema:domainIncludes schema:iataCode schema:Airline)
AnnotationAssertion(schema:domainIncludes schema:iataCode schema:Airport)
AnnotationAssertion(schema:rangeIncludes schema:iataCode schema:Text)
AnnotationAssertion(rdfs:comment schema:icaoCode "ICAO identifier for an airport.")
AnnotationAssertion(rdfs:label schema:icaoCode "icaoCode")
AnnotationAssertion(schema:domainIncludes schema:icaoCode schema:Airport)
AnnotationAssertion(schema:rangeIncludes schema:icaoCode schema:Text)
AnnotationAssertion(rdfs:comment schema:identifyingExam "A physical examination that can identify this sign.")
AnnotationAssertion(rdfs:label schema:identifyingExam "identifyingExam")
AnnotationAssertion(schema:domainIncludes schema:identifyingExam schema:MedicalSign)
AnnotationAssertion(schema:isPartOf schema:identifyingExam <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:identifyingExam schema:PhysicalExam)
AnnotationAssertion(rdfs:comment schema:identifyingTest "A diagnostic test that can identify this sign.")
AnnotationAssertion(rdfs:label schema:identifyingTest "identifyingTest")
AnnotationAssertion(schema:domainIncludes schema:identifyingTest schema:MedicalSign)
AnnotationAssertion(schema:isPartOf schema:identifyingTest <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:identifyingTest schema:MedicalTest)
AnnotationAssertion(rdfs:comment schema:illustrator "The illustrator of the book.")
AnnotationAssertion(rdfs:label schema:illustrator "illustrator")
AnnotationAssertion(schema:domainIncludes schema:illustrator schema:Book)
AnnotationAssertion(schema:rangeIncludes schema:illustrator schema:Person)
AnnotationAssertion(rdfs:comment schema:imagingTechnique "Imaging technique used.")
AnnotationAssertion(rdfs:label schema:imagingTechnique "imagingTechnique")
AnnotationAssertion(schema:domainIncludes schema:imagingTechnique schema:ImagingTest)
AnnotationAssertion(schema:isPartOf schema:imagingTechnique <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:imagingTechnique schema:MedicalImagingTechnique)
AnnotationAssertion(rdfs:comment schema:inAlbum "The album to which this recording belongs.")
AnnotationAssertion(rdfs:label schema:inAlbum "inAlbum")
AnnotationAssertion(schema:domainIncludes schema:inAlbum schema:MusicRecording)
AnnotationAssertion(schema:rangeIncludes schema:inAlbum schema:MusicAlbum)
AnnotationAssertion(rdfs:comment schema:inBroadcastLineup "The CableOrSatelliteService offering the channel.")
AnnotationAssertion(rdfs:label schema:inBroadcastLineup "inBroadcastLineup")
AnnotationAssertion(schema:domainIncludes schema:inBroadcastLineup schema:BroadcastChannel)
AnnotationAssertion(schema:rangeIncludes schema:inBroadcastLineup schema:CableOrSatelliteService)
AnnotationAssertion(rdfs:comment schema:inLanguage "The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[availableLanguage]].")
AnnotationAssertion(rdfs:label schema:inLanguage "inLanguage")
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:BroadcastService)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:CommunicateAction)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:Event)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:LinkRole)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:PronounceableText)
AnnotationAssertion(schema:domainIncludes schema:inLanguage schema:WriteAction)
AnnotationAssertion(schema:rangeIncludes schema:inLanguage schema:Language)
AnnotationAssertion(schema:rangeIncludes schema:inLanguage schema:Text)
AnnotationAssertion(schema:source schema:inLanguage <https://github.com/schemaorg/schemaorg/issues/2382>)
AnnotationAssertion(rdfs:comment schema:inPlaylist "The playlist to which this recording belongs.")
AnnotationAssertion(rdfs:label schema:inPlaylist "inPlaylist")
AnnotationAssertion(schema:domainIncludes schema:inPlaylist schema:MusicRecording)
AnnotationAssertion(schema:rangeIncludes schema:inPlaylist schema:MusicPlaylist)
AnnotationAssertion(rdfs:comment schema:inProductGroupWithID "Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. ")
AnnotationAssertion(rdfs:label schema:inProductGroupWithID "inProductGroupWithID")
AnnotationAssertion(schema:domainIncludes schema:inProductGroupWithID schema:Product)
AnnotationAssertion(schema:isPartOf schema:inProductGroupWithID <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inProductGroupWithID schema:Text)
AnnotationAssertion(schema:source schema:inProductGroupWithID <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:inStoreReturnsOffered "Are in-store returns offered? (For more advanced return methods use the [[returnMethod]] property.)")
AnnotationAssertion(rdfs:label schema:inStoreReturnsOffered "inStoreReturnsOffered")
AnnotationAssertion(schema:domainIncludes schema:inStoreReturnsOffered schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:inStoreReturnsOffered <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inStoreReturnsOffered schema:Boolean)
AnnotationAssertion(schema:source schema:inStoreReturnsOffered <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:inSupportOf "Qualification, candidature, degree, application that Thesis supports.")
AnnotationAssertion(rdfs:label schema:inSupportOf "inSupportOf")
AnnotationAssertion(schema:domainIncludes schema:inSupportOf schema:Thesis)
AnnotationAssertion(schema:isPartOf schema:inSupportOf <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inSupportOf schema:Text)
AnnotationAssertion(rdfs:comment schema:incentiveCompensation "Description of bonus and commission compensation aspects of the job.")
AnnotationAssertion(rdfs:label schema:incentiveCompensation "incentiveCompensation")
AnnotationAssertion(schema:domainIncludes schema:incentiveCompensation schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:incentiveCompensation schema:Text)
AnnotationAssertion(rdfs:comment schema:incentives "Description of bonus and commission compensation aspects of the job.")
AnnotationAssertion(rdfs:label schema:incentives "incentives")
AnnotationAssertion(schema:domainIncludes schema:incentives schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:incentives schema:Text)
AnnotationAssertion(schema:supersededBy schema:incentives schema:incentiveCompensation)
AnnotationAssertion(rdfs:comment schema:includedComposition "Smaller compositions included in this work (e.g. a movement in a symphony).")
AnnotationAssertion(rdfs:label schema:includedComposition "includedComposition")
AnnotationAssertion(schema:contributor schema:includedComposition <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:includedComposition schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:includedComposition schema:MusicComposition)
AnnotationAssertion(rdfs:comment schema:includedDataCatalog "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').")
AnnotationAssertion(rdfs:label schema:includedDataCatalog "includedDataCatalog")
AnnotationAssertion(schema:domainIncludes schema:includedDataCatalog schema:Dataset)
AnnotationAssertion(schema:rangeIncludes schema:includedDataCatalog schema:DataCatalog)
AnnotationAssertion(schema:supersededBy schema:includedDataCatalog schema:includedInDataCatalog)
AnnotationAssertion(rdfs:comment schema:includedInDataCatalog "A data catalog which contains this dataset.")
AnnotationAssertion(rdfs:label schema:includedInDataCatalog "includedInDataCatalog")
AnnotationAssertion(schema:domainIncludes schema:includedInDataCatalog schema:Dataset)
AnnotationAssertion(schema:inverseOf schema:includedInDataCatalog schema:dataset)
AnnotationAssertion(schema:rangeIncludes schema:includedInDataCatalog schema:DataCatalog)
AnnotationAssertion(rdfs:comment schema:includedInHealthInsurancePlan "The insurance plans that cover this drug.")
AnnotationAssertion(rdfs:label schema:includedInHealthInsurancePlan "includedInHealthInsurancePlan")
AnnotationAssertion(schema:domainIncludes schema:includedInHealthInsurancePlan schema:Drug)
AnnotationAssertion(schema:isPartOf schema:includedInHealthInsurancePlan <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:includedInHealthInsurancePlan schema:HealthInsurancePlan)
AnnotationAssertion(schema:source schema:includedInHealthInsurancePlan <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:includedRiskFactor "A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.")
AnnotationAssertion(rdfs:label schema:includedRiskFactor "includedRiskFactor")
AnnotationAssertion(schema:domainIncludes schema:includedRiskFactor schema:MedicalRiskEstimator)
AnnotationAssertion(schema:isPartOf schema:includedRiskFactor <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:includedRiskFactor schema:MedicalRiskFactor)
AnnotationAssertion(rdfs:comment schema:includesAttraction "Attraction located at destination.")
AnnotationAssertion(rdfs:label schema:includesAttraction "includesAttraction")
AnnotationAssertion(schema:contributor schema:includesAttraction <https://schema.org/docs/collab/IIT-CNR.it>)
AnnotationAssertion(schema:contributor schema:includesAttraction <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:domainIncludes schema:includesAttraction schema:TouristDestination)
AnnotationAssertion(schema:isPartOf schema:includesAttraction <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:includesAttraction schema:TouristAttraction)
AnnotationAssertion(schema:source schema:includesAttraction <https://github.com/schemaorg/schemaorg/issues/1810>)
AnnotationAssertion(rdfs:comment schema:includesHealthPlanFormulary "Formularies covered by this plan.")
AnnotationAssertion(rdfs:label schema:includesHealthPlanFormulary "includesHealthPlanFormulary")
AnnotationAssertion(schema:domainIncludes schema:includesHealthPlanFormulary schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:includesHealthPlanFormulary <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:includesHealthPlanFormulary schema:HealthPlanFormulary)
AnnotationAssertion(schema:source schema:includesHealthPlanFormulary <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:includesHealthPlanNetwork "Networks covered by this plan.")
AnnotationAssertion(rdfs:label schema:includesHealthPlanNetwork "includesHealthPlanNetwork")
AnnotationAssertion(schema:domainIncludes schema:includesHealthPlanNetwork schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:includesHealthPlanNetwork <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:includesHealthPlanNetwork schema:HealthPlanNetwork)
AnnotationAssertion(schema:source schema:includesHealthPlanNetwork <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:includesObject "This links to a node or nodes indicating the exact quantity of the products included in  an [[Offer]] or [[ProductCollection]].")
AnnotationAssertion(rdfs:label schema:includesObject "includesObject")
AnnotationAssertion(schema:contributor schema:includesObject <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:includesObject schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:includesObject schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:includesObject schema:ProductCollection)
AnnotationAssertion(schema:rangeIncludes schema:includesObject schema:TypeAndQuantityNode)
AnnotationAssertion(rdfs:comment schema:increasesRiskOf "The condition, complication, etc. influenced by this factor.")
AnnotationAssertion(rdfs:label schema:increasesRiskOf "increasesRiskOf")
AnnotationAssertion(schema:domainIncludes schema:increasesRiskOf schema:MedicalRiskFactor)
AnnotationAssertion(schema:isPartOf schema:increasesRiskOf <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:increasesRiskOf schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:industry "The industry associated with the job position.")
AnnotationAssertion(rdfs:label schema:industry "industry")
AnnotationAssertion(schema:domainIncludes schema:industry schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:industry schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:industry schema:Text)
AnnotationAssertion(rdfs:comment schema:ineligibleRegion "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\\n\\nSee also [[eligibleRegion]].
      ")
AnnotationAssertion(rdfs:label schema:ineligibleRegion "ineligibleRegion")
AnnotationAssertion(schema:domainIncludes schema:ineligibleRegion schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:ineligibleRegion schema:DeliveryChargeSpecification)
AnnotationAssertion(schema:domainIncludes schema:ineligibleRegion schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:ineligibleRegion schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:ineligibleRegion schema:Offer)
AnnotationAssertion(schema:isPartOf schema:ineligibleRegion <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:ineligibleRegion schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:ineligibleRegion schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:ineligibleRegion schema:Text)
AnnotationAssertion(schema:source schema:ineligibleRegion <https://github.com/schemaorg/schemaorg/issues/2242>)
AnnotationAssertion(rdfs:comment schema:infectiousAgent "The actual infectious agent, such as a specific bacterium.")
AnnotationAssertion(rdfs:label schema:infectiousAgent "infectiousAgent")
AnnotationAssertion(schema:domainIncludes schema:infectiousAgent schema:InfectiousDisease)
AnnotationAssertion(schema:isPartOf schema:infectiousAgent <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:infectiousAgent schema:Text)
AnnotationAssertion(rdfs:comment schema:infectiousAgentClass "The class of infectious agent (bacteria, prion, etc.) that causes the disease.")
AnnotationAssertion(rdfs:label schema:infectiousAgentClass "infectiousAgentClass")
AnnotationAssertion(schema:domainIncludes schema:infectiousAgentClass schema:InfectiousDisease)
AnnotationAssertion(schema:isPartOf schema:infectiousAgentClass <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:infectiousAgentClass schema:InfectiousAgentClass)
AnnotationAssertion(rdfs:comment schema:inker "The individual who traces over the pencil drawings in ink after pencils are complete.")
AnnotationAssertion(rdfs:label schema:inker "inker")
AnnotationAssertion(schema:domainIncludes schema:inker schema:ComicIssue)
AnnotationAssertion(schema:domainIncludes schema:inker schema:ComicStory)
AnnotationAssertion(schema:domainIncludes schema:inker schema:VisualArtwork)
AnnotationAssertion(schema:isPartOf schema:inker <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:inker schema:Person)
AnnotationAssertion(rdfs:comment schema:insertion "The place of attachment of a muscle, or what the muscle moves.")
AnnotationAssertion(rdfs:label schema:insertion "insertion")
AnnotationAssertion(schema:domainIncludes schema:insertion schema:Muscle)
AnnotationAssertion(schema:isPartOf schema:insertion <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:insertion schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:installUrl "URL at which the app may be installed, if different from the URL of the item.")
AnnotationAssertion(rdfs:label schema:installUrl "installUrl")
AnnotationAssertion(schema:domainIncludes schema:installUrl schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:installUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:instructor "A person assigned to instruct or provide instructional assistance for the [[CourseInstance]].")
AnnotationAssertion(rdfs:label schema:instructor "instructor")
AnnotationAssertion(schema:domainIncludes schema:instructor schema:CourseInstance)
AnnotationAssertion(schema:rangeIncludes schema:instructor schema:Person)
AnnotationAssertion(rdfs:comment schema:intensity "Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.")
AnnotationAssertion(rdfs:label schema:intensity "intensity")
AnnotationAssertion(schema:domainIncludes schema:intensity schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:intensity <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:intensity schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:intensity schema:Text)
AnnotationAssertion(rdfs:comment schema:interactingDrug "Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.")
AnnotationAssertion(rdfs:label schema:interactingDrug "interactingDrug")
AnnotationAssertion(schema:domainIncludes schema:interactingDrug schema:Drug)
AnnotationAssertion(schema:isPartOf schema:interactingDrug <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:interactingDrug schema:Drug)
AnnotationAssertion(rdfs:comment schema:interactionCount "This property is deprecated, alongside the UserInteraction types on which it depended.")
AnnotationAssertion(rdfs:label schema:interactionCount "interactionCount")
AnnotationAssertion(schema:supersededBy schema:interactionCount schema:interactionStatistic)
AnnotationAssertion(rdfs:comment schema:interactionService "The WebSite or SoftwareApplication where the interactions took place.")
AnnotationAssertion(rdfs:label schema:interactionService "interactionService")
AnnotationAssertion(schema:domainIncludes schema:interactionService schema:InteractionCounter)
AnnotationAssertion(schema:rangeIncludes schema:interactionService schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:interactionService schema:WebSite)
AnnotationAssertion(rdfs:comment schema:interactionStatistic "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.")
AnnotationAssertion(rdfs:label schema:interactionStatistic "interactionStatistic")
AnnotationAssertion(schema:domainIncludes schema:interactionStatistic schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:interactionStatistic schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:interactionStatistic schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:interactionStatistic schema:InteractionCounter)
AnnotationAssertion(schema:source schema:interactionStatistic <https://github.com/schemaorg/schemaorg/issues/2421>)
AnnotationAssertion(rdfs:comment schema:interactionType "The Action representing the type of interaction. For up votes, +1s, etc. use [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most specific Action.")
AnnotationAssertion(rdfs:label schema:interactionType "interactionType")
AnnotationAssertion(schema:domainIncludes schema:interactionType schema:InteractionCounter)
AnnotationAssertion(schema:rangeIncludes schema:interactionType schema:Action)
AnnotationAssertion(rdfs:comment schema:interactivityType "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.")
AnnotationAssertion(rdfs:label schema:interactivityType "interactivityType")
AnnotationAssertion(schema:domainIncludes schema:interactivityType schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:interactivityType schema:Text)
AnnotationAssertion(rdfs:comment schema:interestRate "The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.")
AnnotationAssertion(rdfs:label schema:interestRate "interestRate")
AnnotationAssertion(schema:contributor schema:interestRate <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:interestRate schema:FinancialProduct)
AnnotationAssertion(schema:rangeIncludes schema:interestRate schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:interestRate schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:inventoryLevel "The current approximate inventory level for the item or items.")
AnnotationAssertion(rdfs:label schema:inventoryLevel "inventoryLevel")
AnnotationAssertion(schema:contributor schema:inventoryLevel <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:inventoryLevel schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:inventoryLevel schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:inventoryLevel schema:SomeProducts)
AnnotationAssertion(schema:rangeIncludes schema:inventoryLevel schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:isAcceptingNewPatients "Whether the provider is accepting new patients.")
AnnotationAssertion(rdfs:label schema:isAcceptingNewPatients "isAcceptingNewPatients")
AnnotationAssertion(schema:domainIncludes schema:isAcceptingNewPatients schema:MedicalOrganization)
AnnotationAssertion(schema:isPartOf schema:isAcceptingNewPatients <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isAcceptingNewPatients schema:Boolean)
AnnotationAssertion(schema:source schema:isAcceptingNewPatients <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:isAccessibleForFree "A flag to signal that the item, event, or place is accessible for free.")
AnnotationAssertion(rdfs:label schema:isAccessibleForFree "isAccessibleForFree")
AnnotationAssertion(schema:domainIncludes schema:isAccessibleForFree schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:isAccessibleForFree schema:Event)
AnnotationAssertion(schema:domainIncludes schema:isAccessibleForFree schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:isAccessibleForFree schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isAccessoryOrSparePartFor "A pointer to another product (or multiple products) for which this product is an accessory or spare part.")
AnnotationAssertion(rdfs:label schema:isAccessoryOrSparePartFor "isAccessoryOrSparePartFor")
AnnotationAssertion(schema:contributor schema:isAccessoryOrSparePartFor <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isAccessoryOrSparePartFor schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isAccessoryOrSparePartFor schema:Product)
AnnotationAssertion(rdfs:comment schema:isAvailableGenerically "True if the drug is available in a generic form (regardless of name).")
AnnotationAssertion(rdfs:label schema:isAvailableGenerically "isAvailableGenerically")
AnnotationAssertion(schema:domainIncludes schema:isAvailableGenerically schema:Drug)
AnnotationAssertion(schema:isPartOf schema:isAvailableGenerically <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isAvailableGenerically schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isBasedOn "A resource from which this work is derived or from which it is a modification or adaptation.")
AnnotationAssertion(rdfs:label schema:isBasedOn "isBasedOn")
AnnotationAssertion(schema:domainIncludes schema:isBasedOn schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOn schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOn schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOn schema:URL)
AnnotationAssertion(rdfs:comment schema:isBasedOnUrl "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.")
AnnotationAssertion(rdfs:label schema:isBasedOnUrl "isBasedOnUrl")
AnnotationAssertion(schema:domainIncludes schema:isBasedOnUrl schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOnUrl schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOnUrl schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isBasedOnUrl schema:URL)
AnnotationAssertion(schema:supersededBy schema:isBasedOnUrl schema:isBasedOn)
AnnotationAssertion(rdfs:comment schema:isConsumableFor "A pointer to another product (or multiple products) for which this product is a consumable.")
AnnotationAssertion(rdfs:label schema:isConsumableFor "isConsumableFor")
AnnotationAssertion(schema:contributor schema:isConsumableFor <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isConsumableFor schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isConsumableFor schema:Product)
AnnotationAssertion(rdfs:comment schema:isEncodedByBioChemEntity "Another BioChemEntity encoding by this one.")
AnnotationAssertion(rdfs:label schema:isEncodedByBioChemEntity "isEncodedByBioChemEntity")
AnnotationAssertion(schema:domainIncludes schema:isEncodedByBioChemEntity schema:BioChemEntity)
AnnotationAssertion(schema:inverseOf schema:isEncodedByBioChemEntity schema:encodesBioChemEntity)
AnnotationAssertion(schema:isPartOf schema:isEncodedByBioChemEntity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isEncodedByBioChemEntity schema:Gene)
AnnotationAssertion(schema:source schema:isEncodedByBioChemEntity <http://www.bioschemas.org/Gene>)
AnnotationAssertion(rdfs:comment schema:isFamilyFriendly "Indicates whether this content is family friendly.")
AnnotationAssertion(rdfs:label schema:isFamilyFriendly "isFamilyFriendly")
AnnotationAssertion(schema:domainIncludes schema:isFamilyFriendly schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:isFamilyFriendly schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:isFamilyFriendly schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isFamilyFriendly schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isGift "Indicates whether the offer was accepted as a gift for someone other than the buyer.")
AnnotationAssertion(rdfs:label schema:isGift "isGift")
AnnotationAssertion(schema:domainIncludes schema:isGift schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:isGift schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isInvolvedInBiologicalProcess "Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.")
AnnotationAssertion(rdfs:label schema:isInvolvedInBiologicalProcess "isInvolvedInBiologicalProcess")
AnnotationAssertion(schema:domainIncludes schema:isInvolvedInBiologicalProcess schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:isInvolvedInBiologicalProcess <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isInvolvedInBiologicalProcess schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:isInvolvedInBiologicalProcess schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:isInvolvedInBiologicalProcess schema:URL)
AnnotationAssertion(schema:source schema:isInvolvedInBiologicalProcess <http://www.bioschemas.org/BioChemEntity>)
AnnotationAssertion(rdfs:comment schema:isLiveBroadcast "True if the broadcast is of a live event.")
AnnotationAssertion(rdfs:label schema:isLiveBroadcast "isLiveBroadcast")
AnnotationAssertion(schema:domainIncludes schema:isLiveBroadcast schema:BroadcastEvent)
AnnotationAssertion(schema:rangeIncludes schema:isLiveBroadcast schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isLocatedInSubcellularLocation "Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.")
AnnotationAssertion(rdfs:label schema:isLocatedInSubcellularLocation "isLocatedInSubcellularLocation")
AnnotationAssertion(schema:domainIncludes schema:isLocatedInSubcellularLocation schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:isLocatedInSubcellularLocation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isLocatedInSubcellularLocation schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:isLocatedInSubcellularLocation schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:isLocatedInSubcellularLocation schema:URL)
AnnotationAssertion(schema:source schema:isLocatedInSubcellularLocation <http://www.bioschemas.org/BioChemEntity>)
AnnotationAssertion(rdfs:comment schema:isPartOfBioChemEntity "Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. ")
AnnotationAssertion(rdfs:label schema:isPartOfBioChemEntity "isPartOfBioChemEntity")
AnnotationAssertion(schema:domainIncludes schema:isPartOfBioChemEntity schema:BioChemEntity)
AnnotationAssertion(schema:inverseOf schema:isPartOfBioChemEntity schema:hasBioChemEntityPart)
AnnotationAssertion(schema:isPartOf schema:isPartOfBioChemEntity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isPartOfBioChemEntity schema:BioChemEntity)
AnnotationAssertion(schema:source schema:isPartOfBioChemEntity <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:isPlanForApartment "Indicates some accommodation that this floor plan describes.")
AnnotationAssertion(rdfs:label schema:isPlanForApartment "isPlanForApartment")
AnnotationAssertion(schema:domainIncludes schema:isPlanForApartment schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:isPlanForApartment <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isPlanForApartment schema:Accommodation)
AnnotationAssertion(schema:source schema:isPlanForApartment <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:isProprietary "True if this item's name is a proprietary/brand name (vs. generic name).")
AnnotationAssertion(rdfs:label schema:isProprietary "isProprietary")
AnnotationAssertion(schema:domainIncludes schema:isProprietary schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:isProprietary schema:Drug)
AnnotationAssertion(schema:isPartOf schema:isProprietary <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isProprietary schema:Boolean)
AnnotationAssertion(rdfs:comment schema:isRelatedTo "A pointer to another, somehow related product (or multiple products).")
AnnotationAssertion(rdfs:label schema:isRelatedTo "isRelatedTo")
AnnotationAssertion(schema:contributor schema:isRelatedTo <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isRelatedTo schema:Product)
AnnotationAssertion(schema:domainIncludes schema:isRelatedTo schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:isRelatedTo schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isRelatedTo schema:Service)
AnnotationAssertion(rdfs:comment schema:isResizable "Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.")
AnnotationAssertion(rdfs:label schema:isResizable "isResizable")
AnnotationAssertion(schema:domainIncludes schema:isResizable <https://schema.org/3DModel>)
AnnotationAssertion(schema:isPartOf schema:isResizable <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:isResizable schema:Boolean)
AnnotationAssertion(schema:source schema:isResizable <https://github.com/schemaorg/schemaorg/issues/2394>)
AnnotationAssertion(rdfs:comment schema:isSimilarTo "A pointer to another, functionally similar product (or multiple products).")
AnnotationAssertion(rdfs:label schema:isSimilarTo "isSimilarTo")
AnnotationAssertion(schema:contributor schema:isSimilarTo <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isSimilarTo schema:Product)
AnnotationAssertion(schema:domainIncludes schema:isSimilarTo schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:isSimilarTo schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:isSimilarTo schema:Service)
AnnotationAssertion(rdfs:comment schema:isTierOf "The member program this tier is a part of.")
AnnotationAssertion(rdfs:label schema:isTierOf "isTierOf")
AnnotationAssertion(schema:domainIncludes schema:isTierOf schema:MemberProgramTier)
AnnotationAssertion(schema:inverseOf schema:isTierOf schema:hasTiers)
AnnotationAssertion(schema:rangeIncludes schema:isTierOf schema:MemberProgram)
AnnotationAssertion(schema:source schema:isTierOf <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:isUnlabelledFallback "This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] published by the same merchant, when referenced by a [[shippingSettingsLink]] in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel (for [[ShippingRateSettings]]), since this property is for use with unlabelled settings.")
AnnotationAssertion(rdfs:label schema:isUnlabelledFallback "isUnlabelledFallback")
AnnotationAssertion(schema:domainIncludes schema:isUnlabelledFallback schema:DeliveryTimeSettings)
AnnotationAssertion(schema:domainIncludes schema:isUnlabelledFallback schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:isUnlabelledFallback schema:Boolean)
AnnotationAssertion(schema:source schema:isUnlabelledFallback <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:isVariantOf "Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.")
AnnotationAssertion(rdfs:label schema:isVariantOf "isVariantOf")
AnnotationAssertion(schema:contributor schema:isVariantOf <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isVariantOf schema:Product)
AnnotationAssertion(schema:domainIncludes schema:isVariantOf schema:ProductModel)
AnnotationAssertion(schema:inverseOf schema:isVariantOf schema:hasVariant)
AnnotationAssertion(schema:rangeIncludes schema:isVariantOf schema:ProductGroup)
AnnotationAssertion(schema:rangeIncludes schema:isVariantOf schema:ProductModel)
AnnotationAssertion(rdfs:comment schema:isicV4 "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.")
AnnotationAssertion(rdfs:label schema:isicV4 "isicV4")
AnnotationAssertion(schema:contributor schema:isicV4 <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:isicV4 schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:isicV4 schema:Person)
AnnotationAssertion(schema:domainIncludes schema:isicV4 schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:isicV4 schema:Text)
AnnotationAssertion(rdfs:comment schema:iso6523Code "An organization identifier as defined in [ISO 6523(-1)](https://en.wikipedia.org/wiki/ISO/IEC_6523). The identifier should be in the `XXXX:YYYYYY:ZZZ` or `XXXX:YYYYYY`format. Where `XXXX` is a 4 digit _ICD_ (International Code Designator), `YYYYYY` is an _OID_ (Organization Identifier) with all formatting characters (dots, dashes, spaces) removed with a maximal length of 35 characters, and `ZZZ` is an optional OPI (Organization Part Identifier) with a maximum length of 35 characters. The various components (ICD, OID, OPI) are joined with a colon character (ASCII `0x3a`). Note that many existing organization identifiers defined as attributes like [leiCode](https://schema.org/leiCode) (`0199`), [duns](https://schema.org/duns) (`0060`) or [GLN](https://schema.org/globalLocationNumber) (`0088`) can be expressed using ISO-6523. If possible, ISO-6523 codes should be preferred to populating [vatID](https://schema.org/vatID) or [taxID](https://schema.org/taxID), as ISO identifiers are less ambiguous.")
AnnotationAssertion(rdfs:label schema:iso6523Code "iso6523Code")
AnnotationAssertion(schema:domainIncludes schema:iso6523Code schema:Organization)
AnnotationAssertion(schema:isPartOf schema:iso6523Code <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:iso6523Code schema:Text)
AnnotationAssertion(schema:source schema:iso6523Code <https://github.com/schemaorg/schemaorg/issues/2915>)
AnnotationAssertion(rdfs:comment schema:isrcCode "The International Standard Recording Code for the recording.")
AnnotationAssertion(rdfs:label schema:isrcCode "isrcCode")
AnnotationAssertion(schema:contributor schema:isrcCode <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:isrcCode schema:MusicRecording)
AnnotationAssertion(schema:rangeIncludes schema:isrcCode schema:Text)
AnnotationAssertion(rdfs:comment schema:issuedBy "The organization issuing the item, for example a [[Permit]], [[Ticket]], or [[Certification]].")
AnnotationAssertion(rdfs:label schema:issuedBy "issuedBy")
AnnotationAssertion(schema:domainIncludes schema:issuedBy schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:issuedBy schema:Permit)
AnnotationAssertion(schema:domainIncludes schema:issuedBy schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:issuedBy schema:Organization)
AnnotationAssertion(rdfs:comment schema:issuedThrough "The service through which the permit was granted.")
AnnotationAssertion(rdfs:label schema:issuedThrough "issuedThrough")
AnnotationAssertion(schema:domainIncludes schema:issuedThrough schema:Permit)
AnnotationAssertion(schema:rangeIncludes schema:issuedThrough schema:Service)
AnnotationAssertion(rdfs:comment schema:iswcCode "The International Standard Musical Work Code for the composition.")
AnnotationAssertion(rdfs:label schema:iswcCode "iswcCode")
AnnotationAssertion(schema:contributor schema:iswcCode <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:iswcCode schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:iswcCode schema:Text)
AnnotationAssertion(rdfs:comment schema:item "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists').")
AnnotationAssertion(rdfs:label schema:item "item")
AnnotationAssertion(schema:domainIncludes schema:item schema:DataFeedItem)
AnnotationAssertion(schema:domainIncludes schema:item schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:item schema:Thing)
AnnotationAssertion(rdfs:comment schema:itemCondition "A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.")
AnnotationAssertion(rdfs:label schema:itemCondition "itemCondition")
AnnotationAssertion(schema:domainIncludes schema:itemCondition schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:itemCondition schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:itemCondition schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:itemCondition schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:itemCondition schema:OfferItemCondition)
AnnotationAssertion(rdfs:comment schema:itemDefectReturnFees "The type of return fees for returns of defect products.")
AnnotationAssertion(rdfs:label schema:itemDefectReturnFees "itemDefectReturnFees")
AnnotationAssertion(schema:domainIncludes schema:itemDefectReturnFees schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:itemDefectReturnFees <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:itemDefectReturnFees schema:ReturnFeesEnumeration)
AnnotationAssertion(schema:source schema:itemDefectReturnFees <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:itemDefectReturnLabelSource "The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.")
AnnotationAssertion(rdfs:label schema:itemDefectReturnLabelSource "itemDefectReturnLabelSource")
AnnotationAssertion(schema:domainIncludes schema:itemDefectReturnLabelSource schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:itemDefectReturnLabelSource <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:itemDefectReturnLabelSource schema:ReturnLabelSourceEnumeration)
AnnotationAssertion(schema:source schema:itemDefectReturnLabelSource <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:itemDefectReturnShippingFeesAmount "Amount of shipping costs for defect product returns. Applicable when property [[itemDefectReturnFees]] equals [[ReturnShippingFees]].")
AnnotationAssertion(rdfs:label schema:itemDefectReturnShippingFeesAmount "itemDefectReturnShippingFeesAmount")
AnnotationAssertion(schema:domainIncludes schema:itemDefectReturnShippingFeesAmount schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:itemDefectReturnShippingFeesAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:itemDefectReturnShippingFeesAmount schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:itemDefectReturnShippingFeesAmount <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:itemListElement "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.\\n\\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\\n\\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.")
AnnotationAssertion(rdfs:label schema:itemListElement "itemListElement")
AnnotationAssertion(schema:domainIncludes schema:itemListElement schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:itemListElement schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:itemListElement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:itemListElement schema:Thing)
AnnotationAssertion(rdfs:comment schema:itemListOrder "Type of ordering (e.g. Ascending, Descending, Unordered).")
AnnotationAssertion(rdfs:label schema:itemListOrder "itemListOrder")
AnnotationAssertion(schema:domainIncludes schema:itemListOrder schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:itemListOrder schema:ItemListOrderType)
AnnotationAssertion(schema:rangeIncludes schema:itemListOrder schema:Text)
AnnotationAssertion(rdfs:comment schema:itemOffered "An item being offered (or demanded). The transactional nature of the offer or demand is documented using [[businessFunction]], e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.")
AnnotationAssertion(rdfs:label schema:itemOffered "itemOffered")
AnnotationAssertion(schema:domainIncludes schema:itemOffered schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:itemOffered schema:Offer)
AnnotationAssertion(schema:inverseOf schema:itemOffered schema:offers)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:AggregateOffer)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:MenuItem)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:itemOffered schema:Trip)
AnnotationAssertion(rdfs:comment schema:itemReviewed "The item that is being reviewed/rated.")
AnnotationAssertion(rdfs:label schema:itemReviewed "itemReviewed")
AnnotationAssertion(schema:domainIncludes schema:itemReviewed schema:AggregateRating)
AnnotationAssertion(schema:domainIncludes schema:itemReviewed schema:Review)
AnnotationAssertion(schema:rangeIncludes schema:itemReviewed schema:Thing)
AnnotationAssertion(rdfs:comment schema:itemShipped "Item(s) being shipped.")
AnnotationAssertion(rdfs:label schema:itemShipped "itemShipped")
AnnotationAssertion(schema:domainIncludes schema:itemShipped schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:itemShipped schema:Product)
AnnotationAssertion(rdfs:comment schema:itinerary "Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination order is important use [[ItemList]] to specify that order (see examples).")
AnnotationAssertion(rdfs:label schema:itinerary "itinerary")
AnnotationAssertion(schema:contributor schema:itinerary <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:domainIncludes schema:itinerary schema:Trip)
AnnotationAssertion(schema:isPartOf schema:itinerary <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:itinerary schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:itinerary schema:Place)
AnnotationAssertion(schema:source schema:itinerary <https://github.com/schemaorg/schemaorg/issues/1810>)
AnnotationAssertion(rdfs:comment schema:iupacName "Systematic method of naming chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).")
AnnotationAssertion(rdfs:label schema:iupacName "iupacName")
AnnotationAssertion(schema:domainIncludes schema:iupacName schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:iupacName <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:iupacName schema:Text)
AnnotationAssertion(schema:source schema:iupacName <http://www.bioschemas.org/MolecularEntity>)
AnnotationAssertion(rdfs:comment schema:jobBenefits "Description of benefits associated with the job.")
AnnotationAssertion(rdfs:label schema:jobBenefits "jobBenefits")
AnnotationAssertion(schema:domainIncludes schema:jobBenefits schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:jobBenefits schema:Text)
AnnotationAssertion(rdfs:comment schema:jobImmediateStart "An indicator as to whether a position is available for an immediate start.")
AnnotationAssertion(rdfs:label schema:jobImmediateStart "jobImmediateStart")
AnnotationAssertion(schema:domainIncludes schema:jobImmediateStart schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:jobImmediateStart <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:jobImmediateStart schema:Boolean)
AnnotationAssertion(schema:source schema:jobImmediateStart <https://github.com/schemaorg/schemaorg/issues/2244>)
AnnotationAssertion(rdfs:comment schema:jobLocation "A (typically single) geographic location associated with the job position.")
AnnotationAssertion(rdfs:label schema:jobLocation "jobLocation")
AnnotationAssertion(schema:domainIncludes schema:jobLocation schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:jobLocation schema:Place)
AnnotationAssertion(rdfs:comment schema:jobLocationType "A description of the job location (e.g. TELECOMMUTE for telecommute jobs).")
AnnotationAssertion(rdfs:label schema:jobLocationType "jobLocationType")
AnnotationAssertion(schema:domainIncludes schema:jobLocationType schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:jobLocationType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:jobLocationType schema:Text)
AnnotationAssertion(schema:source schema:jobLocationType <https://github.com/schemaorg/schemaorg/issues/1591>)
AnnotationAssertion(rdfs:comment schema:jobStartDate "The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.")
AnnotationAssertion(rdfs:label schema:jobStartDate "jobStartDate")
AnnotationAssertion(schema:domainIncludes schema:jobStartDate schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:jobStartDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:jobStartDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:jobStartDate schema:Text)
AnnotationAssertion(schema:source schema:jobStartDate <https://github.com/schemaorg/schemaorg/issues/2244>)
AnnotationAssertion(rdfs:comment schema:jobTitle "The job title of the person (for example, Financial Manager).")
AnnotationAssertion(rdfs:label schema:jobTitle "jobTitle")
AnnotationAssertion(schema:domainIncludes schema:jobTitle schema:Person)
AnnotationAssertion(schema:isPartOf schema:jobTitle <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:jobTitle schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:jobTitle schema:Text)
AnnotationAssertion(schema:source schema:jobTitle <https://github.com/schemaorg/schemaorg/issues/2192>)
AnnotationAssertion(rdfs:comment schema:keywords "Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.")
AnnotationAssertion(rdfs:label schema:keywords "keywords")
AnnotationAssertion(schema:domainIncludes schema:keywords schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:keywords schema:Event)
AnnotationAssertion(schema:domainIncludes schema:keywords schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:keywords schema:Place)
AnnotationAssertion(schema:domainIncludes schema:keywords schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:keywords schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:keywords schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:keywords schema:URL)
AnnotationAssertion(rdfs:comment schema:knownVehicleDamages "A textual description of known damages, both repaired and unrepaired.")
AnnotationAssertion(rdfs:label schema:knownVehicleDamages "knownVehicleDamages")
AnnotationAssertion(schema:contributor schema:knownVehicleDamages <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:knownVehicleDamages schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:knownVehicleDamages schema:Text)
AnnotationAssertion(rdfs:comment schema:knows "The most generic bi-directional social/work relation.")
AnnotationAssertion(rdfs:label schema:knows "knows")
AnnotationAssertion(schema:domainIncludes schema:knows schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:knows schema:Person)
AnnotationAssertion(rdfs:comment schema:knowsAbout "Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.")
AnnotationAssertion(rdfs:label schema:knowsAbout "knowsAbout")
AnnotationAssertion(schema:contributor schema:knowsAbout <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:knowsAbout schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:knowsAbout schema:Person)
AnnotationAssertion(schema:isPartOf schema:knowsAbout <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:knowsAbout schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:knowsAbout schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:knowsAbout schema:URL)
AnnotationAssertion(schema:source schema:knowsAbout <https://github.com/schemaorg/schemaorg/issues/1688>)
AnnotationAssertion(rdfs:comment schema:knowsLanguage "Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).")
AnnotationAssertion(rdfs:label schema:knowsLanguage "knowsLanguage")
AnnotationAssertion(schema:contributor schema:knowsLanguage <https://schema.org/docs/collab/TP>)
AnnotationAssertion(schema:domainIncludes schema:knowsLanguage schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:knowsLanguage schema:Person)
AnnotationAssertion(schema:isPartOf schema:knowsLanguage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:knowsLanguage schema:Language)
AnnotationAssertion(schema:rangeIncludes schema:knowsLanguage schema:Text)
AnnotationAssertion(schema:source schema:knowsLanguage <https://github.com/schemaorg/schemaorg/issues/1688>)
AnnotationAssertion(rdfs:comment schema:labelDetails "Link to the drug's label details.")
AnnotationAssertion(rdfs:label schema:labelDetails "labelDetails")
AnnotationAssertion(schema:domainIncludes schema:labelDetails schema:Drug)
AnnotationAssertion(schema:isPartOf schema:labelDetails <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:labelDetails schema:URL)
AnnotationAssertion(rdfs:comment schema:lastReviewed "Date on which the content on this web page was last reviewed for accuracy and/or completeness.")
AnnotationAssertion(rdfs:label schema:lastReviewed "lastReviewed")
AnnotationAssertion(schema:domainIncludes schema:lastReviewed schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:lastReviewed schema:Date)
AnnotationAssertion(rdfs:comment schema:latitude "The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).")
AnnotationAssertion(rdfs:label schema:latitude "latitude")
AnnotationAssertion(schema:domainIncludes schema:latitude schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:latitude schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:latitude schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:latitude schema:Text)
AnnotationAssertion(rdfs:comment schema:learningResourceType "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.")
AnnotationAssertion(rdfs:label schema:learningResourceType "learningResourceType")
AnnotationAssertion(schema:domainIncludes schema:learningResourceType schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:learningResourceType schema:LearningResource)
AnnotationAssertion(schema:rangeIncludes schema:learningResourceType schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:learningResourceType schema:Text)
AnnotationAssertion(rdfs:comment schema:leaseLength "Length of the lease for some [[Accommodation]], either particular to some [[Offer]] or in some cases intrinsic to the property.")
AnnotationAssertion(rdfs:label schema:leaseLength "leaseLength")
AnnotationAssertion(schema:domainIncludes schema:leaseLength schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:leaseLength schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:leaseLength schema:RealEstateListing)
AnnotationAssertion(schema:isPartOf schema:leaseLength <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:leaseLength schema:Duration)
AnnotationAssertion(schema:rangeIncludes schema:leaseLength schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:leaseLength <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:legalName "The official name of the organization, e.g. the registered company name.")
AnnotationAssertion(rdfs:label schema:legalName "legalName")
AnnotationAssertion(schema:contributor schema:legalName <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:legalName schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:legalName schema:Text)
AnnotationAssertion(rdfs:comment schema:legalStatus "The drug or supplement's legal status, including any controlled substance schedules that apply.")
AnnotationAssertion(rdfs:label schema:legalStatus "legalStatus")
AnnotationAssertion(schema:domainIncludes schema:legalStatus schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:legalStatus schema:Drug)
AnnotationAssertion(schema:domainIncludes schema:legalStatus schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:legalStatus <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legalStatus schema:DrugLegalStatus)
AnnotationAssertion(schema:rangeIncludes schema:legalStatus schema:MedicalEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:legalStatus schema:Text)
AnnotationAssertion(rdfs:comment schema:legislationChanges "Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href=\"/legislationConsolidates\">legislationConsolidates</a> property.")
AnnotationAssertion(rdfs:label schema:legislationChanges "legislationChanges")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationChanges <http://data.europa.eu/eli/ontology#changes>)
AnnotationAssertion(schema:contributor schema:legislationChanges <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationChanges schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationChanges <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationChanges schema:Legislation)
AnnotationAssertion(schema:source schema:legislationChanges <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:legislationConsolidates "Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.")
AnnotationAssertion(rdfs:label schema:legislationConsolidates "legislationConsolidates")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationConsolidates <http://data.europa.eu/eli/ontology#consolidates>)
AnnotationAssertion(schema:contributor schema:legislationConsolidates <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationConsolidates schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationConsolidates <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationConsolidates schema:Legislation)
AnnotationAssertion(schema:source schema:legislationConsolidates <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:legislationDateVersion "The point-in-time at which the provided description of the legislation is valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the \"National Insurance Contributions Act 2015\")")
AnnotationAssertion(rdfs:label schema:legislationDateVersion "legislationDateVersion")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationDateVersion <http://data.europa.eu/eli/ontology#version_date>)
AnnotationAssertion(schema:contributor schema:legislationDateVersion <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationDateVersion schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationDateVersion <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationDateVersion schema:Date)
AnnotationAssertion(schema:source schema:legislationDateVersion <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:legislationLegalForce "Whether the legislation is currently in force, not in force, or partially in force.")
AnnotationAssertion(rdfs:label schema:legislationLegalForce "legislationLegalForce")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationLegalForce <http://data.europa.eu/eli/ontology#in_force>)
AnnotationAssertion(schema:contributor schema:legislationLegalForce <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationLegalForce schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationLegalForce <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationLegalForce schema:LegalForceStatus)
AnnotationAssertion(schema:source schema:legislationLegalForce <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:legislationLegalValue "The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a \"stronger\" legal value than the HTML file of the same act.")
AnnotationAssertion(rdfs:label schema:legislationLegalValue "legislationLegalValue")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationLegalValue <http://data.europa.eu/eli/ontology#legal_value>)
AnnotationAssertion(schema:contributor schema:legislationLegalValue <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationLegalValue schema:LegislationObject)
AnnotationAssertion(schema:isPartOf schema:legislationLegalValue <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationLegalValue schema:LegalValueLevel)
AnnotationAssertion(schema:source schema:legislationLegalValue <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:legislationResponsible "An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.")
AnnotationAssertion(rdfs:label schema:legislationResponsible "legislationResponsible")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#exactMatch> schema:legislationResponsible <http://data.europa.eu/eli/ontology#responsibility_of>)
AnnotationAssertion(schema:contributor schema:legislationResponsible <https://schema.org/docs/collab/ELI>)
AnnotationAssertion(schema:domainIncludes schema:legislationResponsible schema:Legislation)
AnnotationAssertion(schema:isPartOf schema:legislationResponsible <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:legislationResponsible schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:legislationResponsible schema:Person)
AnnotationAssertion(schema:source schema:legislationResponsible <https://github.com/schemaorg/schemaorg/issues/1156>)
AnnotationAssertion(rdfs:comment schema:lesser "This ordering relation for qualitative values indicates that the subject is lesser than the object.")
AnnotationAssertion(rdfs:label schema:lesser "lesser")
AnnotationAssertion(schema:contributor schema:lesser <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:lesser schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:lesser schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:lesserOrEqual "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.")
AnnotationAssertion(rdfs:label schema:lesserOrEqual "lesserOrEqual")
AnnotationAssertion(schema:contributor schema:lesserOrEqual <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:lesserOrEqual schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:lesserOrEqual schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:letterer "The individual who adds lettering, including speech balloons and sound effects, to artwork.")
AnnotationAssertion(rdfs:label schema:letterer "letterer")
AnnotationAssertion(schema:domainIncludes schema:letterer schema:ComicIssue)
AnnotationAssertion(schema:domainIncludes schema:letterer schema:ComicStory)
AnnotationAssertion(schema:domainIncludes schema:letterer schema:VisualArtwork)
AnnotationAssertion(schema:isPartOf schema:letterer <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:letterer schema:Person)
AnnotationAssertion(rdfs:comment schema:license "A license document that applies to this content, typically indicated by URL.")
AnnotationAssertion(rdfs:label schema:license "license")
AnnotationAssertion(schema:domainIncludes schema:license schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:license schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:license schema:URL)
AnnotationAssertion(rdfs:comment schema:line "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.")
AnnotationAssertion(rdfs:label schema:line "line")
AnnotationAssertion(schema:domainIncludes schema:line schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:line schema:Text)
AnnotationAssertion(rdfs:comment schema:linkRelationship "Indicates the relationship type of a Web link. ")
AnnotationAssertion(rdfs:label schema:linkRelationship "linkRelationship")
AnnotationAssertion(schema:domainIncludes schema:linkRelationship schema:LinkRole)
AnnotationAssertion(schema:isPartOf schema:linkRelationship <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:linkRelationship schema:Text)
AnnotationAssertion(schema:source schema:linkRelationship <https://github.com/schemaorg/schemaorg/issues/1045>)
AnnotationAssertion(rdfs:comment schema:liveBlogUpdate "An update to the LiveBlog.")
AnnotationAssertion(rdfs:label schema:liveBlogUpdate "liveBlogUpdate")
AnnotationAssertion(schema:domainIncludes schema:liveBlogUpdate schema:LiveBlogPosting)
AnnotationAssertion(schema:rangeIncludes schema:liveBlogUpdate schema:BlogPosting)
AnnotationAssertion(rdfs:comment schema:loanMortgageMandateAmount "Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.")
AnnotationAssertion(rdfs:label schema:loanMortgageMandateAmount "loanMortgageMandateAmount")
AnnotationAssertion(schema:contributor schema:loanMortgageMandateAmount <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanMortgageMandateAmount schema:MortgageLoan)
AnnotationAssertion(schema:isPartOf schema:loanMortgageMandateAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:loanMortgageMandateAmount schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:loanMortgageMandateAmount <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:loanPaymentAmount "The amount of money to pay in a single payment.")
AnnotationAssertion(rdfs:label schema:loanPaymentAmount "loanPaymentAmount")
AnnotationAssertion(schema:contributor schema:loanPaymentAmount <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanPaymentAmount schema:RepaymentSpecification)
AnnotationAssertion(schema:isPartOf schema:loanPaymentAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:loanPaymentAmount schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:loanPaymentAmount <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:loanPaymentFrequency "Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.")
AnnotationAssertion(rdfs:label schema:loanPaymentFrequency "loanPaymentFrequency")
AnnotationAssertion(schema:contributor schema:loanPaymentFrequency <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanPaymentFrequency schema:RepaymentSpecification)
AnnotationAssertion(schema:isPartOf schema:loanPaymentFrequency <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:loanPaymentFrequency schema:Number)
AnnotationAssertion(schema:source schema:loanPaymentFrequency <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:loanRepaymentForm "A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.")
AnnotationAssertion(rdfs:label schema:loanRepaymentForm "loanRepaymentForm")
AnnotationAssertion(schema:contributor schema:loanRepaymentForm <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanRepaymentForm schema:LoanOrCredit)
AnnotationAssertion(schema:isPartOf schema:loanRepaymentForm <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:loanRepaymentForm schema:RepaymentSpecification)
AnnotationAssertion(schema:source schema:loanRepaymentForm <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:loanType "The type of a loan or credit.")
AnnotationAssertion(rdfs:label schema:loanType "loanType")
AnnotationAssertion(schema:contributor schema:loanType <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:loanType schema:LoanOrCredit)
AnnotationAssertion(schema:isPartOf schema:loanType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:loanType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:loanType schema:URL)
AnnotationAssertion(schema:source schema:loanType <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:locationCreated "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.")
AnnotationAssertion(rdfs:label schema:locationCreated "locationCreated")
AnnotationAssertion(schema:domainIncludes schema:locationCreated schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:locationCreated schema:Place)
AnnotationAssertion(rdfs:comment schema:lodgingUnitDescription "A full description of the lodging unit.")
AnnotationAssertion(rdfs:label schema:lodgingUnitDescription "lodgingUnitDescription")
AnnotationAssertion(schema:domainIncludes schema:lodgingUnitDescription schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:lodgingUnitDescription schema:Text)
AnnotationAssertion(rdfs:comment schema:lodgingUnitType "Textual description of the unit type (including suite vs. room, size of bed, etc.).")
AnnotationAssertion(rdfs:label schema:lodgingUnitType "lodgingUnitType")
AnnotationAssertion(schema:domainIncludes schema:lodgingUnitType schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:lodgingUnitType schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:lodgingUnitType schema:Text)
AnnotationAssertion(rdfs:comment schema:longitude "The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).")
AnnotationAssertion(rdfs:label schema:longitude "longitude")
AnnotationAssertion(schema:domainIncludes schema:longitude schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:longitude schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:longitude schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:longitude schema:Text)
AnnotationAssertion(rdfs:comment schema:lowPrice "The lowest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:lowPrice "lowPrice")
AnnotationAssertion(schema:domainIncludes schema:lowPrice schema:AggregateOffer)
AnnotationAssertion(schema:rangeIncludes schema:lowPrice schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:lowPrice schema:Text)
AnnotationAssertion(rdfs:comment schema:lyricist "The person who wrote the words.")
AnnotationAssertion(rdfs:label schema:lyricist "lyricist")
AnnotationAssertion(schema:contributor schema:lyricist <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:lyricist schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:lyricist schema:Person)
AnnotationAssertion(rdfs:comment schema:lyrics "The words in the song.")
AnnotationAssertion(rdfs:label schema:lyrics "lyrics")
AnnotationAssertion(schema:contributor schema:lyrics <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:lyrics schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:lyrics schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:mainContentOfPage "Indicates if this web page element is the main subject of the page.")
AnnotationAssertion(rdfs:label schema:mainContentOfPage "mainContentOfPage")
AnnotationAssertion(schema:domainIncludes schema:mainContentOfPage schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:mainContentOfPage schema:WebPageElement)
AnnotationAssertion(rdfs:comment schema:mainEntityOfPage "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.")
AnnotationAssertion(rdfs:label schema:mainEntityOfPage "mainEntityOfPage")
AnnotationAssertion(schema:domainIncludes schema:mainEntityOfPage schema:Thing)
AnnotationAssertion(schema:inverseOf schema:mainEntityOfPage schema:mainEntity)
AnnotationAssertion(schema:rangeIncludes schema:mainEntityOfPage schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:mainEntityOfPage schema:URL)
AnnotationAssertion(rdfs:comment schema:maintainer "A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When [[maintainer]] is applied to a specific version of something e.g. a particular version or packaging of a [[Dataset]], it is always  possible that the upstream source has a different maintainer. The [[isBasedOn]] property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.
      ")
AnnotationAssertion(rdfs:label schema:maintainer "maintainer")
AnnotationAssertion(schema:domainIncludes schema:maintainer schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:maintainer <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:maintainer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:maintainer schema:Person)
AnnotationAssertion(schema:source schema:maintainer <https://github.com/schemaorg/schemaorg/issues/2311>)
AnnotationAssertion(rdfs:comment schema:makesOffer "A pointer to products or services offered by the organization or person.")
AnnotationAssertion(rdfs:label schema:makesOffer "makesOffer")
AnnotationAssertion(schema:contributor schema:makesOffer <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:makesOffer schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:makesOffer schema:Person)
AnnotationAssertion(schema:inverseOf schema:makesOffer schema:offeredBy)
AnnotationAssertion(schema:rangeIncludes schema:makesOffer schema:Offer)
AnnotationAssertion(rdfs:comment schema:manufacturer "The manufacturer of the product.")
AnnotationAssertion(rdfs:label schema:manufacturer "manufacturer")
AnnotationAssertion(schema:domainIncludes schema:manufacturer schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:manufacturer schema:Organization)
AnnotationAssertion(rdfs:comment schema:map "A URL to a map of the place.")
AnnotationAssertion(rdfs:label schema:map "map")
AnnotationAssertion(schema:domainIncludes schema:map schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:map schema:URL)
AnnotationAssertion(schema:supersededBy schema:map schema:hasMap)
AnnotationAssertion(rdfs:comment schema:mapType "Indicates the kind of Map, from the MapCategoryType Enumeration.")
AnnotationAssertion(rdfs:label schema:mapType "mapType")
AnnotationAssertion(schema:domainIncludes schema:mapType schema:Map)
AnnotationAssertion(schema:rangeIncludes schema:mapType schema:MapCategoryType)
AnnotationAssertion(rdfs:comment schema:maps "A URL to a map of the place.")
AnnotationAssertion(rdfs:label schema:maps "maps")
AnnotationAssertion(schema:domainIncludes schema:maps schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:maps schema:URL)
AnnotationAssertion(schema:supersededBy schema:maps schema:hasMap)
AnnotationAssertion(rdfs:comment schema:marginOfError "A [[marginOfError]] for an [[Observation]].")
AnnotationAssertion(rdfs:label schema:marginOfError "marginOfError")
AnnotationAssertion(schema:domainIncludes schema:marginOfError schema:Observation)
AnnotationAssertion(schema:isPartOf schema:marginOfError <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:marginOfError schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:marginOfError <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:materialExtent "The quantity of the materials being described or an expression of the physical space they occupy."@en)
AnnotationAssertion(rdfs:label schema:materialExtent "materialExtent"@en)
AnnotationAssertion(schema:domainIncludes schema:materialExtent schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:materialExtent <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:materialExtent schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:materialExtent schema:Text)
AnnotationAssertion(schema:source schema:materialExtent <https://github.com/schemaorg/schemaorg/issues/1759>)
AnnotationAssertion(rdfs:comment schema:mathExpression "A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.")
AnnotationAssertion(rdfs:label schema:mathExpression "mathExpression")
AnnotationAssertion(schema:domainIncludes schema:mathExpression schema:MathSolver)
AnnotationAssertion(schema:isPartOf schema:mathExpression <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:mathExpression schema:SolveMathAction)
AnnotationAssertion(schema:rangeIncludes schema:mathExpression schema:Text)
AnnotationAssertion(schema:source schema:mathExpression <https://github.com/schemaorg/schemaorg/issues/2740>)
AnnotationAssertion(rdfs:comment schema:maxPrice "The highest price if the price is a range.")
AnnotationAssertion(rdfs:label schema:maxPrice "maxPrice")
AnnotationAssertion(schema:contributor schema:maxPrice <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:maxPrice schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:maxPrice schema:Number)
AnnotationAssertion(rdfs:comment schema:maxValue "The upper value of some characteristic or property.")
AnnotationAssertion(rdfs:label schema:maxValue "maxValue")
AnnotationAssertion(schema:contributor schema:maxValue <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:maxValue schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:maxValue schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:maxValue schema:PropertyValueSpecification)
AnnotationAssertion(schema:domainIncludes schema:maxValue schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:maxValue schema:Number)
AnnotationAssertion(rdfs:comment schema:maximumAttendeeCapacity "The total number of individuals that may attend an event or venue.")
AnnotationAssertion(rdfs:label schema:maximumAttendeeCapacity "maximumAttendeeCapacity")
AnnotationAssertion(schema:domainIncludes schema:maximumAttendeeCapacity schema:Event)
AnnotationAssertion(schema:domainIncludes schema:maximumAttendeeCapacity schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:maximumAttendeeCapacity schema:Integer)
AnnotationAssertion(rdfs:comment schema:maximumEnrollment "The maximum number of students who may be enrolled in the program.")
AnnotationAssertion(rdfs:label schema:maximumEnrollment "maximumEnrollment")
AnnotationAssertion(schema:domainIncludes schema:maximumEnrollment schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:maximumEnrollment <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:maximumEnrollment schema:Integer)
AnnotationAssertion(schema:source schema:maximumEnrollment <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:maximumIntake "Recommended intake of this supplement for a given population as defined by a specific recommending authority.")
AnnotationAssertion(rdfs:label schema:maximumIntake "maximumIntake")
AnnotationAssertion(schema:domainIncludes schema:maximumIntake schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:maximumIntake schema:Drug)
AnnotationAssertion(schema:domainIncludes schema:maximumIntake schema:DrugStrength)
AnnotationAssertion(schema:domainIncludes schema:maximumIntake schema:Substance)
AnnotationAssertion(schema:isPartOf schema:maximumIntake <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:maximumIntake schema:MaximumDoseSchedule)
AnnotationAssertion(rdfs:comment schema:maximumPhysicalAttendeeCapacity "The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of a [[MixedEventAttendanceMode]]). ")
AnnotationAssertion(rdfs:label schema:maximumPhysicalAttendeeCapacity "maximumPhysicalAttendeeCapacity")
AnnotationAssertion(schema:domainIncludes schema:maximumPhysicalAttendeeCapacity schema:Event)
AnnotationAssertion(schema:isPartOf schema:maximumPhysicalAttendeeCapacity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:maximumPhysicalAttendeeCapacity schema:Integer)
AnnotationAssertion(schema:source schema:maximumPhysicalAttendeeCapacity <https://github.com/schemaorg/schemaorg/issues/1842>)
AnnotationAssertion(rdfs:comment schema:maximumVirtualAttendeeCapacity "The maximum virtual attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a [[MixedEventAttendanceMode]]). ")
AnnotationAssertion(rdfs:label schema:maximumVirtualAttendeeCapacity "maximumVirtualAttendeeCapacity")
AnnotationAssertion(schema:domainIncludes schema:maximumVirtualAttendeeCapacity schema:Event)
AnnotationAssertion(schema:isPartOf schema:maximumVirtualAttendeeCapacity <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:maximumVirtualAttendeeCapacity schema:Integer)
AnnotationAssertion(schema:source schema:maximumVirtualAttendeeCapacity <https://github.com/schemaorg/schemaorg/issues/1842>)
AnnotationAssertion(rdfs:comment schema:mealService "Description of the meals that will be provided or available for purchase.")
AnnotationAssertion(rdfs:label schema:mealService "mealService")
AnnotationAssertion(schema:domainIncludes schema:mealService schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:mealService schema:Text)
AnnotationAssertion(rdfs:comment schema:measuredProperty "The measuredProperty of an [[Observation]], typically via its [[StatisticalVariable]]. There are various kinds of applicable [[Property]]: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).")
AnnotationAssertion(rdfs:label schema:measuredProperty "measuredProperty")
AnnotationAssertion(schema:domainIncludes schema:measuredProperty schema:Observation)
AnnotationAssertion(schema:domainIncludes schema:measuredProperty schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:measuredProperty <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:measuredProperty schema:Property)
AnnotationAssertion(schema:source schema:measuredProperty <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:measurementDenominator "Identifies the denominator variable when an observation represents a ratio or percentage.")
AnnotationAssertion(rdfs:label schema:measurementDenominator "measurementDenominator")
AnnotationAssertion(schema:domainIncludes schema:measurementDenominator schema:Observation)
AnnotationAssertion(schema:domainIncludes schema:measurementDenominator schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:measurementDenominator <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:measurementDenominator schema:StatisticalVariable)
AnnotationAssertion(schema:source schema:measurementDenominator <https://github.com/schemaorg/schemaorg/issues/2564>)
AnnotationAssertion(rdfs:comment schema:measurementQualifier "Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.")
AnnotationAssertion(rdfs:label schema:measurementQualifier "measurementQualifier")
AnnotationAssertion(schema:domainIncludes schema:measurementQualifier schema:Observation)
AnnotationAssertion(schema:domainIncludes schema:measurementQualifier schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:measurementQualifier <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:measurementQualifier schema:Enumeration)
AnnotationAssertion(schema:source schema:measurementQualifier <https://github.com/schemaorg/schemaorg/issues/2564>)
AnnotationAssertion(rdfs:comment schema:mechanismOfAction "The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.")
AnnotationAssertion(rdfs:label schema:mechanismOfAction "mechanismOfAction")
AnnotationAssertion(schema:domainIncludes schema:mechanismOfAction schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:mechanismOfAction schema:Drug)
AnnotationAssertion(schema:isPartOf schema:mechanismOfAction <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:mechanismOfAction schema:Text)
AnnotationAssertion(rdfs:comment schema:mediaAuthenticityCategory "Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).")
AnnotationAssertion(rdfs:label schema:mediaAuthenticityCategory "mediaAuthenticityCategory")
AnnotationAssertion(schema:domainIncludes schema:mediaAuthenticityCategory schema:MediaReview)
AnnotationAssertion(schema:isPartOf schema:mediaAuthenticityCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:mediaAuthenticityCategory schema:MediaManipulationRatingEnumeration)
AnnotationAssertion(schema:source schema:mediaAuthenticityCategory <https://github.com/schemaorg/schemaorg/issues/2450>)
AnnotationAssertion(rdfs:comment schema:mediaItemAppearance "In the context of a [[MediaReview]], indicates specific media item(s) that are grouped using a [[MediaReviewItem]].")
AnnotationAssertion(rdfs:label schema:mediaItemAppearance "mediaItemAppearance")
AnnotationAssertion(schema:domainIncludes schema:mediaItemAppearance schema:MediaReviewItem)
AnnotationAssertion(schema:isPartOf schema:mediaItemAppearance <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:mediaItemAppearance schema:MediaObject)
AnnotationAssertion(schema:source schema:mediaItemAppearance <https://github.com/schemaorg/schemaorg/issues/2450>)
AnnotationAssertion(rdfs:comment schema:median "The median value.")
AnnotationAssertion(rdfs:label schema:median "median")
AnnotationAssertion(schema:domainIncludes schema:median schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:rangeIncludes schema:median schema:Number)
AnnotationAssertion(schema:source schema:median <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:medicalAudience "Medical audience for page.")
AnnotationAssertion(rdfs:label schema:medicalAudience "medicalAudience")
AnnotationAssertion(schema:domainIncludes schema:medicalAudience schema:MedicalWebPage)
AnnotationAssertion(schema:isPartOf schema:medicalAudience <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:medicalAudience schema:MedicalAudience)
AnnotationAssertion(schema:rangeIncludes schema:medicalAudience schema:MedicalAudienceType)
AnnotationAssertion(rdfs:comment schema:medicalSpecialty "A medical specialty of the provider.")
AnnotationAssertion(rdfs:label schema:medicalSpecialty "medicalSpecialty")
AnnotationAssertion(schema:domainIncludes schema:medicalSpecialty schema:Hospital)
AnnotationAssertion(schema:domainIncludes schema:medicalSpecialty schema:MedicalClinic)
AnnotationAssertion(schema:domainIncludes schema:medicalSpecialty schema:MedicalOrganization)
AnnotationAssertion(schema:domainIncludes schema:medicalSpecialty schema:Physician)
AnnotationAssertion(schema:isPartOf schema:medicalSpecialty <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:medicalSpecialty schema:MedicalSpecialty)
AnnotationAssertion(rdfs:comment schema:medicineSystem "The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.")
AnnotationAssertion(rdfs:label schema:medicineSystem "medicineSystem")
AnnotationAssertion(schema:domainIncludes schema:medicineSystem schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:medicineSystem <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:medicineSystem schema:MedicineSystem)
AnnotationAssertion(rdfs:comment schema:meetsEmissionStandard "Indicates that the vehicle meets the respective emission standard.")
AnnotationAssertion(rdfs:label schema:meetsEmissionStandard "meetsEmissionStandard")
AnnotationAssertion(schema:contributor schema:meetsEmissionStandard <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:meetsEmissionStandard schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:meetsEmissionStandard <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:meetsEmissionStandard schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:meetsEmissionStandard schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:meetsEmissionStandard schema:URL)
AnnotationAssertion(rdfs:comment schema:member "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.")
AnnotationAssertion(rdfs:label schema:member "member")
AnnotationAssertion(schema:domainIncludes schema:member schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:member schema:ProgramMembership)
AnnotationAssertion(schema:inverseOf schema:member schema:memberOf)
AnnotationAssertion(schema:rangeIncludes schema:member schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:member schema:Person)
AnnotationAssertion(rdfs:comment schema:members "A member of this organization.")
AnnotationAssertion(rdfs:label schema:members "members")
AnnotationAssertion(schema:domainIncludes schema:members schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:members schema:ProgramMembership)
AnnotationAssertion(schema:rangeIncludes schema:members schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:members schema:Person)
AnnotationAssertion(schema:supersededBy schema:members schema:member)
AnnotationAssertion(rdfs:comment schema:membershipNumber "A unique identifier for the membership.")
AnnotationAssertion(rdfs:label schema:membershipNumber "membershipNumber")
AnnotationAssertion(schema:domainIncludes schema:membershipNumber schema:ProgramMembership)
AnnotationAssertion(schema:rangeIncludes schema:membershipNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:membershipPointsEarned "The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)")
AnnotationAssertion(rdfs:label schema:membershipPointsEarned "membershipPointsEarned")
AnnotationAssertion(schema:domainIncludes schema:membershipPointsEarned schema:MemberProgramTier)
AnnotationAssertion(schema:domainIncludes schema:membershipPointsEarned schema:PriceSpecification)
AnnotationAssertion(schema:domainIncludes schema:membershipPointsEarned schema:ProgramMembership)
AnnotationAssertion(schema:isPartOf schema:membershipPointsEarned <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:membershipPointsEarned schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:membershipPointsEarned schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:membershipPointsEarned <https://github.com/schemaorg/schemaorg/issues/2085>)
AnnotationAssertion(rdfs:comment schema:memoryRequirements "Minimum memory requirements.")
AnnotationAssertion(rdfs:label schema:memoryRequirements "memoryRequirements")
AnnotationAssertion(schema:domainIncludes schema:memoryRequirements schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:memoryRequirements schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:memoryRequirements schema:URL)
AnnotationAssertion(rdfs:comment schema:mentions "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.")
AnnotationAssertion(rdfs:label schema:mentions "mentions")
AnnotationAssertion(schema:domainIncludes schema:mentions schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:mentions schema:Thing)
AnnotationAssertion(rdfs:comment schema:menu "Either the actual menu as a structured representation, as text, or a URL of the menu.")
AnnotationAssertion(rdfs:label schema:menu "menu")
AnnotationAssertion(schema:domainIncludes schema:menu schema:FoodEstablishment)
AnnotationAssertion(schema:rangeIncludes schema:menu schema:Menu)
AnnotationAssertion(schema:rangeIncludes schema:menu schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:menu schema:URL)
AnnotationAssertion(schema:supersededBy schema:menu schema:hasMenu)
AnnotationAssertion(rdfs:comment schema:menuAddOn "Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.")
AnnotationAssertion(rdfs:label schema:menuAddOn "menuAddOn")
AnnotationAssertion(schema:domainIncludes schema:menuAddOn schema:MenuItem)
AnnotationAssertion(schema:rangeIncludes schema:menuAddOn schema:MenuItem)
AnnotationAssertion(schema:rangeIncludes schema:menuAddOn schema:MenuSection)
AnnotationAssertion(schema:source schema:menuAddOn <https://github.com/schemaorg/schemaorg/issues/1541>)
AnnotationAssertion(rdfs:comment schema:merchant "'merchant' is an out-dated term for 'seller'.")
AnnotationAssertion(rdfs:label schema:merchant "merchant")
AnnotationAssertion(schema:domainIncludes schema:merchant schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:merchant schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:merchant schema:Person)
AnnotationAssertion(schema:supersededBy schema:merchant schema:seller)
AnnotationAssertion(rdfs:comment schema:merchantReturnDays "Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the [[returnPolicyCategory]] property is specified as [[MerchantReturnFiniteReturnWindow]].")
AnnotationAssertion(rdfs:label schema:merchantReturnDays "merchantReturnDays")
AnnotationAssertion(schema:domainIncludes schema:merchantReturnDays schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:merchantReturnDays schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:merchantReturnDays <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:merchantReturnDays schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:merchantReturnDays schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:merchantReturnDays schema:Integer)
AnnotationAssertion(schema:source schema:merchantReturnDays <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:merchantReturnLink "Specifies a Web page or service by URL, for product returns.")
AnnotationAssertion(rdfs:label schema:merchantReturnLink "merchantReturnLink")
AnnotationAssertion(schema:domainIncludes schema:merchantReturnLink schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:merchantReturnLink <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:merchantReturnLink schema:URL)
AnnotationAssertion(schema:source schema:merchantReturnLink <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:messageAttachment "A CreativeWork attached to the message.")
AnnotationAssertion(rdfs:label schema:messageAttachment "messageAttachment")
AnnotationAssertion(schema:domainIncludes schema:messageAttachment schema:Message)
AnnotationAssertion(schema:rangeIncludes schema:messageAttachment schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:mileageFromOdometer "The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\\n\\nTypical unit code(s): KMT for kilometers, SMI for statute miles.")
AnnotationAssertion(rdfs:label schema:mileageFromOdometer "mileageFromOdometer")
AnnotationAssertion(schema:contributor schema:mileageFromOdometer <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:mileageFromOdometer schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:mileageFromOdometer schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:minPrice "The lowest price if the price is a range.")
AnnotationAssertion(rdfs:label schema:minPrice "minPrice")
AnnotationAssertion(schema:contributor schema:minPrice <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:minPrice schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:minPrice schema:Number)
AnnotationAssertion(rdfs:comment schema:minValue "The lower value of some characteristic or property.")
AnnotationAssertion(rdfs:label schema:minValue "minValue")
AnnotationAssertion(schema:contributor schema:minValue <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:minValue schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:minValue schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:minValue schema:PropertyValueSpecification)
AnnotationAssertion(schema:domainIncludes schema:minValue schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:minValue schema:Number)
AnnotationAssertion(rdfs:comment schema:minimumPaymentDue "The minimum payment required at this time.")
AnnotationAssertion(rdfs:label schema:minimumPaymentDue "minimumPaymentDue")
AnnotationAssertion(schema:domainIncludes schema:minimumPaymentDue schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:minimumPaymentDue schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:minimumPaymentDue schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:mobileUrl "The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.

To discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional \"mobile site\" alongside the main one. It should not be taken as an endorsement of this publication style.
    ")
AnnotationAssertion(rdfs:label schema:mobileUrl "mobileUrl")
AnnotationAssertion(schema:domainIncludes schema:mobileUrl schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:mobileUrl schema:Product)
AnnotationAssertion(schema:isPartOf schema:mobileUrl <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:mobileUrl schema:Text)
AnnotationAssertion(schema:source schema:mobileUrl <https://github.com/schemaorg/schemaorg/issues/3134>)
AnnotationAssertion(rdfs:comment schema:model "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.")
AnnotationAssertion(rdfs:label schema:model "model")
AnnotationAssertion(schema:domainIncludes schema:model schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:model schema:ProductModel)
AnnotationAssertion(schema:rangeIncludes schema:model schema:Text)
AnnotationAssertion(rdfs:comment schema:modelDate "The release date of a vehicle model (often used to differentiate versions of the same make and model).")
AnnotationAssertion(rdfs:label schema:modelDate "modelDate")
AnnotationAssertion(schema:contributor schema:modelDate <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:modelDate schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:modelDate <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:modelDate schema:Date)
AnnotationAssertion(rdfs:comment schema:modifiedTime "The date and time the reservation was modified.")
AnnotationAssertion(rdfs:label schema:modifiedTime "modifiedTime")
AnnotationAssertion(schema:domainIncludes schema:modifiedTime schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:modifiedTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:molecularFormula "The empirical formula is the simplest whole number ratio of all the atoms in a molecule.")
AnnotationAssertion(rdfs:label schema:molecularFormula "molecularFormula")
AnnotationAssertion(schema:domainIncludes schema:molecularFormula schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:molecularFormula <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:molecularFormula schema:Text)
AnnotationAssertion(schema:source schema:molecularFormula <http://www.bioschemas.org/MolecularEntity>)
AnnotationAssertion(rdfs:comment schema:molecularWeight "This is the molecular weight of the entity being described, not of the parent. Units should be included in the form '&lt;Number&gt; &lt;unit&gt;', for example '12 amu' or as '&lt;QuantitativeValue&gt;.")
AnnotationAssertion(rdfs:label schema:molecularWeight "molecularWeight")
AnnotationAssertion(schema:domainIncludes schema:molecularWeight schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:molecularWeight <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:molecularWeight schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:molecularWeight schema:Text)
AnnotationAssertion(schema:source schema:molecularWeight <http://www.bioschemas.org/MolecularEntity>)
AnnotationAssertion(rdfs:comment schema:monoisotopicMolecularWeight "The monoisotopic mass is the sum of the masses of the atoms in a molecule using the unbound, ground-state, rest mass of the principal (most abundant) isotope for each element instead of the isotopic average mass. Please include the units in the form '&lt;Number&gt; &lt;unit&gt;', for example '770.230488 g/mol' or as '&lt;QuantitativeValue&gt;.")
AnnotationAssertion(rdfs:label schema:monoisotopicMolecularWeight "monoisotopicMolecularWeight")
AnnotationAssertion(schema:domainIncludes schema:monoisotopicMolecularWeight schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:monoisotopicMolecularWeight <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:monoisotopicMolecularWeight schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:monoisotopicMolecularWeight schema:Text)
AnnotationAssertion(schema:source schema:monoisotopicMolecularWeight <http://www.bioschemas.org/MolecularEntity>)
AnnotationAssertion(rdfs:comment schema:monthlyMinimumRepaymentAmount "The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.")
AnnotationAssertion(rdfs:label schema:monthlyMinimumRepaymentAmount "monthlyMinimumRepaymentAmount")
AnnotationAssertion(schema:contributor schema:monthlyMinimumRepaymentAmount <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:monthlyMinimumRepaymentAmount schema:PaymentCard)
AnnotationAssertion(schema:isPartOf schema:monthlyMinimumRepaymentAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:monthlyMinimumRepaymentAmount schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:monthlyMinimumRepaymentAmount schema:Number)
AnnotationAssertion(schema:source schema:monthlyMinimumRepaymentAmount <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:monthsOfExperience "Indicates the minimal number of months of experience required for a position.")
AnnotationAssertion(rdfs:label schema:monthsOfExperience "monthsOfExperience")
AnnotationAssertion(schema:domainIncludes schema:monthsOfExperience schema:OccupationalExperienceRequirements)
AnnotationAssertion(schema:isPartOf schema:monthsOfExperience <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:monthsOfExperience schema:Number)
AnnotationAssertion(schema:source schema:monthsOfExperience <https://github.com/schemaorg/schemaorg/issues/2681>)
AnnotationAssertion(rdfs:comment schema:mpn "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.")
AnnotationAssertion(rdfs:label schema:mpn "mpn")
AnnotationAssertion(schema:contributor schema:mpn <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:mpn schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:mpn schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:mpn schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:mpn schema:Text)
AnnotationAssertion(rdfs:comment schema:multipleValues "Whether multiple values are allowed for the property.  Default is false.")
AnnotationAssertion(rdfs:label schema:multipleValues "multipleValues")
AnnotationAssertion(schema:domainIncludes schema:multipleValues schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:multipleValues schema:Boolean)
AnnotationAssertion(rdfs:comment schema:muscleAction "The movement the muscle generates.")
AnnotationAssertion(rdfs:label schema:muscleAction "muscleAction")
AnnotationAssertion(schema:domainIncludes schema:muscleAction schema:Muscle)
AnnotationAssertion(schema:isPartOf schema:muscleAction <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:muscleAction schema:Text)
AnnotationAssertion(rdfs:comment schema:musicArrangement "An arrangement derived from the composition.")
AnnotationAssertion(rdfs:label schema:musicArrangement "musicArrangement")
AnnotationAssertion(schema:contributor schema:musicArrangement <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:musicArrangement schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:musicArrangement schema:MusicComposition)
AnnotationAssertion(rdfs:comment schema:musicBy "The composer of the soundtrack.")
AnnotationAssertion(rdfs:label schema:musicBy "musicBy")
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:VideoGameSeries)
AnnotationAssertion(schema:domainIncludes schema:musicBy schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:musicBy schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:musicBy schema:Person)
AnnotationAssertion(rdfs:comment schema:musicCompositionForm "The type of composition (e.g. overture, sonata, symphony, etc.).")
AnnotationAssertion(rdfs:label schema:musicCompositionForm "musicCompositionForm")
AnnotationAssertion(schema:contributor schema:musicCompositionForm <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:musicCompositionForm schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:musicCompositionForm schema:Text)
AnnotationAssertion(rdfs:comment schema:musicGroupMember "A member of a music group&#x2014;for example, John, Paul, George, or Ringo.")
AnnotationAssertion(rdfs:label schema:musicGroupMember "musicGroupMember")
AnnotationAssertion(schema:domainIncludes schema:musicGroupMember schema:MusicGroup)
AnnotationAssertion(schema:rangeIncludes schema:musicGroupMember schema:Person)
AnnotationAssertion(schema:supersededBy schema:musicGroupMember schema:member)
AnnotationAssertion(rdfs:comment schema:musicReleaseFormat "Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).")
AnnotationAssertion(rdfs:label schema:musicReleaseFormat "musicReleaseFormat")
AnnotationAssertion(schema:contributor schema:musicReleaseFormat <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:musicReleaseFormat schema:MusicRelease)
AnnotationAssertion(schema:rangeIncludes schema:musicReleaseFormat schema:MusicReleaseFormatType)
AnnotationAssertion(rdfs:comment schema:musicalKey "The key, mode, or scale this composition uses.")
AnnotationAssertion(rdfs:label schema:musicalKey "musicalKey")
AnnotationAssertion(schema:contributor schema:musicalKey <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:musicalKey schema:MusicComposition)
AnnotationAssertion(schema:rangeIncludes schema:musicalKey schema:Text)
AnnotationAssertion(rdfs:comment schema:naics "The North American Industry Classification System (NAICS) code for a particular organization or business person.")
AnnotationAssertion(rdfs:label schema:naics "naics")
AnnotationAssertion(schema:contributor schema:naics <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:naics schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:naics schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:naics schema:Text)
AnnotationAssertion(rdfs:comment schema:namedPosition "A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.")
AnnotationAssertion(rdfs:label schema:namedPosition "namedPosition")
AnnotationAssertion(schema:domainIncludes schema:namedPosition schema:Role)
AnnotationAssertion(schema:rangeIncludes schema:namedPosition schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:namedPosition schema:URL)
AnnotationAssertion(schema:supersededBy schema:namedPosition schema:roleName)
AnnotationAssertion(rdfs:comment schema:nationality "Nationality of the person.")
AnnotationAssertion(rdfs:label schema:nationality "nationality")
AnnotationAssertion(schema:domainIncludes schema:nationality schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:nationality schema:Country)
AnnotationAssertion(rdfs:comment schema:naturalProgression "The expected progression of the condition if it is not treated and allowed to progress naturally.")
AnnotationAssertion(rdfs:label schema:naturalProgression "naturalProgression")
AnnotationAssertion(schema:domainIncludes schema:naturalProgression schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:naturalProgression <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:naturalProgression schema:Text)
AnnotationAssertion(rdfs:comment schema:negativeNotes "Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry 

In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions 
tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].

The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).")
AnnotationAssertion(rdfs:label schema:negativeNotes "negativeNotes")
AnnotationAssertion(schema:domainIncludes schema:negativeNotes schema:Product)
AnnotationAssertion(schema:domainIncludes schema:negativeNotes schema:Review)
AnnotationAssertion(schema:isPartOf schema:negativeNotes <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:negativeNotes schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:negativeNotes schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:negativeNotes schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:negativeNotes schema:WebContent)
AnnotationAssertion(schema:source schema:negativeNotes <https://github.com/schemaorg/schemaorg/issues/2832>)
AnnotationAssertion(rdfs:comment schema:nerve "The underlying innervation associated with the muscle.")
AnnotationAssertion(rdfs:label schema:nerve "nerve")
AnnotationAssertion(schema:domainIncludes schema:nerve schema:Muscle)
AnnotationAssertion(schema:isPartOf schema:nerve <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:nerve schema:Nerve)
AnnotationAssertion(rdfs:comment schema:nerveMotor "The neurological pathway extension that involves muscle control.")
AnnotationAssertion(rdfs:label schema:nerveMotor "nerveMotor")
AnnotationAssertion(schema:domainIncludes schema:nerveMotor schema:Nerve)
AnnotationAssertion(schema:isPartOf schema:nerveMotor <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:nerveMotor schema:Muscle)
AnnotationAssertion(rdfs:comment schema:netWorth "The total financial value of the person as calculated by subtracting assets from liabilities.")
AnnotationAssertion(rdfs:label schema:netWorth "netWorth")
AnnotationAssertion(schema:domainIncludes schema:netWorth schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:netWorth schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:netWorth schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:newsUpdatesAndGuidelines "Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing [[SpecialAnnouncement]] markup on a site.")
AnnotationAssertion(rdfs:label schema:newsUpdatesAndGuidelines "newsUpdatesAndGuidelines")
AnnotationAssertion(schema:domainIncludes schema:newsUpdatesAndGuidelines schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:newsUpdatesAndGuidelines <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:newsUpdatesAndGuidelines schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:newsUpdatesAndGuidelines schema:WebContent)
AnnotationAssertion(schema:source schema:newsUpdatesAndGuidelines <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:nextItem "A link to the ListItem that follows the current one.")
AnnotationAssertion(rdfs:label schema:nextItem "nextItem")
AnnotationAssertion(schema:domainIncludes schema:nextItem schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:nextItem schema:ListItem)
AnnotationAssertion(rdfs:comment schema:nonEqual "This ordering relation for qualitative values indicates that the subject is not equal to the object.")
AnnotationAssertion(rdfs:label schema:nonEqual "nonEqual")
AnnotationAssertion(schema:contributor schema:nonEqual <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:nonEqual schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:nonEqual schema:QualitativeValue)
AnnotationAssertion(rdfs:comment schema:nonProprietaryName "The generic name of this drug or supplement.")
AnnotationAssertion(rdfs:label schema:nonProprietaryName "nonProprietaryName")
AnnotationAssertion(schema:domainIncludes schema:nonProprietaryName schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:nonProprietaryName schema:Drug)
AnnotationAssertion(schema:isPartOf schema:nonProprietaryName <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:nonProprietaryName schema:Text)
AnnotationAssertion(rdfs:comment schema:nonprofitStatus "nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.")
AnnotationAssertion(rdfs:label schema:nonprofitStatus "nonprofitStatus")
AnnotationAssertion(schema:domainIncludes schema:nonprofitStatus schema:Organization)
AnnotationAssertion(schema:isPartOf schema:nonprofitStatus <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:nonprofitStatus schema:NonprofitType)
AnnotationAssertion(schema:source schema:nonprofitStatus <https://github.com/schemaorg/schemaorg/issues/2543>)
AnnotationAssertion(rdfs:comment schema:normalRange "Range of acceptable values for a typical patient, when applicable.")
AnnotationAssertion(rdfs:label schema:normalRange "normalRange")
AnnotationAssertion(schema:domainIncludes schema:normalRange schema:MedicalTest)
AnnotationAssertion(schema:isPartOf schema:normalRange <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:normalRange schema:MedicalEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:normalRange schema:Text)
AnnotationAssertion(rdfs:comment schema:numAdults "The number of adults staying in the unit.")
AnnotationAssertion(rdfs:label schema:numAdults "numAdults")
AnnotationAssertion(schema:domainIncludes schema:numAdults schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:numAdults schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:numAdults schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numChildren "The number of children staying in the unit.")
AnnotationAssertion(rdfs:label schema:numChildren "numChildren")
AnnotationAssertion(schema:domainIncludes schema:numChildren schema:LodgingReservation)
AnnotationAssertion(schema:rangeIncludes schema:numChildren schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:numChildren schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numConstraints "Indicates the number of constraints property values defined for a particular [[ConstraintNode]] such as [[StatisticalVariable]]. This helps applications understand if they have access to a sufficiently complete description of a [[StatisticalVariable]] or other construct that is defined using properties on template-style nodes.")
AnnotationAssertion(rdfs:label schema:numConstraints "numConstraints")
AnnotationAssertion(schema:domainIncludes schema:numConstraints schema:ConstraintNode)
AnnotationAssertion(schema:isPartOf schema:numConstraints <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numConstraints schema:Integer)
AnnotationAssertion(schema:source schema:numConstraints <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:numTracks "The number of tracks in this album or playlist.")
AnnotationAssertion(rdfs:label schema:numTracks "numTracks")
AnnotationAssertion(schema:domainIncludes schema:numTracks schema:MusicPlaylist)
AnnotationAssertion(schema:rangeIncludes schema:numTracks schema:Integer)
AnnotationAssertion(rdfs:comment schema:numberOfAccommodationUnits "Indicates the total (available plus unavailable) number of accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].")
AnnotationAssertion(rdfs:label schema:numberOfAccommodationUnits "numberOfAccommodationUnits")
AnnotationAssertion(schema:domainIncludes schema:numberOfAccommodationUnits schema:ApartmentComplex)
AnnotationAssertion(schema:domainIncludes schema:numberOfAccommodationUnits schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfAccommodationUnits <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAccommodationUnits schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:numberOfAccommodationUnits <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfAirbags "The number or type of airbags in the vehicle.")
AnnotationAssertion(rdfs:label schema:numberOfAirbags "numberOfAirbags")
AnnotationAssertion(schema:contributor schema:numberOfAirbags <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:numberOfAirbags schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAirbags schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAirbags schema:Text)
AnnotationAssertion(rdfs:comment schema:numberOfAvailableAccommodationUnits "Indicates the number of available accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].")
AnnotationAssertion(rdfs:label schema:numberOfAvailableAccommodationUnits "numberOfAvailableAccommodationUnits")
AnnotationAssertion(schema:domainIncludes schema:numberOfAvailableAccommodationUnits schema:ApartmentComplex)
AnnotationAssertion(schema:domainIncludes schema:numberOfAvailableAccommodationUnits schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfAvailableAccommodationUnits <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAvailableAccommodationUnits schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:numberOfAvailableAccommodationUnits <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfAxles "The number of axles.\\n\\nTypical unit code(s): C62.")
AnnotationAssertion(rdfs:label schema:numberOfAxles "numberOfAxles")
AnnotationAssertion(schema:contributor schema:numberOfAxles <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:numberOfAxles schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAxles schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfAxles schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfBathroomsTotal "The total integer number of bathrooms in some [[Accommodation]], following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): \"The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.\". See also [[numberOfRooms]].")
AnnotationAssertion(rdfs:label schema:numberOfBathroomsTotal "numberOfBathroomsTotal")
AnnotationAssertion(schema:domainIncludes schema:numberOfBathroomsTotal schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:numberOfBathroomsTotal schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfBathroomsTotal <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfBathroomsTotal schema:Integer)
AnnotationAssertion(schema:source schema:numberOfBathroomsTotal <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfBedrooms "The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] or [[FloorPlan]].")
AnnotationAssertion(rdfs:label schema:numberOfBedrooms "numberOfBedrooms")
AnnotationAssertion(schema:domainIncludes schema:numberOfBedrooms schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:numberOfBedrooms schema:ApartmentComplex)
AnnotationAssertion(schema:domainIncludes schema:numberOfBedrooms schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfBedrooms <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfBedrooms schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfBedrooms schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:numberOfBedrooms <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfBeds "The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.")
AnnotationAssertion(rdfs:label schema:numberOfBeds "numberOfBeds")
AnnotationAssertion(schema:contributor schema:numberOfBeds <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:numberOfBeds schema:BedDetails)
AnnotationAssertion(schema:rangeIncludes schema:numberOfBeds schema:Number)
AnnotationAssertion(rdfs:comment schema:numberOfCredits "The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.")
AnnotationAssertion(rdfs:label schema:numberOfCredits "numberOfCredits")
AnnotationAssertion(schema:domainIncludes schema:numberOfCredits schema:Course)
AnnotationAssertion(schema:domainIncludes schema:numberOfCredits schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:numberOfCredits <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfCredits schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:numberOfCredits schema:StructuredValue)
AnnotationAssertion(schema:source schema:numberOfCredits <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:numberOfDoors "The number of doors.\\n\\nTypical unit code(s): C62.")
AnnotationAssertion(rdfs:label schema:numberOfDoors "numberOfDoors")
AnnotationAssertion(schema:contributor schema:numberOfDoors <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:numberOfDoors schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:numberOfDoors schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfDoors schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfEmployees "The number of employees in an organization, e.g. business.")
AnnotationAssertion(rdfs:label schema:numberOfEmployees "numberOfEmployees")
AnnotationAssertion(schema:domainIncludes schema:numberOfEmployees schema:BusinessAudience)
AnnotationAssertion(schema:domainIncludes schema:numberOfEmployees schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:numberOfEmployees schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfEpisodes "The number of episodes in this season or series.")
AnnotationAssertion(rdfs:label schema:numberOfEpisodes "numberOfEpisodes")
AnnotationAssertion(schema:domainIncludes schema:numberOfEpisodes schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:numberOfEpisodes schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:numberOfEpisodes schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:numberOfEpisodes schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:numberOfEpisodes schema:Integer)
AnnotationAssertion(rdfs:comment schema:numberOfForwardGears "The total number of forward gears available for the transmission system of the vehicle.\\n\\nTypical unit code(s): C62.")
AnnotationAssertion(rdfs:label schema:numberOfForwardGears "numberOfForwardGears")
AnnotationAssertion(schema:contributor schema:numberOfForwardGears <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:numberOfForwardGears schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:numberOfForwardGears schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfForwardGears schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfFullBathrooms "Number of full bathrooms - The total number of full and ¾ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).")
AnnotationAssertion(rdfs:label schema:numberOfFullBathrooms "numberOfFullBathrooms")
AnnotationAssertion(schema:domainIncludes schema:numberOfFullBathrooms schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:numberOfFullBathrooms schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfFullBathrooms <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfFullBathrooms schema:Number)
AnnotationAssertion(schema:source schema:numberOfFullBathrooms <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfItems "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.")
AnnotationAssertion(rdfs:label schema:numberOfItems "numberOfItems")
AnnotationAssertion(schema:domainIncludes schema:numberOfItems schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:numberOfItems schema:Integer)
AnnotationAssertion(rdfs:comment schema:numberOfLoanPayments "The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.")
AnnotationAssertion(rdfs:label schema:numberOfLoanPayments "numberOfLoanPayments")
AnnotationAssertion(schema:contributor schema:numberOfLoanPayments <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:numberOfLoanPayments schema:RepaymentSpecification)
AnnotationAssertion(schema:isPartOf schema:numberOfLoanPayments <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfLoanPayments schema:Number)
AnnotationAssertion(schema:source schema:numberOfLoanPayments <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:numberOfPages "The number of pages in the book.")
AnnotationAssertion(rdfs:label schema:numberOfPages "numberOfPages")
AnnotationAssertion(schema:domainIncludes schema:numberOfPages schema:Book)
AnnotationAssertion(schema:rangeIncludes schema:numberOfPages schema:Integer)
AnnotationAssertion(rdfs:comment schema:numberOfPartialBathrooms "Number of partial bathrooms - The total number of half and ¼ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field). ")
AnnotationAssertion(rdfs:label schema:numberOfPartialBathrooms "numberOfPartialBathrooms")
AnnotationAssertion(schema:domainIncludes schema:numberOfPartialBathrooms schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:numberOfPartialBathrooms schema:FloorPlan)
AnnotationAssertion(schema:isPartOf schema:numberOfPartialBathrooms <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:numberOfPartialBathrooms schema:Number)
AnnotationAssertion(schema:source schema:numberOfPartialBathrooms <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:numberOfPlayers "Indicate how many people can play this game (minimum, maximum, or range).")
AnnotationAssertion(rdfs:label schema:numberOfPlayers "numberOfPlayers")
AnnotationAssertion(schema:domainIncludes schema:numberOfPlayers schema:Game)
AnnotationAssertion(schema:domainIncludes schema:numberOfPlayers schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:numberOfPlayers schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfPreviousOwners "The number of owners of the vehicle, including the current one.\\n\\nTypical unit code(s): C62.")
AnnotationAssertion(rdfs:label schema:numberOfPreviousOwners "numberOfPreviousOwners")
AnnotationAssertion(schema:contributor schema:numberOfPreviousOwners <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:numberOfPreviousOwners schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:numberOfPreviousOwners schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfPreviousOwners schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfRooms "The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.")
AnnotationAssertion(rdfs:label schema:numberOfRooms "numberOfRooms")
AnnotationAssertion(schema:contributor schema:numberOfRooms <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:Apartment)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:FloorPlan)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:House)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:LodgingBusiness)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:SingleFamilyResidence)
AnnotationAssertion(schema:domainIncludes schema:numberOfRooms schema:Suite)
AnnotationAssertion(schema:rangeIncludes schema:numberOfRooms schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:numberOfRooms schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:numberOfSeasons "The number of seasons in this series.")
AnnotationAssertion(rdfs:label schema:numberOfSeasons "numberOfSeasons")
AnnotationAssertion(schema:domainIncludes schema:numberOfSeasons schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:numberOfSeasons schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:numberOfSeasons schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:numberOfSeasons schema:Integer)
AnnotationAssertion(rdfs:comment schema:numberedPosition "A number associated with a role in an organization, for example, the number on an athlete's jersey.")
AnnotationAssertion(rdfs:label schema:numberedPosition "numberedPosition")
AnnotationAssertion(schema:domainIncludes schema:numberedPosition schema:OrganizationRole)
AnnotationAssertion(schema:rangeIncludes schema:numberedPosition schema:Number)
AnnotationAssertion(rdfs:comment schema:nutrition "Nutrition information about the recipe or menu item.")
AnnotationAssertion(rdfs:label schema:nutrition "nutrition")
AnnotationAssertion(schema:domainIncludes schema:nutrition schema:MenuItem)
AnnotationAssertion(schema:domainIncludes schema:nutrition schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:nutrition schema:NutritionInformation)
AnnotationAssertion(rdfs:comment schema:observationAbout "The [[observationAbout]] property identifies an entity, often a [[Place]], associated with an [[Observation]].")
AnnotationAssertion(rdfs:label schema:observationAbout "observationAbout")
AnnotationAssertion(schema:domainIncludes schema:observationAbout schema:Observation)
AnnotationAssertion(schema:isPartOf schema:observationAbout <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:observationAbout schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:observationAbout schema:Thing)
AnnotationAssertion(schema:source schema:observationAbout <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:observationDate "The observationDate of an [[Observation]].")
AnnotationAssertion(rdfs:label schema:observationDate "observationDate")
AnnotationAssertion(schema:domainIncludes schema:observationDate schema:Observation)
AnnotationAssertion(schema:isPartOf schema:observationDate <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:observationDate schema:DateTime)
AnnotationAssertion(schema:source schema:observationDate <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:observationPeriod "The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.")
AnnotationAssertion(rdfs:label schema:observationPeriod "observationPeriod")
AnnotationAssertion(schema:domainIncludes schema:observationPeriod schema:Observation)
AnnotationAssertion(schema:isPartOf schema:observationPeriod <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:observationPeriod schema:Text)
AnnotationAssertion(schema:source schema:observationPeriod <https://github.com/schemaorg/schemaorg/issues/2564>)
AnnotationAssertion(rdfs:comment schema:occupancy "The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
Typical unit code(s): C62 for person.")
AnnotationAssertion(rdfs:label schema:occupancy "occupancy")
AnnotationAssertion(schema:contributor schema:occupancy <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:occupancy schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:occupancy schema:Apartment)
AnnotationAssertion(schema:domainIncludes schema:occupancy schema:HotelRoom)
AnnotationAssertion(schema:domainIncludes schema:occupancy schema:SingleFamilyResidence)
AnnotationAssertion(schema:domainIncludes schema:occupancy schema:Suite)
AnnotationAssertion(schema:rangeIncludes schema:occupancy schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:occupationLocation " The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.")
AnnotationAssertion(rdfs:label schema:occupationLocation "occupationLocation")
AnnotationAssertion(schema:domainIncludes schema:occupationLocation schema:Occupation)
AnnotationAssertion(schema:rangeIncludes schema:occupationLocation schema:AdministrativeArea)
AnnotationAssertion(schema:source schema:occupationLocation <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:occupationalCategory "A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\\n
Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.")
AnnotationAssertion(rdfs:label schema:occupationalCategory "occupationalCategory")
AnnotationAssertion(schema:domainIncludes schema:occupationalCategory schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:occupationalCategory schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:occupationalCategory schema:Occupation)
AnnotationAssertion(schema:domainIncludes schema:occupationalCategory schema:Physician)
AnnotationAssertion(schema:domainIncludes schema:occupationalCategory schema:WorkBasedProgram)
AnnotationAssertion(schema:isPartOf schema:occupationalCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:occupationalCategory schema:CategoryCode)
AnnotationAssertion(schema:rangeIncludes schema:occupationalCategory schema:Text)
AnnotationAssertion(schema:source schema:occupationalCategory <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(schema:source schema:occupationalCategory <https://github.com/schemaorg/schemaorg/issues/2192>)
AnnotationAssertion(schema:source schema:occupationalCategory <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(schema:source schema:occupationalCategory <https://github.com/schemaorg/schemaorg/issues/2460>)
AnnotationAssertion(schema:source schema:occupationalCategory <https://github.com/schemaorg/schemaorg/issues/3420>)
AnnotationAssertion(rdfs:comment schema:occupationalCredentialAwarded "A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.")
AnnotationAssertion(rdfs:label schema:occupationalCredentialAwarded "occupationalCredentialAwarded")
AnnotationAssertion(schema:domainIncludes schema:occupationalCredentialAwarded schema:Course)
AnnotationAssertion(schema:domainIncludes schema:occupationalCredentialAwarded schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:occupationalCredentialAwarded <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:occupationalCredentialAwarded schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:rangeIncludes schema:occupationalCredentialAwarded schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:occupationalCredentialAwarded schema:URL)
AnnotationAssertion(schema:source schema:occupationalCredentialAwarded <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:offerCount "The number of offers for the product.")
AnnotationAssertion(rdfs:label schema:offerCount "offerCount")
AnnotationAssertion(schema:domainIncludes schema:offerCount schema:AggregateOffer)
AnnotationAssertion(schema:rangeIncludes schema:offerCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:offeredBy "A pointer to the organization or person making the offer.")
AnnotationAssertion(rdfs:label schema:offeredBy "offeredBy")
AnnotationAssertion(schema:domainIncludes schema:offeredBy schema:Offer)
AnnotationAssertion(schema:inverseOf schema:offeredBy schema:makesOffer)
AnnotationAssertion(schema:rangeIncludes schema:offeredBy schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:offeredBy schema:Person)
AnnotationAssertion(rdfs:comment schema:offers "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
      ")
AnnotationAssertion(rdfs:label schema:offers "offers")
AnnotationAssertion(schema:domainIncludes schema:offers schema:AggregateOffer)
AnnotationAssertion(schema:domainIncludes schema:offers schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:offers schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:offers schema:Event)
AnnotationAssertion(schema:domainIncludes schema:offers schema:MenuItem)
AnnotationAssertion(schema:domainIncludes schema:offers schema:Product)
AnnotationAssertion(schema:domainIncludes schema:offers schema:Service)
AnnotationAssertion(schema:domainIncludes schema:offers schema:Trip)
AnnotationAssertion(schema:inverseOf schema:offers schema:itemOffered)
AnnotationAssertion(schema:rangeIncludes schema:offers schema:Demand)
AnnotationAssertion(schema:rangeIncludes schema:offers schema:Offer)
AnnotationAssertion(schema:source schema:offers <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:offersPrescriptionByMail "Whether prescriptions can be delivered by mail.")
AnnotationAssertion(rdfs:label schema:offersPrescriptionByMail "offersPrescriptionByMail")
AnnotationAssertion(schema:domainIncludes schema:offersPrescriptionByMail schema:HealthPlanFormulary)
AnnotationAssertion(schema:isPartOf schema:offersPrescriptionByMail <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:offersPrescriptionByMail schema:Boolean)
AnnotationAssertion(schema:source schema:offersPrescriptionByMail <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:openingHours "The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\\n\\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \\n* Here is an example: <code>&lt;time itemprop=\"openingHours\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.")
AnnotationAssertion(rdfs:label schema:openingHours "openingHours")
AnnotationAssertion(schema:domainIncludes schema:openingHours schema:CivicStructure)
AnnotationAssertion(schema:domainIncludes schema:openingHours schema:LocalBusiness)
AnnotationAssertion(schema:rangeIncludes schema:openingHours schema:Text)
AnnotationAssertion(rdfs:comment schema:openingHoursSpecification "The opening hours of a certain place.")
AnnotationAssertion(rdfs:label schema:openingHoursSpecification "openingHoursSpecification")
AnnotationAssertion(schema:contributor schema:openingHoursSpecification <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:openingHoursSpecification schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:openingHoursSpecification schema:OpeningHoursSpecification)
AnnotationAssertion(rdfs:comment schema:opens "The opening hour of the place or service on the given day(s) of the week.")
AnnotationAssertion(rdfs:label schema:opens "opens")
AnnotationAssertion(schema:contributor schema:opens <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:opens schema:OpeningHoursSpecification)
AnnotationAssertion(schema:rangeIncludes schema:opens schema:Time)
AnnotationAssertion(rdfs:comment schema:operatingSystem "Operating systems supported (Windows 7, OS X 10.6, Android 1.6).")
AnnotationAssertion(rdfs:label schema:operatingSystem "operatingSystem")
AnnotationAssertion(schema:domainIncludes schema:operatingSystem schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:operatingSystem schema:Text)
AnnotationAssertion(rdfs:comment schema:orderDate "Date order was placed.")
AnnotationAssertion(rdfs:label schema:orderDate "orderDate")
AnnotationAssertion(schema:domainIncludes schema:orderDate schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:orderDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:orderDate schema:DateTime)
AnnotationAssertion(rdfs:comment schema:orderDelivery "The delivery of the parcel related to this order or order item.")
AnnotationAssertion(rdfs:label schema:orderDelivery "orderDelivery")
AnnotationAssertion(schema:domainIncludes schema:orderDelivery schema:Order)
AnnotationAssertion(schema:domainIncludes schema:orderDelivery schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderDelivery schema:ParcelDelivery)
AnnotationAssertion(rdfs:comment schema:orderItemNumber "The identifier of the order item.")
AnnotationAssertion(rdfs:label schema:orderItemNumber "orderItemNumber")
AnnotationAssertion(schema:domainIncludes schema:orderItemNumber schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderItemNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:orderItemStatus "The current status of the order item.")
AnnotationAssertion(rdfs:label schema:orderItemStatus "orderItemStatus")
AnnotationAssertion(schema:domainIncludes schema:orderItemStatus schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderItemStatus schema:OrderStatus)
AnnotationAssertion(rdfs:comment schema:orderQuantity "The number of the item ordered. If the property is not set, assume the quantity is one.")
AnnotationAssertion(rdfs:label schema:orderQuantity "orderQuantity")
AnnotationAssertion(schema:domainIncludes schema:orderQuantity schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderQuantity schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:orderQuantity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:orderStatus "The current status of the order.")
AnnotationAssertion(rdfs:label schema:orderStatus "orderStatus")
AnnotationAssertion(schema:domainIncludes schema:orderStatus schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:orderStatus schema:OrderStatus)
AnnotationAssertion(rdfs:comment schema:orderedItem "The item ordered.")
AnnotationAssertion(rdfs:label schema:orderedItem "orderedItem")
AnnotationAssertion(schema:domainIncludes schema:orderedItem schema:Order)
AnnotationAssertion(schema:domainIncludes schema:orderedItem schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderedItem schema:OrderItem)
AnnotationAssertion(schema:rangeIncludes schema:orderedItem schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:orderedItem schema:Service)
AnnotationAssertion(rdfs:comment schema:organizer "An organizer of an Event.")
AnnotationAssertion(rdfs:label schema:organizer "organizer")
AnnotationAssertion(schema:domainIncludes schema:organizer schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:organizer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:organizer schema:Person)
AnnotationAssertion(rdfs:comment schema:originAddress "Shipper's address.")
AnnotationAssertion(rdfs:label schema:originAddress "originAddress")
AnnotationAssertion(schema:domainIncludes schema:originAddress schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:originAddress schema:PostalAddress)
AnnotationAssertion(rdfs:comment schema:originalMediaLink "Link to the page containing an original version of the content, or directly to an online copy of the original [[MediaObject]] content, e.g. video file.")
AnnotationAssertion(rdfs:label schema:originalMediaLink "originalMediaLink")
AnnotationAssertion(schema:domainIncludes schema:originalMediaLink schema:MediaReview)
AnnotationAssertion(schema:isPartOf schema:originalMediaLink <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:originalMediaLink schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:originalMediaLink schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:originalMediaLink schema:WebPage)
AnnotationAssertion(schema:source schema:originalMediaLink <https://github.com/schemaorg/schemaorg/issues/2450>)
AnnotationAssertion(rdfs:comment schema:originatesFrom "The vasculature the lymphatic structure originates, or afferents, from.")
AnnotationAssertion(rdfs:label schema:originatesFrom "originatesFrom")
AnnotationAssertion(schema:domainIncludes schema:originatesFrom schema:LymphaticVessel)
AnnotationAssertion(schema:isPartOf schema:originatesFrom <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:originatesFrom schema:Vessel)
AnnotationAssertion(rdfs:comment schema:overdosage "Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.")
AnnotationAssertion(rdfs:label schema:overdosage "overdosage")
AnnotationAssertion(schema:domainIncludes schema:overdosage schema:Drug)
AnnotationAssertion(schema:isPartOf schema:overdosage <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:overdosage schema:Text)
AnnotationAssertion(rdfs:comment schema:ownedFrom "The date and time of obtaining the product.")
AnnotationAssertion(rdfs:label schema:ownedFrom "ownedFrom")
AnnotationAssertion(schema:contributor schema:ownedFrom <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:ownedFrom schema:OwnershipInfo)
AnnotationAssertion(schema:rangeIncludes schema:ownedFrom schema:DateTime)
AnnotationAssertion(rdfs:comment schema:ownedThrough "The date and time of giving up ownership on the product.")
AnnotationAssertion(rdfs:label schema:ownedThrough "ownedThrough")
AnnotationAssertion(schema:contributor schema:ownedThrough <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:ownedThrough schema:OwnershipInfo)
AnnotationAssertion(schema:rangeIncludes schema:ownedThrough schema:DateTime)
AnnotationAssertion(rdfs:comment schema:owns "Products owned by the organization or person.")
AnnotationAssertion(rdfs:label schema:owns "owns")
AnnotationAssertion(schema:contributor schema:owns <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:owns schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:owns schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:owns schema:OwnershipInfo)
AnnotationAssertion(schema:rangeIncludes schema:owns schema:Product)
AnnotationAssertion(rdfs:comment schema:pageEnd "The page on which the work ends; for example \"138\" or \"xvi\".")
AnnotationAssertion(rdfs:label schema:pageEnd "pageEnd")
AnnotationAssertion(schema:contributor schema:pageEnd <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:pageEnd schema:Article)
AnnotationAssertion(schema:domainIncludes schema:pageEnd schema:Chapter)
AnnotationAssertion(schema:domainIncludes schema:pageEnd schema:PublicationIssue)
AnnotationAssertion(schema:domainIncludes schema:pageEnd schema:PublicationVolume)
AnnotationAssertion(schema:rangeIncludes schema:pageEnd schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:pageEnd schema:Text)
AnnotationAssertion(rdfs:comment schema:pageStart "The page on which the work starts; for example \"135\" or \"xiii\".")
AnnotationAssertion(rdfs:label schema:pageStart "pageStart")
AnnotationAssertion(schema:contributor schema:pageStart <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:pageStart schema:Article)
AnnotationAssertion(schema:domainIncludes schema:pageStart schema:Chapter)
AnnotationAssertion(schema:domainIncludes schema:pageStart schema:PublicationIssue)
AnnotationAssertion(schema:domainIncludes schema:pageStart schema:PublicationVolume)
AnnotationAssertion(schema:rangeIncludes schema:pageStart schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:pageStart schema:Text)
AnnotationAssertion(rdfs:comment schema:pagination "Any description of pages that is not separated into pageStart and pageEnd; for example, \"1-6, 9, 55\" or \"10-12, 46-49\".")
AnnotationAssertion(rdfs:label schema:pagination "pagination")
AnnotationAssertion(schema:contributor schema:pagination <https://schema.org/docs/collab/bibex>)
AnnotationAssertion(schema:domainIncludes schema:pagination schema:Article)
AnnotationAssertion(schema:domainIncludes schema:pagination schema:Chapter)
AnnotationAssertion(schema:domainIncludes schema:pagination schema:PublicationIssue)
AnnotationAssertion(schema:domainIncludes schema:pagination schema:PublicationVolume)
AnnotationAssertion(schema:rangeIncludes schema:pagination schema:Text)
AnnotationAssertion(rdfs:comment schema:parent "A parent of this person.")
AnnotationAssertion(rdfs:label schema:parent "parent")
AnnotationAssertion(schema:domainIncludes schema:parent schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:parent schema:Person)
AnnotationAssertion(rdfs:comment schema:parentItem "The parent of a question, answer or item in general. Typically used for Q/A discussion threads e.g. a chain of comments with the first comment being an [[Article]] or other [[CreativeWork]]. See also [[comment]] which points from something to a comment about it.")
AnnotationAssertion(rdfs:label schema:parentItem "parentItem")
AnnotationAssertion(schema:domainIncludes schema:parentItem schema:Answer)
AnnotationAssertion(schema:domainIncludes schema:parentItem schema:Comment)
AnnotationAssertion(schema:domainIncludes schema:parentItem schema:Question)
AnnotationAssertion(schema:rangeIncludes schema:parentItem schema:Comment)
AnnotationAssertion(schema:rangeIncludes schema:parentItem schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:parentOrganization "The larger organization that this organization is a [[subOrganization]] of, if any.")
AnnotationAssertion(rdfs:label schema:parentOrganization "parentOrganization")
AnnotationAssertion(schema:domainIncludes schema:parentOrganization schema:Organization)
AnnotationAssertion(schema:inverseOf schema:parentOrganization schema:subOrganization)
AnnotationAssertion(schema:rangeIncludes schema:parentOrganization schema:Organization)
AnnotationAssertion(rdfs:comment schema:parentService "A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.")
AnnotationAssertion(rdfs:label schema:parentService "parentService")
AnnotationAssertion(schema:domainIncludes schema:parentService schema:BroadcastService)
AnnotationAssertion(schema:rangeIncludes schema:parentService schema:BroadcastService)
AnnotationAssertion(rdfs:comment schema:parentTaxon "Closest parent taxon of the taxon in question.")
AnnotationAssertion(rdfs:label schema:parentTaxon "parentTaxon")
AnnotationAssertion(schema:domainIncludes schema:parentTaxon schema:Taxon)
AnnotationAssertion(schema:inverseOf schema:parentTaxon schema:childTaxon)
AnnotationAssertion(schema:isPartOf schema:parentTaxon <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:parentTaxon schema:Taxon)
AnnotationAssertion(schema:rangeIncludes schema:parentTaxon schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:parentTaxon schema:URL)
AnnotationAssertion(schema:source schema:parentTaxon <http://www.bioschemas.org/Taxon>)
AnnotationAssertion(rdfs:comment schema:parents "A parents of the person.")
AnnotationAssertion(rdfs:label schema:parents "parents")
AnnotationAssertion(schema:domainIncludes schema:parents schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:parents schema:Person)
AnnotationAssertion(schema:supersededBy schema:parents schema:parent)
AnnotationAssertion(rdfs:comment schema:partOfInvoice "The order is being paid as part of the referenced Invoice.")
AnnotationAssertion(rdfs:label schema:partOfInvoice "partOfInvoice")
AnnotationAssertion(schema:domainIncludes schema:partOfInvoice schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:partOfInvoice schema:Invoice)
AnnotationAssertion(rdfs:comment schema:partOfOrder "The overall order the items in this delivery were included in.")
AnnotationAssertion(rdfs:label schema:partOfOrder "partOfOrder")
AnnotationAssertion(schema:domainIncludes schema:partOfOrder schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:partOfOrder schema:Order)
AnnotationAssertion(rdfs:comment schema:partOfSystem "The anatomical or organ system that this structure is part of.")
AnnotationAssertion(rdfs:label schema:partOfSystem "partOfSystem")
AnnotationAssertion(schema:domainIncludes schema:partOfSystem schema:AnatomicalStructure)
AnnotationAssertion(schema:isPartOf schema:partOfSystem <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:partOfSystem schema:AnatomicalSystem)
AnnotationAssertion(rdfs:comment schema:partOfTrip "Identifies that this [[Trip]] is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.")
AnnotationAssertion(rdfs:label schema:partOfTrip "partOfTrip")
AnnotationAssertion(schema:contributor schema:partOfTrip <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:domainIncludes schema:partOfTrip schema:Trip)
AnnotationAssertion(schema:inverseOf schema:partOfTrip schema:subTrip)
AnnotationAssertion(schema:isPartOf schema:partOfTrip <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:partOfTrip schema:Trip)
AnnotationAssertion(schema:source schema:partOfTrip <https://github.com/schemaorg/schemaorg/issues/1810>)
AnnotationAssertion(rdfs:comment schema:partySize "Number of people the reservation should accommodate.")
AnnotationAssertion(rdfs:label schema:partySize "partySize")
AnnotationAssertion(schema:domainIncludes schema:partySize schema:FoodEstablishmentReservation)
AnnotationAssertion(schema:domainIncludes schema:partySize schema:TaxiReservation)
AnnotationAssertion(schema:rangeIncludes schema:partySize schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:partySize schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:passengerPriorityStatus "The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).")
AnnotationAssertion(rdfs:label schema:passengerPriorityStatus "passengerPriorityStatus")
AnnotationAssertion(schema:domainIncludes schema:passengerPriorityStatus schema:FlightReservation)
AnnotationAssertion(schema:rangeIncludes schema:passengerPriorityStatus schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:passengerPriorityStatus schema:Text)
AnnotationAssertion(rdfs:comment schema:passengerSequenceNumber "The passenger's sequence number as assigned by the airline.")
AnnotationAssertion(rdfs:label schema:passengerSequenceNumber "passengerSequenceNumber")
AnnotationAssertion(schema:domainIncludes schema:passengerSequenceNumber schema:FlightReservation)
AnnotationAssertion(schema:rangeIncludes schema:passengerSequenceNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:pathophysiology "Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.")
AnnotationAssertion(rdfs:label schema:pathophysiology "pathophysiology")
AnnotationAssertion(schema:domainIncludes schema:pathophysiology schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:pathophysiology schema:PhysicalActivity)
AnnotationAssertion(schema:isPartOf schema:pathophysiology <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:pathophysiology schema:Text)
AnnotationAssertion(rdfs:comment schema:pattern "A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.")
AnnotationAssertion(rdfs:label schema:pattern "pattern")
AnnotationAssertion(schema:domainIncludes schema:pattern schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:pattern schema:Product)
AnnotationAssertion(schema:isPartOf schema:pattern <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:pattern schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:pattern schema:Text)
AnnotationAssertion(schema:source schema:pattern <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:payload "The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of [[weight]] and [[payload]]\\n* Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 3: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:payload "payload")
AnnotationAssertion(schema:contributor schema:payload <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:payload schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:payload <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:payload schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:paymentAccepted "Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.")
AnnotationAssertion(rdfs:label schema:paymentAccepted "paymentAccepted")
AnnotationAssertion(schema:domainIncludes schema:paymentAccepted schema:LocalBusiness)
AnnotationAssertion(schema:rangeIncludes schema:paymentAccepted schema:Text)
AnnotationAssertion(rdfs:comment schema:paymentDue "The date that payment is due.")
AnnotationAssertion(rdfs:label schema:paymentDue "paymentDue")
AnnotationAssertion(schema:domainIncludes schema:paymentDue schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:paymentDue schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:paymentDue schema:DateTime)
AnnotationAssertion(schema:supersededBy schema:paymentDue schema:paymentDueDate)
AnnotationAssertion(rdfs:comment schema:paymentDueDate "The date that payment is due.")
AnnotationAssertion(rdfs:label schema:paymentDueDate "paymentDueDate")
AnnotationAssertion(schema:domainIncludes schema:paymentDueDate schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:paymentDueDate schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:paymentDueDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:paymentDueDate schema:DateTime)
AnnotationAssertion(rdfs:comment schema:paymentMethod "The name of the credit card or other method of payment for the order.")
AnnotationAssertion(rdfs:label schema:paymentMethod "paymentMethod")
AnnotationAssertion(schema:domainIncludes schema:paymentMethod schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:paymentMethod schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:paymentMethod schema:PaymentMethod)
AnnotationAssertion(schema:rangeIncludes schema:paymentMethod schema:Text)
AnnotationAssertion(schema:source schema:paymentMethod <https://github.com/schemaorg/schemaorg/issues/3537>)
AnnotationAssertion(rdfs:comment schema:paymentMethodId "An identifier for the method of payment used (e.g. the last 4 digits of the credit card).")
AnnotationAssertion(rdfs:label schema:paymentMethodId "paymentMethodId")
AnnotationAssertion(schema:domainIncludes schema:paymentMethodId schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:paymentMethodId schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:paymentMethodId schema:Text)
AnnotationAssertion(rdfs:comment schema:paymentMethodType "The type of a payment method.")
AnnotationAssertion(rdfs:label schema:paymentMethodType "paymentMethodType")
AnnotationAssertion(schema:domainIncludes schema:paymentMethodType schema:PaymentMethod)
AnnotationAssertion(schema:isPartOf schema:paymentMethodType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:paymentMethodType schema:PaymentMethodType)
AnnotationAssertion(schema:source schema:paymentMethodType <https://github.com/schemaorg/schemaorg/issues/3537>)
AnnotationAssertion(rdfs:comment schema:paymentStatus "The status of payment; whether the invoice has been paid or not.")
AnnotationAssertion(rdfs:label schema:paymentStatus "paymentStatus")
AnnotationAssertion(schema:domainIncludes schema:paymentStatus schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:paymentStatus schema:PaymentStatusType)
AnnotationAssertion(schema:rangeIncludes schema:paymentStatus schema:Text)
AnnotationAssertion(rdfs:comment schema:paymentUrl "The URL for sending a payment.")
AnnotationAssertion(rdfs:label schema:paymentUrl "paymentUrl")
AnnotationAssertion(schema:domainIncludes schema:paymentUrl schema:Order)
AnnotationAssertion(schema:rangeIncludes schema:paymentUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:penciler "The individual who draws the primary narrative artwork.")
AnnotationAssertion(rdfs:label schema:penciler "penciler")
AnnotationAssertion(schema:domainIncludes schema:penciler schema:ComicIssue)
AnnotationAssertion(schema:domainIncludes schema:penciler schema:ComicStory)
AnnotationAssertion(schema:domainIncludes schema:penciler schema:VisualArtwork)
AnnotationAssertion(schema:isPartOf schema:penciler <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:penciler schema:Person)
AnnotationAssertion(rdfs:comment schema:percentile10 "The 10th percentile value.")
AnnotationAssertion(rdfs:label schema:percentile10 "percentile10")
AnnotationAssertion(schema:domainIncludes schema:percentile10 schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:rangeIncludes schema:percentile10 schema:Number)
AnnotationAssertion(schema:source schema:percentile10 <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:percentile25 "The 25th percentile value.")
AnnotationAssertion(rdfs:label schema:percentile25 "percentile25")
AnnotationAssertion(schema:domainIncludes schema:percentile25 schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:rangeIncludes schema:percentile25 schema:Number)
AnnotationAssertion(schema:source schema:percentile25 <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:percentile75 "The 75th percentile value.")
AnnotationAssertion(rdfs:label schema:percentile75 "percentile75")
AnnotationAssertion(schema:domainIncludes schema:percentile75 schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:rangeIncludes schema:percentile75 schema:Number)
AnnotationAssertion(schema:source schema:percentile75 <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:percentile90 "The 90th percentile value.")
AnnotationAssertion(rdfs:label schema:percentile90 "percentile90")
AnnotationAssertion(schema:domainIncludes schema:percentile90 schema:QuantitativeValueDistribution)
AnnotationAssertion(schema:rangeIncludes schema:percentile90 schema:Number)
AnnotationAssertion(schema:source schema:percentile90 <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:performer "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.")
AnnotationAssertion(rdfs:label schema:performer "performer")
AnnotationAssertion(schema:domainIncludes schema:performer schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:performer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:performer schema:Person)
AnnotationAssertion(rdfs:comment schema:performerIn "Event that this person is a performer or participant in.")
AnnotationAssertion(rdfs:label schema:performerIn "performerIn")
AnnotationAssertion(schema:domainIncludes schema:performerIn schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:performerIn schema:Event)
AnnotationAssertion(rdfs:comment schema:performers "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.")
AnnotationAssertion(rdfs:label schema:performers "performers")
AnnotationAssertion(schema:domainIncludes schema:performers schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:performers schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:performers schema:Person)
AnnotationAssertion(schema:supersededBy schema:performers schema:performer)
AnnotationAssertion(rdfs:comment schema:permissionType "The type of permission granted the person, organization, or audience.")
AnnotationAssertion(rdfs:label schema:permissionType "permissionType")
AnnotationAssertion(schema:domainIncludes schema:permissionType schema:DigitalDocumentPermission)
AnnotationAssertion(schema:rangeIncludes schema:permissionType schema:DigitalDocumentPermissionType)
AnnotationAssertion(rdfs:comment schema:permissions "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).")
AnnotationAssertion(rdfs:label schema:permissions "permissions")
AnnotationAssertion(schema:domainIncludes schema:permissions schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:permissions schema:Text)
AnnotationAssertion(rdfs:comment schema:permitAudience "The target audience for this permit.")
AnnotationAssertion(rdfs:label schema:permitAudience "permitAudience")
AnnotationAssertion(schema:domainIncludes schema:permitAudience schema:Permit)
AnnotationAssertion(schema:rangeIncludes schema:permitAudience schema:Audience)
AnnotationAssertion(rdfs:comment schema:permittedUsage "Indications regarding the permitted usage of the accommodation.")
AnnotationAssertion(rdfs:label schema:permittedUsage "permittedUsage")
AnnotationAssertion(schema:contributor schema:permittedUsage <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:permittedUsage schema:Accommodation)
AnnotationAssertion(schema:rangeIncludes schema:permittedUsage schema:Text)
AnnotationAssertion(rdfs:comment schema:petsAllowed "Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.")
AnnotationAssertion(rdfs:label schema:petsAllowed "petsAllowed")
AnnotationAssertion(schema:contributor schema:petsAllowed <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:petsAllowed schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:petsAllowed schema:ApartmentComplex)
AnnotationAssertion(schema:domainIncludes schema:petsAllowed schema:FloorPlan)
AnnotationAssertion(schema:domainIncludes schema:petsAllowed schema:LodgingBusiness)
AnnotationAssertion(schema:rangeIncludes schema:petsAllowed schema:Boolean)
AnnotationAssertion(schema:rangeIncludes schema:petsAllowed schema:Text)
AnnotationAssertion(rdfs:comment schema:phoneticText "Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. For example the city name of Houston in IPA: /ˈhjuːstən/.")
AnnotationAssertion(rdfs:label schema:phoneticText "phoneticText")
AnnotationAssertion(schema:domainIncludes schema:phoneticText schema:PronounceableText)
AnnotationAssertion(schema:isPartOf schema:phoneticText <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:phoneticText schema:Text)
AnnotationAssertion(schema:source schema:phoneticText <https://github.com/schemaorg/schemaorg/issues/2108>)
AnnotationAssertion(rdfs:comment schema:photos "Photographs of this place.")
AnnotationAssertion(rdfs:label schema:photos "photos")
AnnotationAssertion(schema:domainIncludes schema:photos schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:photos schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:photos schema:Photograph)
AnnotationAssertion(schema:supersededBy schema:photos schema:photo)
AnnotationAssertion(rdfs:comment schema:physicalRequirement "A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.")
AnnotationAssertion(rdfs:label schema:physicalRequirement "physicalRequirement")
AnnotationAssertion(schema:domainIncludes schema:physicalRequirement schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:physicalRequirement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:physicalRequirement schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:physicalRequirement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:physicalRequirement schema:URL)
AnnotationAssertion(schema:source schema:physicalRequirement <https://github.com/schemaorg/schemaorg/issues/2384>)
AnnotationAssertion(rdfs:comment schema:physiologicalBenefits "Specific physiologic benefits associated to the plan.")
AnnotationAssertion(rdfs:label schema:physiologicalBenefits "physiologicalBenefits")
AnnotationAssertion(schema:domainIncludes schema:physiologicalBenefits schema:Diet)
AnnotationAssertion(schema:isPartOf schema:physiologicalBenefits <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:physiologicalBenefits schema:Text)
AnnotationAssertion(rdfs:comment schema:pickupLocation "Where a taxi will pick up a passenger or a rental car can be picked up.")
AnnotationAssertion(rdfs:label schema:pickupLocation "pickupLocation")
AnnotationAssertion(schema:domainIncludes schema:pickupLocation schema:RentalCarReservation)
AnnotationAssertion(schema:domainIncludes schema:pickupLocation schema:TaxiReservation)
AnnotationAssertion(schema:rangeIncludes schema:pickupLocation schema:Place)
AnnotationAssertion(rdfs:comment schema:pickupTime "When a taxi will pick up a passenger or a rental car can be picked up.")
AnnotationAssertion(rdfs:label schema:pickupTime "pickupTime")
AnnotationAssertion(schema:domainIncludes schema:pickupTime schema:RentalCarReservation)
AnnotationAssertion(schema:domainIncludes schema:pickupTime schema:TaxiReservation)
AnnotationAssertion(schema:rangeIncludes schema:pickupTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:playMode "Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.")
AnnotationAssertion(rdfs:label schema:playMode "playMode")
AnnotationAssertion(schema:domainIncludes schema:playMode schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:playMode schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:playMode schema:GamePlayMode)
AnnotationAssertion(rdfs:comment schema:playerType "Player type required&#x2014;for example, Flash or Silverlight.")
AnnotationAssertion(rdfs:label schema:playerType "playerType")
AnnotationAssertion(schema:domainIncludes schema:playerType schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:playerType schema:Text)
AnnotationAssertion(rdfs:comment schema:playersOnline "Number of players on the server.")
AnnotationAssertion(rdfs:label schema:playersOnline "playersOnline")
AnnotationAssertion(schema:domainIncludes schema:playersOnline schema:GameServer)
AnnotationAssertion(schema:rangeIncludes schema:playersOnline schema:Integer)
AnnotationAssertion(rdfs:comment schema:polygon "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.")
AnnotationAssertion(rdfs:label schema:polygon "polygon")
AnnotationAssertion(schema:domainIncludes schema:polygon schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:polygon schema:Text)
AnnotationAssertion(rdfs:comment schema:populationType "Indicates the populationType common to all members of a [[StatisticalPopulation]] or all cases within the scope of a [[StatisticalVariable]].")
AnnotationAssertion(rdfs:label schema:populationType "populationType")
AnnotationAssertion(schema:domainIncludes schema:populationType schema:StatisticalPopulation)
AnnotationAssertion(schema:domainIncludes schema:populationType schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:populationType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:populationType schema:Class)
AnnotationAssertion(schema:source schema:populationType <https://github.com/schemaorg/schemaorg/issues/2291>)
AnnotationAssertion(rdfs:comment schema:positiveNotes "Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.

In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.

The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).")
AnnotationAssertion(rdfs:label schema:positiveNotes "positiveNotes")
AnnotationAssertion(schema:domainIncludes schema:positiveNotes schema:Product)
AnnotationAssertion(schema:domainIncludes schema:positiveNotes schema:Review)
AnnotationAssertion(schema:isPartOf schema:positiveNotes <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:positiveNotes schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:positiveNotes schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:positiveNotes schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:positiveNotes schema:WebContent)
AnnotationAssertion(schema:source schema:positiveNotes <https://github.com/schemaorg/schemaorg/issues/2832>)
AnnotationAssertion(rdfs:comment schema:possibleComplication "A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.")
AnnotationAssertion(rdfs:label schema:possibleComplication "possibleComplication")
AnnotationAssertion(schema:domainIncludes schema:possibleComplication schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:possibleComplication <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:possibleComplication schema:Text)
AnnotationAssertion(rdfs:comment schema:possibleTreatment "A possible treatment to address this condition, sign or symptom.")
AnnotationAssertion(rdfs:label schema:possibleTreatment "possibleTreatment")
AnnotationAssertion(schema:domainIncludes schema:possibleTreatment schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:possibleTreatment schema:MedicalSignOrSymptom)
AnnotationAssertion(schema:isPartOf schema:possibleTreatment <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:possibleTreatment schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:postOfficeBoxNumber "The post office box number for PO box addresses.")
AnnotationAssertion(rdfs:label schema:postOfficeBoxNumber "postOfficeBoxNumber")
AnnotationAssertion(schema:domainIncludes schema:postOfficeBoxNumber schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:postOfficeBoxNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:postOp "A description of the postoperative procedures, care, and/or followups for this device.")
AnnotationAssertion(rdfs:label schema:postOp "postOp")
AnnotationAssertion(schema:domainIncludes schema:postOp schema:MedicalDevice)
AnnotationAssertion(schema:isPartOf schema:postOp <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:postOp schema:Text)
AnnotationAssertion(rdfs:comment schema:postalCode "The postal code. For example, 94043.")
AnnotationAssertion(rdfs:label schema:postalCode "postalCode")
AnnotationAssertion(schema:domainIncludes schema:postalCode schema:DefinedRegion)
AnnotationAssertion(schema:domainIncludes schema:postalCode schema:GeoCoordinates)
AnnotationAssertion(schema:domainIncludes schema:postalCode schema:GeoShape)
AnnotationAssertion(schema:domainIncludes schema:postalCode schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:postalCode schema:Text)
AnnotationAssertion(schema:source schema:postalCode <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:postalCodeBegin "First postal code in a range (included).")
AnnotationAssertion(rdfs:label schema:postalCodeBegin "postalCodeBegin")
AnnotationAssertion(schema:domainIncludes schema:postalCodeBegin schema:PostalCodeRangeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:postalCodeBegin schema:Text)
AnnotationAssertion(schema:source schema:postalCodeBegin <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:postalCodeEnd "Last postal code in the range (included). Needs to be after [[postalCodeBegin]].")
AnnotationAssertion(rdfs:label schema:postalCodeEnd "postalCodeEnd")
AnnotationAssertion(schema:domainIncludes schema:postalCodeEnd schema:PostalCodeRangeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:postalCodeEnd schema:Text)
AnnotationAssertion(schema:source schema:postalCodeEnd <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:postalCodePrefix "A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.")
AnnotationAssertion(rdfs:label schema:postalCodePrefix "postalCodePrefix")
AnnotationAssertion(schema:domainIncludes schema:postalCodePrefix schema:DefinedRegion)
AnnotationAssertion(schema:rangeIncludes schema:postalCodePrefix schema:Text)
AnnotationAssertion(schema:source schema:postalCodePrefix <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:postalCodeRange "A defined range of postal codes.")
AnnotationAssertion(rdfs:label schema:postalCodeRange "postalCodeRange")
AnnotationAssertion(schema:domainIncludes schema:postalCodeRange schema:DefinedRegion)
AnnotationAssertion(schema:rangeIncludes schema:postalCodeRange schema:PostalCodeRangeSpecification)
AnnotationAssertion(schema:source schema:postalCodeRange <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:potentialAction "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.")
AnnotationAssertion(rdfs:label schema:potentialAction "potentialAction")
AnnotationAssertion(schema:domainIncludes schema:potentialAction schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:potentialAction schema:Action)
AnnotationAssertion(rdfs:comment schema:potentialUse "Intended use of the BioChemEntity by humans.")
AnnotationAssertion(rdfs:label schema:potentialUse "potentialUse")
AnnotationAssertion(schema:domainIncludes schema:potentialUse schema:ChemicalSubstance)
AnnotationAssertion(schema:domainIncludes schema:potentialUse schema:MolecularEntity)
AnnotationAssertion(schema:isPartOf schema:potentialUse <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:potentialUse schema:DefinedTerm)
AnnotationAssertion(schema:source schema:potentialUse <http://www.bioschemas.org/ChemicalSubstance>)
AnnotationAssertion(rdfs:comment schema:practicesAt "A [[MedicalOrganization]] where the [[IndividualPhysician]] practices.")
AnnotationAssertion(rdfs:label schema:practicesAt "practicesAt")
AnnotationAssertion(schema:domainIncludes schema:practicesAt schema:IndividualPhysician)
AnnotationAssertion(schema:isPartOf schema:practicesAt <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:practicesAt schema:MedicalOrganization)
AnnotationAssertion(schema:source schema:practicesAt <https://github.com/schemaorg/schemaorg/issues/3420>)
AnnotationAssertion(rdfs:comment schema:preOp "A description of the workup, testing, and other preparations required before implanting this device.")
AnnotationAssertion(rdfs:label schema:preOp "preOp")
AnnotationAssertion(schema:domainIncludes schema:preOp schema:MedicalDevice)
AnnotationAssertion(schema:isPartOf schema:preOp <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:preOp schema:Text)
AnnotationAssertion(rdfs:comment schema:predecessorOf "A pointer from a previous, often discontinued variant of the product to its newer variant.")
AnnotationAssertion(rdfs:label schema:predecessorOf "predecessorOf")
AnnotationAssertion(schema:contributor schema:predecessorOf <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:predecessorOf schema:ProductModel)
AnnotationAssertion(schema:rangeIncludes schema:predecessorOf schema:ProductModel)
AnnotationAssertion(rdfs:comment schema:pregnancyCategory "Pregnancy category of this drug.")
AnnotationAssertion(rdfs:label schema:pregnancyCategory "pregnancyCategory")
AnnotationAssertion(schema:domainIncludes schema:pregnancyCategory schema:Drug)
AnnotationAssertion(schema:isPartOf schema:pregnancyCategory <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:pregnancyCategory schema:DrugPregnancyCategory)
AnnotationAssertion(rdfs:comment schema:pregnancyWarning "Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.")
AnnotationAssertion(rdfs:label schema:pregnancyWarning "pregnancyWarning")
AnnotationAssertion(schema:domainIncludes schema:pregnancyWarning schema:Drug)
AnnotationAssertion(schema:isPartOf schema:pregnancyWarning <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:pregnancyWarning schema:Text)
AnnotationAssertion(rdfs:comment schema:prepTime "The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:prepTime "prepTime")
AnnotationAssertion(schema:domainIncludes schema:prepTime schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:prepTime schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:prepTime schema:Duration)
AnnotationAssertion(rdfs:comment schema:preparation "Typical preparation that a patient must undergo before having the procedure performed.")
AnnotationAssertion(rdfs:label schema:preparation "preparation")
AnnotationAssertion(schema:domainIncludes schema:preparation schema:MedicalProcedure)
AnnotationAssertion(schema:isPartOf schema:preparation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:preparation schema:MedicalEntity)
AnnotationAssertion(schema:rangeIncludes schema:preparation schema:Text)
AnnotationAssertion(rdfs:comment schema:prescribingInfo "Link to prescribing information for the drug.")
AnnotationAssertion(rdfs:label schema:prescribingInfo "prescribingInfo")
AnnotationAssertion(schema:domainIncludes schema:prescribingInfo schema:Drug)
AnnotationAssertion(schema:isPartOf schema:prescribingInfo <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:prescribingInfo schema:URL)
AnnotationAssertion(rdfs:comment schema:prescriptionStatus "Indicates the status of drug prescription, e.g. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.")
AnnotationAssertion(rdfs:label schema:prescriptionStatus "prescriptionStatus")
AnnotationAssertion(schema:domainIncludes schema:prescriptionStatus schema:Drug)
AnnotationAssertion(schema:isPartOf schema:prescriptionStatus <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:prescriptionStatus schema:DrugPrescriptionStatus)
AnnotationAssertion(schema:rangeIncludes schema:prescriptionStatus schema:Text)
AnnotationAssertion(rdfs:comment schema:previousItem "A link to the ListItem that precedes the current one.")
AnnotationAssertion(rdfs:label schema:previousItem "previousItem")
AnnotationAssertion(schema:domainIncludes schema:previousItem schema:ListItem)
AnnotationAssertion(schema:rangeIncludes schema:previousItem schema:ListItem)
AnnotationAssertion(rdfs:comment schema:previousStartDate "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.")
AnnotationAssertion(rdfs:label schema:previousStartDate "previousStartDate")
AnnotationAssertion(schema:domainIncludes schema:previousStartDate schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:previousStartDate schema:Date)
AnnotationAssertion(rdfs:comment schema:price "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\\n\\nUsage guidelines:\\n\\n* Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.
      ")
AnnotationAssertion(rdfs:label schema:price "price")
AnnotationAssertion(schema:domainIncludes schema:price schema:DonateAction)
AnnotationAssertion(schema:domainIncludes schema:price schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:price schema:PriceSpecification)
AnnotationAssertion(schema:domainIncludes schema:price schema:TradeAction)
AnnotationAssertion(schema:rangeIncludes schema:price schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:price schema:Text)
AnnotationAssertion(rdfs:comment schema:priceComponent "This property links to all [[UnitPriceSpecification]] nodes that apply in parallel for the [[CompoundPriceSpecification]] node.")
AnnotationAssertion(rdfs:label schema:priceComponent "priceComponent")
AnnotationAssertion(schema:contributor schema:priceComponent <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:priceComponent schema:CompoundPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:priceComponent schema:UnitPriceSpecification)
AnnotationAssertion(rdfs:comment schema:priceComponentType "Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.")
AnnotationAssertion(rdfs:label schema:priceComponentType "priceComponentType")
AnnotationAssertion(schema:domainIncludes schema:priceComponentType schema:UnitPriceSpecification)
AnnotationAssertion(schema:isPartOf schema:priceComponentType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:priceComponentType schema:PriceComponentTypeEnumeration)
AnnotationAssertion(schema:source schema:priceComponentType <https://github.com/schemaorg/schemaorg/issues/2689>)
AnnotationAssertion(rdfs:comment schema:priceCurrency "The currency of the price, or a price component when attached to [[PriceSpecification]] and its subtypes.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".")
AnnotationAssertion(rdfs:label schema:priceCurrency "priceCurrency")
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:DonateAction)
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:PriceSpecification)
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:Reservation)
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:Ticket)
AnnotationAssertion(schema:domainIncludes schema:priceCurrency schema:TradeAction)
AnnotationAssertion(schema:rangeIncludes schema:priceCurrency schema:Text)
AnnotationAssertion(rdfs:comment schema:priceRange "The price range of the business, for example ```$$$```.")
AnnotationAssertion(rdfs:label schema:priceRange "priceRange")
AnnotationAssertion(schema:domainIncludes schema:priceRange schema:LocalBusiness)
AnnotationAssertion(schema:rangeIncludes schema:priceRange schema:Text)
AnnotationAssertion(rdfs:comment schema:priceSpecification "One or more detailed price specifications, indicating the unit price and delivery or payment charges.")
AnnotationAssertion(rdfs:label schema:priceSpecification "priceSpecification")
AnnotationAssertion(schema:contributor schema:priceSpecification <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:priceSpecification schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:priceSpecification schema:DonateAction)
AnnotationAssertion(schema:domainIncludes schema:priceSpecification schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:priceSpecification schema:TradeAction)
AnnotationAssertion(schema:rangeIncludes schema:priceSpecification schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:priceType "Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the [[priceType]] property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.")
AnnotationAssertion(rdfs:label schema:priceType "priceType")
AnnotationAssertion(schema:contributor schema:priceType <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:priceType schema:CompoundPriceSpecification)
AnnotationAssertion(schema:domainIncludes schema:priceType schema:UnitPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:priceType schema:PriceTypeEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:priceType schema:Text)
AnnotationAssertion(rdfs:comment schema:priceValidUntil "The date after which the price is no longer available.")
AnnotationAssertion(rdfs:label schema:priceValidUntil "priceValidUntil")
AnnotationAssertion(schema:domainIncludes schema:priceValidUntil schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:priceValidUntil schema:Date)
AnnotationAssertion(rdfs:comment schema:primaryImageOfPage "Indicates the main image on the page.")
AnnotationAssertion(rdfs:label schema:primaryImageOfPage "primaryImageOfPage")
AnnotationAssertion(schema:domainIncludes schema:primaryImageOfPage schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:primaryImageOfPage schema:ImageObject)
AnnotationAssertion(rdfs:comment schema:primaryPrevention "A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.")
AnnotationAssertion(rdfs:label schema:primaryPrevention "primaryPrevention")
AnnotationAssertion(schema:domainIncludes schema:primaryPrevention schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:primaryPrevention <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:primaryPrevention schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:printColumn "The number of the column in which the NewsArticle appears in the print edition.")
AnnotationAssertion(rdfs:label schema:printColumn "printColumn")
AnnotationAssertion(schema:domainIncludes schema:printColumn schema:NewsArticle)
AnnotationAssertion(schema:rangeIncludes schema:printColumn schema:Text)
AnnotationAssertion(rdfs:comment schema:printEdition "The edition of the print product in which the NewsArticle appears.")
AnnotationAssertion(rdfs:label schema:printEdition "printEdition")
AnnotationAssertion(schema:domainIncludes schema:printEdition schema:NewsArticle)
AnnotationAssertion(schema:rangeIncludes schema:printEdition schema:Text)
AnnotationAssertion(rdfs:comment schema:printPage "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).")
AnnotationAssertion(rdfs:label schema:printPage "printPage")
AnnotationAssertion(schema:domainIncludes schema:printPage schema:NewsArticle)
AnnotationAssertion(schema:rangeIncludes schema:printPage schema:Text)
AnnotationAssertion(rdfs:comment schema:printSection "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.")
AnnotationAssertion(rdfs:label schema:printSection "printSection")
AnnotationAssertion(schema:domainIncludes schema:printSection schema:NewsArticle)
AnnotationAssertion(schema:rangeIncludes schema:printSection schema:Text)
AnnotationAssertion(rdfs:comment schema:procedure "A description of the procedure involved in setting up, using, and/or installing the device.")
AnnotationAssertion(rdfs:label schema:procedure "procedure")
AnnotationAssertion(schema:domainIncludes schema:procedure schema:MedicalDevice)
AnnotationAssertion(schema:isPartOf schema:procedure <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:procedure schema:Text)
AnnotationAssertion(rdfs:comment schema:procedureType "The type of procedure, for example Surgical, Noninvasive, or Percutaneous.")
AnnotationAssertion(rdfs:label schema:procedureType "procedureType")
AnnotationAssertion(schema:domainIncludes schema:procedureType schema:MedicalProcedure)
AnnotationAssertion(schema:isPartOf schema:procedureType <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:procedureType schema:MedicalProcedureType)
AnnotationAssertion(rdfs:comment schema:processingTime "Estimated processing time for the service using this channel.")
AnnotationAssertion(rdfs:label schema:processingTime "processingTime")
AnnotationAssertion(schema:domainIncludes schema:processingTime schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:processingTime schema:Duration)
AnnotationAssertion(rdfs:comment schema:processorRequirements "Processor architecture required to run the application (e.g. IA64).")
AnnotationAssertion(rdfs:label schema:processorRequirements "processorRequirements")
AnnotationAssertion(schema:domainIncludes schema:processorRequirements schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:processorRequirements schema:Text)
AnnotationAssertion(rdfs:comment schema:producer "The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).")
AnnotationAssertion(rdfs:label schema:producer "producer")
AnnotationAssertion(schema:domainIncludes schema:producer schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:producer schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:producer schema:Person)
AnnotationAssertion(rdfs:comment schema:produces "The tangible thing generated by the service, e.g. a passport, permit, etc.")
AnnotationAssertion(rdfs:label schema:produces "produces")
AnnotationAssertion(schema:domainIncludes schema:produces schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:produces schema:Thing)
AnnotationAssertion(schema:supersededBy schema:produces schema:serviceOutput)
AnnotationAssertion(rdfs:comment schema:productGroupID "Indicates a textual identifier for a ProductGroup.")
AnnotationAssertion(rdfs:label schema:productGroupID "productGroupID")
AnnotationAssertion(schema:domainIncludes schema:productGroupID schema:ProductGroup)
AnnotationAssertion(schema:isPartOf schema:productGroupID <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:productGroupID schema:Text)
AnnotationAssertion(schema:source schema:productGroupID <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:productSupported "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\").")
AnnotationAssertion(rdfs:label schema:productSupported "productSupported")
AnnotationAssertion(schema:domainIncludes schema:productSupported schema:ContactPoint)
AnnotationAssertion(schema:rangeIncludes schema:productSupported schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:productSupported schema:Text)
AnnotationAssertion(rdfs:comment schema:productionCompany "The production company or studio responsible for the item, e.g. series, video game, episode etc.")
AnnotationAssertion(rdfs:label schema:productionCompany "productionCompany")
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:productionCompany schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:productionCompany schema:Organization)
AnnotationAssertion(rdfs:comment schema:productionDate "The date of production of the item, e.g. vehicle.")
AnnotationAssertion(rdfs:label schema:productionDate "productionDate")
AnnotationAssertion(schema:contributor schema:productionDate <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:productionDate schema:Product)
AnnotationAssertion(schema:domainIncludes schema:productionDate schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:productionDate schema:Date)
AnnotationAssertion(rdfs:comment schema:proficiencyLevel "Proficiency needed for this content; expected values: 'Beginner', 'Expert'.")
AnnotationAssertion(rdfs:label schema:proficiencyLevel "proficiencyLevel")
AnnotationAssertion(schema:domainIncludes schema:proficiencyLevel schema:TechArticle)
AnnotationAssertion(schema:rangeIncludes schema:proficiencyLevel schema:Text)
AnnotationAssertion(rdfs:comment schema:program "The [MemberProgram](https://schema.org/MemberProgram) associated with a [ProgramMembership](https://schema.org/ProgramMembership).")
AnnotationAssertion(rdfs:label schema:program "program")
AnnotationAssertion(schema:domainIncludes schema:program schema:ProgramMembership)
AnnotationAssertion(schema:rangeIncludes schema:program schema:MemberProgram)
AnnotationAssertion(schema:source schema:program <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:programMembershipUsed "Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.")
AnnotationAssertion(rdfs:label schema:programMembershipUsed "programMembershipUsed")
AnnotationAssertion(schema:domainIncludes schema:programMembershipUsed schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:programMembershipUsed schema:ProgramMembership)
AnnotationAssertion(rdfs:comment schema:programName "The program providing the membership. It is preferable to use [:program](https://schema.org/program) instead.")
AnnotationAssertion(rdfs:label schema:programName "programName")
AnnotationAssertion(schema:domainIncludes schema:programName schema:ProgramMembership)
AnnotationAssertion(schema:rangeIncludes schema:programName schema:Text)
AnnotationAssertion(rdfs:comment schema:programPrerequisites "Prerequisites for enrolling in the program.")
AnnotationAssertion(rdfs:label schema:programPrerequisites "programPrerequisites")
AnnotationAssertion(schema:domainIncludes schema:programPrerequisites schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:programPrerequisites <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:programPrerequisites schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:programPrerequisites schema:Course)
AnnotationAssertion(schema:rangeIncludes schema:programPrerequisites schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:rangeIncludes schema:programPrerequisites schema:Text)
AnnotationAssertion(schema:source schema:programPrerequisites <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:programType "The type of educational or occupational program. For example, classroom, internship, alternance, etc.")
AnnotationAssertion(rdfs:label schema:programType "programType")
AnnotationAssertion(schema:domainIncludes schema:programType schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:programType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:programType schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:programType schema:Text)
AnnotationAssertion(schema:source schema:programType <https://github.com/schemaorg/schemaorg/issues/2460>)
AnnotationAssertion(rdfs:comment schema:programmingLanguage "The computer programming language.")
AnnotationAssertion(rdfs:label schema:programmingLanguage "programmingLanguage")
AnnotationAssertion(schema:domainIncludes schema:programmingLanguage schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:programmingLanguage schema:ComputerLanguage)
AnnotationAssertion(schema:rangeIncludes schema:programmingLanguage schema:Text)
AnnotationAssertion(rdfs:comment schema:programmingModel "Indicates whether API is managed or unmanaged.")
AnnotationAssertion(rdfs:label schema:programmingModel "programmingModel")
AnnotationAssertion(schema:domainIncludes schema:programmingModel schema:APIReference)
AnnotationAssertion(schema:rangeIncludes schema:programmingModel schema:Text)
AnnotationAssertion(rdfs:comment schema:propertyID "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific ID of the property), or (3)
a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
Standards bodies should promote a standard prefix for the identifiers of properties from their standards.")
AnnotationAssertion(rdfs:label schema:propertyID "propertyID")
AnnotationAssertion(schema:domainIncludes schema:propertyID schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:propertyID schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:propertyID schema:URL)
AnnotationAssertion(rdfs:comment schema:proprietaryName "Proprietary name given to the diet plan, typically by its originator or creator.")
AnnotationAssertion(rdfs:label schema:proprietaryName "proprietaryName")
AnnotationAssertion(schema:domainIncludes schema:proprietaryName schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:proprietaryName schema:Drug)
AnnotationAssertion(schema:isPartOf schema:proprietaryName <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:proprietaryName schema:Text)
AnnotationAssertion(rdfs:comment schema:proteinContent "The number of grams of protein.")
AnnotationAssertion(rdfs:label schema:proteinContent "proteinContent")
AnnotationAssertion(schema:domainIncludes schema:proteinContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:proteinContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:provider "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.")
AnnotationAssertion(rdfs:label schema:provider "provider")
AnnotationAssertion(schema:domainIncludes schema:provider schema:Action)
AnnotationAssertion(schema:domainIncludes schema:provider schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:provider schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:provider schema:Invoice)
AnnotationAssertion(schema:domainIncludes schema:provider schema:ParcelDelivery)
AnnotationAssertion(schema:domainIncludes schema:provider schema:Reservation)
AnnotationAssertion(schema:domainIncludes schema:provider schema:Service)
AnnotationAssertion(schema:domainIncludes schema:provider schema:Trip)
AnnotationAssertion(schema:isPartOf schema:provider <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:provider schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:provider schema:Person)
AnnotationAssertion(schema:source schema:provider <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(schema:source schema:provider <https://github.com/schemaorg/schemaorg/issues/2927>)
AnnotationAssertion(rdfs:comment schema:providerMobility "Indicates the mobility of a provided service (e.g. 'static', 'dynamic').")
AnnotationAssertion(rdfs:label schema:providerMobility "providerMobility")
AnnotationAssertion(schema:domainIncludes schema:providerMobility schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:providerMobility schema:Text)
AnnotationAssertion(rdfs:comment schema:providesBroadcastService "The BroadcastService offered on this channel.")
AnnotationAssertion(rdfs:label schema:providesBroadcastService "providesBroadcastService")
AnnotationAssertion(schema:domainIncludes schema:providesBroadcastService schema:BroadcastChannel)
AnnotationAssertion(schema:inverseOf schema:providesBroadcastService schema:hasBroadcastChannel)
AnnotationAssertion(schema:rangeIncludes schema:providesBroadcastService schema:BroadcastService)
AnnotationAssertion(rdfs:comment schema:providesService "The service provided by this channel.")
AnnotationAssertion(rdfs:label schema:providesService "providesService")
AnnotationAssertion(schema:domainIncludes schema:providesService schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:providesService schema:Service)
AnnotationAssertion(rdfs:comment schema:publicAccess "A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value.")
AnnotationAssertion(rdfs:label schema:publicAccess "publicAccess")
AnnotationAssertion(schema:domainIncludes schema:publicAccess schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:publicAccess schema:Boolean)
AnnotationAssertion(rdfs:comment schema:publicTransportClosuresInfo "Information about public transport closures.")
AnnotationAssertion(rdfs:label schema:publicTransportClosuresInfo "publicTransportClosuresInfo")
AnnotationAssertion(schema:domainIncludes schema:publicTransportClosuresInfo schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:publicTransportClosuresInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:publicTransportClosuresInfo schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:publicTransportClosuresInfo schema:WebContent)
AnnotationAssertion(schema:source schema:publicTransportClosuresInfo <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:publication "A publication event associated with the item.")
AnnotationAssertion(rdfs:label schema:publication "publication")
AnnotationAssertion(schema:domainIncludes schema:publication schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:publication schema:PublicationEvent)
AnnotationAssertion(rdfs:comment schema:publicationType "The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).")
AnnotationAssertion(rdfs:label schema:publicationType "publicationType")
AnnotationAssertion(schema:domainIncludes schema:publicationType schema:MedicalScholarlyArticle)
AnnotationAssertion(schema:isPartOf schema:publicationType <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:publicationType schema:Text)
AnnotationAssertion(rdfs:comment schema:publishedBy "An agent associated with the publication event.")
AnnotationAssertion(rdfs:label schema:publishedBy "publishedBy")
AnnotationAssertion(schema:domainIncludes schema:publishedBy schema:PublicationEvent)
AnnotationAssertion(schema:isPartOf schema:publishedBy <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:publishedBy schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:publishedBy schema:Person)
AnnotationAssertion(rdfs:comment schema:publishedOn "A broadcast service associated with the publication event.")
AnnotationAssertion(rdfs:label schema:publishedOn "publishedOn")
AnnotationAssertion(schema:domainIncludes schema:publishedOn schema:PublicationEvent)
AnnotationAssertion(schema:rangeIncludes schema:publishedOn schema:BroadcastService)
AnnotationAssertion(rdfs:comment schema:publisher "The publisher of the creative work.")
AnnotationAssertion(rdfs:label schema:publisher "publisher")
AnnotationAssertion(schema:domainIncludes schema:publisher schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:publisher schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:publisher schema:Person)
AnnotationAssertion(rdfs:comment schema:publisherImprint "The publishing division which published the comic.")
AnnotationAssertion(rdfs:label schema:publisherImprint "publisherImprint")
AnnotationAssertion(schema:domainIncludes schema:publisherImprint schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:publisherImprint <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:publisherImprint schema:Organization)
AnnotationAssertion(rdfs:comment schema:purchaseDate "The date the item, e.g. vehicle, was purchased by the current owner.")
AnnotationAssertion(rdfs:label schema:purchaseDate "purchaseDate")
AnnotationAssertion(schema:contributor schema:purchaseDate <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:purchaseDate schema:Product)
AnnotationAssertion(schema:domainIncludes schema:purchaseDate schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:purchaseDate schema:Date)
AnnotationAssertion(rdfs:comment schema:qualifications "Specific qualifications required for this role or Occupation.")
AnnotationAssertion(rdfs:label schema:qualifications "qualifications")
AnnotationAssertion(schema:domainIncludes schema:qualifications schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:qualifications schema:Occupation)
AnnotationAssertion(schema:isPartOf schema:qualifications <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:qualifications schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:rangeIncludes schema:qualifications schema:Text)
AnnotationAssertion(schema:source schema:qualifications <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(schema:source schema:qualifications <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:quarantineGuidelines "Guidelines about quarantine rules, e.g. in the context of a pandemic.")
AnnotationAssertion(rdfs:label schema:quarantineGuidelines "quarantineGuidelines")
AnnotationAssertion(schema:domainIncludes schema:quarantineGuidelines schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:quarantineGuidelines <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:quarantineGuidelines schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:quarantineGuidelines schema:WebContent)
AnnotationAssertion(schema:source schema:quarantineGuidelines <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:quest "The task that a player-controlled character, or group of characters may complete in order to gain a reward.")
AnnotationAssertion(rdfs:label schema:quest "quest")
AnnotationAssertion(schema:domainIncludes schema:quest schema:Game)
AnnotationAssertion(schema:domainIncludes schema:quest schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:quest schema:Thing)
AnnotationAssertion(rdfs:comment schema:ratingCount "The count of total number of ratings.")
AnnotationAssertion(rdfs:label schema:ratingCount "ratingCount")
AnnotationAssertion(schema:domainIncludes schema:ratingCount schema:AggregateRating)
AnnotationAssertion(schema:rangeIncludes schema:ratingCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:ratingExplanation "A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with \"fact check\" markup using [[ClaimReview]].")
AnnotationAssertion(rdfs:label schema:ratingExplanation "ratingExplanation")
AnnotationAssertion(schema:domainIncludes schema:ratingExplanation schema:Rating)
AnnotationAssertion(schema:isPartOf schema:ratingExplanation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:ratingExplanation schema:Text)
AnnotationAssertion(schema:source schema:ratingExplanation <https://github.com/schemaorg/schemaorg/issues/2300>)
AnnotationAssertion(rdfs:comment schema:ratingValue "The rating for the content.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:ratingValue "ratingValue")
AnnotationAssertion(schema:domainIncludes schema:ratingValue schema:Rating)
AnnotationAssertion(schema:rangeIncludes schema:ratingValue schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:ratingValue schema:Text)
AnnotationAssertion(rdfs:comment schema:readonlyValue "Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.")
AnnotationAssertion(rdfs:label schema:readonlyValue "readonlyValue")
AnnotationAssertion(schema:domainIncludes schema:readonlyValue schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:readonlyValue schema:Boolean)
AnnotationAssertion(rdfs:comment schema:recipeCategory "The category of the recipe—for example, appetizer, entree, etc.")
AnnotationAssertion(rdfs:label schema:recipeCategory "recipeCategory")
AnnotationAssertion(schema:domainIncludes schema:recipeCategory schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:recipeCategory schema:Text)
AnnotationAssertion(rdfs:comment schema:recipeCuisine "The cuisine of the recipe (for example, French or Ethiopian).")
AnnotationAssertion(rdfs:label schema:recipeCuisine "recipeCuisine")
AnnotationAssertion(schema:domainIncludes schema:recipeCuisine schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:recipeCuisine schema:Text)
AnnotationAssertion(rdfs:comment schema:recognizedBy "An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.")
AnnotationAssertion(rdfs:label schema:recognizedBy "recognizedBy")
AnnotationAssertion(schema:domainIncludes schema:recognizedBy schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:isPartOf schema:recognizedBy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:recognizedBy schema:Organization)
AnnotationAssertion(schema:source schema:recognizedBy <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:recognizingAuthority "If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.")
AnnotationAssertion(rdfs:label schema:recognizingAuthority "recognizingAuthority")
AnnotationAssertion(schema:domainIncludes schema:recognizingAuthority schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:recognizingAuthority <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:recognizingAuthority schema:Organization)
AnnotationAssertion(rdfs:comment schema:recommendationStrength "Strength of the guideline's recommendation (e.g. 'class I').")
AnnotationAssertion(rdfs:label schema:recommendationStrength "recommendationStrength")
AnnotationAssertion(schema:domainIncludes schema:recommendationStrength schema:MedicalGuidelineRecommendation)
AnnotationAssertion(schema:isPartOf schema:recommendationStrength <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:recommendationStrength schema:Text)
AnnotationAssertion(rdfs:comment schema:recommendedIntake "Recommended intake of this supplement for a given population as defined by a specific recommending authority.")
AnnotationAssertion(rdfs:label schema:recommendedIntake "recommendedIntake")
AnnotationAssertion(schema:domainIncludes schema:recommendedIntake schema:DietarySupplement)
AnnotationAssertion(schema:isPartOf schema:recommendedIntake <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:recommendedIntake schema:RecommendedDoseSchedule)
AnnotationAssertion(rdfs:comment schema:recordLabel "The label that issued the release.")
AnnotationAssertion(rdfs:label schema:recordLabel "recordLabel")
AnnotationAssertion(schema:contributor schema:recordLabel <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:recordLabel schema:MusicRelease)
AnnotationAssertion(schema:rangeIncludes schema:recordLabel schema:Organization)
AnnotationAssertion(rdfs:comment schema:recordedAs "An audio recording of the work.")
AnnotationAssertion(rdfs:label schema:recordedAs "recordedAs")
AnnotationAssertion(schema:contributor schema:recordedAs <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:recordedAs schema:MusicComposition)
AnnotationAssertion(schema:inverseOf schema:recordedAs schema:recordingOf)
AnnotationAssertion(schema:rangeIncludes schema:recordedAs schema:MusicRecording)
AnnotationAssertion(rdfs:comment schema:recordedAt "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.")
AnnotationAssertion(rdfs:label schema:recordedAt "recordedAt")
AnnotationAssertion(schema:domainIncludes schema:recordedAt schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:recordedAt schema:recordedIn)
AnnotationAssertion(schema:rangeIncludes schema:recordedAt schema:Event)
AnnotationAssertion(rdfs:comment schema:recordedIn "The CreativeWork that captured all or part of this Event.")
AnnotationAssertion(rdfs:label schema:recordedIn "recordedIn")
AnnotationAssertion(schema:domainIncludes schema:recordedIn schema:Event)
AnnotationAssertion(schema:inverseOf schema:recordedIn schema:recordedAt)
AnnotationAssertion(schema:rangeIncludes schema:recordedIn schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:recordingOf "The composition this track is a recording of.")
AnnotationAssertion(rdfs:label schema:recordingOf "recordingOf")
AnnotationAssertion(schema:contributor schema:recordingOf <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:recordingOf schema:MusicRecording)
AnnotationAssertion(schema:inverseOf schema:recordingOf schema:recordedAs)
AnnotationAssertion(schema:rangeIncludes schema:recordingOf schema:MusicComposition)
AnnotationAssertion(rdfs:comment schema:recourseLoan "The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.")
AnnotationAssertion(rdfs:label schema:recourseLoan "recourseLoan")
AnnotationAssertion(schema:contributor schema:recourseLoan <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:recourseLoan schema:LoanOrCredit)
AnnotationAssertion(schema:isPartOf schema:recourseLoan <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:recourseLoan schema:Boolean)
AnnotationAssertion(schema:source schema:recourseLoan <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:referenceQuantity "The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.")
AnnotationAssertion(rdfs:label schema:referenceQuantity "referenceQuantity")
AnnotationAssertion(schema:contributor schema:referenceQuantity <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:referenceQuantity schema:UnitPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:referenceQuantity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:referencesOrder "The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.")
AnnotationAssertion(rdfs:label schema:referencesOrder "referencesOrder")
AnnotationAssertion(schema:domainIncludes schema:referencesOrder schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:referencesOrder schema:Order)
AnnotationAssertion(rdfs:comment schema:refundType "A refund type, from an enumerated list.")
AnnotationAssertion(rdfs:label schema:refundType "refundType")
AnnotationAssertion(schema:domainIncludes schema:refundType schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:refundType schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:refundType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:refundType schema:RefundTypeEnumeration)
AnnotationAssertion(schema:source schema:refundType <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:regionDrained "The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.")
AnnotationAssertion(rdfs:label schema:regionDrained "regionDrained")
AnnotationAssertion(schema:domainIncludes schema:regionDrained schema:LymphaticVessel)
AnnotationAssertion(schema:domainIncludes schema:regionDrained schema:Vein)
AnnotationAssertion(schema:isPartOf schema:regionDrained <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:regionDrained schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:regionDrained schema:AnatomicalSystem)
AnnotationAssertion(rdfs:comment schema:regionsAllowed "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).")
AnnotationAssertion(rdfs:label schema:regionsAllowed "regionsAllowed")
AnnotationAssertion(schema:domainIncludes schema:regionsAllowed schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:regionsAllowed schema:Place)
AnnotationAssertion(rdfs:comment schema:relatedAnatomy "Anatomical systems or structures that relate to the superficial anatomy.")
AnnotationAssertion(rdfs:label schema:relatedAnatomy "relatedAnatomy")
AnnotationAssertion(schema:domainIncludes schema:relatedAnatomy schema:SuperficialAnatomy)
AnnotationAssertion(schema:isPartOf schema:relatedAnatomy <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relatedAnatomy schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:relatedAnatomy schema:AnatomicalSystem)
AnnotationAssertion(rdfs:comment schema:relatedCondition "A medical condition associated with this anatomy.")
AnnotationAssertion(rdfs:label schema:relatedCondition "relatedCondition")
AnnotationAssertion(schema:domainIncludes schema:relatedCondition schema:AnatomicalStructure)
AnnotationAssertion(schema:domainIncludes schema:relatedCondition schema:AnatomicalSystem)
AnnotationAssertion(schema:domainIncludes schema:relatedCondition schema:SuperficialAnatomy)
AnnotationAssertion(schema:isPartOf schema:relatedCondition <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relatedCondition schema:MedicalCondition)
AnnotationAssertion(rdfs:comment schema:relatedDrug "Any other drug related to this one, for example commonly-prescribed alternatives.")
AnnotationAssertion(rdfs:label schema:relatedDrug "relatedDrug")
AnnotationAssertion(schema:domainIncludes schema:relatedDrug schema:Drug)
AnnotationAssertion(schema:isPartOf schema:relatedDrug <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relatedDrug schema:Drug)
AnnotationAssertion(rdfs:comment schema:relatedLink "A link related to this web page, for example to other related web pages.")
AnnotationAssertion(rdfs:label schema:relatedLink "relatedLink")
AnnotationAssertion(schema:domainIncludes schema:relatedLink schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:relatedLink schema:URL)
AnnotationAssertion(rdfs:comment schema:relatedStructure "Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.")
AnnotationAssertion(rdfs:label schema:relatedStructure "relatedStructure")
AnnotationAssertion(schema:domainIncludes schema:relatedStructure schema:AnatomicalSystem)
AnnotationAssertion(schema:isPartOf schema:relatedStructure <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relatedStructure schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:relatedTherapy "A medical therapy related to this anatomy.")
AnnotationAssertion(rdfs:label schema:relatedTherapy "relatedTherapy")
AnnotationAssertion(schema:domainIncludes schema:relatedTherapy schema:AnatomicalStructure)
AnnotationAssertion(schema:domainIncludes schema:relatedTherapy schema:AnatomicalSystem)
AnnotationAssertion(schema:domainIncludes schema:relatedTherapy schema:SuperficialAnatomy)
AnnotationAssertion(schema:isPartOf schema:relatedTherapy <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relatedTherapy schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:relatedTo "The most generic familial relation.")
AnnotationAssertion(rdfs:label schema:relatedTo "relatedTo")
AnnotationAssertion(schema:domainIncludes schema:relatedTo schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:relatedTo schema:Person)
AnnotationAssertion(rdfs:comment schema:releaseDate "The release date of a product or product model. This can be used to distinguish the exact variant of a product.")
AnnotationAssertion(rdfs:label schema:releaseDate "releaseDate")
AnnotationAssertion(schema:contributor schema:releaseDate <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:releaseDate schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:releaseDate schema:Date)
AnnotationAssertion(rdfs:comment schema:releaseNotes "Description of what changed in this version.")
AnnotationAssertion(rdfs:label schema:releaseNotes "releaseNotes")
AnnotationAssertion(schema:domainIncludes schema:releaseNotes schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:releaseNotes schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:releaseNotes schema:URL)
AnnotationAssertion(rdfs:comment schema:releaseOf "The album this is a release of.")
AnnotationAssertion(rdfs:label schema:releaseOf "releaseOf")
AnnotationAssertion(schema:contributor schema:releaseOf <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:releaseOf schema:MusicRelease)
AnnotationAssertion(schema:inverseOf schema:releaseOf schema:albumRelease)
AnnotationAssertion(schema:rangeIncludes schema:releaseOf schema:MusicAlbum)
AnnotationAssertion(rdfs:comment schema:releasedEvent "The place and time the release was issued, expressed as a PublicationEvent.")
AnnotationAssertion(rdfs:label schema:releasedEvent "releasedEvent")
AnnotationAssertion(schema:domainIncludes schema:releasedEvent schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:releasedEvent schema:PublicationEvent)
AnnotationAssertion(rdfs:comment schema:relevantOccupation "The Occupation for the JobPosting.")
AnnotationAssertion(rdfs:label schema:relevantOccupation "relevantOccupation")
AnnotationAssertion(schema:domainIncludes schema:relevantOccupation schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:relevantOccupation schema:Occupation)
AnnotationAssertion(schema:source schema:relevantOccupation <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:relevantSpecialty "If applicable, a medical specialty in which this entity is relevant.")
AnnotationAssertion(rdfs:label schema:relevantSpecialty "relevantSpecialty")
AnnotationAssertion(schema:domainIncludes schema:relevantSpecialty schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:relevantSpecialty <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:relevantSpecialty schema:MedicalSpecialty)
AnnotationAssertion(rdfs:comment schema:remainingAttendeeCapacity "The number of attendee places for an event that remain unallocated.")
AnnotationAssertion(rdfs:label schema:remainingAttendeeCapacity "remainingAttendeeCapacity")
AnnotationAssertion(schema:domainIncludes schema:remainingAttendeeCapacity schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:remainingAttendeeCapacity schema:Integer)
AnnotationAssertion(rdfs:comment schema:renegotiableLoan "Whether the terms for payment of interest can be renegotiated during the life of the loan.")
AnnotationAssertion(rdfs:label schema:renegotiableLoan "renegotiableLoan")
AnnotationAssertion(schema:contributor schema:renegotiableLoan <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:renegotiableLoan schema:LoanOrCredit)
AnnotationAssertion(schema:isPartOf schema:renegotiableLoan <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:renegotiableLoan schema:Boolean)
AnnotationAssertion(schema:source schema:renegotiableLoan <https://github.com/schemaorg/schemaorg/issues/1253>)
AnnotationAssertion(rdfs:comment schema:repeatCount "Defines the number of times a recurring [[Event]] will take place.")
AnnotationAssertion(rdfs:label schema:repeatCount "repeatCount")
AnnotationAssertion(schema:domainIncludes schema:repeatCount schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:repeatCount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:repeatCount schema:Integer)
AnnotationAssertion(schema:source schema:repeatCount <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:repetitions "Number of times one should repeat the activity.")
AnnotationAssertion(rdfs:label schema:repetitions "repetitions")
AnnotationAssertion(schema:domainIncludes schema:repetitions schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:repetitions <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:repetitions schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:repetitions schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:replyToUrl "The URL at which a reply may be posted to the specified UserComment.")
AnnotationAssertion(rdfs:label schema:replyToUrl "replyToUrl")
AnnotationAssertion(schema:domainIncludes schema:replyToUrl schema:UserComments)
AnnotationAssertion(schema:rangeIncludes schema:replyToUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:reportNumber "The number or other unique designator assigned to a Report by the publishing organization.")
AnnotationAssertion(rdfs:label schema:reportNumber "reportNumber")
AnnotationAssertion(schema:domainIncludes schema:reportNumber schema:Report)
AnnotationAssertion(schema:rangeIncludes schema:reportNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:representativeOfPage "Indicates whether this image is representative of the content of the page.")
AnnotationAssertion(rdfs:label schema:representativeOfPage "representativeOfPage")
AnnotationAssertion(schema:domainIncludes schema:representativeOfPage schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:representativeOfPage schema:Boolean)
AnnotationAssertion(rdfs:comment schema:requiredCollateral "Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)")
AnnotationAssertion(rdfs:label schema:requiredCollateral "requiredCollateral")
AnnotationAssertion(schema:contributor schema:requiredCollateral <https://schema.org/docs/collab/FIBO>)
AnnotationAssertion(schema:domainIncludes schema:requiredCollateral schema:LoanOrCredit)
AnnotationAssertion(schema:rangeIncludes schema:requiredCollateral schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:requiredCollateral schema:Thing)
AnnotationAssertion(rdfs:comment schema:requiredGender "Audiences defined by a person's gender.")
AnnotationAssertion(rdfs:label schema:requiredGender "requiredGender")
AnnotationAssertion(schema:domainIncludes schema:requiredGender schema:PeopleAudience)
AnnotationAssertion(schema:rangeIncludes schema:requiredGender schema:Text)
AnnotationAssertion(rdfs:comment schema:requiredMaxAge "Audiences defined by a person's maximum age.")
AnnotationAssertion(rdfs:label schema:requiredMaxAge "requiredMaxAge")
AnnotationAssertion(schema:domainIncludes schema:requiredMaxAge schema:PeopleAudience)
AnnotationAssertion(schema:rangeIncludes schema:requiredMaxAge schema:Integer)
AnnotationAssertion(rdfs:comment schema:requiredMinAge "Audiences defined by a person's minimum age.")
AnnotationAssertion(rdfs:label schema:requiredMinAge "requiredMinAge")
AnnotationAssertion(schema:domainIncludes schema:requiredMinAge schema:PeopleAudience)
AnnotationAssertion(schema:rangeIncludes schema:requiredMinAge schema:Integer)
AnnotationAssertion(rdfs:comment schema:requiredQuantity "The required quantity of the item(s).")
AnnotationAssertion(rdfs:label schema:requiredQuantity "requiredQuantity")
AnnotationAssertion(schema:domainIncludes schema:requiredQuantity schema:HowToItem)
AnnotationAssertion(schema:rangeIncludes schema:requiredQuantity schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:requiredQuantity schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:requiredQuantity schema:Text)
AnnotationAssertion(rdfs:comment schema:requirements "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).")
AnnotationAssertion(rdfs:label schema:requirements "requirements")
AnnotationAssertion(schema:domainIncludes schema:requirements schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:requirements schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:requirements schema:URL)
AnnotationAssertion(schema:supersededBy schema:requirements schema:softwareRequirements)
AnnotationAssertion(rdfs:comment schema:requiresSubscription "Indicates if use of the media require a subscription  (either paid or free). Allowed values are ```true``` or ```false``` (note that an earlier version had 'yes', 'no').")
AnnotationAssertion(rdfs:label schema:requiresSubscription "requiresSubscription")
AnnotationAssertion(schema:domainIncludes schema:requiresSubscription schema:ActionAccessSpecification)
AnnotationAssertion(schema:domainIncludes schema:requiresSubscription schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:requiresSubscription schema:Boolean)
AnnotationAssertion(schema:rangeIncludes schema:requiresSubscription schema:MediaSubscription)
AnnotationAssertion(schema:source schema:requiresSubscription <https://github.com/schemaorg/schemaorg/issues/1741>)
AnnotationAssertion(rdfs:comment schema:reservationFor "The thing -- flight, event, restaurant, etc. being reserved.")
AnnotationAssertion(rdfs:label schema:reservationFor "reservationFor")
AnnotationAssertion(schema:domainIncludes schema:reservationFor schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:reservationFor schema:Thing)
AnnotationAssertion(rdfs:comment schema:reservationId "A unique identifier for the reservation.")
AnnotationAssertion(rdfs:label schema:reservationId "reservationId")
AnnotationAssertion(schema:domainIncludes schema:reservationId schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:reservationId schema:Text)
AnnotationAssertion(rdfs:comment schema:reservationStatus "The current status of the reservation.")
AnnotationAssertion(rdfs:label schema:reservationStatus "reservationStatus")
AnnotationAssertion(schema:domainIncludes schema:reservationStatus schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:reservationStatus schema:ReservationStatusType)
AnnotationAssertion(rdfs:comment schema:reservedTicket "A ticket associated with the reservation.")
AnnotationAssertion(rdfs:label schema:reservedTicket "reservedTicket")
AnnotationAssertion(schema:domainIncludes schema:reservedTicket schema:Reservation)
AnnotationAssertion(schema:rangeIncludes schema:reservedTicket schema:Ticket)
AnnotationAssertion(rdfs:comment schema:responsibilities "Responsibilities associated with this role or Occupation.")
AnnotationAssertion(rdfs:label schema:responsibilities "responsibilities")
AnnotationAssertion(schema:domainIncludes schema:responsibilities schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:responsibilities schema:Occupation)
AnnotationAssertion(schema:rangeIncludes schema:responsibilities schema:Text)
AnnotationAssertion(schema:source schema:responsibilities <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(rdfs:comment schema:restPeriods "How often one should break from the activity.")
AnnotationAssertion(rdfs:label schema:restPeriods "restPeriods")
AnnotationAssertion(schema:domainIncludes schema:restPeriods schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:restPeriods <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:restPeriods schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:restPeriods schema:Text)
AnnotationAssertion(rdfs:comment schema:restockingFee "Use [[MonetaryAmount]] to specify a fixed restocking fee for product returns, or use [[Number]] to specify a percentage of the product price paid by the customer.")
AnnotationAssertion(rdfs:label schema:restockingFee "restockingFee")
AnnotationAssertion(schema:domainIncludes schema:restockingFee schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:restockingFee schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:restockingFee <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:restockingFee schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:restockingFee schema:Number)
AnnotationAssertion(schema:source schema:restockingFee <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:returnFees "The type of return fees for purchased products (for any return reason).")
AnnotationAssertion(rdfs:label schema:returnFees "returnFees")
AnnotationAssertion(schema:domainIncludes schema:returnFees schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:returnFees schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:returnFees <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnFees schema:ReturnFeesEnumeration)
AnnotationAssertion(schema:source schema:returnFees <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:returnLabelSource "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.")
AnnotationAssertion(rdfs:label schema:returnLabelSource "returnLabelSource")
AnnotationAssertion(schema:domainIncludes schema:returnLabelSource schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:returnLabelSource <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnLabelSource schema:ReturnLabelSourceEnumeration)
AnnotationAssertion(schema:source schema:returnLabelSource <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:returnMethod "The type of return method offered, specified from an enumeration.")
AnnotationAssertion(rdfs:label schema:returnMethod "returnMethod")
AnnotationAssertion(schema:domainIncludes schema:returnMethod schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:returnMethod schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:returnMethod <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnMethod schema:ReturnMethodEnumeration)
AnnotationAssertion(schema:source schema:returnMethod <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:returnPolicyCategory "Specifies an applicable return policy (from an enumeration).")
AnnotationAssertion(rdfs:label schema:returnPolicyCategory "returnPolicyCategory")
AnnotationAssertion(schema:domainIncludes schema:returnPolicyCategory schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:returnPolicyCategory schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:returnPolicyCategory <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnPolicyCategory schema:MerchantReturnEnumeration)
AnnotationAssertion(schema:source schema:returnPolicyCategory <https://github.com/schemaorg/schemaorg/issues/2288>)
AnnotationAssertion(rdfs:comment schema:returnPolicyCountry "The country where the product has to be sent to for returns, for example \"Ireland\" using the [[name]] property of [[Country]]. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.")
AnnotationAssertion(rdfs:label schema:returnPolicyCountry "returnPolicyCountry")
AnnotationAssertion(schema:domainIncludes schema:returnPolicyCountry schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:returnPolicyCountry <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnPolicyCountry schema:Country)
AnnotationAssertion(schema:rangeIncludes schema:returnPolicyCountry schema:Text)
AnnotationAssertion(schema:source schema:returnPolicyCountry <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:returnPolicySeasonalOverride "Seasonal override of a return policy.")
AnnotationAssertion(rdfs:label schema:returnPolicySeasonalOverride "returnPolicySeasonalOverride")
AnnotationAssertion(schema:domainIncludes schema:returnPolicySeasonalOverride schema:MerchantReturnPolicy)
AnnotationAssertion(schema:isPartOf schema:returnPolicySeasonalOverride <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnPolicySeasonalOverride schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:source schema:returnPolicySeasonalOverride <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:returnShippingFeesAmount "Amount of shipping costs for product returns (for any reason). Applicable when property [[returnFees]] equals [[ReturnShippingFees]].")
AnnotationAssertion(rdfs:label schema:returnShippingFeesAmount "returnShippingFeesAmount")
AnnotationAssertion(schema:domainIncludes schema:returnShippingFeesAmount schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:returnShippingFeesAmount schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:isPartOf schema:returnShippingFeesAmount <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:returnShippingFeesAmount schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:returnShippingFeesAmount <https://github.com/schemaorg/schemaorg/issues/2880>)
AnnotationAssertion(rdfs:comment schema:review "A review of the item.")
AnnotationAssertion(rdfs:label schema:review "review")
AnnotationAssertion(schema:domainIncludes schema:review schema:Brand)
AnnotationAssertion(schema:domainIncludes schema:review schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:review schema:Event)
AnnotationAssertion(schema:domainIncludes schema:review schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:review schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:review schema:Place)
AnnotationAssertion(schema:domainIncludes schema:review schema:Product)
AnnotationAssertion(schema:domainIncludes schema:review schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:review schema:Review)
AnnotationAssertion(rdfs:comment schema:reviewAspect "This Review or Rating is relevant to this part or facet of the itemReviewed.")
AnnotationAssertion(rdfs:label schema:reviewAspect "reviewAspect")
AnnotationAssertion(schema:domainIncludes schema:reviewAspect schema:Guide)
AnnotationAssertion(schema:domainIncludes schema:reviewAspect schema:Rating)
AnnotationAssertion(schema:domainIncludes schema:reviewAspect schema:Review)
AnnotationAssertion(schema:rangeIncludes schema:reviewAspect schema:Text)
AnnotationAssertion(schema:source schema:reviewAspect <https://github.com/schemaorg/schemaorg/issues/1689>)
AnnotationAssertion(rdfs:comment schema:reviewBody "The actual body of the review.")
AnnotationAssertion(rdfs:label schema:reviewBody "reviewBody")
AnnotationAssertion(schema:domainIncludes schema:reviewBody schema:Review)
AnnotationAssertion(schema:rangeIncludes schema:reviewBody schema:Text)
AnnotationAssertion(rdfs:comment schema:reviewCount "The count of total number of reviews.")
AnnotationAssertion(rdfs:label schema:reviewCount "reviewCount")
AnnotationAssertion(schema:domainIncludes schema:reviewCount schema:AggregateRating)
AnnotationAssertion(schema:rangeIncludes schema:reviewCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:reviewRating "The rating given in this review. Note that reviews can themselves be rated. The ```reviewRating``` applies to rating given by the review. The [[aggregateRating]] property applies to the review itself, as a creative work.")
AnnotationAssertion(rdfs:label schema:reviewRating "reviewRating")
AnnotationAssertion(schema:domainIncludes schema:reviewRating schema:Review)
AnnotationAssertion(schema:rangeIncludes schema:reviewRating schema:Rating)
AnnotationAssertion(rdfs:comment schema:reviewedBy "People or organizations that have reviewed the content on this web page for accuracy and/or completeness.")
AnnotationAssertion(rdfs:label schema:reviewedBy "reviewedBy")
AnnotationAssertion(schema:domainIncludes schema:reviewedBy schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:reviewedBy schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:reviewedBy schema:Person)
AnnotationAssertion(rdfs:comment schema:reviews "Review of the item.")
AnnotationAssertion(rdfs:label schema:reviews "reviews")
AnnotationAssertion(schema:domainIncludes schema:reviews schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:reviews schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:reviews schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:reviews schema:Place)
AnnotationAssertion(schema:domainIncludes schema:reviews schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:reviews schema:Review)
AnnotationAssertion(schema:supersededBy schema:reviews schema:review)
AnnotationAssertion(rdfs:comment schema:riskFactor "A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.")
AnnotationAssertion(rdfs:label schema:riskFactor "riskFactor")
AnnotationAssertion(schema:domainIncludes schema:riskFactor schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:riskFactor <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:riskFactor schema:MedicalRiskFactor)
AnnotationAssertion(rdfs:comment schema:risks "Specific physiologic risks associated to the diet plan.")
AnnotationAssertion(rdfs:label schema:risks "risks")
AnnotationAssertion(schema:domainIncludes schema:risks schema:Diet)
AnnotationAssertion(schema:isPartOf schema:risks <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:risks schema:Text)
AnnotationAssertion(rdfs:comment schema:roleName "A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.")
AnnotationAssertion(rdfs:label schema:roleName "roleName")
AnnotationAssertion(schema:domainIncludes schema:roleName schema:Role)
AnnotationAssertion(schema:rangeIncludes schema:roleName schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:roleName schema:URL)
AnnotationAssertion(rdfs:comment schema:roofLoad "The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]]\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:roofLoad "roofLoad")
AnnotationAssertion(schema:contributor schema:roofLoad <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:roofLoad schema:BusOrCoach)
AnnotationAssertion(schema:domainIncludes schema:roofLoad schema:Car)
AnnotationAssertion(schema:isPartOf schema:roofLoad <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:roofLoad schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:rsvpResponse "The response (yes, no, maybe) to the RSVP.")
AnnotationAssertion(rdfs:label schema:rsvpResponse "rsvpResponse")
AnnotationAssertion(schema:domainIncludes schema:rsvpResponse schema:RsvpAction)
AnnotationAssertion(schema:rangeIncludes schema:rsvpResponse schema:RsvpResponseType)
AnnotationAssertion(rdfs:comment schema:runsTo "The vasculature the lymphatic structure runs, or efferents, to.")
AnnotationAssertion(rdfs:label schema:runsTo "runsTo")
AnnotationAssertion(schema:domainIncludes schema:runsTo schema:LymphaticVessel)
AnnotationAssertion(schema:isPartOf schema:runsTo <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:runsTo schema:Vessel)
AnnotationAssertion(rdfs:comment schema:runtime "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).")
AnnotationAssertion(rdfs:label schema:runtime "runtime")
AnnotationAssertion(schema:domainIncludes schema:runtime schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:runtime schema:Text)
AnnotationAssertion(schema:supersededBy schema:runtime schema:runtimePlatform)
AnnotationAssertion(rdfs:comment schema:runtimePlatform "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).")
AnnotationAssertion(rdfs:label schema:runtimePlatform "runtimePlatform")
AnnotationAssertion(schema:domainIncludes schema:runtimePlatform schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:runtimePlatform schema:Text)
AnnotationAssertion(rdfs:comment schema:rxcui "The RxCUI drug identifier from RXNORM.")
AnnotationAssertion(rdfs:label schema:rxcui "rxcui")
AnnotationAssertion(schema:domainIncludes schema:rxcui schema:Drug)
AnnotationAssertion(schema:isPartOf schema:rxcui <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:rxcui schema:Text)
AnnotationAssertion(schema:source schema:rxcui <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:safetyConsideration "Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.")
AnnotationAssertion(rdfs:label schema:safetyConsideration "safetyConsideration")
AnnotationAssertion(schema:domainIncludes schema:safetyConsideration schema:DietarySupplement)
AnnotationAssertion(schema:isPartOf schema:safetyConsideration <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:safetyConsideration schema:Text)
AnnotationAssertion(rdfs:comment schema:salaryCurrency "The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) used for the main salary information in this job posting or for this employee.")
AnnotationAssertion(rdfs:label schema:salaryCurrency "salaryCurrency")
AnnotationAssertion(schema:domainIncludes schema:salaryCurrency schema:EmployeeRole)
AnnotationAssertion(schema:domainIncludes schema:salaryCurrency schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:salaryCurrency schema:Text)
AnnotationAssertion(rdfs:comment schema:salaryUponCompletion "The expected salary upon completing the training.")
AnnotationAssertion(rdfs:label schema:salaryUponCompletion "salaryUponCompletion")
AnnotationAssertion(schema:domainIncludes schema:salaryUponCompletion schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:salaryUponCompletion <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:salaryUponCompletion schema:MonetaryAmountDistribution)
AnnotationAssertion(schema:source schema:salaryUponCompletion <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:sampleType "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.")
AnnotationAssertion(rdfs:label schema:sampleType "sampleType")
AnnotationAssertion(schema:domainIncludes schema:sampleType schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:sampleType schema:Text)
AnnotationAssertion(schema:supersededBy schema:sampleType schema:codeSampleType)
AnnotationAssertion(rdfs:comment schema:saturatedFatContent "The number of grams of saturated fat.")
AnnotationAssertion(rdfs:label schema:saturatedFatContent "saturatedFatContent")
AnnotationAssertion(schema:domainIncludes schema:saturatedFatContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:saturatedFatContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:scheduleTimezone "Indicates the timezone for which the time(s) indicated in the [[Schedule]] are given. The value provided should be among those listed in the IANA Time Zone Database.")
AnnotationAssertion(rdfs:label schema:scheduleTimezone "scheduleTimezone")
AnnotationAssertion(schema:domainIncludes schema:scheduleTimezone schema:Schedule)
AnnotationAssertion(schema:isPartOf schema:scheduleTimezone <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:scheduleTimezone schema:Text)
AnnotationAssertion(schema:source schema:scheduleTimezone <https://github.com/schemaorg/schemaorg/issues/1457>)
AnnotationAssertion(rdfs:comment schema:scheduledPaymentDate "The date the invoice is scheduled to be paid.")
AnnotationAssertion(rdfs:label schema:scheduledPaymentDate "scheduledPaymentDate")
AnnotationAssertion(schema:domainIncludes schema:scheduledPaymentDate schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:scheduledPaymentDate schema:Date)
AnnotationAssertion(rdfs:comment schema:scheduledTime "The time the object is scheduled to.")
AnnotationAssertion(rdfs:label schema:scheduledTime "scheduledTime")
AnnotationAssertion(schema:domainIncludes schema:scheduledTime schema:PlanAction)
AnnotationAssertion(schema:rangeIncludes schema:scheduledTime schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:scheduledTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:schemaVersion "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to
    indicate the use of a specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly via URL, ```https://schema.org/docs/releases.html#v10.0```. There may be situations in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` but this has not been carefully explored in the community.")
AnnotationAssertion(rdfs:label schema:schemaVersion "schemaVersion")
AnnotationAssertion(schema:domainIncludes schema:schemaVersion schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:schemaVersion schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:schemaVersion schema:URL)
AnnotationAssertion(rdfs:comment schema:schoolClosuresInfo "Information about school closures.")
AnnotationAssertion(rdfs:label schema:schoolClosuresInfo "schoolClosuresInfo")
AnnotationAssertion(schema:domainIncludes schema:schoolClosuresInfo schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:schoolClosuresInfo <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:schoolClosuresInfo schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:schoolClosuresInfo schema:WebContent)
AnnotationAssertion(schema:source schema:schoolClosuresInfo <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:screenCount "The number of screens in the movie theater.")
AnnotationAssertion(rdfs:label schema:screenCount "screenCount")
AnnotationAssertion(schema:domainIncludes schema:screenCount schema:MovieTheater)
AnnotationAssertion(schema:rangeIncludes schema:screenCount schema:Number)
AnnotationAssertion(rdfs:comment schema:screenshot "A link to a screenshot image of the app.")
AnnotationAssertion(rdfs:label schema:screenshot "screenshot")
AnnotationAssertion(schema:domainIncludes schema:screenshot schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:screenshot schema:ImageObject)
AnnotationAssertion(schema:rangeIncludes schema:screenshot schema:URL)
AnnotationAssertion(rdfs:comment schema:sdDatePublished "Indicates the date on which the current structured data was generated / published. Typically used alongside [[sdPublisher]].")
AnnotationAssertion(rdfs:label schema:sdDatePublished "sdDatePublished")
AnnotationAssertion(schema:domainIncludes schema:sdDatePublished schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:sdDatePublished <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sdDatePublished schema:Date)
AnnotationAssertion(schema:source schema:sdDatePublished <https://github.com/schemaorg/schemaorg/issues/1886>)
AnnotationAssertion(rdfs:comment schema:sdLicense "A license document that applies to this structured data, typically indicated by URL.")
AnnotationAssertion(rdfs:label schema:sdLicense "sdLicense")
AnnotationAssertion(schema:domainIncludes schema:sdLicense schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:sdLicense <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sdLicense schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:sdLicense schema:URL)
AnnotationAssertion(schema:source schema:sdLicense <https://github.com/schemaorg/schemaorg/issues/1886>)
AnnotationAssertion(rdfs:comment schema:sdPublisher "Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The
[[sdPublisher]] property helps make such practices more explicit.")
AnnotationAssertion(rdfs:label schema:sdPublisher "sdPublisher")
AnnotationAssertion(schema:domainIncludes schema:sdPublisher schema:CreativeWork)
AnnotationAssertion(schema:isPartOf schema:sdPublisher <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sdPublisher schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:sdPublisher schema:Person)
AnnotationAssertion(schema:source schema:sdPublisher <https://github.com/schemaorg/schemaorg/issues/1886>)
AnnotationAssertion(rdfs:comment schema:seasons "A season in a media series.")
AnnotationAssertion(rdfs:label schema:seasons "seasons")
AnnotationAssertion(schema:domainIncludes schema:seasons schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:seasons schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:seasons schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:seasons schema:CreativeWorkSeason)
AnnotationAssertion(schema:supersededBy schema:seasons schema:season)
AnnotationAssertion(rdfs:comment schema:seatNumber "The location of the reserved seat (e.g., 27).")
AnnotationAssertion(rdfs:label schema:seatNumber "seatNumber")
AnnotationAssertion(schema:domainIncludes schema:seatNumber schema:Seat)
AnnotationAssertion(schema:rangeIncludes schema:seatNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:seatRow "The row location of the reserved seat (e.g., B).")
AnnotationAssertion(rdfs:label schema:seatRow "seatRow")
AnnotationAssertion(schema:domainIncludes schema:seatRow schema:Seat)
AnnotationAssertion(schema:rangeIncludes schema:seatRow schema:Text)
AnnotationAssertion(rdfs:comment schema:seatSection "The section location of the reserved seat (e.g. Orchestra).")
AnnotationAssertion(rdfs:label schema:seatSection "seatSection")
AnnotationAssertion(schema:domainIncludes schema:seatSection schema:Seat)
AnnotationAssertion(schema:rangeIncludes schema:seatSection schema:Text)
AnnotationAssertion(rdfs:comment schema:seatingCapacity "The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.")
AnnotationAssertion(rdfs:label schema:seatingCapacity "seatingCapacity")
AnnotationAssertion(schema:contributor schema:seatingCapacity <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:seatingCapacity schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:seatingCapacity <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:seatingCapacity schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:seatingCapacity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:seatingType "The type/class of the seat.")
AnnotationAssertion(rdfs:label schema:seatingType "seatingType")
AnnotationAssertion(schema:domainIncludes schema:seatingType schema:Seat)
AnnotationAssertion(schema:rangeIncludes schema:seatingType schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:seatingType schema:Text)
AnnotationAssertion(rdfs:comment schema:secondaryPrevention "A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.")
AnnotationAssertion(rdfs:label schema:secondaryPrevention "secondaryPrevention")
AnnotationAssertion(schema:domainIncludes schema:secondaryPrevention schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:secondaryPrevention <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:secondaryPrevention schema:MedicalTherapy)
AnnotationAssertion(rdfs:comment schema:securityClearanceRequirement "A description of any security clearance requirements of the job.")
AnnotationAssertion(rdfs:label schema:securityClearanceRequirement "securityClearanceRequirement")
AnnotationAssertion(schema:domainIncludes schema:securityClearanceRequirement schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:securityClearanceRequirement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:securityClearanceRequirement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:securityClearanceRequirement schema:URL)
AnnotationAssertion(schema:source schema:securityClearanceRequirement <https://github.com/schemaorg/schemaorg/issues/2384>)
AnnotationAssertion(rdfs:comment schema:securityScreening "The type of security screening the passenger is subject to.")
AnnotationAssertion(rdfs:label schema:securityScreening "securityScreening")
AnnotationAssertion(schema:domainIncludes schema:securityScreening schema:FlightReservation)
AnnotationAssertion(schema:rangeIncludes schema:securityScreening schema:Text)
AnnotationAssertion(rdfs:comment schema:seeks "A pointer to products or services sought by the organization or person (demand).")
AnnotationAssertion(rdfs:label schema:seeks "seeks")
AnnotationAssertion(schema:contributor schema:seeks <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:seeks schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:seeks schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:seeks schema:Demand)
AnnotationAssertion(rdfs:comment schema:sensoryRequirement "A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.")
AnnotationAssertion(rdfs:label schema:sensoryRequirement "sensoryRequirement")
AnnotationAssertion(schema:domainIncludes schema:sensoryRequirement schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:sensoryRequirement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sensoryRequirement schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:sensoryRequirement schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:sensoryRequirement schema:URL)
AnnotationAssertion(schema:source schema:sensoryRequirement <https://github.com/schemaorg/schemaorg/issues/2384>)
AnnotationAssertion(rdfs:comment schema:sensoryUnit "The neurological pathway extension that inputs and sends information to the brain or spinal cord.")
AnnotationAssertion(rdfs:label schema:sensoryUnit "sensoryUnit")
AnnotationAssertion(schema:domainIncludes schema:sensoryUnit schema:Nerve)
AnnotationAssertion(schema:isPartOf schema:sensoryUnit <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sensoryUnit schema:AnatomicalStructure)
AnnotationAssertion(schema:rangeIncludes schema:sensoryUnit schema:SuperficialAnatomy)
AnnotationAssertion(rdfs:comment schema:seriousAdverseOutcome "A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.")
AnnotationAssertion(rdfs:label schema:seriousAdverseOutcome "seriousAdverseOutcome")
AnnotationAssertion(schema:domainIncludes schema:seriousAdverseOutcome schema:MedicalDevice)
AnnotationAssertion(schema:domainIncludes schema:seriousAdverseOutcome schema:MedicalTherapy)
AnnotationAssertion(schema:isPartOf schema:seriousAdverseOutcome <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:seriousAdverseOutcome schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:serverStatus "Status of a game server.")
AnnotationAssertion(rdfs:label schema:serverStatus "serverStatus")
AnnotationAssertion(schema:domainIncludes schema:serverStatus schema:GameServer)
AnnotationAssertion(schema:rangeIncludes schema:serverStatus schema:GameServerStatus)
AnnotationAssertion(rdfs:comment schema:servesCuisine "The cuisine of the restaurant.")
AnnotationAssertion(rdfs:label schema:servesCuisine "servesCuisine")
AnnotationAssertion(schema:domainIncludes schema:servesCuisine schema:FoodEstablishment)
AnnotationAssertion(schema:rangeIncludes schema:servesCuisine schema:Text)
AnnotationAssertion(rdfs:comment schema:serviceArea "The geographic area where the service is provided.")
AnnotationAssertion(rdfs:label schema:serviceArea "serviceArea")
AnnotationAssertion(schema:domainIncludes schema:serviceArea schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:serviceArea schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:serviceArea schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:serviceArea schema:AdministrativeArea)
AnnotationAssertion(schema:rangeIncludes schema:serviceArea schema:GeoShape)
AnnotationAssertion(schema:rangeIncludes schema:serviceArea schema:Place)
AnnotationAssertion(schema:supersededBy schema:serviceArea schema:areaServed)
AnnotationAssertion(rdfs:comment schema:serviceAudience "The audience eligible for this service.")
AnnotationAssertion(rdfs:label schema:serviceAudience "serviceAudience")
AnnotationAssertion(schema:domainIncludes schema:serviceAudience schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:serviceAudience schema:Audience)
AnnotationAssertion(schema:supersededBy schema:serviceAudience schema:audience)
AnnotationAssertion(rdfs:comment schema:serviceLocation "The location (e.g. civic structure, local business, etc.) where a person can go to access the service.")
AnnotationAssertion(rdfs:label schema:serviceLocation "serviceLocation")
AnnotationAssertion(schema:domainIncludes schema:serviceLocation schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:serviceLocation schema:Place)
AnnotationAssertion(rdfs:comment schema:serviceOperator "The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.")
AnnotationAssertion(rdfs:label schema:serviceOperator "serviceOperator")
AnnotationAssertion(schema:domainIncludes schema:serviceOperator schema:GovernmentService)
AnnotationAssertion(schema:rangeIncludes schema:serviceOperator schema:Organization)
AnnotationAssertion(rdfs:comment schema:serviceOutput "The tangible thing generated by the service, e.g. a passport, permit, etc.")
AnnotationAssertion(rdfs:label schema:serviceOutput "serviceOutput")
AnnotationAssertion(schema:domainIncludes schema:serviceOutput schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:serviceOutput schema:Thing)
AnnotationAssertion(rdfs:comment schema:servicePhone "The phone number to use to access the service.")
AnnotationAssertion(rdfs:label schema:servicePhone "servicePhone")
AnnotationAssertion(schema:domainIncludes schema:servicePhone schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:servicePhone schema:ContactPoint)
AnnotationAssertion(rdfs:comment schema:servicePostalAddress "The address for accessing the service by mail.")
AnnotationAssertion(rdfs:label schema:servicePostalAddress "servicePostalAddress")
AnnotationAssertion(schema:domainIncludes schema:servicePostalAddress schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:servicePostalAddress schema:PostalAddress)
AnnotationAssertion(rdfs:comment schema:serviceSmsNumber "The number to access the service by text message.")
AnnotationAssertion(rdfs:label schema:serviceSmsNumber "serviceSmsNumber")
AnnotationAssertion(schema:domainIncludes schema:serviceSmsNumber schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:serviceSmsNumber schema:ContactPoint)
AnnotationAssertion(rdfs:comment schema:serviceType "The type of service being offered, e.g. veterans' benefits, emergency relief, etc.")
AnnotationAssertion(rdfs:label schema:serviceType "serviceType")
AnnotationAssertion(schema:domainIncludes schema:serviceType schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:serviceType schema:GovernmentBenefitsType)
AnnotationAssertion(schema:rangeIncludes schema:serviceType schema:Text)
AnnotationAssertion(rdfs:comment schema:serviceUrl "The website to access the service.")
AnnotationAssertion(rdfs:label schema:serviceUrl "serviceUrl")
AnnotationAssertion(schema:domainIncludes schema:serviceUrl schema:ServiceChannel)
AnnotationAssertion(schema:rangeIncludes schema:serviceUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:servingSize "The serving size, in terms of the number of volume or mass.")
AnnotationAssertion(rdfs:label schema:servingSize "servingSize")
AnnotationAssertion(schema:domainIncludes schema:servingSize schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:servingSize schema:Text)
AnnotationAssertion(rdfs:comment schema:sharedContent "A CreativeWork such as an image, video, or audio clip shared as part of this posting.")
AnnotationAssertion(rdfs:label schema:sharedContent "sharedContent")
AnnotationAssertion(schema:domainIncludes schema:sharedContent schema:Comment)
AnnotationAssertion(schema:domainIncludes schema:sharedContent schema:SocialMediaPosting)
AnnotationAssertion(schema:rangeIncludes schema:sharedContent schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:shippingDestination "indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.")
AnnotationAssertion(rdfs:label schema:shippingDestination "shippingDestination")
AnnotationAssertion(schema:domainIncludes schema:shippingDestination schema:DeliveryTimeSettings)
AnnotationAssertion(schema:domainIncludes schema:shippingDestination schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:shippingDestination schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:shippingDestination schema:DefinedRegion)
AnnotationAssertion(schema:source schema:shippingDestination <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:shippingDetails "Indicates information about the shipping policies and options associated with an [[Offer]].")
AnnotationAssertion(rdfs:label schema:shippingDetails "shippingDetails")
AnnotationAssertion(schema:domainIncludes schema:shippingDetails schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:shippingDetails schema:OfferShippingDetails)
AnnotationAssertion(schema:source schema:shippingDetails <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:shippingLabel "Label to match an [[OfferShippingDetails]] with a [[ShippingRateSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).")
AnnotationAssertion(rdfs:label schema:shippingLabel "shippingLabel")
AnnotationAssertion(schema:domainIncludes schema:shippingLabel schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:shippingLabel schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:shippingLabel schema:Text)
AnnotationAssertion(schema:source schema:shippingLabel <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:shippingOrigin "Indicates the origin of a shipment, i.e. where it should be coming from.")
AnnotationAssertion(rdfs:label schema:shippingOrigin "shippingOrigin")
AnnotationAssertion(schema:domainIncludes schema:shippingOrigin schema:OfferShippingDetails)
AnnotationAssertion(schema:rangeIncludes schema:shippingOrigin schema:DefinedRegion)
AnnotationAssertion(schema:source schema:shippingOrigin <https://github.com/schemaorg/schemaorg/issues/3122>)
AnnotationAssertion(rdfs:comment schema:shippingRate "The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.")
AnnotationAssertion(rdfs:label schema:shippingRate "shippingRate")
AnnotationAssertion(schema:domainIncludes schema:shippingRate schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:shippingRate schema:ShippingRateSettings)
AnnotationAssertion(schema:rangeIncludes schema:shippingRate schema:MonetaryAmount)
AnnotationAssertion(schema:source schema:shippingRate <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:shippingSettingsLink "Link to a page containing [[ShippingRateSettings]] and [[DeliveryTimeSettings]] details.")
AnnotationAssertion(rdfs:label schema:shippingSettingsLink "shippingSettingsLink")
AnnotationAssertion(schema:domainIncludes schema:shippingSettingsLink schema:OfferShippingDetails)
AnnotationAssertion(schema:rangeIncludes schema:shippingSettingsLink schema:URL)
AnnotationAssertion(schema:source schema:shippingSettingsLink <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:sibling "A sibling of the person.")
AnnotationAssertion(rdfs:label schema:sibling "sibling")
AnnotationAssertion(schema:domainIncludes schema:sibling schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:sibling schema:Person)
AnnotationAssertion(rdfs:comment schema:siblings "A sibling of the person.")
AnnotationAssertion(rdfs:label schema:siblings "siblings")
AnnotationAssertion(schema:domainIncludes schema:siblings schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:siblings schema:Person)
AnnotationAssertion(schema:supersededBy schema:siblings schema:sibling)
AnnotationAssertion(rdfs:comment schema:signDetected "A sign detected by the test.")
AnnotationAssertion(rdfs:label schema:signDetected "signDetected")
AnnotationAssertion(schema:domainIncludes schema:signDetected schema:MedicalTest)
AnnotationAssertion(schema:isPartOf schema:signDetected <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:signDetected schema:MedicalSign)
AnnotationAssertion(rdfs:comment schema:signOrSymptom "A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.")
AnnotationAssertion(rdfs:label schema:signOrSymptom "signOrSymptom")
AnnotationAssertion(schema:domainIncludes schema:signOrSymptom schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:signOrSymptom <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:signOrSymptom schema:MedicalSignOrSymptom)
AnnotationAssertion(rdfs:comment schema:significance "The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.")
AnnotationAssertion(rdfs:label schema:significance "significance")
AnnotationAssertion(schema:domainIncludes schema:significance schema:SuperficialAnatomy)
AnnotationAssertion(schema:isPartOf schema:significance <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:significance schema:Text)
AnnotationAssertion(rdfs:comment schema:significantLink "One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.")
AnnotationAssertion(rdfs:label schema:significantLink "significantLink")
AnnotationAssertion(schema:domainIncludes schema:significantLink schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:significantLink schema:URL)
AnnotationAssertion(rdfs:comment schema:significantLinks "The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.")
AnnotationAssertion(rdfs:label schema:significantLinks "significantLinks")
AnnotationAssertion(schema:domainIncludes schema:significantLinks schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:significantLinks schema:URL)
AnnotationAssertion(schema:supersededBy schema:significantLinks schema:significantLink)
AnnotationAssertion(rdfs:comment schema:size "A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. ")
AnnotationAssertion(rdfs:label schema:size "size")
AnnotationAssertion(schema:domainIncludes schema:size schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:size schema:Product)
AnnotationAssertion(schema:isPartOf schema:size <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:size schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:size schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:size schema:SizeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:size schema:Text)
AnnotationAssertion(schema:source schema:size <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:sizeGroup "The size group (also known as \"size type\") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example \"men's big and tall\", \"petite maternity\" or \"regular\".")
AnnotationAssertion(rdfs:label schema:sizeGroup "sizeGroup")
AnnotationAssertion(schema:domainIncludes schema:sizeGroup schema:SizeSpecification)
AnnotationAssertion(schema:isPartOf schema:sizeGroup <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sizeGroup schema:SizeGroupEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:sizeGroup schema:Text)
AnnotationAssertion(schema:source schema:sizeGroup <https://github.com/schemaorg/schemaorg/issues/2811>)
AnnotationAssertion(rdfs:comment schema:sizeSystem "The size system used to identify a product's size. Typically either a standard (for example, \"GS1\" or \"ISO-EN13402\"), country code (for example \"US\" or \"JP\"), or a measuring system (for example \"Metric\" or \"Imperial\").")
AnnotationAssertion(rdfs:label schema:sizeSystem "sizeSystem")
AnnotationAssertion(schema:domainIncludes schema:sizeSystem schema:SizeSpecification)
AnnotationAssertion(schema:isPartOf schema:sizeSystem <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sizeSystem schema:SizeSystemEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:sizeSystem schema:Text)
AnnotationAssertion(schema:source schema:sizeSystem <https://github.com/schemaorg/schemaorg/issues/2811>)
AnnotationAssertion(rdfs:comment schema:skills "A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is either claimed by a person, an organization or desired or required to fulfill a role or to work in an occupation.")
AnnotationAssertion(rdfs:label schema:skills "skills")
AnnotationAssertion(schema:domainIncludes schema:skills schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:skills schema:Occupation)
AnnotationAssertion(schema:domainIncludes schema:skills schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:skills schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:skills schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:skills schema:Text)
AnnotationAssertion(schema:source schema:skills <https://github.com/schemaorg/schemaorg/issues/1698>)
AnnotationAssertion(schema:source schema:skills <https://github.com/schemaorg/schemaorg/issues/2322>)
AnnotationAssertion(rdfs:comment schema:slogan "A slogan or motto associated with the item.")
AnnotationAssertion(rdfs:label schema:slogan "slogan")
AnnotationAssertion(schema:domainIncludes schema:slogan schema:Brand)
AnnotationAssertion(schema:domainIncludes schema:slogan schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:slogan schema:Place)
AnnotationAssertion(schema:domainIncludes schema:slogan schema:Product)
AnnotationAssertion(schema:domainIncludes schema:slogan schema:Service)
AnnotationAssertion(schema:rangeIncludes schema:slogan schema:Text)
AnnotationAssertion(rdfs:comment schema:smokingAllowed "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.")
AnnotationAssertion(rdfs:label schema:smokingAllowed "smokingAllowed")
AnnotationAssertion(schema:contributor schema:smokingAllowed <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:smokingAllowed schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:smokingAllowed schema:Boolean)
AnnotationAssertion(rdfs:comment schema:sodiumContent "The number of milligrams of sodium.")
AnnotationAssertion(rdfs:label schema:sodiumContent "sodiumContent")
AnnotationAssertion(schema:domainIncludes schema:sodiumContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:sodiumContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:softwareAddOn "Additional content for a software application.")
AnnotationAssertion(rdfs:label schema:softwareAddOn "softwareAddOn")
AnnotationAssertion(schema:domainIncludes schema:softwareAddOn schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:softwareAddOn schema:SoftwareApplication)
AnnotationAssertion(rdfs:comment schema:softwareHelp "Software application help.")
AnnotationAssertion(rdfs:label schema:softwareHelp "softwareHelp")
AnnotationAssertion(schema:domainIncludes schema:softwareHelp schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:softwareHelp schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:softwareRequirements "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).")
AnnotationAssertion(rdfs:label schema:softwareRequirements "softwareRequirements")
AnnotationAssertion(schema:domainIncludes schema:softwareRequirements schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:softwareRequirements schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:softwareRequirements schema:URL)
AnnotationAssertion(rdfs:comment schema:softwareVersion "Version of the software instance.")
AnnotationAssertion(rdfs:label schema:softwareVersion "softwareVersion")
AnnotationAssertion(schema:domainIncludes schema:softwareVersion schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:softwareVersion schema:Text)
AnnotationAssertion(rdfs:comment schema:sourceOrganization "The Organization on whose behalf the creator was working.")
AnnotationAssertion(rdfs:label schema:sourceOrganization "sourceOrganization")
AnnotationAssertion(schema:domainIncludes schema:sourceOrganization schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:sourceOrganization schema:Organization)
AnnotationAssertion(rdfs:comment schema:sourcedFrom "The neurological pathway that originates the neurons.")
AnnotationAssertion(rdfs:label schema:sourcedFrom "sourcedFrom")
AnnotationAssertion(schema:domainIncludes schema:sourcedFrom schema:Nerve)
AnnotationAssertion(schema:isPartOf schema:sourcedFrom <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sourcedFrom schema:BrainStructure)
AnnotationAssertion(rdfs:comment schema:spatial "The \"spatial\" property can be used in cases when more specific properties
(e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not known to be appropriate.")
AnnotationAssertion(rdfs:label schema:spatial "spatial")
AnnotationAssertion(schema:domainIncludes schema:spatial schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:spatial schema:Place)
AnnotationAssertion(rdfs:comment schema:speakable "Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.

The *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:

1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.

2.) CSS Selectors - addresses content in the annotated page, e.g. via class attribute. Use the [[cssSelector]] property.

3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the [[xpath]] property.


For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
we define a supporting type, [[SpeakableSpecification]]  which is defined to be a possible value of the *speakable* property.
         ")
AnnotationAssertion(rdfs:label schema:speakable "speakable")
AnnotationAssertion(schema:domainIncludes schema:speakable schema:Article)
AnnotationAssertion(schema:domainIncludes schema:speakable schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:speakable schema:SpeakableSpecification)
AnnotationAssertion(schema:rangeIncludes schema:speakable schema:URL)
AnnotationAssertion(schema:source schema:speakable <https://github.com/schemaorg/schemaorg/issues/1389>)
AnnotationAssertion(rdfs:comment schema:specialCommitments "Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.")
AnnotationAssertion(rdfs:label schema:specialCommitments "specialCommitments")
AnnotationAssertion(schema:domainIncludes schema:specialCommitments schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:specialCommitments schema:Text)
AnnotationAssertion(rdfs:comment schema:specialOpeningHoursSpecification "The special opening hours of a certain place.\\n\\nUse this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].
      ")
AnnotationAssertion(rdfs:label schema:specialOpeningHoursSpecification "specialOpeningHoursSpecification")
AnnotationAssertion(schema:domainIncludes schema:specialOpeningHoursSpecification schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:specialOpeningHoursSpecification schema:OpeningHoursSpecification)
AnnotationAssertion(rdfs:comment schema:specialty "One of the domain specialities to which this web page's content applies.")
AnnotationAssertion(rdfs:label schema:specialty "specialty")
AnnotationAssertion(schema:domainIncludes schema:specialty schema:WebPage)
AnnotationAssertion(schema:rangeIncludes schema:specialty schema:Specialty)
AnnotationAssertion(rdfs:comment schema:speechToTextMarkup "Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).")
AnnotationAssertion(rdfs:label schema:speechToTextMarkup "speechToTextMarkup")
AnnotationAssertion(schema:domainIncludes schema:speechToTextMarkup schema:PronounceableText)
AnnotationAssertion(schema:isPartOf schema:speechToTextMarkup <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:speechToTextMarkup schema:Text)
AnnotationAssertion(schema:source schema:speechToTextMarkup <https://github.com/schemaorg/schemaorg/issues/2108>)
AnnotationAssertion(rdfs:comment schema:speed "The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by [[maxValue]]) should be the maximum speed achievable under regular conditions.\\n\\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\\n\\n*Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, the minimal value is zero.\\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the [[valueReference]] property.")
AnnotationAssertion(rdfs:label schema:speed "speed")
AnnotationAssertion(schema:contributor schema:speed <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:speed schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:speed <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:speed schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:spokenByCharacter "The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.")
AnnotationAssertion(rdfs:label schema:spokenByCharacter "spokenByCharacter")
AnnotationAssertion(schema:domainIncludes schema:spokenByCharacter schema:Quotation)
AnnotationAssertion(schema:isPartOf schema:spokenByCharacter <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:spokenByCharacter schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:spokenByCharacter schema:Person)
AnnotationAssertion(schema:source schema:spokenByCharacter <https://github.com/schemaorg/schemaorg/issues/271>)
AnnotationAssertion(rdfs:comment schema:sport "A type of sport (e.g. Baseball).")
AnnotationAssertion(rdfs:label schema:sport "sport")
AnnotationAssertion(schema:domainIncludes schema:sport schema:SportsEvent)
AnnotationAssertion(schema:domainIncludes schema:sport schema:SportsOrganization)
AnnotationAssertion(schema:isPartOf schema:sport <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:sport schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:sport schema:URL)
AnnotationAssertion(schema:source schema:sport <https://github.com/schemaorg/schemaorg/issues/1951>)
AnnotationAssertion(rdfs:comment schema:spouse "The person's spouse.")
AnnotationAssertion(rdfs:label schema:spouse "spouse")
AnnotationAssertion(schema:domainIncludes schema:spouse schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:spouse schema:Person)
AnnotationAssertion(rdfs:comment schema:stage "The stage of the condition, if applicable.")
AnnotationAssertion(rdfs:label schema:stage "stage")
AnnotationAssertion(schema:domainIncludes schema:stage schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:stage <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:stage schema:MedicalConditionStage)
AnnotationAssertion(rdfs:comment schema:stageAsNumber "The stage represented as a number, e.g. 3.")
AnnotationAssertion(rdfs:label schema:stageAsNumber "stageAsNumber")
AnnotationAssertion(schema:domainIncludes schema:stageAsNumber schema:MedicalConditionStage)
AnnotationAssertion(schema:isPartOf schema:stageAsNumber <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:stageAsNumber schema:Number)
AnnotationAssertion(rdfs:comment schema:starRating "An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).")
AnnotationAssertion(rdfs:label schema:starRating "starRating")
AnnotationAssertion(schema:contributor schema:starRating <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:starRating schema:FoodEstablishment)
AnnotationAssertion(schema:domainIncludes schema:starRating schema:LodgingBusiness)
AnnotationAssertion(schema:rangeIncludes schema:starRating schema:Rating)
AnnotationAssertion(rdfs:comment schema:startDate "The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).")
AnnotationAssertion(rdfs:label schema:startDate "startDate")
AnnotationAssertion(schema:domainIncludes schema:startDate schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:CreativeWorkSeries)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:DatedMoneySpecification)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:Event)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:MerchantReturnPolicySeasonalOverride)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:Role)
AnnotationAssertion(schema:domainIncludes schema:startDate schema:Schedule)
AnnotationAssertion(schema:rangeIncludes schema:startDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:startDate schema:DateTime)
AnnotationAssertion(schema:source schema:startDate <https://github.com/schemaorg/schemaorg/issues/2486>)
AnnotationAssertion(rdfs:comment schema:startOffset "The start time of the clip expressed as the number of seconds from the beginning of the work.")
AnnotationAssertion(rdfs:label schema:startOffset "startOffset")
AnnotationAssertion(schema:domainIncludes schema:startOffset schema:Clip)
AnnotationAssertion(schema:domainIncludes schema:startOffset schema:SeekToAction)
AnnotationAssertion(schema:isPartOf schema:startOffset <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:startOffset schema:HyperTocEntry)
AnnotationAssertion(schema:rangeIncludes schema:startOffset schema:Number)
AnnotationAssertion(schema:source schema:startOffset <https://github.com/schemaorg/schemaorg/issues/2021>)
AnnotationAssertion(rdfs:comment schema:startTime "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. E.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.")
AnnotationAssertion(rdfs:label schema:startTime "startTime")
AnnotationAssertion(schema:domainIncludes schema:startTime schema:Action)
AnnotationAssertion(schema:domainIncludes schema:startTime schema:FoodEstablishmentReservation)
AnnotationAssertion(schema:domainIncludes schema:startTime schema:InteractionCounter)
AnnotationAssertion(schema:domainIncludes schema:startTime schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:startTime schema:Schedule)
AnnotationAssertion(schema:rangeIncludes schema:startTime schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:startTime schema:Time)
AnnotationAssertion(schema:source schema:startTime <https://github.com/schemaorg/schemaorg/issues/2493>)
AnnotationAssertion(rdfs:comment schema:statType "Indicates the kind of statistic represented by a [[StatisticalVariable]], e.g. mean, count etc. The value of statType is a property, either from within Schema.org (e.g. [[median]], [[marginOfError]], [[maxValue]], [[minValue]]) or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ")
AnnotationAssertion(rdfs:label schema:statType "statType")
AnnotationAssertion(schema:domainIncludes schema:statType schema:StatisticalVariable)
AnnotationAssertion(schema:isPartOf schema:statType <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:statType schema:Property)
AnnotationAssertion(schema:rangeIncludes schema:statType schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:statType schema:URL)
AnnotationAssertion(schema:source schema:statType <https://github.com/schemaorg/schemaorg/issues/2564>)
AnnotationAssertion(rdfs:comment schema:status "The status of the study (enumerated).")
AnnotationAssertion(rdfs:label schema:status "status")
AnnotationAssertion(schema:domainIncludes schema:status schema:MedicalCondition)
AnnotationAssertion(schema:domainIncludes schema:status schema:MedicalProcedure)
AnnotationAssertion(schema:domainIncludes schema:status schema:MedicalStudy)
AnnotationAssertion(schema:isPartOf schema:status <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:status schema:EventStatusType)
AnnotationAssertion(schema:rangeIncludes schema:status schema:MedicalStudyStatus)
AnnotationAssertion(schema:rangeIncludes schema:status schema:Text)
AnnotationAssertion(rdfs:comment schema:steeringPosition "The position of the steering wheel or similar device (mostly for cars).")
AnnotationAssertion(rdfs:label schema:steeringPosition "steeringPosition")
AnnotationAssertion(schema:contributor schema:steeringPosition <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:steeringPosition schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:steeringPosition schema:SteeringPositionValue)
AnnotationAssertion(rdfs:comment schema:stepValue "The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.")
AnnotationAssertion(rdfs:label schema:stepValue "stepValue")
AnnotationAssertion(schema:domainIncludes schema:stepValue schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:stepValue schema:Number)
AnnotationAssertion(rdfs:comment schema:steps "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).")
AnnotationAssertion(rdfs:label schema:steps "steps")
AnnotationAssertion(schema:domainIncludes schema:steps schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:steps schema:HowToSection)
AnnotationAssertion(schema:rangeIncludes schema:steps schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:steps schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:steps schema:Text)
AnnotationAssertion(schema:supersededBy schema:steps schema:step)
AnnotationAssertion(rdfs:comment schema:storageRequirements "Storage requirements (free space required).")
AnnotationAssertion(rdfs:label schema:storageRequirements "storageRequirements")
AnnotationAssertion(schema:domainIncludes schema:storageRequirements schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:storageRequirements schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:storageRequirements schema:URL)
AnnotationAssertion(rdfs:comment schema:streetAddress "The street address. For example, 1600 Amphitheatre Pkwy.")
AnnotationAssertion(rdfs:label schema:streetAddress "streetAddress")
AnnotationAssertion(schema:domainIncludes schema:streetAddress schema:PostalAddress)
AnnotationAssertion(schema:rangeIncludes schema:streetAddress schema:Text)
AnnotationAssertion(rdfs:comment schema:strengthUnit "The units of an active ingredient's strength, e.g. mg.")
AnnotationAssertion(rdfs:label schema:strengthUnit "strengthUnit")
AnnotationAssertion(schema:domainIncludes schema:strengthUnit schema:DrugStrength)
AnnotationAssertion(schema:isPartOf schema:strengthUnit <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:strengthUnit schema:Text)
AnnotationAssertion(rdfs:comment schema:strengthValue "The value of an active ingredient's strength, e.g. 325.")
AnnotationAssertion(rdfs:label schema:strengthValue "strengthValue")
AnnotationAssertion(schema:domainIncludes schema:strengthValue schema:DrugStrength)
AnnotationAssertion(schema:isPartOf schema:strengthValue <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:strengthValue schema:Number)
AnnotationAssertion(rdfs:comment schema:structuralClass "The name given to how bone physically connects to each other.")
AnnotationAssertion(rdfs:label schema:structuralClass "structuralClass")
AnnotationAssertion(schema:domainIncludes schema:structuralClass schema:Joint)
AnnotationAssertion(schema:isPartOf schema:structuralClass <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:structuralClass schema:Text)
AnnotationAssertion(rdfs:comment schema:study "A medical study or trial related to this entity.")
AnnotationAssertion(rdfs:label schema:study "study")
AnnotationAssertion(schema:domainIncludes schema:study schema:MedicalEntity)
AnnotationAssertion(schema:isPartOf schema:study <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:study schema:MedicalStudy)
AnnotationAssertion(rdfs:comment schema:studyDesign "Specifics about the observational study design (enumerated).")
AnnotationAssertion(rdfs:label schema:studyDesign "studyDesign")
AnnotationAssertion(schema:domainIncludes schema:studyDesign schema:MedicalObservationalStudy)
AnnotationAssertion(schema:isPartOf schema:studyDesign <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:studyDesign schema:MedicalObservationalStudyDesign)
AnnotationAssertion(rdfs:comment schema:studyLocation "The location in which the study is taking/took place.")
AnnotationAssertion(rdfs:label schema:studyLocation "studyLocation")
AnnotationAssertion(schema:domainIncludes schema:studyLocation schema:MedicalStudy)
AnnotationAssertion(schema:isPartOf schema:studyLocation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:studyLocation schema:AdministrativeArea)
AnnotationAssertion(rdfs:comment schema:studySubject "A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.")
AnnotationAssertion(rdfs:label schema:studySubject "studySubject")
AnnotationAssertion(schema:domainIncludes schema:studySubject schema:MedicalStudy)
AnnotationAssertion(schema:isPartOf schema:studySubject <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:studySubject schema:MedicalEntity)
AnnotationAssertion(rdfs:comment schema:subEvent "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.")
AnnotationAssertion(rdfs:label schema:subEvent "subEvent")
AnnotationAssertion(schema:domainIncludes schema:subEvent schema:Event)
AnnotationAssertion(schema:inverseOf schema:subEvent schema:superEvent)
AnnotationAssertion(schema:rangeIncludes schema:subEvent schema:Event)
AnnotationAssertion(rdfs:comment schema:subEvents "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.")
AnnotationAssertion(rdfs:label schema:subEvents "subEvents")
AnnotationAssertion(schema:domainIncludes schema:subEvents schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:subEvents schema:Event)
AnnotationAssertion(schema:supersededBy schema:subEvents schema:subEvent)
AnnotationAssertion(rdfs:comment schema:subOrganization "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.")
AnnotationAssertion(rdfs:label schema:subOrganization "subOrganization")
AnnotationAssertion(schema:domainIncludes schema:subOrganization schema:Organization)
AnnotationAssertion(schema:inverseOf schema:subOrganization schema:parentOrganization)
AnnotationAssertion(schema:rangeIncludes schema:subOrganization schema:Organization)
AnnotationAssertion(rdfs:comment schema:subReservation "The individual reservations included in the package. Typically a repeated property.")
AnnotationAssertion(rdfs:label schema:subReservation "subReservation")
AnnotationAssertion(schema:domainIncludes schema:subReservation schema:ReservationPackage)
AnnotationAssertion(schema:rangeIncludes schema:subReservation schema:Reservation)
AnnotationAssertion(rdfs:comment schema:subStageSuffix "The substage, e.g. 'a' for Stage IIIa.")
AnnotationAssertion(rdfs:label schema:subStageSuffix "subStageSuffix")
AnnotationAssertion(schema:domainIncludes schema:subStageSuffix schema:MedicalConditionStage)
AnnotationAssertion(schema:isPartOf schema:subStageSuffix <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:subStageSuffix schema:Text)
AnnotationAssertion(rdfs:comment schema:subStructure "Component (sub-)structure(s) that comprise this anatomical structure.")
AnnotationAssertion(rdfs:label schema:subStructure "subStructure")
AnnotationAssertion(schema:domainIncludes schema:subStructure schema:AnatomicalStructure)
AnnotationAssertion(schema:isPartOf schema:subStructure <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:subStructure schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:subTest "A component test of the panel.")
AnnotationAssertion(rdfs:label schema:subTest "subTest")
AnnotationAssertion(schema:domainIncludes schema:subTest schema:MedicalTestPanel)
AnnotationAssertion(schema:isPartOf schema:subTest <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:subTest schema:MedicalTest)
AnnotationAssertion(rdfs:comment schema:subTrip "Identifies a [[Trip]] that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.")
AnnotationAssertion(rdfs:label schema:subTrip "subTrip")
AnnotationAssertion(schema:contributor schema:subTrip <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:domainIncludes schema:subTrip schema:Trip)
AnnotationAssertion(schema:inverseOf schema:subTrip schema:partOfTrip)
AnnotationAssertion(schema:isPartOf schema:subTrip <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:subTrip schema:Trip)
AnnotationAssertion(schema:source schema:subTrip <https://github.com/schemaorg/schemaorg/issues/1810>)
AnnotationAssertion(rdfs:comment schema:subjectOf "A CreativeWork or Event about this Thing.")
AnnotationAssertion(rdfs:label schema:subjectOf "subjectOf")
AnnotationAssertion(schema:domainIncludes schema:subjectOf schema:Thing)
AnnotationAssertion(schema:inverseOf schema:subjectOf schema:about)
AnnotationAssertion(schema:rangeIncludes schema:subjectOf schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:subjectOf schema:Event)
AnnotationAssertion(schema:source schema:subjectOf <https://github.com/schemaorg/schemaorg/issues/1670>)
AnnotationAssertion(rdfs:comment schema:subtitleLanguage "Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).")
AnnotationAssertion(rdfs:label schema:subtitleLanguage "subtitleLanguage")
AnnotationAssertion(schema:domainIncludes schema:subtitleLanguage schema:BroadcastEvent)
AnnotationAssertion(schema:domainIncludes schema:subtitleLanguage schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:subtitleLanguage schema:ScreeningEvent)
AnnotationAssertion(schema:domainIncludes schema:subtitleLanguage schema:TVEpisode)
AnnotationAssertion(schema:isPartOf schema:subtitleLanguage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:subtitleLanguage schema:Language)
AnnotationAssertion(schema:rangeIncludes schema:subtitleLanguage schema:Text)
AnnotationAssertion(schema:source schema:subtitleLanguage <https://github.com/schemaorg/schemaorg/issues/2110>)
AnnotationAssertion(rdfs:comment schema:successorOf "A pointer from a newer variant of a product  to its previous, often discontinued predecessor.")
AnnotationAssertion(rdfs:label schema:successorOf "successorOf")
AnnotationAssertion(schema:contributor schema:successorOf <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:successorOf schema:ProductModel)
AnnotationAssertion(schema:rangeIncludes schema:successorOf schema:ProductModel)
AnnotationAssertion(rdfs:comment schema:sugarContent "The number of grams of sugar.")
AnnotationAssertion(rdfs:label schema:sugarContent "sugarContent")
AnnotationAssertion(schema:domainIncludes schema:sugarContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:sugarContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:suggestedAge "The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.")
AnnotationAssertion(rdfs:label schema:suggestedAge "suggestedAge")
AnnotationAssertion(schema:domainIncludes schema:suggestedAge schema:PeopleAudience)
AnnotationAssertion(schema:domainIncludes schema:suggestedAge schema:SizeSpecification)
AnnotationAssertion(schema:isPartOf schema:suggestedAge <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:suggestedAge schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:suggestedAge <https://github.com/schemaorg/schemaorg/issues/2811>)
AnnotationAssertion(rdfs:comment schema:suggestedGender "The suggested gender of the intended person or audience, for example \"male\", \"female\", or \"unisex\".")
AnnotationAssertion(rdfs:label schema:suggestedGender "suggestedGender")
AnnotationAssertion(schema:domainIncludes schema:suggestedGender schema:PeopleAudience)
AnnotationAssertion(schema:domainIncludes schema:suggestedGender schema:SizeSpecification)
AnnotationAssertion(schema:rangeIncludes schema:suggestedGender schema:GenderType)
AnnotationAssertion(schema:rangeIncludes schema:suggestedGender schema:Text)
AnnotationAssertion(rdfs:comment schema:suggestedMaxAge "Maximum recommended age in years for the audience or user.")
AnnotationAssertion(rdfs:label schema:suggestedMaxAge "suggestedMaxAge")
AnnotationAssertion(schema:domainIncludes schema:suggestedMaxAge schema:PeopleAudience)
AnnotationAssertion(schema:rangeIncludes schema:suggestedMaxAge schema:Number)
AnnotationAssertion(rdfs:comment schema:suggestedMeasurement "A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.")
AnnotationAssertion(rdfs:label schema:suggestedMeasurement "suggestedMeasurement")
AnnotationAssertion(schema:domainIncludes schema:suggestedMeasurement schema:PeopleAudience)
AnnotationAssertion(schema:domainIncludes schema:suggestedMeasurement schema:SizeSpecification)
AnnotationAssertion(schema:isPartOf schema:suggestedMeasurement <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:suggestedMeasurement schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:suggestedMeasurement <https://github.com/schemaorg/schemaorg/issues/2811>)
AnnotationAssertion(rdfs:comment schema:suggestedMinAge "Minimum recommended age in years for the audience or user.")
AnnotationAssertion(rdfs:label schema:suggestedMinAge "suggestedMinAge")
AnnotationAssertion(schema:domainIncludes schema:suggestedMinAge schema:PeopleAudience)
AnnotationAssertion(schema:rangeIncludes schema:suggestedMinAge schema:Number)
AnnotationAssertion(rdfs:comment schema:suitableForDiet "Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.")
AnnotationAssertion(rdfs:label schema:suitableForDiet "suitableForDiet")
AnnotationAssertion(schema:domainIncludes schema:suitableForDiet schema:MenuItem)
AnnotationAssertion(schema:domainIncludes schema:suitableForDiet schema:Recipe)
AnnotationAssertion(schema:rangeIncludes schema:suitableForDiet schema:RestrictedDiet)
AnnotationAssertion(rdfs:comment schema:superEvent "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.")
AnnotationAssertion(rdfs:label schema:superEvent "superEvent")
AnnotationAssertion(schema:domainIncludes schema:superEvent schema:Event)
AnnotationAssertion(schema:inverseOf schema:superEvent schema:subEvent)
AnnotationAssertion(schema:rangeIncludes schema:superEvent schema:Event)
AnnotationAssertion(rdfs:comment schema:supplyTo "The area to which the artery supplies blood.")
AnnotationAssertion(rdfs:label schema:supplyTo "supplyTo")
AnnotationAssertion(schema:domainIncludes schema:supplyTo schema:Artery)
AnnotationAssertion(schema:isPartOf schema:supplyTo <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:supplyTo schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:supportingData "Supporting data for a SoftwareApplication.")
AnnotationAssertion(rdfs:label schema:supportingData "supportingData")
AnnotationAssertion(schema:domainIncludes schema:supportingData schema:SoftwareApplication)
AnnotationAssertion(schema:rangeIncludes schema:supportingData schema:DataFeed)
AnnotationAssertion(rdfs:comment schema:syllabusSections "Indicates (typically several) Syllabus entities that lay out what each section of the overall course will cover.")
AnnotationAssertion(rdfs:label schema:syllabusSections "syllabusSections")
AnnotationAssertion(schema:domainIncludes schema:syllabusSections schema:Course)
AnnotationAssertion(schema:isPartOf schema:syllabusSections <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:syllabusSections schema:Syllabus)
AnnotationAssertion(schema:source schema:syllabusSections <https://github.com/schemaorg/schemaorg/issues/3281>)
AnnotationAssertion(rdfs:comment schema:target "Indicates a target EntryPoint, or url, for an Action.")
AnnotationAssertion(rdfs:label schema:target "target")
AnnotationAssertion(schema:domainIncludes schema:target schema:Action)
AnnotationAssertion(schema:rangeIncludes schema:target schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:target schema:URL)
AnnotationAssertion(rdfs:comment schema:targetDescription "The description of a node in an established educational framework.")
AnnotationAssertion(rdfs:label schema:targetDescription "targetDescription")
AnnotationAssertion(schema:domainIncludes schema:targetDescription schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:targetDescription schema:Text)
AnnotationAssertion(rdfs:comment schema:targetName "The name of a node in an established educational framework.")
AnnotationAssertion(rdfs:label schema:targetName "targetName")
AnnotationAssertion(schema:domainIncludes schema:targetName schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:targetName schema:Text)
AnnotationAssertion(rdfs:comment schema:targetPlatform "Type of app development: phone, Metro style, desktop, XBox, etc.")
AnnotationAssertion(rdfs:label schema:targetPlatform "targetPlatform")
AnnotationAssertion(schema:domainIncludes schema:targetPlatform schema:APIReference)
AnnotationAssertion(schema:rangeIncludes schema:targetPlatform schema:Text)
AnnotationAssertion(rdfs:comment schema:targetPopulation "Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.")
AnnotationAssertion(rdfs:label schema:targetPopulation "targetPopulation")
AnnotationAssertion(schema:domainIncludes schema:targetPopulation schema:DietarySupplement)
AnnotationAssertion(schema:domainIncludes schema:targetPopulation schema:DoseSchedule)
AnnotationAssertion(schema:isPartOf schema:targetPopulation <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:targetPopulation schema:Text)
AnnotationAssertion(rdfs:comment schema:targetProduct "Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.")
AnnotationAssertion(rdfs:label schema:targetProduct "targetProduct")
AnnotationAssertion(schema:domainIncludes schema:targetProduct schema:SoftwareSourceCode)
AnnotationAssertion(schema:rangeIncludes schema:targetProduct schema:SoftwareApplication)
AnnotationAssertion(rdfs:comment schema:targetUrl "The URL of a node in an established educational framework.")
AnnotationAssertion(rdfs:label schema:targetUrl "targetUrl")
AnnotationAssertion(schema:domainIncludes schema:targetUrl schema:AlignmentObject)
AnnotationAssertion(schema:rangeIncludes schema:targetUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:taxonRank "The taxonomic rank of this taxon given preferably as a URI from a controlled vocabulary – typically the ranks from TDWG TaxonRank ontology or equivalent Wikidata URIs.")
AnnotationAssertion(rdfs:label schema:taxonRank "taxonRank")
AnnotationAssertion(schema:domainIncludes schema:taxonRank schema:Taxon)
AnnotationAssertion(schema:isPartOf schema:taxonRank <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:taxonRank schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:taxonRank schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:taxonRank schema:URL)
AnnotationAssertion(schema:source schema:taxonRank <http://www.bioschemas.org/Taxon>)
AnnotationAssertion(rdfs:comment schema:taxonomicRange "The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.")
AnnotationAssertion(rdfs:label schema:taxonomicRange "taxonomicRange")
AnnotationAssertion(schema:domainIncludes schema:taxonomicRange schema:BioChemEntity)
AnnotationAssertion(schema:isPartOf schema:taxonomicRange <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:taxonomicRange schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:taxonomicRange schema:Taxon)
AnnotationAssertion(schema:rangeIncludes schema:taxonomicRange schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:taxonomicRange schema:URL)
AnnotationAssertion(schema:source schema:taxonomicRange <http://www.bioschemas.org>)
AnnotationAssertion(rdfs:comment schema:teaches "The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.")
AnnotationAssertion(rdfs:label schema:teaches "teaches")
AnnotationAssertion(schema:domainIncludes schema:teaches schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:teaches schema:EducationEvent)
AnnotationAssertion(schema:domainIncludes schema:teaches schema:LearningResource)
AnnotationAssertion(schema:isPartOf schema:teaches <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:teaches schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:teaches schema:Text)
AnnotationAssertion(schema:source schema:teaches <https://github.com/schemaorg/schemaorg/issues/2427>)
AnnotationAssertion(rdfs:comment schema:telephone "The telephone number.")
AnnotationAssertion(rdfs:label schema:telephone "telephone")
AnnotationAssertion(schema:domainIncludes schema:telephone schema:ContactPoint)
AnnotationAssertion(schema:domainIncludes schema:telephone schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:telephone schema:Person)
AnnotationAssertion(schema:domainIncludes schema:telephone schema:Place)
AnnotationAssertion(schema:rangeIncludes schema:telephone schema:Text)
AnnotationAssertion(rdfs:comment schema:temporal "The \"temporal\" property can be used in cases where more specific properties
(e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) are not known to be appropriate.")
AnnotationAssertion(rdfs:label schema:temporal "temporal")
AnnotationAssertion(schema:domainIncludes schema:temporal schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:temporal schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:temporal schema:Text)
AnnotationAssertion(rdfs:comment schema:temporalCoverage "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In
      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL.
      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".

Open-ended date ranges can be written with \"..\" in place of the end date. For example, \"2015-11/..\" indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.")
AnnotationAssertion(rdfs:label schema:temporalCoverage "temporalCoverage")
AnnotationAssertion(schema:domainIncludes schema:temporalCoverage schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:temporalCoverage schema:DateTime)
AnnotationAssertion(schema:rangeIncludes schema:temporalCoverage schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:temporalCoverage schema:URL)
AnnotationAssertion(rdfs:comment schema:termDuration "The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.")
AnnotationAssertion(rdfs:label schema:termDuration "termDuration")
AnnotationAssertion(schema:domainIncludes schema:termDuration schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:termDuration <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:termDuration schema:Duration)
AnnotationAssertion(schema:source schema:termDuration <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:termsOfService "Human-readable terms of service documentation.")
AnnotationAssertion(rdfs:label schema:termsOfService "termsOfService")
AnnotationAssertion(schema:domainIncludes schema:termsOfService schema:Service)
AnnotationAssertion(schema:isPartOf schema:termsOfService <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:termsOfService schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:termsOfService schema:URL)
AnnotationAssertion(schema:source schema:termsOfService <https://github.com/schemaorg/schemaorg/issues/1423>)
AnnotationAssertion(rdfs:comment schema:termsPerYear "The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.")
AnnotationAssertion(rdfs:label schema:termsPerYear "termsPerYear")
AnnotationAssertion(schema:domainIncludes schema:termsPerYear schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:termsPerYear <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:termsPerYear schema:Number)
AnnotationAssertion(schema:source schema:termsPerYear <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:text "The textual content of this CreativeWork.")
AnnotationAssertion(rdfs:label schema:text "text")
AnnotationAssertion(schema:domainIncludes schema:text schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:text schema:Text)
AnnotationAssertion(rdfs:comment schema:textValue "Text value being annotated.")
AnnotationAssertion(rdfs:label schema:textValue "textValue")
AnnotationAssertion(schema:domainIncludes schema:textValue schema:PronounceableText)
AnnotationAssertion(schema:isPartOf schema:textValue <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:textValue schema:Text)
AnnotationAssertion(schema:source schema:textValue <https://github.com/schemaorg/schemaorg/issues/2108>)
AnnotationAssertion(rdfs:comment schema:thumbnail "Thumbnail image for an image or video.")
AnnotationAssertion(rdfs:label schema:thumbnail "thumbnail")
AnnotationAssertion(schema:domainIncludes schema:thumbnail schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:thumbnail schema:ImageObject)
AnnotationAssertion(rdfs:comment schema:thumbnailUrl "A thumbnail image relevant to the Thing.")
AnnotationAssertion(rdfs:label schema:thumbnailUrl "thumbnailUrl")
AnnotationAssertion(schema:domainIncludes schema:thumbnailUrl schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:thumbnailUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:tickerSymbol "The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 15022.")
AnnotationAssertion(rdfs:label schema:tickerSymbol "tickerSymbol")
AnnotationAssertion(schema:domainIncludes schema:tickerSymbol schema:Corporation)
AnnotationAssertion(schema:rangeIncludes schema:tickerSymbol schema:Text)
AnnotationAssertion(rdfs:comment schema:ticketNumber "The unique identifier for the ticket.")
AnnotationAssertion(rdfs:label schema:ticketNumber "ticketNumber")
AnnotationAssertion(schema:domainIncludes schema:ticketNumber schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:ticketNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:ticketToken "Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.")
AnnotationAssertion(rdfs:label schema:ticketToken "ticketToken")
AnnotationAssertion(schema:domainIncludes schema:ticketToken schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:ticketToken schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:ticketToken schema:URL)
AnnotationAssertion(rdfs:comment schema:ticketedSeat "The seat associated with the ticket.")
AnnotationAssertion(rdfs:label schema:ticketedSeat "ticketedSeat")
AnnotationAssertion(schema:domainIncludes schema:ticketedSeat schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:ticketedSeat schema:Seat)
AnnotationAssertion(rdfs:comment schema:timeOfDay "The time of day the program normally runs. For example, \"evenings\".")
AnnotationAssertion(rdfs:label schema:timeOfDay "timeOfDay")
AnnotationAssertion(schema:domainIncludes schema:timeOfDay schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:timeOfDay <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:timeOfDay schema:Text)
AnnotationAssertion(schema:source schema:timeOfDay <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:timeRequired "Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.")
AnnotationAssertion(rdfs:label schema:timeRequired "timeRequired")
AnnotationAssertion(schema:domainIncludes schema:timeRequired schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:timeRequired schema:Duration)
AnnotationAssertion(rdfs:comment schema:timeToComplete "The expected length of time to complete the program if attending full-time.")
AnnotationAssertion(rdfs:label schema:timeToComplete "timeToComplete")
AnnotationAssertion(schema:domainIncludes schema:timeToComplete schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:timeToComplete <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:timeToComplete schema:Duration)
AnnotationAssertion(schema:source schema:timeToComplete <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(rdfs:comment schema:tissueSample "The type of tissue sample required for the test.")
AnnotationAssertion(rdfs:label schema:tissueSample "tissueSample")
AnnotationAssertion(schema:domainIncludes schema:tissueSample schema:PathologyTest)
AnnotationAssertion(schema:isPartOf schema:tissueSample <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tissueSample schema:Text)
AnnotationAssertion(rdfs:comment schema:title "The title of the job.")
AnnotationAssertion(rdfs:label schema:title "title")
AnnotationAssertion(schema:domainIncludes schema:title schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:title schema:Text)
AnnotationAssertion(rdfs:comment schema:tocContinuation "A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another [[HyperTocEntry]] that would be the default next item to play or render.")
AnnotationAssertion(rdfs:label schema:tocContinuation "tocContinuation")
AnnotationAssertion(schema:domainIncludes schema:tocContinuation schema:HyperTocEntry)
AnnotationAssertion(schema:isPartOf schema:tocContinuation <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tocContinuation schema:HyperTocEntry)
AnnotationAssertion(schema:source schema:tocContinuation <https://github.com/schemaorg/schemaorg/issues/2766>)
AnnotationAssertion(rdfs:comment schema:tongueWeight "The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:tongueWeight "tongueWeight")
AnnotationAssertion(schema:contributor schema:tongueWeight <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:tongueWeight schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:tongueWeight <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tongueWeight schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:torque "The torque (turning force) of the vehicle's engine.\\n\\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\\n\\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:torque "torque")
AnnotationAssertion(schema:contributor schema:torque <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:torque schema:EngineSpecification)
AnnotationAssertion(schema:isPartOf schema:torque <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:torque schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:totalHistoricalEnrollment "The total number of students that have enrolled in the history of the course.")
AnnotationAssertion(rdfs:label schema:totalHistoricalEnrollment "totalHistoricalEnrollment")
AnnotationAssertion(schema:domainIncludes schema:totalHistoricalEnrollment schema:Course)
AnnotationAssertion(schema:isPartOf schema:totalHistoricalEnrollment <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:totalHistoricalEnrollment schema:Integer)
AnnotationAssertion(schema:source schema:totalHistoricalEnrollment <https://github.com/schemaorg/schemaorg/issues/3281>)
AnnotationAssertion(rdfs:comment schema:totalJobOpenings "The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.")
AnnotationAssertion(rdfs:label schema:totalJobOpenings "totalJobOpenings")
AnnotationAssertion(schema:domainIncludes schema:totalJobOpenings schema:JobPosting)
AnnotationAssertion(schema:isPartOf schema:totalJobOpenings <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:totalJobOpenings schema:Integer)
AnnotationAssertion(schema:source schema:totalJobOpenings <https://github.com/schemaorg/schemaorg/issues/2329>)
AnnotationAssertion(rdfs:comment schema:totalPaymentDue "The total amount due.")
AnnotationAssertion(rdfs:label schema:totalPaymentDue "totalPaymentDue")
AnnotationAssertion(schema:domainIncludes schema:totalPaymentDue schema:Invoice)
AnnotationAssertion(schema:rangeIncludes schema:totalPaymentDue schema:MonetaryAmount)
AnnotationAssertion(schema:rangeIncludes schema:totalPaymentDue schema:PriceSpecification)
AnnotationAssertion(rdfs:comment schema:totalPrice "The total price for the reservation or ticket, including applicable taxes, shipping, etc.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:totalPrice "totalPrice")
AnnotationAssertion(schema:domainIncludes schema:totalPrice schema:Reservation)
AnnotationAssertion(schema:domainIncludes schema:totalPrice schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:totalPrice schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:totalPrice schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:totalPrice schema:Text)
AnnotationAssertion(rdfs:comment schema:totalTime "The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).")
AnnotationAssertion(rdfs:label schema:totalTime "totalTime")
AnnotationAssertion(schema:domainIncludes schema:totalTime schema:HowTo)
AnnotationAssertion(schema:domainIncludes schema:totalTime schema:HowToDirection)
AnnotationAssertion(schema:rangeIncludes schema:totalTime schema:Duration)
AnnotationAssertion(rdfs:comment schema:tourBookingPage "A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.")
AnnotationAssertion(rdfs:label schema:tourBookingPage "tourBookingPage")
AnnotationAssertion(schema:domainIncludes schema:tourBookingPage schema:Accommodation)
AnnotationAssertion(schema:domainIncludes schema:tourBookingPage schema:ApartmentComplex)
AnnotationAssertion(schema:domainIncludes schema:tourBookingPage schema:Place)
AnnotationAssertion(schema:isPartOf schema:tourBookingPage <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tourBookingPage schema:URL)
AnnotationAssertion(schema:source schema:tourBookingPage <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:touristType "Attraction suitable for type(s) of tourist. E.g. children, visitors from a particular country, etc. ")
AnnotationAssertion(rdfs:label schema:touristType "touristType")
AnnotationAssertion(schema:contributor schema:touristType <https://schema.org/docs/collab/IIT-CNR.it>)
AnnotationAssertion(schema:contributor schema:touristType <https://schema.org/docs/collab/Tourism>)
AnnotationAssertion(schema:domainIncludes schema:touristType schema:TouristAttraction)
AnnotationAssertion(schema:domainIncludes schema:touristType schema:TouristDestination)
AnnotationAssertion(schema:domainIncludes schema:touristType schema:TouristTrip)
AnnotationAssertion(schema:rangeIncludes schema:touristType schema:Audience)
AnnotationAssertion(schema:rangeIncludes schema:touristType schema:Text)
AnnotationAssertion(rdfs:comment schema:track "A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.")
AnnotationAssertion(rdfs:label schema:track "track")
AnnotationAssertion(schema:contributor schema:track <https://schema.org/docs/collab/MBZ>)
AnnotationAssertion(schema:domainIncludes schema:track schema:MusicGroup)
AnnotationAssertion(schema:domainIncludes schema:track schema:MusicPlaylist)
AnnotationAssertion(schema:rangeIncludes schema:track schema:ItemList)
AnnotationAssertion(schema:rangeIncludes schema:track schema:MusicRecording)
AnnotationAssertion(rdfs:comment schema:trackingNumber "Shipper tracking number.")
AnnotationAssertion(rdfs:label schema:trackingNumber "trackingNumber")
AnnotationAssertion(schema:domainIncludes schema:trackingNumber schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:trackingNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:trackingUrl "Tracking url for the parcel delivery.")
AnnotationAssertion(rdfs:label schema:trackingUrl "trackingUrl")
AnnotationAssertion(schema:domainIncludes schema:trackingUrl schema:ParcelDelivery)
AnnotationAssertion(schema:rangeIncludes schema:trackingUrl schema:URL)
AnnotationAssertion(rdfs:comment schema:tracks "A music recording (track)&#x2014;usually a single song.")
AnnotationAssertion(rdfs:label schema:tracks "tracks")
AnnotationAssertion(schema:domainIncludes schema:tracks schema:MusicGroup)
AnnotationAssertion(schema:domainIncludes schema:tracks schema:MusicPlaylist)
AnnotationAssertion(schema:rangeIncludes schema:tracks schema:MusicRecording)
AnnotationAssertion(schema:supersededBy schema:tracks schema:track)
AnnotationAssertion(rdfs:comment schema:trailer "The trailer of a movie or TV/radio series, season, episode, etc.")
AnnotationAssertion(rdfs:label schema:trailer "trailer")
AnnotationAssertion(schema:domainIncludes schema:trailer schema:CreativeWorkSeason)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:Episode)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:Movie)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:MovieSeries)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:RadioSeries)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:TVSeries)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:VideoGame)
AnnotationAssertion(schema:domainIncludes schema:trailer schema:VideoGameSeries)
AnnotationAssertion(schema:rangeIncludes schema:trailer schema:VideoObject)
AnnotationAssertion(rdfs:comment schema:trailerWeight "The permitted weight of a trailer attached to the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:trailerWeight "trailerWeight")
AnnotationAssertion(schema:contributor schema:trailerWeight <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:trailerWeight schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:trailerWeight <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:trailerWeight schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:trainName "The name of the train (e.g. The Orient Express).")
AnnotationAssertion(rdfs:label schema:trainName "trainName")
AnnotationAssertion(schema:domainIncludes schema:trainName schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:trainName schema:Text)
AnnotationAssertion(rdfs:comment schema:trainNumber "The unique identifier for the train.")
AnnotationAssertion(rdfs:label schema:trainNumber "trainNumber")
AnnotationAssertion(schema:domainIncludes schema:trainNumber schema:TrainTrip)
AnnotationAssertion(schema:rangeIncludes schema:trainNumber schema:Text)
AnnotationAssertion(rdfs:comment schema:trainingSalary "The estimated salary earned while in the program.")
AnnotationAssertion(rdfs:label schema:trainingSalary "trainingSalary")
AnnotationAssertion(schema:domainIncludes schema:trainingSalary schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:domainIncludes schema:trainingSalary schema:WorkBasedProgram)
AnnotationAssertion(schema:isPartOf schema:trainingSalary <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:trainingSalary schema:MonetaryAmountDistribution)
AnnotationAssertion(schema:source schema:trainingSalary <https://github.com/schemaorg/schemaorg/issues/2289>)
AnnotationAssertion(schema:source schema:trainingSalary <https://github.com/schemaorg/schemaorg/issues/2460>)
AnnotationAssertion(rdfs:comment schema:transFatContent "The number of grams of trans fat.")
AnnotationAssertion(rdfs:label schema:transFatContent "transFatContent")
AnnotationAssertion(schema:domainIncludes schema:transFatContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:transFatContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:transcript "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.")
AnnotationAssertion(rdfs:label schema:transcript "transcript")
AnnotationAssertion(schema:domainIncludes schema:transcript schema:AudioObject)
AnnotationAssertion(schema:domainIncludes schema:transcript schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:transcript schema:Text)
AnnotationAssertion(rdfs:comment schema:transitTime "The typical delay the order has been sent for delivery and the goods reach the final customer. Typical properties: minValue, maxValue, unitCode (d for DAY).")
AnnotationAssertion(rdfs:label schema:transitTime "transitTime")
AnnotationAssertion(schema:domainIncludes schema:transitTime schema:ShippingDeliveryTime)
AnnotationAssertion(schema:rangeIncludes schema:transitTime schema:QuantitativeValue)
AnnotationAssertion(schema:source schema:transitTime <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:transitTimeLabel "Label to match an [[OfferShippingDetails]] with a [[DeliveryTimeSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).")
AnnotationAssertion(rdfs:label schema:transitTimeLabel "transitTimeLabel")
AnnotationAssertion(schema:domainIncludes schema:transitTimeLabel schema:DeliveryTimeSettings)
AnnotationAssertion(schema:domainIncludes schema:transitTimeLabel schema:OfferShippingDetails)
AnnotationAssertion(schema:rangeIncludes schema:transitTimeLabel schema:Text)
AnnotationAssertion(schema:source schema:transitTimeLabel <https://github.com/schemaorg/schemaorg/issues/2506>)
AnnotationAssertion(rdfs:comment schema:translationOfWork "The work that this work has been translated from. E.g. 物种起源 is a translationOf “On the Origin of Species”.")
AnnotationAssertion(rdfs:label schema:translationOfWork "translationOfWork")
AnnotationAssertion(schema:domainIncludes schema:translationOfWork schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:translationOfWork schema:workTranslation)
AnnotationAssertion(schema:isPartOf schema:translationOfWork <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:translationOfWork schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:translator "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.")
AnnotationAssertion(rdfs:label schema:translator "translator")
AnnotationAssertion(schema:domainIncludes schema:translator schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:translator schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:translator schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:translator schema:Person)
AnnotationAssertion(rdfs:comment schema:transmissionMethod "How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.")
AnnotationAssertion(rdfs:label schema:transmissionMethod "transmissionMethod")
AnnotationAssertion(schema:domainIncludes schema:transmissionMethod schema:InfectiousDisease)
AnnotationAssertion(schema:isPartOf schema:transmissionMethod <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:transmissionMethod schema:Text)
AnnotationAssertion(rdfs:comment schema:travelBans "Information about travel bans, e.g. in the context of a pandemic.")
AnnotationAssertion(rdfs:label schema:travelBans "travelBans")
AnnotationAssertion(schema:domainIncludes schema:travelBans schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:travelBans <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:travelBans schema:URL)
AnnotationAssertion(schema:rangeIncludes schema:travelBans schema:WebContent)
AnnotationAssertion(schema:source schema:travelBans <https://github.com/schemaorg/schemaorg/issues/2490>)
AnnotationAssertion(rdfs:comment schema:trialDesign "Specifics about the trial design (enumerated).")
AnnotationAssertion(rdfs:label schema:trialDesign "trialDesign")
AnnotationAssertion(schema:domainIncludes schema:trialDesign schema:MedicalTrial)
AnnotationAssertion(schema:isPartOf schema:trialDesign <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:trialDesign schema:MedicalTrialDesign)
AnnotationAssertion(rdfs:comment schema:tributary "The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.")
AnnotationAssertion(rdfs:label schema:tributary "tributary")
AnnotationAssertion(schema:domainIncludes schema:tributary schema:Vein)
AnnotationAssertion(schema:isPartOf schema:tributary <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:tributary schema:AnatomicalStructure)
AnnotationAssertion(rdfs:comment schema:tripOrigin "The location of origin of the trip, prior to any destination(s).")
AnnotationAssertion(rdfs:label schema:tripOrigin "tripOrigin")
AnnotationAssertion(schema:domainIncludes schema:tripOrigin schema:Trip)
AnnotationAssertion(schema:rangeIncludes schema:tripOrigin schema:Place)
AnnotationAssertion(rdfs:comment schema:typeOfBed "The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.")
AnnotationAssertion(rdfs:label schema:typeOfBed "typeOfBed")
AnnotationAssertion(schema:contributor schema:typeOfBed <https://schema.org/docs/collab/STI_Accommodation_Ontology>)
AnnotationAssertion(schema:domainIncludes schema:typeOfBed schema:BedDetails)
AnnotationAssertion(schema:rangeIncludes schema:typeOfBed schema:BedType)
AnnotationAssertion(schema:rangeIncludes schema:typeOfBed schema:Text)
AnnotationAssertion(rdfs:comment schema:typeOfGood "The product that this structured value is referring to.")
AnnotationAssertion(rdfs:label schema:typeOfGood "typeOfGood")
AnnotationAssertion(schema:contributor schema:typeOfGood <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:typeOfGood schema:OwnershipInfo)
AnnotationAssertion(schema:domainIncludes schema:typeOfGood schema:TypeAndQuantityNode)
AnnotationAssertion(schema:rangeIncludes schema:typeOfGood schema:Product)
AnnotationAssertion(schema:rangeIncludes schema:typeOfGood schema:Service)
AnnotationAssertion(rdfs:comment schema:typicalAgeRange "The typical expected age range, e.g. '7-9', '11-'.")
AnnotationAssertion(rdfs:label schema:typicalAgeRange "typicalAgeRange")
AnnotationAssertion(schema:domainIncludes schema:typicalAgeRange schema:CreativeWork)
AnnotationAssertion(schema:domainIncludes schema:typicalAgeRange schema:Event)
AnnotationAssertion(schema:rangeIncludes schema:typicalAgeRange schema:Text)
AnnotationAssertion(rdfs:comment schema:typicalCreditsPerTerm "The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.")
AnnotationAssertion(rdfs:label schema:typicalCreditsPerTerm "typicalCreditsPerTerm")
AnnotationAssertion(schema:domainIncludes schema:typicalCreditsPerTerm schema:EducationalOccupationalProgram)
AnnotationAssertion(schema:isPartOf schema:typicalCreditsPerTerm <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:typicalCreditsPerTerm schema:Integer)
AnnotationAssertion(schema:rangeIncludes schema:typicalCreditsPerTerm schema:StructuredValue)
AnnotationAssertion(schema:source schema:typicalCreditsPerTerm <https://github.com/schemaorg/schemaorg/issues/2419>)
AnnotationAssertion(rdfs:comment schema:typicalTest "A medical test typically performed given this condition.")
AnnotationAssertion(rdfs:label schema:typicalTest "typicalTest")
AnnotationAssertion(schema:domainIncludes schema:typicalTest schema:MedicalCondition)
AnnotationAssertion(schema:isPartOf schema:typicalTest <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:typicalTest schema:MedicalTest)
AnnotationAssertion(rdfs:comment schema:underName "The person or organization the reservation or ticket is for.")
AnnotationAssertion(rdfs:label schema:underName "underName")
AnnotationAssertion(schema:domainIncludes schema:underName schema:Reservation)
AnnotationAssertion(schema:domainIncludes schema:underName schema:Ticket)
AnnotationAssertion(schema:rangeIncludes schema:underName schema:Organization)
AnnotationAssertion(schema:rangeIncludes schema:underName schema:Person)
AnnotationAssertion(rdfs:comment schema:unitCode "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.")
AnnotationAssertion(rdfs:label schema:unitCode "unitCode")
AnnotationAssertion(schema:contributor schema:unitCode <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:unitCode schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:unitCode schema:QuantitativeValue)
AnnotationAssertion(schema:domainIncludes schema:unitCode schema:TypeAndQuantityNode)
AnnotationAssertion(schema:domainIncludes schema:unitCode schema:UnitPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:unitCode schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:unitCode schema:URL)
AnnotationAssertion(rdfs:comment schema:unitText "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
<a href='unitCode'>unitCode</a>.")
AnnotationAssertion(rdfs:label schema:unitText "unitText")
AnnotationAssertion(schema:domainIncludes schema:unitText schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:unitText schema:QuantitativeValue)
AnnotationAssertion(schema:domainIncludes schema:unitText schema:TypeAndQuantityNode)
AnnotationAssertion(schema:domainIncludes schema:unitText schema:UnitPriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:unitText schema:Text)
AnnotationAssertion(rdfs:comment schema:unsaturatedFatContent "The number of grams of unsaturated fat.")
AnnotationAssertion(rdfs:label schema:unsaturatedFatContent "unsaturatedFatContent")
AnnotationAssertion(schema:domainIncludes schema:unsaturatedFatContent schema:NutritionInformation)
AnnotationAssertion(schema:rangeIncludes schema:unsaturatedFatContent schema:Mass)
AnnotationAssertion(rdfs:comment schema:uploadDate "Date (including time if available) when this media object was uploaded to this site.")
AnnotationAssertion(rdfs:label schema:uploadDate "uploadDate")
AnnotationAssertion(schema:domainIncludes schema:uploadDate schema:MediaObject)
AnnotationAssertion(schema:rangeIncludes schema:uploadDate schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:uploadDate schema:DateTime)
AnnotationAssertion(rdfs:comment schema:upvoteCount "The number of upvotes this question, answer or comment has received from the community.")
AnnotationAssertion(rdfs:label schema:upvoteCount "upvoteCount")
AnnotationAssertion(schema:domainIncludes schema:upvoteCount schema:Comment)
AnnotationAssertion(schema:rangeIncludes schema:upvoteCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:url "URL of the item.")
AnnotationAssertion(rdfs:label schema:url "url")
AnnotationAssertion(schema:domainIncludes schema:url schema:Thing)
AnnotationAssertion(schema:rangeIncludes schema:url schema:URL)
AnnotationAssertion(rdfs:comment schema:urlTemplate "An url template (RFC6570) that will be used to construct the target of the execution of the action.")
AnnotationAssertion(rdfs:label schema:urlTemplate "urlTemplate")
AnnotationAssertion(schema:domainIncludes schema:urlTemplate schema:EntryPoint)
AnnotationAssertion(schema:rangeIncludes schema:urlTemplate schema:Text)
AnnotationAssertion(rdfs:comment schema:usedToDiagnose "A condition the test is used to diagnose.")
AnnotationAssertion(rdfs:label schema:usedToDiagnose "usedToDiagnose")
AnnotationAssertion(schema:domainIncludes schema:usedToDiagnose schema:MedicalTest)
AnnotationAssertion(schema:isPartOf schema:usedToDiagnose <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:usedToDiagnose schema:MedicalCondition)
AnnotationAssertion(rdfs:comment schema:userInteractionCount "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.")
AnnotationAssertion(rdfs:label schema:userInteractionCount "userInteractionCount")
AnnotationAssertion(schema:domainIncludes schema:userInteractionCount schema:InteractionCounter)
AnnotationAssertion(schema:rangeIncludes schema:userInteractionCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:usesDevice "Device used to perform the test.")
AnnotationAssertion(rdfs:label schema:usesDevice "usesDevice")
AnnotationAssertion(schema:domainIncludes schema:usesDevice schema:MedicalTest)
AnnotationAssertion(schema:isPartOf schema:usesDevice <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:usesDevice schema:MedicalDevice)
AnnotationAssertion(rdfs:comment schema:usesHealthPlanIdStandard "The standard for interpreting the Plan ID. The preferred is \"HIOS\". See the Centers for Medicare & Medicaid Services for more details.")
AnnotationAssertion(rdfs:label schema:usesHealthPlanIdStandard "usesHealthPlanIdStandard")
AnnotationAssertion(schema:domainIncludes schema:usesHealthPlanIdStandard schema:HealthInsurancePlan)
AnnotationAssertion(schema:isPartOf schema:usesHealthPlanIdStandard <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:usesHealthPlanIdStandard schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:usesHealthPlanIdStandard schema:URL)
AnnotationAssertion(schema:source schema:usesHealthPlanIdStandard <https://github.com/schemaorg/schemaorg/issues/1062>)
AnnotationAssertion(rdfs:comment schema:utterances "Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a [[HyperTocEntry]].")
AnnotationAssertion(rdfs:label schema:utterances "utterances")
AnnotationAssertion(schema:domainIncludes schema:utterances schema:HyperTocEntry)
AnnotationAssertion(schema:isPartOf schema:utterances <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:utterances schema:Text)
AnnotationAssertion(schema:source schema:utterances <https://github.com/schemaorg/schemaorg/issues/2766>)
AnnotationAssertion(rdfs:comment schema:validFor "The duration of validity of a permit or similar thing.")
AnnotationAssertion(rdfs:label schema:validFor "validFor")
AnnotationAssertion(schema:domainIncludes schema:validFor schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:domainIncludes schema:validFor schema:Permit)
AnnotationAssertion(schema:rangeIncludes schema:validFor schema:Duration)
AnnotationAssertion(schema:source schema:validFor <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:validForMemberTier "The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, or MerchantReturnPolicy under an Offer) is valid for.")
AnnotationAssertion(rdfs:label schema:validForMemberTier "validForMemberTier")
AnnotationAssertion(schema:domainIncludes schema:validForMemberTier schema:MerchantReturnPolicy)
AnnotationAssertion(schema:domainIncludes schema:validForMemberTier schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:validForMemberTier schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:validForMemberTier schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:validForMemberTier schema:MemberProgramTier)
AnnotationAssertion(schema:source schema:validForMemberTier <https://github.com/schemaorg/schemaorg/issues/3563>)
AnnotationAssertion(rdfs:comment schema:validFrom "The date when the item becomes valid.")
AnnotationAssertion(rdfs:label schema:validFrom "validFrom")
AnnotationAssertion(schema:contributor schema:validFrom <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:LocationFeatureSpecification)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:OpeningHoursSpecification)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:Permit)
AnnotationAssertion(schema:domainIncludes schema:validFrom schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:validFrom schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:validFrom schema:DateTime)
AnnotationAssertion(rdfs:comment schema:validIn "The geographic area where the item is valid. Applies for example to a [[Permit]], a [[Certification]], or an [[EducationalOccupationalCredential]]. ")
AnnotationAssertion(rdfs:label schema:validIn "validIn")
AnnotationAssertion(schema:domainIncludes schema:validIn schema:Certification)
AnnotationAssertion(schema:domainIncludes schema:validIn schema:EducationalOccupationalCredential)
AnnotationAssertion(schema:domainIncludes schema:validIn schema:Permit)
AnnotationAssertion(schema:rangeIncludes schema:validIn schema:AdministrativeArea)
AnnotationAssertion(schema:source schema:validIn <https://github.com/schemaorg/schemaorg/issues/1779>)
AnnotationAssertion(rdfs:comment schema:validThrough "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.")
AnnotationAssertion(rdfs:label schema:validThrough "validThrough")
AnnotationAssertion(schema:contributor schema:validThrough <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:JobPosting)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:LocationFeatureSpecification)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:Offer)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:OpeningHoursSpecification)
AnnotationAssertion(schema:domainIncludes schema:validThrough schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:validThrough schema:Date)
AnnotationAssertion(schema:rangeIncludes schema:validThrough schema:DateTime)
AnnotationAssertion(rdfs:comment schema:validUntil "The date when the item is no longer valid.")
AnnotationAssertion(rdfs:label schema:validUntil "validUntil")
AnnotationAssertion(schema:domainIncludes schema:validUntil schema:Permit)
AnnotationAssertion(schema:rangeIncludes schema:validUntil schema:Date)
AnnotationAssertion(rdfs:comment schema:value "The value of a [[QuantitativeValue]] (including [[Observation]]) or property value node.\\n\\n* For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for values is 'Number'.\\n* For [[PropertyValue]], it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.")
AnnotationAssertion(rdfs:label schema:value "value")
AnnotationAssertion(schema:contributor schema:value <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:value schema:MonetaryAmount)
AnnotationAssertion(schema:domainIncludes schema:value schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:value schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:value schema:Boolean)
AnnotationAssertion(schema:rangeIncludes schema:value schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:value schema:StructuredValue)
AnnotationAssertion(schema:rangeIncludes schema:value schema:Text)
AnnotationAssertion(rdfs:comment schema:valueAddedTaxIncluded "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.")
AnnotationAssertion(rdfs:label schema:valueAddedTaxIncluded "valueAddedTaxIncluded")
AnnotationAssertion(schema:contributor schema:valueAddedTaxIncluded <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:valueAddedTaxIncluded schema:PriceSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valueAddedTaxIncluded schema:Boolean)
AnnotationAssertion(rdfs:comment schema:valueMaxLength "Specifies the allowed range for number of characters in a literal value.")
AnnotationAssertion(rdfs:label schema:valueMaxLength "valueMaxLength")
AnnotationAssertion(schema:domainIncludes schema:valueMaxLength schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valueMaxLength schema:Number)
AnnotationAssertion(rdfs:comment schema:valueMinLength "Specifies the minimum allowed range for number of characters in a literal value.")
AnnotationAssertion(rdfs:label schema:valueMinLength "valueMinLength")
AnnotationAssertion(schema:domainIncludes schema:valueMinLength schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valueMinLength schema:Number)
AnnotationAssertion(rdfs:comment schema:valueName "Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.")
AnnotationAssertion(rdfs:label schema:valueName "valueName")
AnnotationAssertion(schema:domainIncludes schema:valueName schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valueName schema:Text)
AnnotationAssertion(rdfs:comment schema:valuePattern "Specifies a regular expression for testing literal values according to the HTML spec.")
AnnotationAssertion(rdfs:label schema:valuePattern "valuePattern")
AnnotationAssertion(schema:domainIncludes schema:valuePattern schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valuePattern schema:Text)
AnnotationAssertion(rdfs:comment schema:valueReference "A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.")
AnnotationAssertion(rdfs:label schema:valueReference "valueReference")
AnnotationAssertion(schema:contributor schema:valueReference <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:valueReference schema:PropertyValue)
AnnotationAssertion(schema:domainIncludes schema:valueReference schema:QualitativeValue)
AnnotationAssertion(schema:domainIncludes schema:valueReference schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:Enumeration)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:MeasurementTypeEnumeration)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:QuantitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:StructuredValue)
AnnotationAssertion(schema:rangeIncludes schema:valueReference schema:Text)
AnnotationAssertion(rdfs:comment schema:valueRequired "Whether the property must be filled in to complete the action.  Default is false.")
AnnotationAssertion(rdfs:label schema:valueRequired "valueRequired")
AnnotationAssertion(schema:domainIncludes schema:valueRequired schema:PropertyValueSpecification)
AnnotationAssertion(schema:rangeIncludes schema:valueRequired schema:Boolean)
AnnotationAssertion(rdfs:comment schema:variableMeasured "The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a [[StatisticalVariable]].")
AnnotationAssertion(rdfs:label schema:variableMeasured "variableMeasured")
AnnotationAssertion(schema:domainIncludes schema:variableMeasured schema:Dataset)
AnnotationAssertion(schema:domainIncludes schema:variableMeasured schema:Observation)
AnnotationAssertion(schema:isPartOf schema:variableMeasured <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:variableMeasured schema:Property)
AnnotationAssertion(schema:rangeIncludes schema:variableMeasured schema:PropertyValue)
AnnotationAssertion(schema:rangeIncludes schema:variableMeasured schema:StatisticalVariable)
AnnotationAssertion(schema:rangeIncludes schema:variableMeasured schema:Text)
AnnotationAssertion(schema:source schema:variableMeasured <https://github.com/schemaorg/schemaorg/issues/1083>)
AnnotationAssertion(rdfs:comment schema:variantCover "A description of the variant cover
    	for the issue, if the issue is a variant printing. For example, \"Bryan Hitch
    	Variant Cover\" or \"2nd Printing Variant\".")
AnnotationAssertion(rdfs:label schema:variantCover "variantCover")
AnnotationAssertion(schema:domainIncludes schema:variantCover schema:ComicIssue)
AnnotationAssertion(schema:isPartOf schema:variantCover <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:variantCover schema:Text)
AnnotationAssertion(rdfs:comment schema:variesBy "Indicates the property or properties by which the variants in a [[ProductGroup]] vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. \"color\"; terms defined elsewhere can be referenced with their URIs.")
AnnotationAssertion(rdfs:label schema:variesBy "variesBy")
AnnotationAssertion(schema:domainIncludes schema:variesBy schema:ProductGroup)
AnnotationAssertion(schema:isPartOf schema:variesBy <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:variesBy schema:DefinedTerm)
AnnotationAssertion(schema:rangeIncludes schema:variesBy schema:Text)
AnnotationAssertion(schema:source schema:variesBy <https://github.com/schemaorg/schemaorg/issues/1797>)
AnnotationAssertion(rdfs:comment schema:vatID "The Value-added Tax ID of the organization or person.")
AnnotationAssertion(rdfs:label schema:vatID "vatID")
AnnotationAssertion(schema:contributor schema:vatID <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:vatID schema:Organization)
AnnotationAssertion(schema:domainIncludes schema:vatID schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:vatID schema:Text)
AnnotationAssertion(rdfs:comment schema:vehicleConfiguration "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.")
AnnotationAssertion(rdfs:label schema:vehicleConfiguration "vehicleConfiguration")
AnnotationAssertion(schema:contributor schema:vehicleConfiguration <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleConfiguration schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleConfiguration schema:Text)
AnnotationAssertion(rdfs:comment schema:vehicleEngine "Information about the engine or engines of the vehicle.")
AnnotationAssertion(rdfs:label schema:vehicleEngine "vehicleEngine")
AnnotationAssertion(schema:contributor schema:vehicleEngine <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleEngine schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleEngine schema:EngineSpecification)
AnnotationAssertion(rdfs:comment schema:vehicleInteriorColor "The color or color combination of the interior of the vehicle.")
AnnotationAssertion(rdfs:label schema:vehicleInteriorColor "vehicleInteriorColor")
AnnotationAssertion(schema:contributor schema:vehicleInteriorColor <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleInteriorColor schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleInteriorColor schema:Text)
AnnotationAssertion(rdfs:comment schema:vehicleInteriorType "The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.")
AnnotationAssertion(rdfs:label schema:vehicleInteriorType "vehicleInteriorType")
AnnotationAssertion(schema:contributor schema:vehicleInteriorType <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleInteriorType schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleInteriorType schema:Text)
AnnotationAssertion(rdfs:comment schema:vehicleModelDate "The release date of a vehicle model (often used to differentiate versions of the same make and model).")
AnnotationAssertion(rdfs:label schema:vehicleModelDate "vehicleModelDate")
AnnotationAssertion(schema:contributor schema:vehicleModelDate <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleModelDate schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleModelDate schema:Date)
AnnotationAssertion(rdfs:comment schema:vehicleSeatingCapacity "The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.")
AnnotationAssertion(rdfs:label schema:vehicleSeatingCapacity "vehicleSeatingCapacity")
AnnotationAssertion(schema:contributor schema:vehicleSeatingCapacity <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleSeatingCapacity schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleSeatingCapacity schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:vehicleSeatingCapacity schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:vehicleSpecialUsage "Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.")
AnnotationAssertion(rdfs:label schema:vehicleSpecialUsage "vehicleSpecialUsage")
AnnotationAssertion(schema:contributor schema:vehicleSpecialUsage <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleSpecialUsage schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:vehicleSpecialUsage <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:vehicleSpecialUsage schema:CarUsageType)
AnnotationAssertion(schema:rangeIncludes schema:vehicleSpecialUsage schema:Text)
AnnotationAssertion(rdfs:comment schema:vehicleTransmission "The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\"gearbox\" for cars).")
AnnotationAssertion(rdfs:label schema:vehicleTransmission "vehicleTransmission")
AnnotationAssertion(schema:contributor schema:vehicleTransmission <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:vehicleTransmission schema:Vehicle)
AnnotationAssertion(schema:rangeIncludes schema:vehicleTransmission schema:QualitativeValue)
AnnotationAssertion(schema:rangeIncludes schema:vehicleTransmission schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:vehicleTransmission schema:URL)
AnnotationAssertion(rdfs:comment schema:version "The version of the CreativeWork embodied by a specified resource.")
AnnotationAssertion(rdfs:label schema:version "version")
AnnotationAssertion(schema:domainIncludes schema:version schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:version schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:version schema:Text)
AnnotationAssertion(rdfs:comment schema:video "An embedded video object.")
AnnotationAssertion(rdfs:label schema:video "video")
AnnotationAssertion(schema:domainIncludes schema:video schema:CreativeWork)
AnnotationAssertion(schema:rangeIncludes schema:video schema:Clip)
AnnotationAssertion(schema:rangeIncludes schema:video schema:VideoObject)
AnnotationAssertion(rdfs:comment schema:videoFormat "The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).")
AnnotationAssertion(rdfs:label schema:videoFormat "videoFormat")
AnnotationAssertion(schema:domainIncludes schema:videoFormat schema:BroadcastEvent)
AnnotationAssertion(schema:domainIncludes schema:videoFormat schema:BroadcastService)
AnnotationAssertion(schema:domainIncludes schema:videoFormat schema:ScreeningEvent)
AnnotationAssertion(schema:rangeIncludes schema:videoFormat schema:Text)
AnnotationAssertion(rdfs:comment schema:videoFrameSize "The frame size of the video.")
AnnotationAssertion(rdfs:label schema:videoFrameSize "videoFrameSize")
AnnotationAssertion(schema:domainIncludes schema:videoFrameSize schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:videoFrameSize schema:Text)
AnnotationAssertion(rdfs:comment schema:videoQuality "The quality of the video.")
AnnotationAssertion(rdfs:label schema:videoQuality "videoQuality")
AnnotationAssertion(schema:domainIncludes schema:videoQuality schema:VideoObject)
AnnotationAssertion(schema:rangeIncludes schema:videoQuality schema:Text)
AnnotationAssertion(rdfs:comment schema:warning "Any FDA or other warnings about the drug (text or URL).")
AnnotationAssertion(rdfs:label schema:warning "warning")
AnnotationAssertion(schema:domainIncludes schema:warning schema:Drug)
AnnotationAssertion(schema:isPartOf schema:warning <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:warning schema:Text)
AnnotationAssertion(schema:rangeIncludes schema:warning schema:URL)
AnnotationAssertion(rdfs:comment schema:warranty "The warranty promise(s) included in the offer.")
AnnotationAssertion(rdfs:label schema:warranty "warranty")
AnnotationAssertion(schema:contributor schema:warranty <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:warranty schema:Demand)
AnnotationAssertion(schema:domainIncludes schema:warranty schema:Offer)
AnnotationAssertion(schema:rangeIncludes schema:warranty schema:WarrantyPromise)
AnnotationAssertion(rdfs:comment schema:warrantyPromise "The warranty promise(s) included in the offer.")
AnnotationAssertion(rdfs:label schema:warrantyPromise "warrantyPromise")
AnnotationAssertion(schema:domainIncludes schema:warrantyPromise schema:BuyAction)
AnnotationAssertion(schema:domainIncludes schema:warrantyPromise schema:SellAction)
AnnotationAssertion(schema:rangeIncludes schema:warrantyPromise schema:WarrantyPromise)
AnnotationAssertion(schema:supersededBy schema:warrantyPromise schema:warranty)
AnnotationAssertion(rdfs:comment schema:warrantyScope "The scope of the warranty promise.")
AnnotationAssertion(rdfs:label schema:warrantyScope "warrantyScope")
AnnotationAssertion(schema:contributor schema:warrantyScope <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:warrantyScope schema:WarrantyPromise)
AnnotationAssertion(schema:rangeIncludes schema:warrantyScope schema:WarrantyScope)
AnnotationAssertion(rdfs:comment schema:webCheckinTime "The time when a passenger can check into the flight online.")
AnnotationAssertion(rdfs:label schema:webCheckinTime "webCheckinTime")
AnnotationAssertion(schema:domainIncludes schema:webCheckinTime schema:Flight)
AnnotationAssertion(schema:rangeIncludes schema:webCheckinTime schema:DateTime)
AnnotationAssertion(rdfs:comment schema:webFeed "The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.")
AnnotationAssertion(rdfs:label schema:webFeed "webFeed")
AnnotationAssertion(schema:domainIncludes schema:webFeed schema:PodcastSeries)
AnnotationAssertion(schema:domainIncludes schema:webFeed schema:SpecialAnnouncement)
AnnotationAssertion(schema:isPartOf schema:webFeed <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:webFeed schema:DataFeed)
AnnotationAssertion(schema:rangeIncludes schema:webFeed schema:URL)
AnnotationAssertion(schema:source schema:webFeed <https://github.com/schemaorg/schemaorg/issues/373>)
AnnotationAssertion(rdfs:comment schema:weight "The weight of the product or person.")
AnnotationAssertion(rdfs:label schema:weight "weight")
AnnotationAssertion(schema:contributor schema:weight <https://schema.org/docs/collab/GoodRelationsTerms>)
AnnotationAssertion(schema:domainIncludes schema:weight schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:weight schema:Person)
AnnotationAssertion(schema:domainIncludes schema:weight schema:Product)
AnnotationAssertion(schema:domainIncludes schema:weight schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:weight schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:weightTotal "The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.")
AnnotationAssertion(rdfs:label schema:weightTotal "weightTotal")
AnnotationAssertion(schema:contributor schema:weightTotal <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:weightTotal schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:weightTotal <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:weightTotal schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:wheelbase "The distance between the centers of the front and rear wheels.\\n\\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet.")
AnnotationAssertion(rdfs:label schema:wheelbase "wheelbase")
AnnotationAssertion(schema:contributor schema:wheelbase <https://schema.org/docs/collab/Automotive_Ontology_Working_Group>)
AnnotationAssertion(schema:domainIncludes schema:wheelbase schema:Vehicle)
AnnotationAssertion(schema:isPartOf schema:wheelbase <https://auto.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:wheelbase schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:width "The width of the item.")
AnnotationAssertion(rdfs:label schema:width "width")
AnnotationAssertion(schema:domainIncludes schema:width schema:MediaObject)
AnnotationAssertion(schema:domainIncludes schema:width schema:OfferShippingDetails)
AnnotationAssertion(schema:domainIncludes schema:width schema:Product)
AnnotationAssertion(schema:domainIncludes schema:width schema:VisualArtwork)
AnnotationAssertion(schema:rangeIncludes schema:width schema:Distance)
AnnotationAssertion(schema:rangeIncludes schema:width schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:wordCount "The number of words in the text of the Article.")
AnnotationAssertion(rdfs:label schema:wordCount "wordCount")
AnnotationAssertion(schema:domainIncludes schema:wordCount schema:Article)
AnnotationAssertion(schema:rangeIncludes schema:wordCount schema:Integer)
AnnotationAssertion(rdfs:comment schema:workHours "The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).")
AnnotationAssertion(rdfs:label schema:workHours "workHours")
AnnotationAssertion(schema:domainIncludes schema:workHours schema:JobPosting)
AnnotationAssertion(schema:rangeIncludes schema:workHours schema:Text)
AnnotationAssertion(rdfs:comment schema:workTranslation "A work that is a translation of the content of this work. E.g. 西遊記 has an English workTranslation “Journey to the West”, a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation Tây du ký bình khảo.")
AnnotationAssertion(rdfs:label schema:workTranslation "workTranslation")
AnnotationAssertion(schema:domainIncludes schema:workTranslation schema:CreativeWork)
AnnotationAssertion(schema:inverseOf schema:workTranslation schema:translationOfWork)
AnnotationAssertion(schema:isPartOf schema:workTranslation <https://bib.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:workTranslation schema:CreativeWork)
AnnotationAssertion(rdfs:comment schema:workload "Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.")
AnnotationAssertion(rdfs:label schema:workload "workload")
AnnotationAssertion(schema:domainIncludes schema:workload schema:ExercisePlan)
AnnotationAssertion(schema:isPartOf schema:workload <https://health-lifesci.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:workload schema:Energy)
AnnotationAssertion(schema:rangeIncludes schema:workload schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:worksFor "Organizations that the person works for.")
AnnotationAssertion(rdfs:label schema:worksFor "worksFor")
AnnotationAssertion(schema:domainIncludes schema:worksFor schema:Person)
AnnotationAssertion(schema:rangeIncludes schema:worksFor schema:Organization)
AnnotationAssertion(rdfs:comment schema:worstRating "The lowest value allowed in this rating system.")
AnnotationAssertion(rdfs:label schema:worstRating "worstRating")
AnnotationAssertion(schema:domainIncludes schema:worstRating schema:Rating)
AnnotationAssertion(schema:rangeIncludes schema:worstRating schema:Number)
AnnotationAssertion(schema:rangeIncludes schema:worstRating schema:Text)
AnnotationAssertion(rdfs:comment schema:xpath "An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".")
AnnotationAssertion(rdfs:label schema:xpath "xpath")
AnnotationAssertion(schema:domainIncludes schema:xpath schema:SpeakableSpecification)
AnnotationAssertion(schema:domainIncludes schema:xpath schema:WebPageElement)
AnnotationAssertion(schema:rangeIncludes schema:xpath schema:XPathType)
AnnotationAssertion(schema:source schema:xpath <https://github.com/schemaorg/schemaorg/issues/1389>)
AnnotationAssertion(rdfs:comment schema:yearBuilt "The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field). ")
AnnotationAssertion(rdfs:label schema:yearBuilt "yearBuilt")
AnnotationAssertion(schema:domainIncludes schema:yearBuilt schema:Accommodation)
AnnotationAssertion(schema:isPartOf schema:yearBuilt <https://pending.schema.org>)
AnnotationAssertion(schema:rangeIncludes schema:yearBuilt schema:Number)
AnnotationAssertion(schema:source schema:yearBuilt <https://github.com/schemaorg/schemaorg/issues/2373>)
AnnotationAssertion(rdfs:comment schema:yearlyRevenue "The size of the business in annual revenue.")
AnnotationAssertion(rdfs:label schema:yearlyRevenue "yearlyRevenue")
AnnotationAssertion(schema:domainIncludes schema:yearlyRevenue schema:BusinessAudience)
AnnotationAssertion(schema:rangeIncludes schema:yearlyRevenue schema:QuantitativeValue)
AnnotationAssertion(rdfs:comment schema:yearsInOperation "The age of the business.")
AnnotationAssertion(rdfs:label schema:yearsInOperation "yearsInOperation")
AnnotationAssertion(schema:domainIncludes schema:yearsInOperation schema:BusinessAudience)
AnnotationAssertion(schema:rangeIncludes schema:yearsInOperation schema:QuantitativeValue)
)